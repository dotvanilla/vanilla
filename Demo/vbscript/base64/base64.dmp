0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 04                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
0000009: 17                                        ; FIXUP section size
; section "Import" (2)
0000021: 02                                        ; section code
0000022: 00                                        ; section size (guess)
0000023: 11                                        ; num imports
; import header 0
0000024: 06                                        ; string length
0000025: 7265 6765 7870                           regexp  ; import module name
000002b: 07                                        ; string length
000002c: 7265 706c 6163 65                        replace  ; import field name
0000033: 00                                        ; import kind
0000034: 00                                        ; import signature index
; import header 1
0000035: 06                                        ; string length
0000036: 7265 6765 7870                           regexp  ; import module name
000003c: 06                                        ; string length
000003d: 7265 6765 7870                           regexp  ; import field name
0000043: 00                                        ; import kind
0000044: 01                                        ; import signature index
; import header 2
0000045: 05                                        ; string length
0000046: 6172 7261 79                             array  ; import module name
000004b: 04                                        ; string length
000004c: 7075 7368                                push  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 3
0000052: 06                                        ; string length
0000053: 5374 7269 6e67                           String  ; import module name
0000059: 0c                                        ; string length
000005a: 6672 6f6d 4368 6172 436f 6465            fromCharCode  ; import field name
0000066: 00                                        ; import kind
0000067: 02                                        ; import signature index
; import header 4
0000068: 06                                        ; string length
0000069: 5374 7269 6e67                           String  ; import module name
000006f: 0a                                        ; string length
0000070: 4368 6172 436f 6465 4174                 CharCodeAt  ; import field name
000007a: 00                                        ; import kind
000007b: 01                                        ; import signature index
; import header 5
000007c: 06                                        ; string length
000007d: 5374 7269 6e67                           String  ; import module name
0000083: 06                                        ; string length
0000084: 4368 6172 4174                           CharAt  ; import field name
000008a: 00                                        ; import kind
000008b: 01                                        ; import signature index
; import header 6
000008c: 06                                        ; string length
000008d: 6e75 6d62 6572                           number  ; import module name
0000093: 05                                        ; string length
0000094: 6973 4e61 4e                             isNaN  ; import field name
0000099: 00                                        ; import kind
000009a: 02                                        ; import signature index
; import header 7
000009b: 06                                        ; string length
000009c: 5374 7269 6e67                           String  ; import module name
00000a2: 04                                        ; string length
00000a3: 4a6f 696e                                Join  ; import field name
00000a7: 00                                        ; import kind
00000a8: 01                                        ; import signature index
; import header 8
00000a9: 06                                        ; string length
00000aa: 7374 7269 6e67                           string  ; import module name
00000b0: 07                                        ; string length
00000b1: 7265 706c 6163 65                        replace  ; import field name
00000b8: 00                                        ; import kind
00000b9: 00                                        ; import signature index
; import header 9
00000ba: 06                                        ; string length
00000bb: 7374 7269 6e67                           string  ; import module name
00000c1: 03                                        ; string length
00000c2: 6164 64                                  add  ; import field name
00000c5: 00                                        ; import kind
00000c6: 01                                        ; import signature index
; import header 10
00000c7: 06                                        ; string length
00000c8: 7374 7269 6e67                           string  ; import module name
00000ce: 06                                        ; string length
00000cf: 6c65 6e67 7468                           length  ; import field name
00000d5: 00                                        ; import kind
00000d6: 02                                        ; import signature index
; import header 11
00000d7: 06                                        ; string length
00000d8: 7374 7269 6e67                           string  ; import module name
00000de: 00                                        ; string length
00000df: 00                                        ; import kind
00000e0: 01                                        ; import signature index
; import header 12
00000e1: 05                                        ; string length
00000e2: 6172 7261 79                             array  ; import module name
00000e7: 03                                        ; string length
00000e8: 6e65 77                                  new  ; import field name
00000eb: 00                                        ; import kind
00000ec: 03                                        ; import signature index
; import header 13
00000ed: 05                                        ; string length
00000ee: 6172 7261 79                             array  ; import module name
00000f3: 04                                        ; string length
00000f4: 7075 7368                                push  ; import field name
00000f8: 00                                        ; import kind
00000f9: 01                                        ; import signature index
; import header 14
00000fa: 05                                        ; string length
00000fb: 6172 7261 79                             array  ; import module name
0000100: 03                                        ; string length
0000101: 6765 74                                  get  ; import field name
0000104: 00                                        ; import kind
0000105: 01                                        ; import signature index
; import header 15
0000106: 05                                        ; string length
0000107: 6172 7261 79                             array  ; import module name
000010c: 06                                        ; string length
000010d: 6c65 6e67 7468                           length  ; import field name
0000113: 00                                        ; import kind
0000114: 02                                        ; import signature index
; import header 16
0000115: 03                                        ; string length
0000116: 656e 76                                  env  ; import module name
0000119: 0a                                        ; string length
000011a: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000124: 02                                        ; import kind
0000125: 00                                        ; limits: flags
0000126: 01                                        ; limits: initial
; move data: [23, 127) -> [24, 128)
0000022: 8402                                      ; FIXUP section size
; section "Function" (3)
0000128: 03                                        ; section code
0000129: 00                                        ; section size (guess)
000012a: 0d                                        ; num functions
000012b: 02                                        ; function 0 signature index
000012c: 02                                        ; function 1 signature index
000012d: 02                                        ; function 2 signature index
000012e: 02                                        ; function 3 signature index
000012f: 03                                        ; function 4 signature index
0000130: 03                                        ; function 5 signature index
0000131: 03                                        ; function 6 signature index
0000132: 03                                        ; function 7 signature index
0000133: 03                                        ; function 8 signature index
0000134: 03                                        ; function 9 signature index
0000135: 03                                        ; function 10 signature index
0000136: 03                                        ; function 11 signature index
0000137: 03                                        ; function 12 signature index
0000129: 0e                                        ; FIXUP section size
; section "Global" (6)
0000138: 06                                        ; section code
0000139: 00                                        ; section size (guess)
000013a: 01                                        ; num globals
000013b: 7f                                        ; i32
000013c: 01                                        ; global mutability
000013d: 41                                        ; i32.const
000013e: 01                                        ; i32 literal
000013f: 0b                                        ; end
0000139: 06                                        ; FIXUP section size
; section "Export" (7)
0000140: 07                                        ; section code
0000141: 00                                        ; section size (guess)
0000142: 0d                                        ; num exports
0000143: 06                                        ; string length
0000144: 656e 636f 6465                           encode  ; export name
000014a: 00                                        ; export kind
000014b: 10                                        ; export func index
000014c: 06                                        ; string length
000014d: 6465 636f 6465                           decode  ; export name
0000153: 00                                        ; export kind
0000154: 11                                        ; export func index
0000155: 0b                                        ; string length
0000156: 7574 6638 5f65 6e63 6f64 65              utf8_encode  ; export name
0000161: 00                                        ; export kind
0000162: 12                                        ; export func index
0000163: 0b                                        ; string length
0000164: 7574 6638 5f64 6563 6f64 65              utf8_decode  ; export name
000016f: 00                                        ; export kind
0000170: 13                                        ; export func index
0000171: 0d                                        ; string length
0000172: 4173 7365 6d62 6c79 5469 746c 65         AssemblyTitle  ; export name
000017f: 00                                        ; export kind
0000180: 14                                        ; export func index
0000181: 13                                        ; string length
0000182: 4173 7365 6d62 6c79 4465 7363 7269 7074  AssemblyDescript
0000192: 696f 6e                                  ion  ; export name
0000195: 00                                        ; export kind
0000196: 15                                        ; export func index
0000197: 0f                                        ; string length
0000198: 4173 7365 6d62 6c79 436f 6d70 616e 79    AssemblyCompany  ; export name
00001a7: 00                                        ; export kind
00001a8: 16                                        ; export func index
00001a9: 0f                                        ; string length
00001aa: 4173 7365 6d62 6c79 5072 6f64 7563 74    AssemblyProduct  ; export name
00001b9: 00                                        ; export kind
00001ba: 17                                        ; export func index
00001bb: 11                                        ; string length
00001bc: 4173 7365 6d62 6c79 436f 7079 7269 6768  AssemblyCopyrigh
00001cc: 74                                       t  ; export name
00001cd: 00                                        ; export kind
00001ce: 18                                        ; export func index
00001cf: 11                                        ; string length
00001d0: 4173 7365 6d62 6c79 5472 6164 656d 6172  AssemblyTrademar
00001e0: 6b                                       k  ; export name
00001e1: 00                                        ; export kind
00001e2: 19                                        ; export func index
00001e3: 04                                        ; string length
00001e4: 4775 6964                                Guid  ; export name
00001e8: 00                                        ; export kind
00001e9: 1a                                        ; export func index
00001ea: 0f                                        ; string length
00001eb: 4173 7365 6d62 6c79 5665 7273 696f 6e    AssemblyVersion  ; export name
00001fa: 00                                        ; export kind
00001fb: 1b                                        ; export func index
00001fc: 13                                        ; string length
00001fd: 4173 7365 6d62 6c79 4669 6c65 5665 7273  AssemblyFileVers
000020d: 696f 6e                                  ion  ; export name
0000210: 00                                        ; export kind
0000211: 1c                                        ; export func index
; move data: [142, 212) -> [143, 213)
0000141: d001                                      ; FIXUP section size
; section "Code" (10)
0000213: 0a                                        ; section code
0000214: 00                                        ; section size (guess)
0000215: 0d                                        ; num functions
; function body 0
0000216: 00                                        ; func body size (guess)
0000217: 01                                        ; local decl count
0000218: 09                                        ; local type count
0000219: 7f                                        ; i32
000021a: 10                                        ; call
000021b: 0c                                        ; function index
000021c: 21                                        ; local.set
000021d: 01                                        ; local index
000021e: 41                                        ; i32.const
000021f: 00                                        ; i32 literal
0000220: 21                                        ; local.set
0000221: 09                                        ; local index
0000222: 20                                        ; local.get
0000223: 00                                        ; local index
0000224: 10                                        ; call
0000225: 12                                        ; function index
0000226: 21                                        ; local.set
0000227: 00                                        ; local index
0000228: 02                                        ; block
0000229: 40                                        ; void
000022a: 03                                        ; loop
000022b: 40                                        ; void
000022c: 20                                        ; local.get
000022d: 09                                        ; local index
000022e: 20                                        ; local.get
000022f: 00                                        ; local index
0000230: 10                                        ; call
0000231: 0a                                        ; function index
0000232: 48                                        ; i32.lt_s
0000233: 45                                        ; i32.eqz
0000234: 0d                                        ; br_if
0000235: 01                                        ; break depth
0000236: 20                                        ; local.get
0000237: 00                                        ; local index
0000238: 41                                        ; i32.const
0000239: 00                                        ; i32 literal
000023a: 41                                        ; i32.const
000023b: 00                                        ; i32 literal
000023c: 20                                        ; local.get
000023d: 09                                        ; local index
000023e: 6a                                        ; i32.add
000023f: 6a                                        ; i32.add
0000240: 10                                        ; call
0000241: 04                                        ; function index
0000242: 21                                        ; local.set
0000243: 02                                        ; local index
0000244: 20                                        ; local.get
0000245: 00                                        ; local index
0000246: 41                                        ; i32.const
0000247: 00                                        ; i32 literal
0000248: 41                                        ; i32.const
0000249: 00                                        ; i32 literal
000024a: 20                                        ; local.get
000024b: 09                                        ; local index
000024c: 6a                                        ; i32.add
000024d: 6a                                        ; i32.add
000024e: 10                                        ; call
000024f: 04                                        ; function index
0000250: 21                                        ; local.set
0000251: 03                                        ; local index
0000252: 20                                        ; local.get
0000253: 00                                        ; local index
0000254: 41                                        ; i32.const
0000255: 00                                        ; i32 literal
0000256: 41                                        ; i32.const
0000257: 00                                        ; i32 literal
0000258: 20                                        ; local.get
0000259: 09                                        ; local index
000025a: 6a                                        ; i32.add
000025b: 6a                                        ; i32.add
000025c: 10                                        ; call
000025d: 04                                        ; function index
000025e: 21                                        ; local.set
000025f: 04                                        ; local index
0000260: 20                                        ; local.get
0000261: 02                                        ; local index
0000262: 41                                        ; i32.const
0000263: 02                                        ; i32 literal
0000264: 75                                        ; i32.shr_s
0000265: 21                                        ; local.set
0000266: 05                                        ; local index
0000267: 20                                        ; local.get
0000268: 02                                        ; local index
0000269: 41                                        ; i32.const
000026a: 03                                        ; i32 literal
000026b: 71                                        ; i32.and
000026c: 41                                        ; i32.const
000026d: 04                                        ; i32 literal
000026e: 74                                        ; i32.shl
000026f: 20                                        ; local.get
0000270: 03                                        ; local index
0000271: 41                                        ; i32.const
0000272: 04                                        ; i32 literal
0000273: 75                                        ; i32.shr_s
0000274: 72                                        ; i32.or
0000275: 21                                        ; local.set
0000276: 06                                        ; local index
0000277: 20                                        ; local.get
0000278: 03                                        ; local index
0000279: 41                                        ; i32.const
000027a: 0f                                        ; i32 literal
000027b: 71                                        ; i32.and
000027c: 41                                        ; i32.const
000027d: 02                                        ; i32 literal
000027e: 74                                        ; i32.shl
000027f: 20                                        ; local.get
0000280: 04                                        ; local index
0000281: 41                                        ; i32.const
0000282: 06                                        ; i32 literal
0000283: 75                                        ; i32.shr_s
0000284: 72                                        ; i32.or
0000285: 21                                        ; local.set
0000286: 07                                        ; local index
0000287: 20                                        ; local.get
0000288: 04                                        ; local index
0000289: 41                                        ; i32.const
000028a: 3f                                        ; i32 literal
000028b: 71                                        ; i32.and
000028c: 21                                        ; local.set
000028d: 08                                        ; local index
000028e: 20                                        ; local.get
000028f: 03                                        ; local index
0000290: 10                                        ; call
0000291: 06                                        ; function index
0000292: 04                                        ; if
0000293: 40                                        ; void
0000294: 41                                        ; i32.const
0000295: c000                                      ; i32 literal
0000297: 21                                        ; local.set
0000298: 08                                        ; local index
0000299: 20                                        ; local.get
000029a: 08                                        ; local index
000029b: 21                                        ; local.set
000029c: 07                                        ; local index
000029d: 0b                                        ; end
000029e: 20                                        ; local.get
000029f: 01                                        ; local index
00002a0: 23                                        ; global.get
00002a1: 00                                        ; global index
00002a2: 20                                        ; local.get
00002a3: 05                                        ; local index
00002a4: 10                                        ; call
00002a5: 05                                        ; function index
00002a6: 10                                        ; call
00002a7: 0d                                        ; function index
00002a8: 1a                                        ; drop
00002a9: 20                                        ; local.get
00002aa: 01                                        ; local index
00002ab: 23                                        ; global.get
00002ac: 00                                        ; global index
00002ad: 20                                        ; local.get
00002ae: 06                                        ; local index
00002af: 10                                        ; call
00002b0: 05                                        ; function index
00002b1: 10                                        ; call
00002b2: 0d                                        ; function index
00002b3: 1a                                        ; drop
00002b4: 20                                        ; local.get
00002b5: 01                                        ; local index
00002b6: 23                                        ; global.get
00002b7: 00                                        ; global index
00002b8: 20                                        ; local.get
00002b9: 07                                        ; local index
00002ba: 10                                        ; call
00002bb: 05                                        ; function index
00002bc: 10                                        ; call
00002bd: 0d                                        ; function index
00002be: 1a                                        ; drop
00002bf: 20                                        ; local.get
00002c0: 01                                        ; local index
00002c1: 23                                        ; global.get
00002c2: 00                                        ; global index
00002c3: 20                                        ; local.get
00002c4: 08                                        ; local index
00002c5: 10                                        ; call
00002c6: 05                                        ; function index
00002c7: 10                                        ; call
00002c8: 0d                                        ; function index
00002c9: 1a                                        ; drop
00002ca: 0c                                        ; br
00002cb: 00                                        ; break depth
00002cc: 0b                                        ; end
00002cd: 0b                                        ; end
00002ce: 20                                        ; local.get
00002cf: 01                                        ; local index
00002d0: 41                                        ; i32.const
00002d1: c300                                      ; i32 literal
00002d3: 10                                        ; call
00002d4: 07                                        ; function index
00002d5: 0f                                        ; return
00002d6: 0b                                        ; end
; move data: [217, 2d7) -> [218, 2d8)
0000216: c001                                      ; FIXUP func body size
; function body 1
00002d8: 00                                        ; func body size (guess)
00002d9: 01                                        ; local decl count
00002da: 0a                                        ; local type count
00002db: 7f                                        ; i32
00002dc: 41                                        ; i32.const
00002dd: c400                                      ; i32 literal
00002df: 21                                        ; local.set
00002e0: 01                                        ; local index
00002e1: 41                                        ; i32.const
00002e2: 00                                        ; i32 literal
00002e3: 21                                        ; local.set
00002e4: 09                                        ; local index
00002e5: 41                                        ; i32.const
00002e6: c500                                      ; i32 literal
00002e8: 41                                        ; i32.const
00002e9: d500                                      ; i32 literal
00002eb: 10                                        ; call
00002ec: 01                                        ; function index
00002ed: 21                                        ; local.set
00002ee: 0a                                        ; local index
00002ef: 20                                        ; local.get
00002f0: 00                                        ; local index
00002f1: 20                                        ; local.get
00002f2: 0a                                        ; local index
00002f3: 41                                        ; i32.const
00002f4: d700                                      ; i32 literal
00002f6: 10                                        ; call
00002f7: 08                                        ; function index
00002f8: 21                                        ; local.set
00002f9: 00                                        ; local index
00002fa: 02                                        ; block
00002fb: 40                                        ; void
00002fc: 03                                        ; loop
00002fd: 40                                        ; void
00002fe: 20                                        ; local.get
00002ff: 09                                        ; local index
0000300: 20                                        ; local.get
0000301: 00                                        ; local index
0000302: 10                                        ; call
0000303: 0a                                        ; function index
0000304: 48                                        ; i32.lt_s
0000305: 45                                        ; i32.eqz
0000306: 0d                                        ; br_if
0000307: 01                                        ; break depth
0000308: 23                                        ; global.get
0000309: 00                                        ; global index
000030a: 20                                        ; local.get
000030b: 00                                        ; local index
000030c: 41                                        ; i32.const
000030d: 00                                        ; i32 literal
000030e: 41                                        ; i32.const
000030f: 00                                        ; i32 literal
0000310: 20                                        ; local.get
0000311: 09                                        ; local index
0000312: 6a                                        ; i32.add
0000313: 6a                                        ; i32.add
0000314: 10                                        ; call
0000315: 05                                        ; function index
0000316: 10                                        ; call
0000317: 0b                                        ; function index
0000318: 21                                        ; local.set
0000319: 05                                        ; local index
000031a: 23                                        ; global.get
000031b: 00                                        ; global index
000031c: 20                                        ; local.get
000031d: 00                                        ; local index
000031e: 41                                        ; i32.const
000031f: 00                                        ; i32 literal
0000320: 41                                        ; i32.const
0000321: 00                                        ; i32 literal
0000322: 20                                        ; local.get
0000323: 09                                        ; local index
0000324: 6a                                        ; i32.add
0000325: 6a                                        ; i32.add
0000326: 10                                        ; call
0000327: 05                                        ; function index
0000328: 10                                        ; call
0000329: 0b                                        ; function index
000032a: 21                                        ; local.set
000032b: 06                                        ; local index
000032c: 23                                        ; global.get
000032d: 00                                        ; global index
000032e: 20                                        ; local.get
000032f: 00                                        ; local index
0000330: 41                                        ; i32.const
0000331: 00                                        ; i32 literal
0000332: 41                                        ; i32.const
0000333: 00                                        ; i32 literal
0000334: 20                                        ; local.get
0000335: 09                                        ; local index
0000336: 6a                                        ; i32.add
0000337: 6a                                        ; i32.add
0000338: 10                                        ; call
0000339: 05                                        ; function index
000033a: 10                                        ; call
000033b: 0b                                        ; function index
000033c: 21                                        ; local.set
000033d: 07                                        ; local index
000033e: 23                                        ; global.get
000033f: 00                                        ; global index
0000340: 20                                        ; local.get
0000341: 00                                        ; local index
0000342: 41                                        ; i32.const
0000343: 00                                        ; i32 literal
0000344: 41                                        ; i32.const
0000345: 00                                        ; i32 literal
0000346: 20                                        ; local.get
0000347: 09                                        ; local index
0000348: 6a                                        ; i32.add
0000349: 6a                                        ; i32.add
000034a: 10                                        ; call
000034b: 05                                        ; function index
000034c: 10                                        ; call
000034d: 0b                                        ; function index
000034e: 21                                        ; local.set
000034f: 08                                        ; local index
0000350: 20                                        ; local.get
0000351: 05                                        ; local index
0000352: 41                                        ; i32.const
0000353: 02                                        ; i32 literal
0000354: 74                                        ; i32.shl
0000355: 20                                        ; local.get
0000356: 06                                        ; local index
0000357: 41                                        ; i32.const
0000358: 04                                        ; i32 literal
0000359: 75                                        ; i32.shr_s
000035a: 72                                        ; i32.or
000035b: 21                                        ; local.set
000035c: 02                                        ; local index
000035d: 20                                        ; local.get
000035e: 06                                        ; local index
000035f: 41                                        ; i32.const
0000360: 0f                                        ; i32 literal
0000361: 71                                        ; i32.and
0000362: 41                                        ; i32.const
0000363: 04                                        ; i32 literal
0000364: 74                                        ; i32.shl
0000365: 20                                        ; local.get
0000366: 07                                        ; local index
0000367: 41                                        ; i32.const
0000368: 02                                        ; i32 literal
0000369: 75                                        ; i32.shr_s
000036a: 72                                        ; i32.or
000036b: 21                                        ; local.set
000036c: 03                                        ; local index
000036d: 20                                        ; local.get
000036e: 07                                        ; local index
000036f: 41                                        ; i32.const
0000370: 03                                        ; i32 literal
0000371: 71                                        ; i32.and
0000372: 41                                        ; i32.const
0000373: 06                                        ; i32 literal
0000374: 74                                        ; i32.shl
0000375: 20                                        ; local.get
0000376: 08                                        ; local index
0000377: 72                                        ; i32.or
0000378: 21                                        ; local.set
0000379: 04                                        ; local index
000037a: 20                                        ; local.get
000037b: 01                                        ; local index
000037c: 20                                        ; local.get
000037d: 02                                        ; local index
000037e: 10                                        ; call
000037f: 03                                        ; function index
0000380: 10                                        ; call
0000381: 09                                        ; function index
0000382: 21                                        ; local.set
0000383: 01                                        ; local index
0000384: 20                                        ; local.get
0000385: 07                                        ; local index
0000386: 41                                        ; i32.const
0000387: c000                                      ; i32 literal
0000389: 47                                        ; i32.ne
000038a: 04                                        ; if
000038b: 40                                        ; void
000038c: 20                                        ; local.get
000038d: 01                                        ; local index
000038e: 20                                        ; local.get
000038f: 03                                        ; local index
0000390: 10                                        ; call
0000391: 03                                        ; function index
0000392: 10                                        ; call
0000393: 09                                        ; function index
0000394: 21                                        ; local.set
0000395: 01                                        ; local index
0000396: 0b                                        ; end
0000397: 20                                        ; local.get
0000398: 08                                        ; local index
0000399: 41                                        ; i32.const
000039a: c000                                      ; i32 literal
000039c: 47                                        ; i32.ne
000039d: 04                                        ; if
000039e: 40                                        ; void
000039f: 20                                        ; local.get
00003a0: 01                                        ; local index
00003a1: 20                                        ; local.get
00003a2: 04                                        ; local index
00003a3: 10                                        ; call
00003a4: 03                                        ; function index
00003a5: 10                                        ; call
00003a6: 09                                        ; function index
00003a7: 21                                        ; local.set
00003a8: 01                                        ; local index
00003a9: 0b                                        ; end
00003aa: 0c                                        ; br
00003ab: 00                                        ; break depth
00003ac: 0b                                        ; end
00003ad: 0b                                        ; end
00003ae: 20                                        ; local.get
00003af: 01                                        ; local index
00003b0: 10                                        ; call
00003b1: 13                                        ; function index
00003b2: 21                                        ; local.set
00003b3: 01                                        ; local index
00003b4: 20                                        ; local.get
00003b5: 01                                        ; local index
00003b6: 0f                                        ; return
00003b7: 0b                                        ; end
; move data: [2d9, 3b8) -> [2da, 3b9)
00002d8: df01                                      ; FIXUP func body size
; function body 2
00003b9: 00                                        ; func body size (guess)
00003ba: 01                                        ; local decl count
00003bb: 03                                        ; local type count
00003bc: 7f                                        ; i32
00003bd: 10                                        ; call
00003be: 0c                                        ; function index
00003bf: 21                                        ; local.set
00003c0: 01                                        ; local index
00003c1: 20                                        ; local.get
00003c2: 00                                        ; local index
00003c3: 41                                        ; i32.const
00003c4: d800                                      ; i32 literal
00003c6: 41                                        ; i32.const
00003c7: db00                                      ; i32 literal
00003c9: 10                                        ; call
00003ca: 01                                        ; function index
00003cb: 41                                        ; i32.const
00003cc: dd00                                      ; i32 literal
00003ce: 10                                        ; call
00003cf: 08                                        ; function index
00003d0: 21                                        ; local.set
00003d1: 00                                        ; local index
00003d2: 41                                        ; i32.const
00003d3: 00                                        ; i32 literal
00003d4: 21                                        ; local.set
00003d5: 02                                        ; local index
00003d6: 02                                        ; block
00003d7: 40                                        ; void
00003d8: 03                                        ; loop
00003d9: 40                                        ; void
00003da: 20                                        ; local.get
00003db: 02                                        ; local index
00003dc: 20                                        ; local.get
00003dd: 00                                        ; local index
00003de: 10                                        ; call
00003df: 0a                                        ; function index
00003e0: 41                                        ; i32.const
00003e1: 01                                        ; i32 literal
00003e2: 6b                                        ; i32.sub
00003e3: 4a                                        ; i32.gt_s
00003e4: 0d                                        ; br_if
00003e5: 01                                        ; break depth
00003e6: 20                                        ; local.get
00003e7: 02                                        ; local index
00003e8: 41                                        ; i32.const
00003e9: 01                                        ; i32 literal
00003ea: 6a                                        ; i32.add
00003eb: 21                                        ; local.set
00003ec: 02                                        ; local index
00003ed: 20                                        ; local.get
00003ee: 00                                        ; local index
00003ef: 20                                        ; local.get
00003f0: 02                                        ; local index
00003f1: 10                                        ; call
00003f2: 04                                        ; function index
00003f3: 21                                        ; local.set
00003f4: 03                                        ; local index
00003f5: 20                                        ; local.get
00003f6: 03                                        ; local index
00003f7: 41                                        ; i32.const
00003f8: 8001                                      ; i32 literal
00003fa: 48                                        ; i32.lt_s
00003fb: 04                                        ; if
00003fc: 40                                        ; void
00003fd: 20                                        ; local.get
00003fe: 01                                        ; local index
00003ff: 20                                        ; local.get
0000400: 03                                        ; local index
0000401: 10                                        ; call
0000402: 03                                        ; function index
0000403: 10                                        ; call
0000404: 0d                                        ; function index
0000405: 1a                                        ; drop
0000406: 05                                        ; else
0000407: 20                                        ; local.get
0000408: 01                                        ; local index
0000409: 20                                        ; local.get
000040a: 03                                        ; local index
000040b: 41                                        ; i32.const
000040c: 0c                                        ; i32 literal
000040d: 75                                        ; i32.shr_s
000040e: 41                                        ; i32.const
000040f: e001                                      ; i32 literal
0000411: 72                                        ; i32.or
0000412: 10                                        ; call
0000413: 03                                        ; function index
0000414: 10                                        ; call
0000415: 0d                                        ; function index
0000416: 1a                                        ; drop
0000417: 20                                        ; local.get
0000418: 01                                        ; local index
0000419: 20                                        ; local.get
000041a: 03                                        ; local index
000041b: 41                                        ; i32.const
000041c: 06                                        ; i32 literal
000041d: 75                                        ; i32.shr_s
000041e: 41                                        ; i32.const
000041f: 3f                                        ; i32 literal
0000420: 71                                        ; i32.and
0000421: 41                                        ; i32.const
0000422: 8001                                      ; i32 literal
0000424: 72                                        ; i32.or
0000425: 10                                        ; call
0000426: 03                                        ; function index
0000427: 10                                        ; call
0000428: 0d                                        ; function index
0000429: 1a                                        ; drop
000042a: 20                                        ; local.get
000042b: 01                                        ; local index
000042c: 20                                        ; local.get
000042d: 03                                        ; local index
000042e: 41                                        ; i32.const
000042f: 3f                                        ; i32 literal
0000430: 71                                        ; i32.and
0000431: 41                                        ; i32.const
0000432: 8001                                      ; i32 literal
0000434: 72                                        ; i32.or
0000435: 10                                        ; call
0000436: 03                                        ; function index
0000437: 10                                        ; call
0000438: 0d                                        ; function index
0000439: 1a                                        ; drop
000043a: 0b                                        ; end
000043b: 0c                                        ; br
000043c: 00                                        ; break depth
000043d: 0b                                        ; end
000043e: 0b                                        ; end
000043f: 20                                        ; local.get
0000440: 01                                        ; local index
0000441: 41                                        ; i32.const
0000442: df00                                      ; i32 literal
0000444: 10                                        ; call
0000445: 07                                        ; function index
0000446: 0f                                        ; return
0000447: 0b                                        ; end
; move data: [3ba, 448) -> [3bb, 449)
00003b9: 8e01                                      ; FIXUP func body size
; function body 3
0000449: 00                                        ; func body size (guess)
000044a: 01                                        ; local decl count
000044b: 05                                        ; local type count
000044c: 7f                                        ; i32
000044d: 10                                        ; call
000044e: 0c                                        ; function index
000044f: 21                                        ; local.set
0000450: 01                                        ; local index
0000451: 41                                        ; i32.const
0000452: 00                                        ; i32 literal
0000453: 21                                        ; local.set
0000454: 02                                        ; local index
0000455: 41                                        ; i32.const
0000456: 00                                        ; i32 literal
0000457: 21                                        ; local.set
0000458: 03                                        ; local index
0000459: 41                                        ; i32.const
000045a: 00                                        ; i32 literal
000045b: 21                                        ; local.set
000045c: 04                                        ; local index
000045d: 41                                        ; i32.const
000045e: 00                                        ; i32 literal
000045f: 21                                        ; local.set
0000460: 05                                        ; local index
0000461: 02                                        ; block
0000462: 40                                        ; void
0000463: 03                                        ; loop
0000464: 40                                        ; void
0000465: 20                                        ; local.get
0000466: 02                                        ; local index
0000467: 20                                        ; local.get
0000468: 00                                        ; local index
0000469: 10                                        ; call
000046a: 0a                                        ; function index
000046b: 48                                        ; i32.lt_s
000046c: 45                                        ; i32.eqz
000046d: 0d                                        ; br_if
000046e: 01                                        ; break depth
000046f: 20                                        ; local.get
0000470: 00                                        ; local index
0000471: 20                                        ; local.get
0000472: 02                                        ; local index
0000473: 10                                        ; call
0000474: 04                                        ; function index
0000475: 21                                        ; local.set
0000476: 03                                        ; local index
0000477: 20                                        ; local.get
0000478: 03                                        ; local index
0000479: 41                                        ; i32.const
000047a: 8001                                      ; i32 literal
000047c: 48                                        ; i32.lt_s
000047d: 04                                        ; if
000047e: 40                                        ; void
000047f: 20                                        ; local.get
0000480: 01                                        ; local index
0000481: 20                                        ; local.get
0000482: 03                                        ; local index
0000483: 10                                        ; call
0000484: 03                                        ; function index
0000485: 10                                        ; call
0000486: 0d                                        ; function index
0000487: 1a                                        ; drop
0000488: 20                                        ; local.get
0000489: 02                                        ; local index
000048a: 41                                        ; i32.const
000048b: 01                                        ; i32 literal
000048c: 6a                                        ; i32.add
000048d: 21                                        ; local.set
000048e: 02                                        ; local index
000048f: 05                                        ; else
0000490: 20                                        ; local.get
0000491: 00                                        ; local index
0000492: 20                                        ; local.get
0000493: 02                                        ; local index
0000494: 41                                        ; i32.const
0000495: 01                                        ; i32 literal
0000496: 6a                                        ; i32.add
0000497: 10                                        ; call
0000498: 04                                        ; function index
0000499: 21                                        ; local.set
000049a: 04                                        ; local index
000049b: 20                                        ; local.get
000049c: 00                                        ; local index
000049d: 20                                        ; local.get
000049e: 02                                        ; local index
000049f: 41                                        ; i32.const
00004a0: 02                                        ; i32 literal
00004a1: 6a                                        ; i32.add
00004a2: 10                                        ; call
00004a3: 04                                        ; function index
00004a4: 21                                        ; local.set
00004a5: 05                                        ; local index
00004a6: 20                                        ; local.get
00004a7: 01                                        ; local index
00004a8: 20                                        ; local.get
00004a9: 03                                        ; local index
00004aa: 41                                        ; i32.const
00004ab: 0f                                        ; i32 literal
00004ac: 71                                        ; i32.and
00004ad: 41                                        ; i32.const
00004ae: 0c                                        ; i32 literal
00004af: 74                                        ; i32.shl
00004b0: 20                                        ; local.get
00004b1: 04                                        ; local index
00004b2: 41                                        ; i32.const
00004b3: 3f                                        ; i32 literal
00004b4: 71                                        ; i32.and
00004b5: 41                                        ; i32.const
00004b6: 06                                        ; i32 literal
00004b7: 74                                        ; i32.shl
00004b8: 72                                        ; i32.or
00004b9: 20                                        ; local.get
00004ba: 05                                        ; local index
00004bb: 41                                        ; i32.const
00004bc: 3f                                        ; i32 literal
00004bd: 71                                        ; i32.and
00004be: 72                                        ; i32.or
00004bf: 10                                        ; call
00004c0: 03                                        ; function index
00004c1: 10                                        ; call
00004c2: 0d                                        ; function index
00004c3: 1a                                        ; drop
00004c4: 20                                        ; local.get
00004c5: 02                                        ; local index
00004c6: 41                                        ; i32.const
00004c7: 03                                        ; i32 literal
00004c8: 6a                                        ; i32.add
00004c9: 21                                        ; local.set
00004ca: 02                                        ; local index
00004cb: 0b                                        ; end
00004cc: 0c                                        ; br
00004cd: 00                                        ; break depth
00004ce: 0b                                        ; end
00004cf: 0b                                        ; end
00004d0: 20                                        ; local.get
00004d1: 01                                        ; local index
00004d2: 41                                        ; i32.const
00004d3: e000                                      ; i32 literal
00004d5: 10                                        ; call
00004d6: 07                                        ; function index
00004d7: 0f                                        ; return
00004d8: 0b                                        ; end
; move data: [44a, 4d9) -> [44b, 4da)
0000449: 8f01                                      ; FIXUP func body size
; function body 4
00004da: 00                                        ; func body size (guess)
00004db: 00                                        ; local decl count
00004dc: 41                                        ; i32.const
00004dd: e100                                      ; i32 literal
00004df: 0f                                        ; return
00004e0: 0b                                        ; end
00004da: 06                                        ; FIXUP func body size
; function body 5
00004e1: 00                                        ; func body size (guess)
00004e2: 00                                        ; local decl count
00004e3: 41                                        ; i32.const
00004e4: f000                                      ; i32 literal
00004e6: 0f                                        ; return
00004e7: 0b                                        ; end
00004e1: 06                                        ; FIXUP func body size
; function body 6
00004e8: 00                                        ; func body size (guess)
00004e9: 00                                        ; local decl count
00004ea: 41                                        ; i32.const
00004eb: a601                                      ; i32 literal
00004ed: 0f                                        ; return
00004ee: 0b                                        ; end
00004e8: 06                                        ; FIXUP func body size
; function body 7
00004ef: 00                                        ; func body size (guess)
00004f0: 00                                        ; local decl count
00004f1: 41                                        ; i32.const
00004f2: aa01                                      ; i32 literal
00004f4: 0f                                        ; return
00004f5: 0b                                        ; end
00004ef: 06                                        ; FIXUP func body size
; function body 8
00004f6: 00                                        ; func body size (guess)
00004f7: 00                                        ; local decl count
00004f8: 41                                        ; i32.const
00004f9: b101                                      ; i32 literal
00004fb: 0f                                        ; return
00004fc: 0b                                        ; end
00004f6: 06                                        ; FIXUP func body size
; function body 9
00004fd: 00                                        ; func body size (guess)
00004fe: 00                                        ; local decl count
00004ff: 41                                        ; i32.const
0000500: d201                                      ; i32 literal
0000502: 0f                                        ; return
0000503: 0b                                        ; end
00004fd: 06                                        ; FIXUP func body size
; function body 10
0000504: 00                                        ; func body size (guess)
0000505: 00                                        ; local decl count
0000506: 41                                        ; i32.const
0000507: e601                                      ; i32 literal
0000509: 0f                                        ; return
000050a: 0b                                        ; end
0000504: 06                                        ; FIXUP func body size
; function body 11
000050b: 00                                        ; func body size (guess)
000050c: 00                                        ; local decl count
000050d: 41                                        ; i32.const
000050e: 8b02                                      ; i32 literal
0000510: 0f                                        ; return
0000511: 0b                                        ; end
000050b: 06                                        ; FIXUP func body size
; function body 12
0000512: 00                                        ; func body size (guess)
0000513: 00                                        ; local decl count
0000514: 41                                        ; i32.const
0000515: 9802                                      ; i32 literal
0000517: 0f                                        ; return
0000518: 0b                                        ; end
0000512: 06                                        ; FIXUP func body size
; move data: [215, 519) -> [216, 51a)
0000214: 8406                                      ; FIXUP section size
; section "Data" (11)
000051a: 0b                                        ; section code
000051b: 00                                        ; section size (guess)
000051c: 14                                        ; num data segments
; data segment header 0
000051d: 00                                      
000051e: 41                                        ; i32.const
000051f: 01                                        ; i32 literal
0000520: 0b                                        ; end
0000521: 42                                        ; data segment size
; data segment data 0
0000522: 4142 4344 4546 4748 494a 4b4c 4d4e 4f50 
0000532: 5152 5354 5556 5758 595a 6162 6364 6566 
0000542: 6768 696a 6b6c 6d6e 6f70 7172 7374 7576 
0000552: 7778 797a 3031 3233 3435 3637 3839 2b2f 
0000562: 3d00                                      ; data segment data
; data segment header 1
0000564: 00                                      
0000565: 41                                        ; i32.const
0000566: c300                                      ; i32 literal
0000568: 0b                                        ; end
0000569: 01                                        ; data segment size
; data segment data 1
000056a: 00                                        ; data segment data
; data segment header 2
000056b: 00                                      
000056c: 41                                        ; i32.const
000056d: c400                                      ; i32 literal
000056f: 0b                                        ; end
0000570: 01                                        ; data segment size
; data segment data 2
0000571: 00                                        ; data segment data
; data segment header 3
0000572: 00                                      
0000573: 41                                        ; i32.const
0000574: c500                                      ; i32 literal
0000576: 0b                                        ; end
0000577: 10                                        ; data segment size
; data segment data 3
0000578: 5b5e 412d 5a61 2d7a 302d 392b 2f3d 5d00   ; data segment data
; data segment header 4
0000588: 00                                      
0000589: 41                                        ; i32.const
000058a: d500                                      ; i32 literal
000058c: 0b                                        ; end
000058d: 02                                        ; data segment size
; data segment data 4
000058e: 6700                                      ; data segment data
; data segment header 5
0000590: 00                                      
0000591: 41                                        ; i32.const
0000592: d700                                      ; i32 literal
0000594: 0b                                        ; end
0000595: 01                                        ; data segment size
; data segment data 5
0000596: 00                                        ; data segment data
; data segment header 6
0000597: 00                                      
0000598: 41                                        ; i32.const
0000599: d800                                      ; i32 literal
000059b: 0b                                        ; end
000059c: 03                                        ; data segment size
; data segment data 6
000059d: 726e 00                                   ; data segment data
; data segment header 7
00005a0: 00                                      
00005a1: 41                                        ; i32.const
00005a2: db00                                      ; i32 literal
00005a4: 0b                                        ; end
00005a5: 02                                        ; data segment size
; data segment data 7
00005a6: 6700                                      ; data segment data
; data segment header 8
00005a8: 00                                      
00005a9: 41                                        ; i32.const
00005aa: dd00                                      ; i32 literal
00005ac: 0b                                        ; end
00005ad: 02                                        ; data segment size
; data segment data 8
00005ae: 6e00                                      ; data segment data
; data segment header 9
00005b0: 00                                      
00005b1: 41                                        ; i32.const
00005b2: df00                                      ; i32 literal
00005b4: 0b                                        ; end
00005b5: 01                                        ; data segment size
; data segment data 9
00005b6: 00                                        ; data segment data
; data segment header 10
00005b7: 00                                      
00005b8: 41                                        ; i32.const
00005b9: e000                                      ; i32 literal
00005bb: 0b                                        ; end
00005bc: 01                                        ; data segment size
; data segment data 10
00005bd: 00                                        ; data segment data
; data segment header 11
00005be: 00                                      
00005bf: 41                                        ; i32.const
00005c0: e100                                      ; i32 literal
00005c2: 0b                                        ; end
00005c3: 0f                                        ; data segment size
; data segment data 11
00005c4: 6261 7365 3634 2045 6e63 6f64 6572 00     ; data segment data
; data segment header 12
00005d3: 00                                      
00005d4: 41                                        ; i32.const
00005d5: f000                                      ; i32 literal
00005d7: 0b                                        ; end
00005d8: 36                                        ; data segment size
; data segment data 12
00005d9: 6261 7365 3634 2045 6e63 6f64 6572 2077 
00005e9: 7269 7474 656e 2069 6e20 5669 7375 616c 
00005f9: 4261 7369 632e 4e45 5420 5765 6241 7373 
0000609: 656d 626c 7900                            ; data segment data
; data segment header 13
000060f: 00                                      
0000610: 41                                        ; i32.const
0000611: a601                                      ; i32 literal
0000613: 0b                                        ; end
0000614: 04                                        ; data segment size
; data segment data 13
0000615: 4d49 5400                                 ; data segment data
; data segment header 14
0000619: 00                                      
000061a: 41                                        ; i32.const
000061b: aa01                                      ; i32 literal
000061d: 0b                                        ; end
000061e: 07                                        ; data segment size
; data segment data 14
000061f: 6261 7365 3634 00                         ; data segment data
; data segment header 15
0000626: 00                                      
0000627: 41                                        ; i32.const
0000628: b101                                      ; i32 literal
000062a: 0b                                        ; end
000062b: 22                                        ; data segment size
; data segment data 15
000062c: 436f 7079 7269 6768 7420 c2a9 2049 4078 
000063c: 6965 6775 6967 616e 672e 6d65 2032 3031 
000064c: 3900                                      ; data segment data
; data segment header 16
000064e: 00                                      
000064f: 41                                        ; i32.const
0000650: d201                                      ; i32 literal
0000652: 0b                                        ; end
0000653: 14                                        ; data segment size
; data segment data 16
0000654: 5669 7375 616c 4261 7369 632e 7761 736d 
0000664: 2e6a 7300                                 ; data segment data
; data segment header 17
0000668: 00                                      
0000669: 41                                        ; i32.const
000066a: e601                                      ; i32 literal
000066c: 0b                                        ; end
000066d: 25                                        ; data segment size
; data segment data 17
000066e: 6539 6261 3632 3939 2d31 3033 322d 3432 
000067e: 6162 2d61 3736 302d 3235 6632 3436 3530 
000068e: 3663 3562 00                              ; data segment data
; data segment header 18
0000693: 00                                      
0000694: 41                                        ; i32.const
0000695: 8b02                                      ; i32 literal
0000697: 0b                                        ; end
0000698: 0d                                        ; data segment size
; data segment data 18
0000699: 322e 302e 3334 342e 3434 3434 00          ; data segment data
; data segment header 19
00006a6: 00                                      
00006a7: 41                                        ; i32.const
00006a8: 9802                                      ; i32 literal
00006aa: 0b                                        ; end
00006ab: 0b                                        ; data segment size
; data segment data 19
00006ac: 312e 3132 2e30 2e32 3335 00               ; data segment data
; move data: [51c, 6b7) -> [51d, 6b8)
000051b: 9b03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0117 0460 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 0001 
0000020: 7f02 8402 1106 7265 6765 7870 0772 6570 
0000030: 6c61 6365 0000 0672 6567 6578 7006 7265 
0000040: 6765 7870 0001 0561 7272 6179 0470 7573 
0000050: 6800 0106 5374 7269 6e67 0c66 726f 6d43 
0000060: 6861 7243 6f64 6500 0206 5374 7269 6e67 
0000070: 0a43 6861 7243 6f64 6541 7400 0106 5374 
0000080: 7269 6e67 0643 6861 7241 7400 0106 6e75 
0000090: 6d62 6572 0569 734e 614e 0002 0653 7472 
00000a0: 696e 6704 4a6f 696e 0001 0673 7472 696e 
00000b0: 6707 7265 706c 6163 6500 0006 7374 7269 
00000c0: 6e67 0361 6464 0001 0673 7472 696e 6706 
00000d0: 6c65 6e67 7468 0002 0673 7472 696e 6700 
00000e0: 0001 0561 7272 6179 036e 6577 0003 0561 
00000f0: 7272 6179 0470 7573 6800 0105 6172 7261 
0000100: 7903 6765 7400 0105 6172 7261 7906 6c65 
0000110: 6e67 7468 0002 0365 6e76 0a62 7974 6563 
0000120: 6875 6e6b 7302 0001 030e 0d02 0202 0203 
0000130: 0303 0303 0303 0303 0606 017f 0141 010b 
0000140: 07d0 010d 0665 6e63 6f64 6500 1006 6465 
0000150: 636f 6465 0011 0b75 7466 385f 656e 636f 
0000160: 6465 0012 0b75 7466 385f 6465 636f 6465 
0000170: 0013 0d41 7373 656d 626c 7954 6974 6c65 
0000180: 0014 1341 7373 656d 626c 7944 6573 6372 
0000190: 6970 7469 6f6e 0015 0f41 7373 656d 626c 
00001a0: 7943 6f6d 7061 6e79 0016 0f41 7373 656d 
00001b0: 626c 7950 726f 6475 6374 0017 1141 7373 
00001c0: 656d 626c 7943 6f70 7972 6967 6874 0018 
00001d0: 1141 7373 656d 626c 7954 7261 6465 6d61 
00001e0: 726b 0019 0447 7569 6400 1a0f 4173 7365 
00001f0: 6d62 6c79 5665 7273 696f 6e00 1b13 4173 
0000200: 7365 6d62 6c79 4669 6c65 5665 7273 696f 
0000210: 6e00 1c0a 8406 0dc0 0101 097f 100c 2101 
0000220: 4100 2109 2000 1012 2100 0240 0340 2009 
0000230: 2000 100a 4845 0d01 2000 4100 4100 2009 
0000240: 6a6a 1004 2102 2000 4100 4100 2009 6a6a 
0000250: 1004 2103 2000 4100 4100 2009 6a6a 1004 
0000260: 2104 2002 4102 7521 0520 0241 0371 4104 
0000270: 7420 0341 0475 7221 0620 0341 0f71 4102 
0000280: 7420 0441 0675 7221 0720 0441 3f71 2108 
0000290: 2003 1006 0440 41c0 0021 0820 0821 070b 
00002a0: 2001 2300 2005 1005 100d 1a20 0123 0020 
00002b0: 0610 0510 0d1a 2001 2300 2007 1005 100d 
00002c0: 1a20 0123 0020 0810 0510 0d1a 0c00 0b0b 
00002d0: 2001 41c3 0010 070f 0bdf 0101 0a7f 41c4 
00002e0: 0021 0141 0021 0941 c500 41d5 0010 0121 
00002f0: 0a20 0020 0a41 d700 1008 2100 0240 0340 
0000300: 2009 2000 100a 4845 0d01 2300 2000 4100 
0000310: 4100 2009 6a6a 1005 100b 2105 2300 2000 
0000320: 4100 4100 2009 6a6a 1005 100b 2106 2300 
0000330: 2000 4100 4100 2009 6a6a 1005 100b 2107 
0000340: 2300 2000 4100 4100 2009 6a6a 1005 100b 
0000350: 2108 2005 4102 7420 0641 0475 7221 0220 
0000360: 0641 0f71 4104 7420 0741 0275 7221 0320 
0000370: 0741 0371 4106 7420 0872 2104 2001 2002 
0000380: 1003 1009 2101 2007 41c0 0047 0440 2001 
0000390: 2003 1003 1009 2101 0b20 0841 c000 4704 
00003a0: 4020 0120 0410 0310 0921 010b 0c00 0b0b 
00003b0: 2001 1013 2101 2001 0f0b 8e01 0103 7f10 
00003c0: 0c21 0120 0041 d800 41db 0010 0141 dd00 
00003d0: 1008 2100 4100 2102 0240 0340 2002 2000 
00003e0: 100a 4101 6b4a 0d01 2002 4101 6a21 0220 
00003f0: 0020 0210 0421 0320 0341 8001 4804 4020 
0000400: 0120 0310 0310 0d1a 0520 0120 0341 0c75 
0000410: 41e0 0172 1003 100d 1a20 0120 0341 0675 
0000420: 413f 7141 8001 7210 0310 0d1a 2001 2003 
0000430: 413f 7141 8001 7210 0310 0d1a 0b0c 000b 
0000440: 0b20 0141 df00 1007 0f0b 8f01 0105 7f10 
0000450: 0c21 0141 0021 0241 0021 0341 0021 0441 
0000460: 0021 0502 4003 4020 0220 0010 0a48 450d 
0000470: 0120 0020 0210 0421 0320 0341 8001 4804 
0000480: 4020 0120 0310 0310 0d1a 2002 4101 6a21 
0000490: 0205 2000 2002 4101 6a10 0421 0420 0020 
00004a0: 0241 026a 1004 2105 2001 2003 410f 7141 
00004b0: 0c74 2004 413f 7141 0674 7220 0541 3f71 
00004c0: 7210 0310 0d1a 2002 4103 6a21 020b 0c00 
00004d0: 0b0b 2001 41e0 0010 070f 0b06 0041 e100 
00004e0: 0f0b 0600 41f0 000f 0b06 0041 a601 0f0b 
00004f0: 0600 41aa 010f 0b06 0041 b101 0f0b 0600 
0000500: 41d2 010f 0b06 0041 e601 0f0b 0600 418b 
0000510: 020f 0b06 0041 9802 0f0b 0b9b 0314 0041 
0000520: 010b 4241 4243 4445 4647 4849 4a4b 4c4d 
0000530: 4e4f 5051 5253 5455 5657 5859 5a61 6263 
0000540: 6465 6667 6869 6a6b 6c6d 6e6f 7071 7273 
0000550: 7475 7677 7879 7a30 3132 3334 3536 3738 
0000560: 392b 2f3d 0000 41c3 000b 0100 0041 c400 
0000570: 0b01 0000 41c5 000b 105b 5e41 2d5a 612d 
0000580: 7a30 2d39 2b2f 3d5d 0000 41d5 000b 0267 
0000590: 0000 41d7 000b 0100 0041 d800 0b03 726e 
00005a0: 0000 41db 000b 0267 0000 41dd 000b 026e 
00005b0: 0000 41df 000b 0100 0041 e000 0b01 0000 
00005c0: 41e1 000b 0f62 6173 6536 3420 456e 636f 
00005d0: 6465 7200 0041 f000 0b36 6261 7365 3634 
00005e0: 2045 6e63 6f64 6572 2077 7269 7474 656e 
00005f0: 2069 6e20 5669 7375 616c 4261 7369 632e 
0000600: 4e45 5420 5765 6241 7373 656d 626c 7900 
0000610: 0041 a601 0b04 4d49 5400 0041 aa01 0b07 
0000620: 6261 7365 3634 0000 41b1 010b 2243 6f70 
0000630: 7972 6967 6874 20c2 a920 4940 7869 6567 
0000640: 7569 6761 6e67 2e6d 6520 3230 3139 0000 
0000650: 41d2 010b 1456 6973 7561 6c42 6173 6963 
0000660: 2e77 6173 6d2e 6a73 0000 41e6 010b 2565 
0000670: 3962 6136 3239 392d 3130 3332 2d34 3261 
0000680: 622d 6137 3630 2d32 3566 3234 3635 3036 
0000690: 6335 6200 0041 8b02 0b0d 322e 302e 3334 
00006a0: 342e 3434 3434 0000 4198 020b 0b31 2e31 
00006b0: 322e 302e 3233 3500                     
