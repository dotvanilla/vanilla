0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 08                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 01                                        ; num params
0000012: 7f                                        ; i32
0000013: 00                                        ; num results
; type 2
0000014: 60                                        ; func
0000015: 03                                        ; num params
0000016: 7f                                        ; i32
0000017: 7f                                        ; i32
0000018: 7f                                        ; i32
0000019: 01                                        ; num results
000001a: 7f                                        ; i32
; type 3
000001b: 60                                        ; func
000001c: 02                                        ; num params
000001d: 7f                                        ; i32
000001e: 7f                                        ; i32
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
; type 4
0000021: 60                                        ; func
0000022: 00                                        ; num params
0000023: 01                                        ; num results
0000024: 7d                                        ; f32
; type 5
0000025: 60                                        ; func
0000026: 00                                        ; num params
0000027: 00                                        ; num results
; type 6
0000028: 60                                        ; func
0000029: 03                                        ; num params
000002a: 7f                                        ; i32
000002b: 7f                                        ; i32
000002c: 7f                                        ; i32
000002d: 00                                        ; num results
; type 7
000002e: 60                                        ; func
000002f: 00                                        ; num params
0000030: 01                                        ; num results
0000031: 7e                                        ; i64
0000009: 28                                        ; FIXUP section size
; section "Import" (2)
0000032: 02                                        ; section code
0000033: 00                                        ; section size (guess)
0000034: 08                                        ; num imports
; import header 0
0000035: 07                                        ; string length
0000036: 636f 6e73 6f6c 65                        console  ; import module name
000003d: 03                                        ; string length
000003e: 6c6f 67                                  log  ; import field name
0000041: 00                                        ; import kind
0000042: 00                                        ; import signature index
; import header 1
0000043: 07                                        ; string length
0000044: 636f 6e73 6f6c 65                        console  ; import module name
000004b: 05                                        ; string length
000004c: 6572 726f 72                             error  ; import field name
0000051: 00                                        ; import kind
0000052: 01                                        ; import signature index
; import header 2
0000053: 06                                        ; string length
0000054: 7374 7269 6e67                           string  ; import module name
000005a: 07                                        ; string length
000005b: 7265 706c 6163 65                        replace  ; import field name
0000062: 00                                        ; import kind
0000063: 02                                        ; import signature index
; import header 3
0000064: 06                                        ; string length
0000065: 7374 7269 6e67                           string  ; import module name
000006b: 03                                        ; string length
000006c: 6164 64                                  add  ; import field name
000006f: 00                                        ; import kind
0000070: 03                                        ; import signature index
; import header 4
0000071: 06                                        ; string length
0000072: 7374 7269 6e67                           string  ; import module name
0000078: 06                                        ; string length
0000079: 6c65 6e67 7468                           length  ; import field name
000007f: 00                                        ; import kind
0000080: 00                                        ; import signature index
; import header 5
0000081: 06                                        ; string length
0000082: 7374 7269 6e67                           string  ; import module name
0000088: 07                                        ; string length
0000089: 696e 6465 784f 66                        indexOf  ; import field name
0000090: 00                                        ; import kind
0000091: 03                                        ; import signature index
; import header 6
0000092: 06                                        ; string length
0000093: 7374 7269 6e67                           string  ; import module name
0000099: 08                                        ; string length
000009a: 746f 5374 7269 6e67                      toString  ; import field name
00000a2: 00                                        ; import kind
00000a3: 00                                        ; import signature index
; import header 7
00000a4: 03                                        ; string length
00000a5: 656e 76                                  env  ; import module name
00000a8: 0a                                        ; string length
00000a9: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b3: 02                                        ; import kind
00000b4: 00                                        ; limits: flags
00000b5: 01                                        ; limits: initial
; move data: [34, b6) -> [35, b7)
0000033: 8201                                      ; FIXUP section size
; section "Function" (3)
00000b7: 03                                        ; section code
00000b8: 00                                        ; section size (guess)
00000b9: 05                                        ; num functions
00000ba: 04                                        ; function 0 signature index
00000bb: 05                                        ; function 1 signature index
00000bc: 05                                        ; function 2 signature index
00000bd: 06                                        ; function 3 signature index
00000be: 07                                        ; function 4 signature index
00000b8: 06                                        ; FIXUP section size
; section "Export" (7)
00000bf: 07                                        ; section code
00000c0: 00                                        ; section size (guess)
00000c1: 05                                        ; num exports
00000c2: 18                                        ; string length
00000c3: 6675 6e63 7469 6f6e 5465 7374 2e6f 7574  functionTest.out
00000d3: 7075 7445 7272 6f72                      putError  ; export name
00000db: 00                                        ; export kind
00000dc: 07                                        ; export func index
00000dd: 12                                        ; string length
00000de: 6675 6e63 7469 6f6e 5465 7374 2e63 616c  functionTest.cal
00000ee: 6c73                                     ls  ; export name
00000f0: 00                                        ; export kind
00000f1: 08                                        ; export func index
00000f2: 22                                        ; string length
00000f3: 6675 6e63 7469 6f6e 5465 7374 2e65 7874  functionTest.ext
0000103: 656e 7369 6f6e 4675 6e63 7469 6f6e 7465  ensionFunctionte
0000113: 7374                                     st  ; export name
0000115: 00                                        ; export kind
0000116: 09                                        ; export func index
0000117: 11                                        ; string length
0000118: 6675 6e63 7469 6f6e 5465 7374 2e4d 6169  functionTest.Mai
0000128: 6e                                       n  ; export name
0000129: 00                                        ; export kind
000012a: 0a                                        ; export func index
000012b: 1b                                        ; string length
000012c: 4578 706f 7274 4150 694d 6f64 756c 652e  ExportAPiModule.
000013c: 6f75 7470 7574 4572 726f 72              outputError  ; export name
0000147: 00                                        ; export kind
0000148: 0b                                        ; export func index
; move data: [c1, 149) -> [c2, 14a)
00000c0: 8801                                      ; FIXUP section size
; section "Code" (10)
000014a: 0a                                        ; section code
000014b: 00                                        ; section size (guess)
000014c: 05                                        ; num functions
; function body 0
000014d: 00                                        ; func body size (guess)
000014e: 00                                        ; local decl count
000014f: 41                                        ; i32.const
0000150: 01                                        ; i32 literal
0000151: 10                                        ; call
0000152: 01                                        ; function index
0000153: 44                                        ; f64.const
0000154: 0000 0000 0000 0000                       ; f64 literal
000015c: 44                                        ; f64.const
000015d: 2d43 1ceb e236 1a3f                       ; f64 literal
0000165: a1                                        ; f64.sub
0000166: b6                                        ; f32.demote_f64
0000167: 0f                                        ; return
0000168: 0b                                        ; end
000014d: 1b                                        ; FIXUP func body size
; function body 1
0000169: 00                                        ; func body size (guess)
000016a: 01                                        ; local decl count
000016b: 01                                        ; local type count
000016c: 7e                                        ; i64
000016d: 41                                        ; i32.const
000016e: 11                                        ; i32 literal
000016f: 41                                        ; i32.const
0000170: 9c7f                                      ; i32 literal
0000172: 41                                        ; i32.const
0000173: 01                                        ; i32 literal
0000174: 10                                        ; call
0000175: 0a                                        ; function index
0000176: 41                                        ; i32.const
0000177: 36                                        ; i32 literal
0000178: 44                                        ; f64.const
0000179: 6666 6666 fe69 f840                       ; f64 literal
0000181: aa                                        ; i32.trunc_f64_s
0000182: 41                                        ; i32.const
0000183: 01                                        ; i32 literal
0000184: 10                                        ; call
0000185: 0a                                        ; function index
0000186: 10                                        ; call
0000187: 07                                        ; function index
0000188: 1a                                        ; drop
0000189: 10                                        ; call
000018a: 07                                        ; function index
000018b: ae                                        ; i64.trunc_f32_s
000018c: 10                                        ; call
000018d: 0b                                        ; function index
000018e: 7c                                        ; i64.add
000018f: 21                                        ; local.set
0000190: 00                                        ; local index
0000191: 0b                                        ; end
0000169: 28                                        ; FIXUP func body size
; function body 2
0000192: 00                                        ; func body size (guess)
0000193: 00                                        ; local decl count
0000194: 41                                        ; i32.const
0000195: cb00                                      ; i32 literal
0000197: 10                                        ; call
0000198: 00                                        ; function index
0000199: 1a                                        ; drop
000019a: 0b                                        ; end
0000192: 08                                        ; FIXUP func body size
; function body 3
000019b: 00                                        ; func body size (guess)
000019c: 00                                        ; local decl count
000019d: 41                                        ; i32.const
000019e: 00                                        ; i32 literal
000019f: 20                                        ; local.get
00001a0: 02                                        ; local index
00001a1: 46                                        ; i32.eq
00001a2: 10                                        ; call
00001a3: 06                                        ; function index
00001a4: 10                                        ; call
00001a5: 00                                        ; function index
00001a6: 1a                                        ; drop
00001a7: 41                                        ; i32.const
00001a8: 00                                        ; i32 literal
00001a9: 20                                        ; local.get
00001aa: 02                                        ; local index
00001ab: 47                                        ; i32.ne
00001ac: 10                                        ; call
00001ad: 06                                        ; function index
00001ae: 10                                        ; call
00001af: 00                                        ; function index
00001b0: 1a                                        ; drop
00001b1: 41                                        ; i32.const
00001b2: 00                                        ; i32 literal
00001b3: 20                                        ; local.get
00001b4: 02                                        ; local index
00001b5: 46                                        ; i32.eq
00001b6: 45                                        ; i32.eqz
00001b7: 10                                        ; call
00001b8: 06                                        ; function index
00001b9: 10                                        ; call
00001ba: 00                                        ; function index
00001bb: 1a                                        ; drop
00001bc: 20                                        ; local.get
00001bd: 02                                        ; local index
00001be: 45                                        ; i32.eqz
00001bf: 10                                        ; call
00001c0: 06                                        ; function index
00001c1: 10                                        ; call
00001c2: 00                                        ; function index
00001c3: 1a                                        ; drop
00001c4: 20                                        ; local.get
00001c5: 00                                        ; local index
00001c6: 10                                        ; call
00001c7: 00                                        ; function index
00001c8: 1a                                        ; drop
00001c9: 20                                        ; local.get
00001ca: 01                                        ; local index
00001cb: 10                                        ; call
00001cc: 06                                        ; function index
00001cd: 10                                        ; call
00001ce: 00                                        ; function index
00001cf: 1a                                        ; drop
00001d0: 41                                        ; i32.const
00001d1: 01                                        ; i32 literal
00001d2: 10                                        ; call
00001d3: 06                                        ; function index
00001d4: 10                                        ; call
00001d5: 00                                        ; function index
00001d6: 1a                                        ; drop
00001d7: 20                                        ; local.get
00001d8: 00                                        ; local index
00001d9: 41                                        ; i32.const
00001da: 00                                        ; i32 literal
00001db: 46                                        ; i32.eq
00001dc: 10                                        ; call
00001dd: 06                                        ; function index
00001de: 10                                        ; call
00001df: 00                                        ; function index
00001e0: 1a                                        ; drop
00001e1: 0b                                        ; end
000019b: 46                                        ; FIXUP func body size
; function body 4
00001e2: 00                                        ; func body size (guess)
00001e3: 00                                        ; local decl count
00001e4: 41                                        ; i32.const
00001e5: d800                                      ; i32 literal
00001e7: 10                                        ; call
00001e8: 01                                        ; function index
00001e9: 44                                        ; f64.const
00001ea: 0000 0000 0000 0000                       ; f64 literal
00001f2: 44                                        ; f64.const
00001f3: 8e75 711b 0d00 2440                       ; f64 literal
00001fb: a1                                        ; f64.sub
00001fc: b0                                        ; i64.trunc_f64_s
00001fd: 0f                                        ; return
00001fe: 0b                                        ; end
00001e2: 1c                                        ; FIXUP func body size
; move data: [14c, 1ff) -> [14d, 200)
000014b: b301                                      ; FIXUP section size
; section "Data" (11)
0000200: 0b                                        ; section code
0000201: 00                                        ; section size (guess)
0000202: 05                                        ; num data segments
; data segment header 0
0000203: 00                                      
0000204: 41                                        ; i32.const
0000205: 01                                        ; i32 literal
0000206: 0b                                        ; end
0000207: 10                                        ; data segment size
; data segment data 0
0000208: 7468 6973 2069 7320 6d65 7373 6167 6500   ; data segment data
; data segment header 1
0000218: 00                                      
0000219: 41                                        ; i32.const
000021a: 11                                        ; i32 literal
000021b: 0b                                        ; end
000021c: 25                                        ; data segment size
; data segment data 1
000021d: 5468 6973 2069 7320 7468 6520 6f70 7469 
000022d: 6f6e 616c 2070 6172 616d 6574 6572 2076 
000023d: 616c 7565 00                              ; data segment data
; data segment header 2
0000242: 00                                      
0000243: 41                                        ; i32.const
0000244: 36                                        ; i32 literal
0000245: 0b                                        ; end
0000246: 15                                        ; data segment size
; data segment data 2
0000247: 416e 6f74 6865 7220 7374 7269 6e67 2076 
0000257: 616c 7565 00                              ; data segment data
; data segment header 3
000025c: 00                                      
000025d: 41                                        ; i32.const
000025e: cb00                                      ; i32 literal
0000260: 0b                                        ; end
0000261: 0d                                        ; data segment size
; data segment data 3
0000262: 3334 3535 3636 3737 3737 3737 00          ; data segment data
; data segment header 4
000026f: 00                                      
0000270: 41                                        ; i32.const
0000271: d800                                      ; i32 literal
0000273: 0b                                        ; end
0000274: 10                                        ; data segment size
; data segment data 4
0000275: 7468 6973 2069 7320 6d65 7373 6167 6500   ; data segment data
; move data: [202, 285) -> [203, 286)
0000201: 8301                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0128 0860 017f 017f 
0000010: 6001 7f00 6003 7f7f 7f01 7f60 027f 7f01 
0000020: 7f60 0001 7d60 0000 6003 7f7f 7f00 6000 
0000030: 017e 0282 0108 0763 6f6e 736f 6c65 036c 
0000040: 6f67 0000 0763 6f6e 736f 6c65 0565 7272 
0000050: 6f72 0001 0673 7472 696e 6707 7265 706c 
0000060: 6163 6500 0206 7374 7269 6e67 0361 6464 
0000070: 0003 0673 7472 696e 6706 6c65 6e67 7468 
0000080: 0000 0673 7472 696e 6707 696e 6465 784f 
0000090: 6600 0306 7374 7269 6e67 0874 6f53 7472 
00000a0: 696e 6700 0003 656e 760a 6279 7465 6368 
00000b0: 756e 6b73 0200 0103 0605 0405 0506 0707 
00000c0: 8801 0518 6675 6e63 7469 6f6e 5465 7374 
00000d0: 2e6f 7574 7075 7445 7272 6f72 0007 1266 
00000e0: 756e 6374 696f 6e54 6573 742e 6361 6c6c 
00000f0: 7300 0822 6675 6e63 7469 6f6e 5465 7374 
0000100: 2e65 7874 656e 7369 6f6e 4675 6e63 7469 
0000110: 6f6e 7465 7374 0009 1166 756e 6374 696f 
0000120: 6e54 6573 742e 4d61 696e 000a 1b45 7870 
0000130: 6f72 7441 5069 4d6f 6475 6c65 2e6f 7574 
0000140: 7075 7445 7272 6f72 000b 0ab3 0105 1b00 
0000150: 4101 1001 4400 0000 0000 0000 0044 2d43 
0000160: 1ceb e236 1a3f a1b6 0f0b 2801 017e 4111 
0000170: 419c 7f41 0110 0a41 3644 6666 6666 fe69 
0000180: f840 aa41 0110 0a10 071a 1007 ae10 0b7c 
0000190: 2100 0b08 0041 cb00 1000 1a0b 4600 4100 
00001a0: 2002 4610 0610 001a 4100 2002 4710 0610 
00001b0: 001a 4100 2002 4645 1006 1000 1a20 0245 
00001c0: 1006 1000 1a20 0010 001a 2001 1006 1000 
00001d0: 1a41 0110 0610 001a 2000 4100 4610 0610 
00001e0: 001a 0b1c 0041 d800 1001 4400 0000 0000 
00001f0: 0000 0044 8e75 711b 0d00 2440 a1b0 0f0b 
0000200: 0b83 0105 0041 010b 1074 6869 7320 6973 
0000210: 206d 6573 7361 6765 0000 4111 0b25 5468 
0000220: 6973 2069 7320 7468 6520 6f70 7469 6f6e 
0000230: 616c 2070 6172 616d 6574 6572 2076 616c 
0000240: 7565 0000 4136 0b15 416e 6f74 6865 7220 
0000250: 7374 7269 6e67 2076 616c 7565 0000 41cb 
0000260: 000b 0d33 3435 3536 3637 3737 3737 3700 
0000270: 0041 d800 0b10 7468 6973 2069 7320 6d65 
0000280: 7373 6167 6500                          
