0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 02                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 01                                        ; num results
0000015: 7f                                        ; i32
; type 2
0000016: 60                                        ; func
0000017: 03                                        ; num params
0000018: 7f                                        ; i32
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 00                                        ; num results
; type 3
000001c: 60                                        ; func
000001d: 02                                        ; num params
000001e: 7f                                        ; i32
000001f: 7c                                        ; f64
0000020: 01                                        ; num results
0000021: 7f                                        ; i32
; type 4
0000022: 60                                        ; func
0000023: 02                                        ; num params
0000024: 7f                                        ; i32
0000025: 7f                                        ; i32
0000026: 01                                        ; num results
0000027: 7c                                        ; f64
; type 5
0000028: 60                                        ; func
0000029: 03                                        ; num params
000002a: 7f                                        ; i32
000002b: 7f                                        ; i32
000002c: 7c                                        ; f64
000002d: 00                                        ; num results
; type 6
000002e: 60                                        ; func
000002f: 00                                        ; num params
0000030: 00                                        ; num results
0000009: 27                                        ; FIXUP section size
; section "Import" (2)
0000031: 02                                        ; section code
0000032: 00                                        ; section size (guess)
0000033: 0c                                        ; num imports
; import header 0
0000034: 05                                        ; string length
0000035: 4172 7261 79                             Array  ; import module name
000003a: 06                                        ; string length
000003b: 6372 6561 7465                           create  ; import field name
0000041: 00                                        ; import kind
0000042: 00                                        ; import signature index
; import header 1
0000043: 05                                        ; string length
0000044: 4172 7261 79                             Array  ; import module name
0000049: 04                                        ; string length
000004a: 7075 7368                                push  ; import field name
000004e: 00                                        ; import kind
000004f: 01                                        ; import signature index
; import header 2
0000050: 05                                        ; string length
0000051: 4172 7261 79                             Array  ; import module name
0000056: 03                                        ; string length
0000057: 6765 74                                  get  ; import field name
000005a: 00                                        ; import kind
000005b: 01                                        ; import signature index
; import header 3
000005c: 05                                        ; string length
000005d: 4172 7261 79                             Array  ; import module name
0000062: 03                                        ; string length
0000063: 7365 74                                  set  ; import field name
0000066: 00                                        ; import kind
0000067: 02                                        ; import signature index
; import header 4
0000068: 05                                        ; string length
0000069: 4172 7261 79                             Array  ; import module name
000006e: 06                                        ; string length
000006f: 6c65 6e67 7468                           length  ; import field name
0000075: 00                                        ; import kind
0000076: 00                                        ; import signature index
; import header 5
0000077: 05                                        ; string length
0000078: 4172 7261 79                             Array  ; import module name
000007d: 04                                        ; string length
000007e: 7075 7368                                push  ; import field name
0000082: 00                                        ; import kind
0000083: 01                                        ; import signature index
; import header 6
0000084: 05                                        ; string length
0000085: 4172 7261 79                             Array  ; import module name
000008a: 03                                        ; string length
000008b: 6765 74                                  get  ; import field name
000008e: 00                                        ; import kind
000008f: 01                                        ; import signature index
; import header 7
0000090: 05                                        ; string length
0000091: 4172 7261 79                             Array  ; import module name
0000096: 03                                        ; string length
0000097: 7365 74                                  set  ; import field name
000009a: 00                                        ; import kind
000009b: 02                                        ; import signature index
; import header 8
000009c: 05                                        ; string length
000009d: 4172 7261 79                             Array  ; import module name
00000a2: 04                                        ; string length
00000a3: 7075 7368                                push  ; import field name
00000a7: 00                                        ; import kind
00000a8: 03                                        ; import signature index
; import header 9
00000a9: 05                                        ; string length
00000aa: 4172 7261 79                             Array  ; import module name
00000af: 03                                        ; string length
00000b0: 6765 74                                  get  ; import field name
00000b3: 00                                        ; import kind
00000b4: 04                                        ; import signature index
; import header 10
00000b5: 05                                        ; string length
00000b6: 4172 7261 79                             Array  ; import module name
00000bb: 03                                        ; string length
00000bc: 7365 74                                  set  ; import field name
00000bf: 00                                        ; import kind
00000c0: 05                                        ; import signature index
; import header 11
00000c1: 03                                        ; string length
00000c2: 656e 76                                  env  ; import module name
00000c5: 0a                                        ; string length
00000c6: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000d0: 02                                        ; import kind
00000d1: 00                                        ; limits: flags
00000d2: 01                                        ; limits: initial
; move data: [33, d3) -> [34, d4)
0000032: a001                                      ; FIXUP section size
; section "Function" (3)
00000d4: 03                                        ; section code
00000d5: 00                                        ; section size (guess)
00000d6: 01                                        ; num functions
00000d7: 06                                        ; function 0 signature index
00000d5: 02                                        ; FIXUP section size
; section "Global" (6)
00000d8: 06                                        ; section code
00000d9: 00                                        ; section size (guess)
00000da: 01                                        ; num globals
00000db: 7f                                        ; i32
00000dc: 01                                        ; global mutability
00000dd: 41                                        ; i32.const
00000de: 00                                        ; i32 literal
00000df: 0b                                        ; end
00000d9: 06                                        ; FIXUP section size
; section "Start" (8)
00000e0: 08                                        ; section code
00000e1: 00                                        ; section size (guess)
00000e2: 0b                                        ; start func index
00000e1: 01                                        ; FIXUP section size
; section "Code" (10)
00000e3: 0a                                        ; section code
00000e4: 00                                        ; section size (guess)
00000e5: 01                                        ; num functions
; function body 0
00000e6: 00                                        ; func body size (guess)
00000e7: 00                                        ; local decl count
00000e8: 41                                        ; i32.const
00000e9: 7f                                        ; i32 literal
00000ea: 10                                        ; call
00000eb: 00                                        ; function index
00000ec: 41                                        ; i32.const
00000ed: 18                                        ; i32 literal
00000ee: b7                                        ; f64.convert_i32_s
00000ef: 10                                        ; call
00000f0: 08                                        ; function index
00000f1: 41                                        ; i32.const
00000f2: 17                                        ; i32 literal
00000f3: b7                                        ; f64.convert_i32_s
00000f4: 10                                        ; call
00000f5: 08                                        ; function index
00000f6: 41                                        ; i32.const
00000f7: a803                                      ; i32 literal
00000f9: b7                                        ; f64.convert_i32_s
00000fa: 10                                        ; call
00000fb: 08                                        ; function index
00000fc: 41                                        ; i32.const
00000fd: f712                                      ; i32 literal
00000ff: b7                                        ; f64.convert_i32_s
0000100: 10                                        ; call
0000101: 08                                        ; function index
0000102: 41                                        ; i32.const
0000103: b623                                      ; i32 literal
0000105: b7                                        ; f64.convert_i32_s
0000106: 10                                        ; call
0000107: 08                                        ; function index
0000108: 41                                        ; i32.const
0000109: e929                                      ; i32 literal
000010b: b7                                        ; f64.convert_i32_s
000010c: 10                                        ; call
000010d: 08                                        ; function index
000010e: 41                                        ; i32.const
000010f: 37                                        ; i32 literal
0000110: b7                                        ; f64.convert_i32_s
0000111: 10                                        ; call
0000112: 08                                        ; function index
0000113: 41                                        ; i32.const
0000114: 37                                        ; i32 literal
0000115: b7                                        ; f64.convert_i32_s
0000116: 10                                        ; call
0000117: 08                                        ; function index
0000118: 41                                        ; i32.const
0000119: 37                                        ; i32 literal
000011a: b7                                        ; f64.convert_i32_s
000011b: 10                                        ; call
000011c: 08                                        ; function index
000011d: 41                                        ; i32.const
000011e: 37                                        ; i32 literal
000011f: b7                                        ; f64.convert_i32_s
0000120: 10                                        ; call
0000121: 08                                        ; function index
0000122: 41                                        ; i32.const
0000123: b32b                                      ; i32 literal
0000125: b7                                        ; f64.convert_i32_s
0000126: 10                                        ; call
0000127: 08                                        ; function index
0000128: 41                                        ; i32.const
0000129: 05                                        ; i32 literal
000012a: b7                                        ; f64.convert_i32_s
000012b: 10                                        ; call
000012c: 08                                        ; function index
000012d: 24                                        ; global.set
000012e: 00                                        ; global index
000012f: 0b                                        ; end
00000e6: 49                                        ; FIXUP func body size
00000e4: 4b                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0127 0760 017f 017f 
0000010: 6002 7f7f 017f 6003 7f7f 7f00 6002 7f7c 
0000020: 017f 6002 7f7f 017c 6003 7f7f 7c00 6000 
0000030: 0002 a001 0c05 4172 7261 7906 6372 6561 
0000040: 7465 0000 0541 7272 6179 0470 7573 6800 
0000050: 0105 4172 7261 7903 6765 7400 0105 4172 
0000060: 7261 7903 7365 7400 0205 4172 7261 7906 
0000070: 6c65 6e67 7468 0000 0541 7272 6179 0470 
0000080: 7573 6800 0105 4172 7261 7903 6765 7400 
0000090: 0105 4172 7261 7903 7365 7400 0205 4172 
00000a0: 7261 7904 7075 7368 0003 0541 7272 6179 
00000b0: 0367 6574 0004 0541 7272 6179 0373 6574 
00000c0: 0005 0365 6e76 0a62 7974 6563 6875 6e6b 
00000d0: 7302 0001 0302 0106 0606 017f 0141 000b 
00000e0: 0801 0b0a 4b01 4900 417f 1000 4118 b710 
00000f0: 0841 17b7 1008 41a8 03b7 1008 41f7 12b7 
0000100: 1008 41b6 23b7 1008 41e9 29b7 1008 4137 
0000110: b710 0841 37b7 1008 4137 b710 0841 37b7 
0000120: 1008 41b3 2bb7 1008 4105 b710 0824 000b 
