0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7f                                        ; i32
0000020: 00                                        ; num results
; type 4
0000021: 60                                        ; func
0000022: 01                                        ; num params
0000023: 7c                                        ; f64
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 00                                        ; num params
0000028: 00                                        ; num results
; type 6
0000029: 60                                        ; func
000002a: 01                                        ; num params
000002b: 7e                                        ; i64
000002c: 01                                        ; num results
000002d: 7f                                        ; i32
0000009: 24                                        ; FIXUP section size
; section "Import" (2)
000002e: 02                                        ; section code
000002f: 00                                        ; section size (guess)
0000030: 08                                        ; num imports
; import header 0
0000031: 06                                        ; string length
0000032: 7374 7269 6e67                           string  ; import module name
0000038: 07                                        ; string length
0000039: 7265 706c 6163 65                        replace  ; import field name
0000040: 00                                        ; import kind
0000041: 00                                        ; import signature index
; import header 1
0000042: 06                                        ; string length
0000043: 7374 7269 6e67                           string  ; import module name
0000049: 03                                        ; string length
000004a: 6164 64                                  add  ; import field name
000004d: 00                                        ; import kind
000004e: 01                                        ; import signature index
; import header 2
000004f: 06                                        ; string length
0000050: 7374 7269 6e67                           string  ; import module name
0000056: 06                                        ; string length
0000057: 6c65 6e67 7468                           length  ; import field name
000005d: 00                                        ; import kind
000005e: 02                                        ; import signature index
; import header 3
000005f: 06                                        ; string length
0000060: 7374 7269 6e67                           string  ; import module name
0000066: 07                                        ; string length
0000067: 696e 6465 784f 66                        indexOf  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 4
0000070: 07                                        ; string length
0000071: 636f 6e73 6f6c 65                        console  ; import module name
0000078: 03                                        ; string length
0000079: 6c6f 67                                  log  ; import field name
000007c: 00                                        ; import kind
000007d: 03                                        ; import signature index
; import header 5
000007e: 06                                        ; string length
000007f: 7374 7269 6e67                           string  ; import module name
0000085: 08                                        ; string length
0000086: 746f 5374 7269 6e67                      toString  ; import field name
000008e: 00                                        ; import kind
000008f: 04                                        ; import signature index
; import header 6
0000090: 06                                        ; string length
0000091: 7374 7269 6e67                           string  ; import module name
0000097: 08                                        ; string length
0000098: 746f 5374 7269 6e67                      toString  ; import field name
00000a0: 00                                        ; import kind
00000a1: 02                                        ; import signature index
; import header 7
00000a2: 03                                        ; string length
00000a3: 656e 76                                  env  ; import module name
00000a6: 0a                                        ; string length
00000a7: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b1: 02                                        ; import kind
00000b2: 00                                        ; limits: flags
00000b3: 01                                        ; limits: initial
; move data: [30, b4) -> [31, b5)
000002f: 8401                                      ; FIXUP section size
; section "Function" (3)
00000b5: 03                                        ; section code
00000b6: 00                                        ; section size (guess)
00000b7: 03                                        ; num functions
00000b8: 05                                        ; function 0 signature index
00000b9: 06                                        ; function 1 signature index
00000ba: 05                                        ; function 2 signature index
00000b6: 04                                        ; FIXUP section size
; section "Global" (6)
00000bb: 06                                        ; section code
00000bc: 00                                        ; section size (guess)
00000bd: 01                                        ; num globals
00000be: 7f                                        ; i32
00000bf: 01                                        ; global mutability
00000c0: 41                                        ; i32.const
00000c1: 9d02                                      ; i32 literal
00000c3: 0b                                        ; end
00000bc: 07                                        ; FIXUP section size
; section "Export" (7)
00000c4: 07                                        ; section code
00000c5: 00                                        ; section size (guess)
00000c6: 01                                        ; num exports
00000c7: 0c                                        ; string length
00000c8: 5275 6e74 6573 742e 7465 7374            Runtest.test  ; export name
00000d4: 00                                        ; export kind
00000d5: 07                                        ; export func index
00000c5: 10                                        ; FIXUP section size
; section "Start" (8)
00000d6: 08                                        ; section code
00000d7: 00                                        ; section size (guess)
00000d8: 09                                        ; start func index
00000d7: 01                                        ; FIXUP section size
; section "Code" (10)
00000d9: 0a                                        ; section code
00000da: 00                                        ; section size (guess)
00000db: 03                                        ; num functions
; function body 0
00000dc: 00                                        ; func body size (guess)
00000dd: 01                                        ; local decl count
00000de: 02                                        ; local type count
00000df: 7f                                        ; i32
00000e0: 23                                        ; global.get
00000e1: 00                                        ; global index
00000e2: 41                                        ; i32.const
00000e3: 0c                                        ; i32 literal
00000e4: 6a                                        ; i32.add
00000e5: 41                                        ; i32.const
00000e6: a18d 06                                   ; i32 literal
00000e9: b7                                        ; f64.convert_i32_s
00000ea: 39                                        ; f64.store
00000eb: 03                                        ; alignment
00000ec: 00                                        ; store offset
00000ed: 23                                        ; global.get
00000ee: 00                                        ; global index
00000ef: 41                                        ; i32.const
00000f0: 04                                        ; i32 literal
00000f1: 6a                                        ; i32.add
00000f2: 41                                        ; i32.const
00000f3: 00                                        ; i32 literal
00000f4: 41                                        ; i32.const
00000f5: 01                                        ; i32 literal
00000f6: 6b                                        ; i32.sub
00000f7: 36                                        ; i32.store
00000f8: 02                                        ; alignment
00000f9: 00                                        ; store offset
00000fa: 23                                        ; global.get
00000fb: 00                                        ; global index
00000fc: 41                                        ; i32.const
00000fd: 08                                        ; i32 literal
00000fe: 6a                                        ; i32.add
00000ff: 44                                        ; f64.const
0000100: f90f e9b7 af03 f03f                       ; f64 literal
0000108: aa                                        ; i32.trunc_f64_s
0000109: 36                                        ; i32.store
000010a: 02                                        ; alignment
000010b: 00                                        ; store offset
000010c: 23                                        ; global.get
000010d: 00                                        ; global index
000010e: 41                                        ; i32.const
000010f: 00                                        ; i32 literal
0000110: 6a                                        ; i32.add
0000111: 41                                        ; i32.const
0000112: 8002                                      ; i32 literal
0000114: 36                                        ; i32.store
0000115: 02                                        ; alignment
0000116: 00                                        ; store offset
0000117: 23                                        ; global.get
0000118: 00                                        ; global index
0000119: 41                                        ; i32.const
000011a: 14                                        ; i32 literal
000011b: 6a                                        ; i32.add
000011c: 24                                        ; global.set
000011d: 00                                        ; global index
000011e: 23                                        ; global.get
000011f: 00                                        ; global index
0000120: 21                                        ; local.set
0000121: 00                                        ; local index
0000122: 20                                        ; local.get
0000123: 00                                        ; local index
0000124: 41                                        ; i32.const
0000125: 0c                                        ; i32 literal
0000126: 6a                                        ; i32.add
0000127: 2b                                        ; f64.load
0000128: 03                                        ; alignment
0000129: 00                                        ; load offset
000012a: 10                                        ; call
000012b: 05                                        ; function index
000012c: 10                                        ; call
000012d: 04                                        ; function index
000012e: 42                                        ; i64.const
000012f: 9f8d 06                                   ; i64 literal
0000132: 10                                        ; call
0000133: 08                                        ; function index
0000134: 21                                        ; local.set
0000135: 01                                        ; local index
0000136: 20                                        ; local.get
0000137: 01                                        ; local index
0000138: 41                                        ; i32.const
0000139: 08                                        ; i32 literal
000013a: 6a                                        ; i32.add
000013b: 28                                        ; i32.load
000013c: 02                                        ; alignment
000013d: 00                                        ; load offset
000013e: 10                                        ; call
000013f: 06                                        ; function index
0000140: 10                                        ; call
0000141: 04                                        ; function index
0000142: 0b                                        ; end
00000dc: 66                                        ; FIXUP func body size
; function body 1
0000143: 00                                        ; func body size (guess)
0000144: 00                                        ; local decl count
0000145: 23                                        ; global.get
0000146: 00                                        ; global index
0000147: 41                                        ; i32.const
0000148: 00                                        ; i32 literal
0000149: 6a                                        ; i32.add
000014a: 41                                        ; i32.const
000014b: 9102                                      ; i32 literal
000014d: 36                                        ; i32.store
000014e: 02                                        ; alignment
000014f: 00                                        ; store offset
0000150: 23                                        ; global.get
0000151: 00                                        ; global index
0000152: 41                                        ; i32.const
0000153: 0c                                        ; i32 literal
0000154: 6a                                        ; i32.add
0000155: 20                                        ; local.get
0000156: 00                                        ; local index
0000157: b9                                        ; f64.convert_i64_s
0000158: 39                                        ; f64.store
0000159: 03                                        ; alignment
000015a: 00                                        ; store offset
000015b: 23                                        ; global.get
000015c: 00                                        ; global index
000015d: 41                                        ; i32.const
000015e: 04                                        ; i32 literal
000015f: 6a                                        ; i32.add
0000160: 20                                        ; local.get
0000161: 00                                        ; local index
0000162: 42                                        ; i64.const
0000163: 01                                        ; i64 literal
0000164: 7c                                        ; i64.add
0000165: a7                                        ; i32.wrap_i64
0000166: 36                                        ; i32.store
0000167: 02                                        ; alignment
0000168: 00                                        ; store offset
0000169: 23                                        ; global.get
000016a: 00                                        ; global index
000016b: 41                                        ; i32.const
000016c: 14                                        ; i32 literal
000016d: 6a                                        ; i32.add
000016e: 24                                        ; global.set
000016f: 00                                        ; global index
0000170: 23                                        ; global.get
0000171: 00                                        ; global index
0000172: 0f                                        ; return
0000173: 0b                                        ; end
0000143: 30                                        ; FIXUP func body size
; function body 2
0000174: 00                                        ; func body size (guess)
0000175: 00                                        ; local decl count
0000176: 0b                                        ; end
0000174: 02                                        ; FIXUP func body size
; move data: [db, 177) -> [dc, 178)
00000da: 9c01                                      ; FIXUP section size
; section "Data" (11)
0000178: 0b                                        ; section code
0000179: 00                                        ; section size (guess)
000017a: 04                                        ; num data segments
; data segment header 0
000017b: 00                                      
000017c: 41                                        ; i32.const
000017d: 01                                        ; i32 literal
000017e: 0b                                        ; end
000017f: 06                                        ; data segment size
; data segment data 0
0000180: 3535 3535 3500                            ; data segment data
; data segment header 1
0000186: 00                                      
0000187: 41                                        ; i32.const
0000188: 8002                                      ; i32 literal
000018a: 0b                                        ; end
000018b: 11                                        ; data segment size
; data segment data 1
000018c: 7b35 352c 2035 352c 2035 3535 2c20 357d 
000019c: 00                                        ; data segment data
; data segment header 2
000019d: 00                                      
000019e: 41                                        ; i32.const
000019f: 9102                                      ; i32 literal
00001a1: 0b                                        ; end
00001a2: 0c                                        ; data segment size
; data segment data 2
00001a3: 5858 5858 5858 5858 5858 2100             ; data segment data
; data segment header 3
00001af: 00                                      
00001b0: 41                                        ; i32.const
00001b1: 07                                        ; i32 literal
00001b2: 0b                                        ; end
00001b3: f901                                      ; data segment size
; data segment data 3
00001b5: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
00001c5: 4f6a 6373 496b 4e73 5958 4e7a 496a 6f69 
00001d5: 5132 6c79 5932 786c 5457 396b 5a57 7769 
00001e5: 4c43 4a47 6157 5673 5a48 4d69 4f6e 7369 
00001f5: 626d 396b 5a55 3568 6257 5569 4f6e 7369 
0000205: 5a32 5675 5a58 4a70 5979 4936 5731 3139 
0000215: 4c43 4a34 496a 7037 496d 646c 626d 5679 
0000225: 6157 4d69 4f6c 7464 6653 7769 6553 4936 
0000235: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000245: 5858 3073 496e 4a68 5a47 6c31 6379 4936 
0000255: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000265: 5858 3139 4c43 4a4e 5a58 526f 6232 527a 
0000275: 496a 7037 6653 7769 546d 4674 5a58 4e77 
0000285: 5957 4e6c 496a 6f69 6257 396b 6457 786c 
0000295: 5132 3975 6447 4670 626d 5679 4c6d 3568 
00002a5: 6257 5578 496e 303d 00                    ; data segment data
; move data: [17a, 2ae) -> [17b, 2af)
0000179: b402                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0124 0760 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 017f 
0000020: 0060 017c 017f 6000 0060 017e 017f 0284 
0000030: 0108 0673 7472 696e 6707 7265 706c 6163 
0000040: 6500 0006 7374 7269 6e67 0361 6464 0001 
0000050: 0673 7472 696e 6706 6c65 6e67 7468 0002 
0000060: 0673 7472 696e 6707 696e 6465 784f 6600 
0000070: 0107 636f 6e73 6f6c 6503 6c6f 6700 0306 
0000080: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000090: 0406 7374 7269 6e67 0874 6f53 7472 696e 
00000a0: 6700 0203 656e 760a 6279 7465 6368 756e 
00000b0: 6b73 0200 0103 0403 0506 0506 0701 7f01 
00000c0: 419d 020b 0710 010c 5275 6e74 6573 742e 
00000d0: 7465 7374 0007 0801 090a 9c01 0366 0102 
00000e0: 7f23 0041 0c6a 41a1 8d06 b739 0300 2300 
00000f0: 4104 6a41 0041 016b 3602 0023 0041 086a 
0000100: 44f9 0fe9 b7af 03f0 3faa 3602 0023 0041 
0000110: 006a 4180 0236 0200 2300 4114 6a24 0023 
0000120: 0021 0020 0041 0c6a 2b03 0010 0510 0442 
0000130: 9f8d 0610 0821 0120 0141 086a 2802 0010 
0000140: 0610 040b 3000 2300 4100 6a41 9102 3602 
0000150: 0023 0041 0c6a 2000 b939 0300 2300 4104 
0000160: 6a20 0042 017c a736 0200 2300 4114 6a24 
0000170: 0023 000f 0b02 000b 0bb4 0204 0041 010b 
0000180: 0635 3535 3535 0000 4180 020b 117b 3535 
0000190: 2c20 3535 2c20 3535 352c 2035 7d00 0041 
00001a0: 9102 0b0c 5858 5858 5858 5858 5858 2100 
00001b0: 0041 070b f901 6579 4a74 5a57 3176 636e 
00001c0: 6c51 6448 4969 4f6a 6373 496b 4e73 5958 
00001d0: 4e7a 496a 6f69 5132 6c79 5932 786c 5457 
00001e0: 396b 5a57 7769 4c43 4a47 6157 5673 5a48 
00001f0: 4d69 4f6e 7369 626d 396b 5a55 3568 6257 
0000200: 5569 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000210: 4936 5731 3139 4c43 4a34 496a 7037 496d 
0000220: 646c 626d 5679 6157 4d69 4f6c 7464 6653 
0000230: 7769 6553 4936 6579 4a6e 5a57 356c 636d 
0000240: 6c6a 496a 7062 5858 3073 496e 4a68 5a47 
0000250: 6c31 6379 4936 6579 4a6e 5a57 356c 636d 
0000260: 6c6a 496a 7062 5858 3139 4c43 4a4e 5a58 
0000270: 526f 6232 527a 496a 7037 6653 7769 546d 
0000280: 4674 5a58 4e77 5957 4e6c 496a 6f69 6257 
0000290: 396b 6457 786c 5132 3975 6447 4670 626d 
00002a0: 5679 4c6d 3568 6257 5578 496e 303d 00   
