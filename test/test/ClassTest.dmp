0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7f                                        ; i32
0000020: 00                                        ; num results
; type 4
0000021: 60                                        ; func
0000022: 01                                        ; num params
0000023: 7c                                        ; f64
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 00                                        ; num params
0000028: 00                                        ; num results
; type 6
0000029: 60                                        ; func
000002a: 01                                        ; num params
000002b: 7e                                        ; i64
000002c: 01                                        ; num results
000002d: 7f                                        ; i32
0000009: 24                                        ; FIXUP section size
; section "Import" (2)
000002e: 02                                        ; section code
000002f: 00                                        ; section size (guess)
0000030: 08                                        ; num imports
; import header 0
0000031: 06                                        ; string length
0000032: 7374 7269 6e67                           string  ; import module name
0000038: 07                                        ; string length
0000039: 7265 706c 6163 65                        replace  ; import field name
0000040: 00                                        ; import kind
0000041: 00                                        ; import signature index
; import header 1
0000042: 06                                        ; string length
0000043: 7374 7269 6e67                           string  ; import module name
0000049: 03                                        ; string length
000004a: 6164 64                                  add  ; import field name
000004d: 00                                        ; import kind
000004e: 01                                        ; import signature index
; import header 2
000004f: 06                                        ; string length
0000050: 7374 7269 6e67                           string  ; import module name
0000056: 06                                        ; string length
0000057: 6c65 6e67 7468                           length  ; import field name
000005d: 00                                        ; import kind
000005e: 02                                        ; import signature index
; import header 3
000005f: 06                                        ; string length
0000060: 7374 7269 6e67                           string  ; import module name
0000066: 07                                        ; string length
0000067: 696e 6465 784f 66                        indexOf  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 4
0000070: 07                                        ; string length
0000071: 636f 6e73 6f6c 65                        console  ; import module name
0000078: 03                                        ; string length
0000079: 6c6f 67                                  log  ; import field name
000007c: 00                                        ; import kind
000007d: 03                                        ; import signature index
; import header 5
000007e: 06                                        ; string length
000007f: 7374 7269 6e67                           string  ; import module name
0000085: 08                                        ; string length
0000086: 746f 5374 7269 6e67                      toString  ; import field name
000008e: 00                                        ; import kind
000008f: 04                                        ; import signature index
; import header 6
0000090: 06                                        ; string length
0000091: 7374 7269 6e67                           string  ; import module name
0000097: 08                                        ; string length
0000098: 746f 5374 7269 6e67                      toString  ; import field name
00000a0: 00                                        ; import kind
00000a1: 02                                        ; import signature index
; import header 7
00000a2: 03                                        ; string length
00000a3: 656e 76                                  env  ; import module name
00000a6: 0a                                        ; string length
00000a7: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b1: 02                                        ; import kind
00000b2: 00                                        ; limits: flags
00000b3: 01                                        ; limits: initial
; move data: [30, b4) -> [31, b5)
000002f: 8401                                      ; FIXUP section size
; section "Function" (3)
00000b5: 03                                        ; section code
00000b6: 00                                        ; section size (guess)
00000b7: 03                                        ; num functions
00000b8: 05                                        ; function 0 signature index
00000b9: 06                                        ; function 1 signature index
00000ba: 05                                        ; function 2 signature index
00000b6: 04                                        ; FIXUP section size
; section "Global" (6)
00000bb: 06                                        ; section code
00000bc: 00                                        ; section size (guess)
00000bd: 01                                        ; num globals
00000be: 7f                                        ; i32
00000bf: 01                                        ; global mutability
00000c0: 41                                        ; i32.const
00000c1: f002                                      ; i32 literal
00000c3: 0b                                        ; end
00000bc: 07                                        ; FIXUP section size
; section "Export" (7)
00000c4: 07                                        ; section code
00000c5: 00                                        ; section size (guess)
00000c6: 01                                        ; num exports
00000c7: 0c                                        ; string length
00000c8: 5275 6e74 6573 742e 7465 7374            Runtest.test  ; export name
00000d4: 00                                        ; export kind
00000d5: 07                                        ; export func index
00000c5: 10                                        ; FIXUP section size
; section "Start" (8)
00000d6: 08                                        ; section code
00000d7: 00                                        ; section size (guess)
00000d8: 09                                        ; start func index
00000d7: 01                                        ; FIXUP section size
; section "Code" (10)
00000d9: 0a                                        ; section code
00000da: 00                                        ; section size (guess)
00000db: 03                                        ; num functions
; function body 0
00000dc: 00                                        ; func body size (guess)
00000dd: 01                                        ; local decl count
00000de: 02                                        ; local type count
00000df: 7f                                        ; i32
00000e0: 23                                        ; global.get
00000e1: 00                                        ; global index
00000e2: 41                                        ; i32.const
00000e3: 0c                                        ; i32 literal
00000e4: 6a                                        ; i32.add
00000e5: 41                                        ; i32.const
00000e6: a18d 06                                   ; i32 literal
00000e9: b7                                        ; f64.convert_i32_s
00000ea: 39                                        ; f64.store
00000eb: 03                                        ; alignment
00000ec: 00                                        ; store offset
00000ed: 23                                        ; global.get
00000ee: 00                                        ; global index
00000ef: 41                                        ; i32.const
00000f0: 04                                        ; i32 literal
00000f1: 6a                                        ; i32.add
00000f2: 41                                        ; i32.const
00000f3: 00                                        ; i32 literal
00000f4: 41                                        ; i32.const
00000f5: 01                                        ; i32 literal
00000f6: 6b                                        ; i32.sub
00000f7: 36                                        ; i32.store
00000f8: 02                                        ; alignment
00000f9: 00                                        ; store offset
00000fa: 23                                        ; global.get
00000fb: 00                                        ; global index
00000fc: 41                                        ; i32.const
00000fd: 08                                        ; i32 literal
00000fe: 6a                                        ; i32.add
00000ff: 44                                        ; f64.const
0000100: f90f e9b7 af03 f03f                       ; f64 literal
0000108: aa                                        ; i32.trunc_f64_s
0000109: 36                                        ; i32.store
000010a: 02                                        ; alignment
000010b: 00                                        ; store offset
000010c: 23                                        ; global.get
000010d: 00                                        ; global index
000010e: 41                                        ; i32.const
000010f: 00                                        ; i32 literal
0000110: 6a                                        ; i32.add
0000111: 41                                        ; i32.const
0000112: 8002                                      ; i32 literal
0000114: 36                                        ; i32.store
0000115: 02                                        ; alignment
0000116: 00                                        ; store offset
0000117: 23                                        ; global.get
0000118: 00                                        ; global index
0000119: 41                                        ; i32.const
000011a: 14                                        ; i32 literal
000011b: 6a                                        ; i32.add
000011c: 24                                        ; global.set
000011d: 00                                        ; global index
000011e: 23                                        ; global.get
000011f: 00                                        ; global index
0000120: 21                                        ; local.set
0000121: 00                                        ; local index
0000122: 20                                        ; local.get
0000123: 00                                        ; local index
0000124: 41                                        ; i32.const
0000125: 0c                                        ; i32 literal
0000126: 6a                                        ; i32.add
0000127: 2b                                        ; f64.load
0000128: 03                                        ; alignment
0000129: 00                                        ; load offset
000012a: 10                                        ; call
000012b: 05                                        ; function index
000012c: 10                                        ; call
000012d: 04                                        ; function index
000012e: 42                                        ; i64.const
000012f: 9f8d 06                                   ; i64 literal
0000132: 10                                        ; call
0000133: 08                                        ; function index
0000134: 21                                        ; local.set
0000135: 01                                        ; local index
0000136: 41                                        ; i32.const
0000137: 9102                                      ; i32 literal
0000139: 20                                        ; local.get
000013a: 01                                        ; local index
000013b: 41                                        ; i32.const
000013c: 08                                        ; i32 literal
000013d: 6a                                        ; i32.add
000013e: 28                                        ; i32.load
000013f: 02                                        ; alignment
0000140: 00                                        ; load offset
0000141: 10                                        ; call
0000142: 06                                        ; function index
0000143: 10                                        ; call
0000144: 01                                        ; function index
0000145: 10                                        ; call
0000146: 04                                        ; function index
0000147: 41                                        ; i32.const
0000148: 9702                                      ; i32 literal
000014a: 20                                        ; local.get
000014b: 00                                        ; local index
000014c: 41                                        ; i32.const
000014d: 0c                                        ; i32 literal
000014e: 6a                                        ; i32.add
000014f: 2b                                        ; f64.load
0000150: 03                                        ; alignment
0000151: 00                                        ; load offset
0000152: 20                                        ; local.get
0000153: 01                                        ; local index
0000154: 41                                        ; i32.const
0000155: 0c                                        ; i32 literal
0000156: 6a                                        ; i32.add
0000157: 2b                                        ; f64.load
0000158: 03                                        ; alignment
0000159: 00                                        ; load offset
000015a: a0                                        ; f64.add
000015b: 10                                        ; call
000015c: 05                                        ; function index
000015d: 10                                        ; call
000015e: 01                                        ; function index
000015f: 10                                        ; call
0000160: 04                                        ; function index
0000161: 20                                        ; local.get
0000162: 01                                        ; local index
0000163: 41                                        ; i32.const
0000164: 08                                        ; i32 literal
0000165: 6a                                        ; i32.add
0000166: 44                                        ; f64.const
0000167: 0000 0000 0000 0000                       ; f64 literal
000016f: 44                                        ; f64.const
0000170: 0e2d b29d efff 5840                       ; f64 literal
0000178: a1                                        ; f64.sub
0000179: aa                                        ; i32.trunc_f64_s
000017a: 36                                        ; i32.store
000017b: 02                                        ; alignment
000017c: 00                                        ; store offset
000017d: 41                                        ; i32.const
000017e: d102                                      ; i32 literal
0000180: 20                                        ; local.get
0000181: 01                                        ; local index
0000182: 41                                        ; i32.const
0000183: 08                                        ; i32 literal
0000184: 6a                                        ; i32.add
0000185: 28                                        ; i32.load
0000186: 02                                        ; alignment
0000187: 00                                        ; load offset
0000188: 10                                        ; call
0000189: 06                                        ; function index
000018a: 10                                        ; call
000018b: 01                                        ; function index
000018c: 10                                        ; call
000018d: 04                                        ; function index
000018e: 0b                                        ; end
; move data: [dd, 18f) -> [de, 190)
00000dc: b201                                      ; FIXUP func body size
; function body 1
0000190: 00                                        ; func body size (guess)
0000191: 00                                        ; local decl count
0000192: 23                                        ; global.get
0000193: 00                                        ; global index
0000194: 41                                        ; i32.const
0000195: 00                                        ; i32 literal
0000196: 6a                                        ; i32.add
0000197: 41                                        ; i32.const
0000198: e402                                      ; i32 literal
000019a: 36                                        ; i32.store
000019b: 02                                        ; alignment
000019c: 00                                        ; store offset
000019d: 23                                        ; global.get
000019e: 00                                        ; global index
000019f: 41                                        ; i32.const
00001a0: 0c                                        ; i32 literal
00001a1: 6a                                        ; i32.add
00001a2: 20                                        ; local.get
00001a3: 00                                        ; local index
00001a4: b9                                        ; f64.convert_i64_s
00001a5: 39                                        ; f64.store
00001a6: 03                                        ; alignment
00001a7: 00                                        ; store offset
00001a8: 23                                        ; global.get
00001a9: 00                                        ; global index
00001aa: 41                                        ; i32.const
00001ab: 04                                        ; i32 literal
00001ac: 6a                                        ; i32.add
00001ad: 20                                        ; local.get
00001ae: 00                                        ; local index
00001af: 42                                        ; i64.const
00001b0: 01                                        ; i64 literal
00001b1: 7c                                        ; i64.add
00001b2: a7                                        ; i32.wrap_i64
00001b3: 36                                        ; i32.store
00001b4: 02                                        ; alignment
00001b5: 00                                        ; store offset
00001b6: 23                                        ; global.get
00001b7: 00                                        ; global index
00001b8: 41                                        ; i32.const
00001b9: 14                                        ; i32 literal
00001ba: 6a                                        ; i32.add
00001bb: 24                                        ; global.set
00001bc: 00                                        ; global index
00001bd: 23                                        ; global.get
00001be: 00                                        ; global index
00001bf: 0f                                        ; return
00001c0: 0b                                        ; end
0000190: 30                                        ; FIXUP func body size
; function body 2
00001c1: 00                                        ; func body size (guess)
00001c2: 00                                        ; local decl count
00001c3: 0b                                        ; end
00001c1: 02                                        ; FIXUP func body size
; move data: [db, 1c4) -> [dc, 1c5)
00000da: e901                                      ; FIXUP section size
; section "Data" (11)
00001c5: 0b                                        ; section code
00001c6: 00                                        ; section size (guess)
00001c7: 07                                        ; num data segments
; data segment header 0
00001c8: 00                                      
00001c9: 41                                        ; i32.const
00001ca: 01                                        ; i32 literal
00001cb: 0b                                        ; end
00001cc: 06                                        ; data segment size
; data segment data 0
00001cd: 3535 3535 3500                            ; data segment data
; data segment header 1
00001d3: 00                                      
00001d4: 41                                        ; i32.const
00001d5: 8002                                      ; i32 literal
00001d7: 0b                                        ; end
00001d8: 11                                        ; data segment size
; data segment data 1
00001d9: 7b35 352c 2035 352c 2035 3535 2c20 357d 
00001e9: 00                                        ; data segment data
; data segment header 2
00001ea: 00                                      
00001eb: 41                                        ; i32.const
00001ec: 9102                                      ; i32 literal
00001ee: 0b                                        ; end
00001ef: 06                                        ; data segment size
; data segment data 2
00001f0: 7920 6973 2000                            ; data segment data
; data segment header 3
00001f6: 00                                      
00001f7: 41                                        ; i32.const
00001f8: 9702                                      ; i32 literal
00001fa: 0b                                        ; end
00001fb: 3a                                        ; data segment size
; data segment data 3
00001fc: 6d69 6e20 6469 7374 616e 6365 206f 6620 
000020c: 7477 6f20 6369 7263 6c65 2063 656e 7465 
000021c: 7220 6973 2028 612e 7261 6469 7573 2b62 
000022c: 2e72 6164 6975 7329 2000                  ; data segment data
; data segment header 4
0000236: 00                                      
0000237: 41                                        ; i32.const
0000238: d102                                      ; i32 literal
000023a: 0b                                        ; end
000023b: 13                                        ; data segment size
; data segment data 4
000023c: 7920 6166 7465 7220 7570 6461 7465 2069 
000024c: 7320 00                                   ; data segment data
; data segment header 5
000024f: 00                                      
0000250: 41                                        ; i32.const
0000251: e402                                      ; i32 literal
0000253: 0b                                        ; end
0000254: 0c                                        ; data segment size
; data segment data 5
0000255: 5858 5858 5858 5858 5858 2100             ; data segment data
; data segment header 6
0000261: 00                                      
0000262: 41                                        ; i32.const
0000263: 07                                        ; i32 literal
0000264: 0b                                        ; end
0000265: f901                                      ; data segment size
; data segment data 6
0000267: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
0000277: 4f6a 6373 496b 4e73 5958 4e7a 496a 6f69 
0000287: 5132 6c79 5932 786c 5457 396b 5a57 7769 
0000297: 4c43 4a47 6157 5673 5a48 4d69 4f6e 7369 
00002a7: 626d 396b 5a55 3568 6257 5569 4f6e 7369 
00002b7: 5a32 5675 5a58 4a70 5979 4936 5731 3139 
00002c7: 4c43 4a34 496a 7037 496d 646c 626d 5679 
00002d7: 6157 4d69 4f6c 7464 6653 7769 6553 4936 
00002e7: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
00002f7: 5858 3073 496e 4a68 5a47 6c31 6379 4936 
0000307: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000317: 5858 3139 4c43 4a4e 5a58 526f 6232 527a 
0000327: 496a 7037 6653 7769 546d 4674 5a58 4e77 
0000337: 5957 4e6c 496a 6f69 6257 396b 6457 786c 
0000347: 5132 3975 6447 4670 626d 5679 4c6d 3568 
0000357: 6257 5578 496e 303d 00                    ; data segment data
; move data: [1c7, 360) -> [1c8, 361)
00001c6: 9903                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0124 0760 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 017f 
0000020: 0060 017c 017f 6000 0060 017e 017f 0284 
0000030: 0108 0673 7472 696e 6707 7265 706c 6163 
0000040: 6500 0006 7374 7269 6e67 0361 6464 0001 
0000050: 0673 7472 696e 6706 6c65 6e67 7468 0002 
0000060: 0673 7472 696e 6707 696e 6465 784f 6600 
0000070: 0107 636f 6e73 6f6c 6503 6c6f 6700 0306 
0000080: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000090: 0406 7374 7269 6e67 0874 6f53 7472 696e 
00000a0: 6700 0203 656e 760a 6279 7465 6368 756e 
00000b0: 6b73 0200 0103 0403 0506 0506 0701 7f01 
00000c0: 41f0 020b 0710 010c 5275 6e74 6573 742e 
00000d0: 7465 7374 0007 0801 090a e901 03b2 0101 
00000e0: 027f 2300 410c 6a41 a18d 06b7 3903 0023 
00000f0: 0041 046a 4100 4101 6b36 0200 2300 4108 
0000100: 6a44 f90f e9b7 af03 f03f aa36 0200 2300 
0000110: 4100 6a41 8002 3602 0023 0041 146a 2400 
0000120: 2300 2100 2000 410c 6a2b 0300 1005 1004 
0000130: 429f 8d06 1008 2101 4191 0220 0141 086a 
0000140: 2802 0010 0610 0110 0441 9702 2000 410c 
0000150: 6a2b 0300 2001 410c 6a2b 0300 a010 0510 
0000160: 0110 0420 0141 086a 4400 0000 0000 0000 
0000170: 0044 0e2d b29d efff 5840 a1aa 3602 0041 
0000180: d102 2001 4108 6a28 0200 1006 1001 1004 
0000190: 0b30 0023 0041 006a 41e4 0236 0200 2300 
00001a0: 410c 6a20 00b9 3903 0023 0041 046a 2000 
00001b0: 4201 7ca7 3602 0023 0041 146a 2400 2300 
00001c0: 0f0b 0200 0b0b 9903 0700 4101 0b06 3535 
00001d0: 3535 3500 0041 8002 0b11 7b35 352c 2035 
00001e0: 352c 2035 3535 2c20 357d 0000 4191 020b 
00001f0: 0679 2069 7320 0000 4197 020b 3a6d 696e 
0000200: 2064 6973 7461 6e63 6520 6f66 2074 776f 
0000210: 2063 6972 636c 6520 6365 6e74 6572 2069 
0000220: 7320 2861 2e72 6164 6975 732b 622e 7261 
0000230: 6469 7573 2920 0000 41d1 020b 1379 2061 
0000240: 6674 6572 2075 7064 6174 6520 6973 2000 
0000250: 0041 e402 0b0c 5858 5858 5858 5858 5858 
0000260: 2100 0041 070b f901 6579 4a74 5a57 3176 
0000270: 636e 6c51 6448 4969 4f6a 6373 496b 4e73 
0000280: 5958 4e7a 496a 6f69 5132 6c79 5932 786c 
0000290: 5457 396b 5a57 7769 4c43 4a47 6157 5673 
00002a0: 5a48 4d69 4f6e 7369 626d 396b 5a55 3568 
00002b0: 6257 5569 4f6e 7369 5a32 5675 5a58 4a70 
00002c0: 5979 4936 5731 3139 4c43 4a34 496a 7037 
00002d0: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
00002e0: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
00002f0: 636d 6c6a 496a 7062 5858 3073 496e 4a68 
0000300: 5a47 6c31 6379 4936 6579 4a6e 5a57 356c 
0000310: 636d 6c6a 496a 7062 5858 3139 4c43 4a4e 
0000320: 5a58 526f 6232 527a 496a 7037 6653 7769 
0000330: 546d 4674 5a58 4e77 5957 4e6c 496a 6f69 
0000340: 6257 396b 6457 786c 5132 3975 6447 4670 
0000350: 626d 5679 4c6d 3568 6257 5578 496e 303d 
0000360: 00                                      
