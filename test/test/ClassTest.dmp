0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7f                                        ; i32
0000020: 00                                        ; num results
; type 4
0000021: 60                                        ; func
0000022: 01                                        ; num params
0000023: 7c                                        ; f64
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 00                                        ; num params
0000028: 00                                        ; num results
; type 6
0000029: 60                                        ; func
000002a: 01                                        ; num params
000002b: 7e                                        ; i64
000002c: 01                                        ; num results
000002d: 7f                                        ; i32
0000009: 24                                        ; FIXUP section size
; section "Import" (2)
000002e: 02                                        ; section code
000002f: 00                                        ; section size (guess)
0000030: 08                                        ; num imports
; import header 0
0000031: 06                                        ; string length
0000032: 7374 7269 6e67                           string  ; import module name
0000038: 07                                        ; string length
0000039: 7265 706c 6163 65                        replace  ; import field name
0000040: 00                                        ; import kind
0000041: 00                                        ; import signature index
; import header 1
0000042: 06                                        ; string length
0000043: 7374 7269 6e67                           string  ; import module name
0000049: 03                                        ; string length
000004a: 6164 64                                  add  ; import field name
000004d: 00                                        ; import kind
000004e: 01                                        ; import signature index
; import header 2
000004f: 06                                        ; string length
0000050: 7374 7269 6e67                           string  ; import module name
0000056: 06                                        ; string length
0000057: 6c65 6e67 7468                           length  ; import field name
000005d: 00                                        ; import kind
000005e: 02                                        ; import signature index
; import header 3
000005f: 06                                        ; string length
0000060: 7374 7269 6e67                           string  ; import module name
0000066: 07                                        ; string length
0000067: 696e 6465 784f 66                        indexOf  ; import field name
000006e: 00                                        ; import kind
000006f: 01                                        ; import signature index
; import header 4
0000070: 07                                        ; string length
0000071: 636f 6e73 6f6c 65                        console  ; import module name
0000078: 03                                        ; string length
0000079: 6c6f 67                                  log  ; import field name
000007c: 00                                        ; import kind
000007d: 03                                        ; import signature index
; import header 5
000007e: 06                                        ; string length
000007f: 7374 7269 6e67                           string  ; import module name
0000085: 08                                        ; string length
0000086: 746f 5374 7269 6e67                      toString  ; import field name
000008e: 00                                        ; import kind
000008f: 04                                        ; import signature index
; import header 6
0000090: 06                                        ; string length
0000091: 7374 7269 6e67                           string  ; import module name
0000097: 08                                        ; string length
0000098: 746f 5374 7269 6e67                      toString  ; import field name
00000a0: 00                                        ; import kind
00000a1: 02                                        ; import signature index
; import header 7
00000a2: 03                                        ; string length
00000a3: 656e 76                                  env  ; import module name
00000a6: 0a                                        ; string length
00000a7: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000b1: 02                                        ; import kind
00000b2: 00                                        ; limits: flags
00000b3: 01                                        ; limits: initial
; move data: [30, b4) -> [31, b5)
000002f: 8401                                      ; FIXUP section size
; section "Function" (3)
00000b5: 03                                        ; section code
00000b6: 00                                        ; section size (guess)
00000b7: 03                                        ; num functions
00000b8: 05                                        ; function 0 signature index
00000b9: 06                                        ; function 1 signature index
00000ba: 05                                        ; function 2 signature index
00000b6: 04                                        ; FIXUP section size
; section "Global" (6)
00000bb: 06                                        ; section code
00000bc: 00                                        ; section size (guess)
00000bd: 02                                        ; num globals
00000be: 7f                                        ; i32
00000bf: 01                                        ; global mutability
00000c0: 41                                        ; i32.const
00000c1: a403                                      ; i32 literal
00000c3: 0b                                        ; end
00000c4: 7f                                        ; i32
00000c5: 01                                        ; global mutability
00000c6: 41                                        ; i32.const
00000c7: 00                                        ; i32 literal
00000c8: 0b                                        ; end
00000bc: 0c                                        ; FIXUP section size
; section "Export" (7)
00000c9: 07                                        ; section code
00000ca: 00                                        ; section size (guess)
00000cb: 01                                        ; num exports
00000cc: 0c                                        ; string length
00000cd: 5275 6e74 6573 742e 7465 7374            Runtest.test  ; export name
00000d9: 00                                        ; export kind
00000da: 07                                        ; export func index
00000ca: 10                                        ; FIXUP section size
; section "Start" (8)
00000db: 08                                        ; section code
00000dc: 00                                        ; section size (guess)
00000dd: 09                                        ; start func index
00000dc: 01                                        ; FIXUP section size
; section "Code" (10)
00000de: 0a                                        ; section code
00000df: 00                                        ; section size (guess)
00000e0: 03                                        ; num functions
; function body 0
00000e1: 00                                        ; func body size (guess)
00000e2: 01                                        ; local decl count
00000e3: 02                                        ; local type count
00000e4: 7f                                        ; i32
00000e5: 23                                        ; global.get
00000e6: 00                                        ; global index
00000e7: 41                                        ; i32.const
00000e8: 0c                                        ; i32 literal
00000e9: 6a                                        ; i32.add
00000ea: 41                                        ; i32.const
00000eb: a18d 06                                   ; i32 literal
00000ee: b7                                        ; f64.convert_i32_s
00000ef: 39                                        ; f64.store
00000f0: 03                                        ; alignment
00000f1: 00                                        ; store offset
00000f2: 23                                        ; global.get
00000f3: 00                                        ; global index
00000f4: 41                                        ; i32.const
00000f5: 04                                        ; i32 literal
00000f6: 6a                                        ; i32.add
00000f7: 41                                        ; i32.const
00000f8: 00                                        ; i32 literal
00000f9: 41                                        ; i32.const
00000fa: 01                                        ; i32 literal
00000fb: 6b                                        ; i32.sub
00000fc: 36                                        ; i32.store
00000fd: 02                                        ; alignment
00000fe: 00                                        ; store offset
00000ff: 23                                        ; global.get
0000100: 00                                        ; global index
0000101: 41                                        ; i32.const
0000102: 08                                        ; i32 literal
0000103: 6a                                        ; i32.add
0000104: 44                                        ; f64.const
0000105: f90f e9b7 af03 f03f                       ; f64 literal
000010d: aa                                        ; i32.trunc_f64_s
000010e: 36                                        ; i32.store
000010f: 02                                        ; alignment
0000110: 00                                        ; store offset
0000111: 23                                        ; global.get
0000112: 00                                        ; global index
0000113: 41                                        ; i32.const
0000114: 00                                        ; i32 literal
0000115: 6a                                        ; i32.add
0000116: 41                                        ; i32.const
0000117: 8002                                      ; i32 literal
0000119: 36                                        ; i32.store
000011a: 02                                        ; alignment
000011b: 00                                        ; store offset
000011c: 23                                        ; global.get
000011d: 00                                        ; global index
000011e: 41                                        ; i32.const
000011f: 14                                        ; i32 literal
0000120: 6a                                        ; i32.add
0000121: 24                                        ; global.set
0000122: 00                                        ; global index
0000123: 23                                        ; global.get
0000124: 00                                        ; global index
0000125: 21                                        ; local.set
0000126: 00                                        ; local index
0000127: 20                                        ; local.get
0000128: 00                                        ; local index
0000129: 41                                        ; i32.const
000012a: 0c                                        ; i32 literal
000012b: 6a                                        ; i32.add
000012c: 2b                                        ; f64.load
000012d: 03                                        ; alignment
000012e: 00                                        ; load offset
000012f: 10                                        ; call
0000130: 05                                        ; function index
0000131: 10                                        ; call
0000132: 04                                        ; function index
0000133: 42                                        ; i64.const
0000134: 9f8d 06                                   ; i64 literal
0000137: 10                                        ; call
0000138: 08                                        ; function index
0000139: 21                                        ; local.set
000013a: 01                                        ; local index
000013b: 41                                        ; i32.const
000013c: 9102                                      ; i32 literal
000013e: 20                                        ; local.get
000013f: 01                                        ; local index
0000140: 41                                        ; i32.const
0000141: 08                                        ; i32 literal
0000142: 6a                                        ; i32.add
0000143: 28                                        ; i32.load
0000144: 02                                        ; alignment
0000145: 00                                        ; load offset
0000146: 10                                        ; call
0000147: 06                                        ; function index
0000148: 10                                        ; call
0000149: 01                                        ; function index
000014a: 10                                        ; call
000014b: 04                                        ; function index
000014c: 41                                        ; i32.const
000014d: 9702                                      ; i32 literal
000014f: 20                                        ; local.get
0000150: 00                                        ; local index
0000151: 41                                        ; i32.const
0000152: 0c                                        ; i32 literal
0000153: 6a                                        ; i32.add
0000154: 2b                                        ; f64.load
0000155: 03                                        ; alignment
0000156: 00                                        ; load offset
0000157: 20                                        ; local.get
0000158: 01                                        ; local index
0000159: 41                                        ; i32.const
000015a: 0c                                        ; i32 literal
000015b: 6a                                        ; i32.add
000015c: 2b                                        ; f64.load
000015d: 03                                        ; alignment
000015e: 00                                        ; load offset
000015f: a0                                        ; f64.add
0000160: 10                                        ; call
0000161: 05                                        ; function index
0000162: 10                                        ; call
0000163: 01                                        ; function index
0000164: 10                                        ; call
0000165: 04                                        ; function index
0000166: 20                                        ; local.get
0000167: 01                                        ; local index
0000168: 41                                        ; i32.const
0000169: 08                                        ; i32 literal
000016a: 6a                                        ; i32.add
000016b: 44                                        ; f64.const
000016c: 0000 0000 0000 0000                       ; f64 literal
0000174: 44                                        ; f64.const
0000175: 0e2d b29d efff 5840                       ; f64 literal
000017d: a1                                        ; f64.sub
000017e: aa                                        ; i32.trunc_f64_s
000017f: 36                                        ; i32.store
0000180: 02                                        ; alignment
0000181: 00                                        ; store offset
0000182: 41                                        ; i32.const
0000183: d102                                      ; i32 literal
0000185: 20                                        ; local.get
0000186: 01                                        ; local index
0000187: 41                                        ; i32.const
0000188: 08                                        ; i32 literal
0000189: 6a                                        ; i32.add
000018a: 28                                        ; i32.load
000018b: 02                                        ; alignment
000018c: 00                                        ; load offset
000018d: 10                                        ; call
000018e: 06                                        ; function index
000018f: 10                                        ; call
0000190: 01                                        ; function index
0000191: 10                                        ; call
0000192: 04                                        ; function index
0000193: 42                                        ; i64.const
0000194: 8906                                      ; i64 literal
0000196: 10                                        ; call
0000197: 08                                        ; function index
0000198: 24                                        ; global.set
0000199: 01                                        ; global index
000019a: 41                                        ; i32.const
000019b: e402                                      ; i32 literal
000019d: 23                                        ; global.get
000019e: 01                                        ; global index
000019f: 10                                        ; call
00001a0: 06                                        ; function index
00001a1: 10                                        ; call
00001a2: 01                                        ; function index
00001a3: 10                                        ; call
00001a4: 04                                        ; function index
00001a5: 41                                        ; i32.const
00001a6: fe02                                      ; i32 literal
00001a8: 23                                        ; global.get
00001a9: 01                                        ; global index
00001aa: 41                                        ; i32.const
00001ab: 08                                        ; i32 literal
00001ac: 6a                                        ; i32.add
00001ad: 28                                        ; i32.load
00001ae: 02                                        ; alignment
00001af: 00                                        ; load offset
00001b0: 10                                        ; call
00001b1: 06                                        ; function index
00001b2: 10                                        ; call
00001b3: 01                                        ; function index
00001b4: 10                                        ; call
00001b5: 04                                        ; function index
00001b6: 0b                                        ; end
; move data: [e2, 1b7) -> [e3, 1b8)
00000e1: d501                                      ; FIXUP func body size
; function body 1
00001b8: 00                                        ; func body size (guess)
00001b9: 00                                        ; local decl count
00001ba: 23                                        ; global.get
00001bb: 00                                        ; global index
00001bc: 41                                        ; i32.const
00001bd: 00                                        ; i32 literal
00001be: 6a                                        ; i32.add
00001bf: 41                                        ; i32.const
00001c0: 9803                                      ; i32 literal
00001c2: 36                                        ; i32.store
00001c3: 02                                        ; alignment
00001c4: 00                                        ; store offset
00001c5: 23                                        ; global.get
00001c6: 00                                        ; global index
00001c7: 41                                        ; i32.const
00001c8: 0c                                        ; i32 literal
00001c9: 6a                                        ; i32.add
00001ca: 20                                        ; local.get
00001cb: 00                                        ; local index
00001cc: b9                                        ; f64.convert_i64_s
00001cd: 39                                        ; f64.store
00001ce: 03                                        ; alignment
00001cf: 00                                        ; store offset
00001d0: 23                                        ; global.get
00001d1: 00                                        ; global index
00001d2: 41                                        ; i32.const
00001d3: 04                                        ; i32 literal
00001d4: 6a                                        ; i32.add
00001d5: 20                                        ; local.get
00001d6: 00                                        ; local index
00001d7: 42                                        ; i64.const
00001d8: 01                                        ; i64 literal
00001d9: 7c                                        ; i64.add
00001da: a7                                        ; i32.wrap_i64
00001db: 36                                        ; i32.store
00001dc: 02                                        ; alignment
00001dd: 00                                        ; store offset
00001de: 23                                        ; global.get
00001df: 00                                        ; global index
00001e0: 41                                        ; i32.const
00001e1: 14                                        ; i32 literal
00001e2: 6a                                        ; i32.add
00001e3: 24                                        ; global.set
00001e4: 00                                        ; global index
00001e5: 23                                        ; global.get
00001e6: 00                                        ; global index
00001e7: 0f                                        ; return
00001e8: 0b                                        ; end
00001b8: 30                                        ; FIXUP func body size
; function body 2
00001e9: 00                                        ; func body size (guess)
00001ea: 00                                        ; local decl count
00001eb: 0b                                        ; end
00001e9: 02                                        ; FIXUP func body size
; move data: [e0, 1ec) -> [e1, 1ed)
00000df: 8c02                                      ; FIXUP section size
; section "Data" (11)
00001ed: 0b                                        ; section code
00001ee: 00                                        ; section size (guess)
00001ef: 09                                        ; num data segments
; data segment header 0
00001f0: 00                                      
00001f1: 41                                        ; i32.const
00001f2: 01                                        ; i32 literal
00001f3: 0b                                        ; end
00001f4: 06                                        ; data segment size
; data segment data 0
00001f5: 3535 3535 3500                            ; data segment data
; data segment header 1
00001fb: 00                                      
00001fc: 41                                        ; i32.const
00001fd: 8002                                      ; i32 literal
00001ff: 0b                                        ; end
0000200: 11                                        ; data segment size
; data segment data 1
0000201: 7b35 352c 2035 352c 2035 3535 2c20 357d 
0000211: 00                                        ; data segment data
; data segment header 2
0000212: 00                                      
0000213: 41                                        ; i32.const
0000214: 9102                                      ; i32 literal
0000216: 0b                                        ; end
0000217: 06                                        ; data segment size
; data segment data 2
0000218: 7920 6973 2000                            ; data segment data
; data segment header 3
000021e: 00                                      
000021f: 41                                        ; i32.const
0000220: 9702                                      ; i32 literal
0000222: 0b                                        ; end
0000223: 3a                                        ; data segment size
; data segment data 3
0000224: 6d69 6e20 6469 7374 616e 6365 206f 6620 
0000234: 7477 6f20 6369 7263 6c65 2063 656e 7465 
0000244: 7220 6973 2028 612e 7261 6469 7573 2b62 
0000254: 2e72 6164 6975 7329 2000                  ; data segment data
; data segment header 4
000025e: 00                                      
000025f: 41                                        ; i32.const
0000260: d102                                      ; i32 literal
0000262: 0b                                        ; end
0000263: 13                                        ; data segment size
; data segment data 4
0000264: 7920 6166 7465 7220 7570 6461 7465 2069 
0000274: 7320 00                                   ; data segment data
; data segment header 5
0000277: 00                                      
0000278: 41                                        ; i32.const
0000279: e402                                      ; i32 literal
000027b: 0b                                        ; end
000027c: 1a                                        ; data segment size
; data segment data 5
000027d: 7920 6f66 2074 6865 2067 6c6f 6261 6c6f 
000028d: 626a 6563 7420 6973 2000                  ; data segment data
; data segment header 6
0000297: 00                                      
0000298: 41                                        ; i32.const
0000299: fe02                                      ; i32 literal
000029b: 0b                                        ; end
000029c: 1a                                        ; data segment size
; data segment data 6
000029d: 7920 6f66 2074 6865 2067 6c6f 6261 6c6f 
00002ad: 626a 6563 7420 6973 2000                  ; data segment data
; data segment header 7
00002b7: 00                                      
00002b8: 41                                        ; i32.const
00002b9: 9803                                      ; i32 literal
00002bb: 0b                                        ; end
00002bc: 0c                                        ; data segment size
; data segment data 7
00002bd: 5858 5858 5858 5858 5858 2100             ; data segment data
; data segment header 8
00002c9: 00                                      
00002ca: 41                                        ; i32.const
00002cb: 07                                        ; i32 literal
00002cc: 0b                                        ; end
00002cd: f901                                      ; data segment size
; data segment data 8
00002cf: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
00002df: 4f6a 6373 496b 4e73 5958 4e7a 496a 6f69 
00002ef: 5132 6c79 5932 786c 5457 396b 5a57 7769 
00002ff: 4c43 4a47 6157 5673 5a48 4d69 4f6e 7369 
000030f: 626d 396b 5a55 3568 6257 5569 4f6e 7369 
000031f: 5a32 5675 5a58 4a70 5979 4936 5731 3139 
000032f: 4c43 4a34 496a 7037 496d 646c 626d 5679 
000033f: 6157 4d69 4f6c 7464 6653 7769 6553 4936 
000034f: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
000035f: 5858 3073 496e 4a68 5a47 6c31 6379 4936 
000036f: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
000037f: 5858 3139 4c43 4a4e 5a58 526f 6232 527a 
000038f: 496a 7037 6653 7769 546d 4674 5a58 4e77 
000039f: 5957 4e6c 496a 6f69 6257 396b 6457 786c 
00003af: 5132 3975 6447 4670 626d 5679 4c6d 3568 
00003bf: 6257 5578 496e 303d 00                    ; data segment data
; move data: [1ef, 3c8) -> [1f0, 3c9)
00001ee: d903                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0124 0760 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 017f 
0000020: 0060 017c 017f 6000 0060 017e 017f 0284 
0000030: 0108 0673 7472 696e 6707 7265 706c 6163 
0000040: 6500 0006 7374 7269 6e67 0361 6464 0001 
0000050: 0673 7472 696e 6706 6c65 6e67 7468 0002 
0000060: 0673 7472 696e 6707 696e 6465 784f 6600 
0000070: 0107 636f 6e73 6f6c 6503 6c6f 6700 0306 
0000080: 7374 7269 6e67 0874 6f53 7472 696e 6700 
0000090: 0406 7374 7269 6e67 0874 6f53 7472 696e 
00000a0: 6700 0203 656e 760a 6279 7465 6368 756e 
00000b0: 6b73 0200 0103 0403 0506 0506 0c02 7f01 
00000c0: 41a4 030b 7f01 4100 0b07 1001 0c52 756e 
00000d0: 7465 7374 2e74 6573 7400 0708 0109 0a8c 
00000e0: 0203 d501 0102 7f23 0041 0c6a 41a1 8d06 
00000f0: b739 0300 2300 4104 6a41 0041 016b 3602 
0000100: 0023 0041 086a 44f9 0fe9 b7af 03f0 3faa 
0000110: 3602 0023 0041 006a 4180 0236 0200 2300 
0000120: 4114 6a24 0023 0021 0020 0041 0c6a 2b03 
0000130: 0010 0510 0442 9f8d 0610 0821 0141 9102 
0000140: 2001 4108 6a28 0200 1006 1001 1004 4197 
0000150: 0220 0041 0c6a 2b03 0020 0141 0c6a 2b03 
0000160: 00a0 1005 1001 1004 2001 4108 6a44 0000 
0000170: 0000 0000 0000 440e 2db2 9def ff58 40a1 
0000180: aa36 0200 41d1 0220 0141 086a 2802 0010 
0000190: 0610 0110 0442 8906 1008 2401 41e4 0223 
00001a0: 0110 0610 0110 0441 fe02 2301 4108 6a28 
00001b0: 0200 1006 1001 1004 0b30 0023 0041 006a 
00001c0: 4198 0336 0200 2300 410c 6a20 00b9 3903 
00001d0: 0023 0041 046a 2000 4201 7ca7 3602 0023 
00001e0: 0041 146a 2400 2300 0f0b 0200 0b0b d903 
00001f0: 0900 4101 0b06 3535 3535 3500 0041 8002 
0000200: 0b11 7b35 352c 2035 352c 2035 3535 2c20 
0000210: 357d 0000 4191 020b 0679 2069 7320 0000 
0000220: 4197 020b 3a6d 696e 2064 6973 7461 6e63 
0000230: 6520 6f66 2074 776f 2063 6972 636c 6520 
0000240: 6365 6e74 6572 2069 7320 2861 2e72 6164 
0000250: 6975 732b 622e 7261 6469 7573 2920 0000 
0000260: 41d1 020b 1379 2061 6674 6572 2075 7064 
0000270: 6174 6520 6973 2000 0041 e402 0b1a 7920 
0000280: 6f66 2074 6865 2067 6c6f 6261 6c6f 626a 
0000290: 6563 7420 6973 2000 0041 fe02 0b1a 7920 
00002a0: 6f66 2074 6865 2067 6c6f 6261 6c6f 626a 
00002b0: 6563 7420 6973 2000 0041 9803 0b0c 5858 
00002c0: 5858 5858 5858 5858 2100 0041 070b f901 
00002d0: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
00002e0: 4f6a 6373 496b 4e73 5958 4e7a 496a 6f69 
00002f0: 5132 6c79 5932 786c 5457 396b 5a57 7769 
0000300: 4c43 4a47 6157 5673 5a48 4d69 4f6e 7369 
0000310: 626d 396b 5a55 3568 6257 5569 4f6e 7369 
0000320: 5a32 5675 5a58 4a70 5979 4936 5731 3139 
0000330: 4c43 4a34 496a 7037 496d 646c 626d 5679 
0000340: 6157 4d69 4f6c 7464 6653 7769 6553 4936 
0000350: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000360: 5858 3073 496e 4a68 5a47 6c31 6379 4936 
0000370: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000380: 5858 3139 4c43 4a4e 5a58 526f 6232 527a 
0000390: 496a 7037 6653 7769 546d 4674 5a58 4e77 
00003a0: 5957 4e6c 496a 6f69 6257 396b 6457 786c 
00003b0: 5132 3975 6447 4670 626d 5679 4c6d 3568 
00003c0: 6257 5578 496e 303d 00                  
