0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 06                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7c                                        ; f64
0000020: 01                                        ; num results
0000021: 7f                                        ; i32
; type 4
0000022: 60                                        ; func
0000023: 00                                        ; num params
0000024: 01                                        ; num results
0000025: 7d                                        ; f32
; type 5
0000026: 60                                        ; func
0000027: 00                                        ; num params
0000028: 00                                        ; num results
0000009: 1f                                        ; FIXUP section size
; section "Import" (2)
0000029: 02                                        ; section code
000002a: 00                                        ; section size (guess)
000002b: 06                                        ; num imports
; import header 0
000002c: 06                                        ; string length
000002d: 7374 7269 6e67                           string  ; import module name
0000033: 07                                        ; string length
0000034: 7265 706c 6163 65                        replace  ; import field name
000003b: 00                                        ; import kind
000003c: 00                                        ; import signature index
; import header 1
000003d: 06                                        ; string length
000003e: 7374 7269 6e67                           string  ; import module name
0000044: 03                                        ; string length
0000045: 6164 64                                  add  ; import field name
0000048: 00                                        ; import kind
0000049: 01                                        ; import signature index
; import header 2
000004a: 06                                        ; string length
000004b: 7374 7269 6e67                           string  ; import module name
0000051: 06                                        ; string length
0000052: 6c65 6e67 7468                           length  ; import field name
0000058: 00                                        ; import kind
0000059: 02                                        ; import signature index
; import header 3
000005a: 06                                        ; string length
000005b: 7374 7269 6e67                           string  ; import module name
0000061: 07                                        ; string length
0000062: 696e 6465 784f 66                        indexOf  ; import field name
0000069: 00                                        ; import kind
000006a: 01                                        ; import signature index
; import header 4
000006b: 06                                        ; string length
000006c: 7374 7269 6e67                           string  ; import module name
0000072: 08                                        ; string length
0000073: 746f 5374 7269 6e67                      toString  ; import field name
000007b: 00                                        ; import kind
000007c: 03                                        ; import signature index
; import header 5
000007d: 03                                        ; string length
000007e: 656e 76                                  env  ; import module name
0000081: 0a                                        ; string length
0000082: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000008c: 02                                        ; import kind
000008d: 00                                        ; limits: flags
000008e: 01                                        ; limits: initial
000002a: 64                                        ; FIXUP section size
; section "Function" (3)
000008f: 03                                        ; section code
0000090: 00                                        ; section size (guess)
0000091: 03                                        ; num functions
0000092: 04                                        ; function 0 signature index
0000093: 05                                        ; function 1 signature index
0000094: 05                                        ; function 2 signature index
0000090: 04                                        ; FIXUP section size
; section "Global" (6)
0000095: 06                                        ; section code
0000096: 00                                        ; section size (guess)
0000097: 0b                                        ; num globals
0000098: 7f                                        ; i32
0000099: 01                                        ; global mutability
000009a: 41                                        ; i32.const
000009b: 12                                        ; i32 literal
000009c: 0b                                        ; end
000009d: 7e                                        ; i64
000009e: 01                                        ; global mutability
000009f: 42                                        ; i64.const
00000a0: 9d7f                                      ; i64 literal
00000a2: 0b                                        ; end
00000a3: 7f                                        ; i32
00000a4: 01                                        ; global mutability
00000a5: 41                                        ; i32.const
00000a6: 00                                        ; i32 literal
00000a7: 0b                                        ; end
00000a8: 7e                                        ; i64
00000a9: 01                                        ; global mutability
00000aa: 42                                        ; i64.const
00000ab: 00                                        ; i64 literal
00000ac: 0b                                        ; end
00000ad: 7d                                        ; f32
00000ae: 01                                        ; global mutability
00000af: 43                                        ; f32.const
00000b0: 0000 b442                                 ; f32 literal
00000b4: 0b                                        ; end
00000b5: 7c                                        ; f64
00000b6: 01                                        ; global mutability
00000b7: 44                                        ; f64.const
00000b8: 0000 0000 0000 0000                       ; f64 literal
00000c0: 0b                                        ; end
00000c1: 7c                                        ; f64
00000c2: 01                                        ; global mutability
00000c3: 44                                        ; f64.const
00000c4: 0000 0000 0000 0000                       ; f64 literal
00000cc: 0b                                        ; end
00000cd: 7c                                        ; f64
00000ce: 01                                        ; global mutability
00000cf: 44                                        ; f64.const
00000d0: 0000 0000 0000 0000                       ; f64 literal
00000d8: 0b                                        ; end
00000d9: 7d                                        ; f32
00000da: 01                                        ; global mutability
00000db: 43                                        ; f32.const
00000dc: 0000 0000                                 ; f32 literal
00000e0: 0b                                        ; end
00000e1: 7e                                        ; i64
00000e2: 01                                        ; global mutability
00000e3: 42                                        ; i64.const
00000e4: 00                                        ; i64 literal
00000e5: 0b                                        ; end
00000e6: 7f                                        ; i32
00000e7: 01                                        ; global mutability
00000e8: 41                                        ; i32.const
00000e9: 00                                        ; i32 literal
00000ea: 0b                                        ; end
0000096: 54                                        ; FIXUP section size
; section "Start" (8)
00000eb: 08                                        ; section code
00000ec: 00                                        ; section size (guess)
00000ed: 06                                        ; start func index
00000ec: 01                                        ; FIXUP section size
; section "Code" (10)
00000ee: 0a                                        ; section code
00000ef: 00                                        ; section size (guess)
00000f0: 03                                        ; num functions
; function body 0
00000f1: 00                                        ; func body size (guess)
00000f2: 09                                        ; local decl count
00000f3: 01                                        ; local type count
00000f4: 7c                                        ; f64
00000f5: 01                                        ; local type count
00000f6: 7e                                        ; i64
00000f7: 01                                        ; local type count
00000f8: 7d                                        ; f32
00000f9: 03                                        ; local type count
00000fa: 7c                                        ; f64
00000fb: 01                                        ; local type count
00000fc: 7d                                        ; f32
00000fd: 01                                        ; local type count
00000fe: 7e                                        ; i64
00000ff: 01                                        ; local type count
0000100: 7f                                        ; i32
0000101: 01                                        ; local type count
0000102: 7e                                        ; i64
0000103: 01                                        ; local type count
0000104: 7f                                        ; i32
0000105: 41                                        ; i32.const
0000106: a7a1 36                                   ; i32 literal
0000109: b7                                        ; f64.convert_i32_s
000010a: 23                                        ; global.get
000010b: 05                                        ; global index
000010c: a0                                        ; f64.add
000010d: 21                                        ; local.set
000010e: 00                                        ; local index
000010f: 41                                        ; i32.const
0000110: 00                                        ; i32 literal
0000111: 41                                        ; i32.const
0000112: e300                                      ; i32 literal
0000114: 6b                                        ; i32.sub
0000115: ac                                        ; i64.extend_i32_s
0000116: 21                                        ; local.set
0000117: 01                                        ; local index
0000118: 41                                        ; i32.const
0000119: da00                                      ; i32 literal
000011b: b2                                        ; f32.convert_i32_s
000011c: 21                                        ; local.set
000011d: 02                                        ; local index
000011e: 23                                        ; global.get
000011f: 08                                        ; global index
0000120: 21                                        ; local.set
0000121: 06                                        ; local index
0000122: 23                                        ; global.get
0000123: 09                                        ; global index
0000124: 42                                        ; i64.const
0000125: e300                                      ; i64 literal
0000127: 7e                                        ; i64.mul
0000128: 21                                        ; local.set
0000129: 07                                        ; local index
000012a: 41                                        ; i32.const
000012b: 8827                                      ; i32 literal
000012d: b7                                        ; f64.convert_i32_s
000012e: 21                                        ; local.set
000012f: 05                                        ; local index
0000130: 20                                        ; local.get
0000131: 05                                        ; local index
0000132: 23                                        ; global.get
0000133: 07                                        ; global index
0000134: 41                                        ; i32.const
0000135: 01                                        ; i32 literal
0000136: b7                                        ; f64.convert_i32_s
0000137: a0                                        ; f64.add
0000138: a2                                        ; f64.mul
0000139: 24                                        ; global.set
000013a: 07                                        ; global index
000013b: 41                                        ; i32.const
000013c: 0a                                        ; i32 literal
000013d: 20                                        ; local.get
000013e: 05                                        ; local index
000013f: 10                                        ; call
0000140: 04                                        ; function index
0000141: 10                                        ; call
0000142: 01                                        ; function index
0000143: 24                                        ; global.set
0000144: 0a                                        ; global index
0000145: 23                                        ; global.get
0000146: 01                                        ; global index
0000147: 23                                        ; global.get
0000148: 01                                        ; global index
0000149: 7c                                        ; i64.add
000014a: 23                                        ; global.get
000014b: 01                                        ; global index
000014c: 42                                        ; i64.const
000014d: 02                                        ; i64 literal
000014e: 7e                                        ; i64.mul
000014f: 51                                        ; i64.eq
0000150: 21                                        ; local.set
0000151: 0a                                        ; local index
0000152: 20                                        ; local.get
0000153: 0a                                        ; local index
0000154: 45                                        ; i32.eqz
0000155: 04                                        ; if
0000156: 40                                        ; void
0000157: 41                                        ; i32.const
0000158: 00                                        ; i32 literal
0000159: 41                                        ; i32.const
000015a: e400                                      ; i32 literal
000015c: 6b                                        ; i32.sub
000015d: b2                                        ; f32.convert_i32_s
000015e: 0f                                        ; return
000015f: 0b                                        ; end
0000160: 23                                        ; global.get
0000161: 01                                        ; global index
0000162: b9                                        ; f64.convert_i64_s
0000163: 20                                        ; local.get
0000164: 01                                        ; local index
0000165: b9                                        ; f64.convert_i64_s
0000166: a3                                        ; f64.div
0000167: 20                                        ; local.get
0000168: 02                                        ; local index
0000169: bb                                        ; f64.promote_f32
000016a: a0                                        ; f64.add
000016b: 20                                        ; local.get
000016c: 03                                        ; local index
000016d: 23                                        ; global.get
000016e: 06                                        ; global index
000016f: a2                                        ; f64.mul
0000170: a0                                        ; f64.add
0000171: 20                                        ; local.get
0000172: 04                                        ; local index
0000173: a0                                        ; f64.add
0000174: 20                                        ; local.get
0000175: 05                                        ; local index
0000176: a0                                        ; f64.add
0000177: 20                                        ; local.get
0000178: 06                                        ; local index
0000179: bb                                        ; f64.promote_f32
000017a: a2                                        ; f64.mul
000017b: 20                                        ; local.get
000017c: 07                                        ; local index
000017d: b9                                        ; f64.convert_i64_s
000017e: a3                                        ; f64.div
000017f: 20                                        ; local.get
0000180: 08                                        ; local index
0000181: b7                                        ; f64.convert_i32_s
0000182: a2                                        ; f64.mul
0000183: 20                                        ; local.get
0000184: 09                                        ; local index
0000185: b9                                        ; f64.convert_i64_s
0000186: a2                                        ; f64.mul
0000187: 23                                        ; global.get
0000188: 07                                        ; global index
0000189: b0                                        ; i64.trunc_f64_s
000018a: b9                                        ; f64.convert_i64_s
000018b: a3                                        ; f64.div
000018c: b6                                        ; f32.demote_f64
000018d: 0f                                        ; return
000018e: 0b                                        ; end
; move data: [f2, 18f) -> [f3, 190)
00000f1: 9d01                                      ; FIXUP func body size
; function body 1
0000190: 00                                        ; func body size (guess)
0000191: 00                                        ; local decl count
0000192: 10                                        ; call
0000193: 07                                        ; function index
0000194: 0b                                        ; end
0000190: 04                                        ; FIXUP func body size
; function body 2
0000195: 00                                        ; func body size (guess)
0000196: 00                                        ; local decl count
0000197: 0b                                        ; end
0000195: 02                                        ; FIXUP func body size
; move data: [f0, 198) -> [f1, 199)
00000ef: a801                                      ; FIXUP section size
; section "Data" (11)
0000199: 0b                                        ; section code
000019a: 00                                        ; section size (guess)
000019b: 01                                        ; num data segments
; data segment header 0
000019c: 00                                      
000019d: 41                                        ; i32.const
000019e: 0a                                        ; i32 literal
000019f: 0b                                        ; end
00001a0: 08                                        ; data segment size
; data segment data 0
00001a1: 4865 6c6c 6f3a 2000                       ; data segment data
000019a: 0e                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011f 0660 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 017c 
0000020: 017f 6000 017d 6000 0002 6406 0673 7472 
0000030: 696e 6707 7265 706c 6163 6500 0006 7374 
0000040: 7269 6e67 0361 6464 0001 0673 7472 696e 
0000050: 6706 6c65 6e67 7468 0002 0673 7472 696e 
0000060: 6707 696e 6465 784f 6600 0106 7374 7269 
0000070: 6e67 0874 6f53 7472 696e 6700 0303 656e 
0000080: 760a 6279 7465 6368 756e 6b73 0200 0103 
0000090: 0403 0405 0506 540b 7f01 4112 0b7e 0142 
00000a0: 9d7f 0b7f 0141 000b 7e01 4200 0b7d 0143 
00000b0: 0000 b442 0b7c 0144 0000 0000 0000 0000 
00000c0: 0b7c 0144 0000 0000 0000 0000 0b7c 0144 
00000d0: 0000 0000 0000 0000 0b7d 0143 0000 0000 
00000e0: 0b7e 0142 000b 7f01 4100 0b08 0106 0aa8 
00000f0: 0103 9d01 0901 7c01 7e01 7d03 7c01 7d01 
0000100: 7e01 7f01 7e01 7f41 a7a1 36b7 2305 a021 
0000110: 0041 0041 e300 6bac 2101 41da 00b2 2102 
0000120: 2308 2106 2309 42e3 007e 2107 4188 27b7 
0000130: 2105 2005 2307 4101 b7a0 a224 0741 0a20 
0000140: 0510 0410 0124 0a23 0123 017c 2301 4202 
0000150: 7e51 210a 200a 4504 4041 0041 e400 6bb2 
0000160: 0f0b 2301 b920 01b9 a320 02bb a020 0323 
0000170: 06a2 a020 04a0 2005 a020 06bb a220 07b9 
0000180: a320 08b7 a220 09b9 a223 07b0 b9a3 b60f 
0000190: 0b04 0010 070b 0200 0b0b 0e01 0041 0a0b 
00001a0: 0848 656c 6c6f 3a20 00                  
