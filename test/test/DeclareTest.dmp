0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7c                                        ; f64
0000020: 01                                        ; num results
0000021: 7f                                        ; i32
; type 4
0000022: 60                                        ; func
0000023: 00                                        ; num params
0000024: 01                                        ; num results
0000025: 7d                                        ; f32
0000009: 1c                                        ; FIXUP section size
; section "Import" (2)
0000026: 02                                        ; section code
0000027: 00                                        ; section size (guess)
0000028: 06                                        ; num imports
; import header 0
0000029: 06                                        ; string length
000002a: 7374 7269 6e67                           string  ; import module name
0000030: 07                                        ; string length
0000031: 7265 706c 6163 65                        replace  ; import field name
0000038: 00                                        ; import kind
0000039: 00                                        ; import signature index
; import header 1
000003a: 06                                        ; string length
000003b: 7374 7269 6e67                           string  ; import module name
0000041: 03                                        ; string length
0000042: 6164 64                                  add  ; import field name
0000045: 00                                        ; import kind
0000046: 01                                        ; import signature index
; import header 2
0000047: 06                                        ; string length
0000048: 7374 7269 6e67                           string  ; import module name
000004e: 06                                        ; string length
000004f: 6c65 6e67 7468                           length  ; import field name
0000055: 00                                        ; import kind
0000056: 02                                        ; import signature index
; import header 3
0000057: 06                                        ; string length
0000058: 7374 7269 6e67                           string  ; import module name
000005e: 07                                        ; string length
000005f: 696e 6465 784f 66                        indexOf  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 06                                        ; string length
0000069: 7374 7269 6e67                           string  ; import module name
000006f: 08                                        ; string length
0000070: 746f 5374 7269 6e67                      toString  ; import field name
0000078: 00                                        ; import kind
0000079: 03                                        ; import signature index
; import header 5
000007a: 03                                        ; string length
000007b: 656e 76                                  env  ; import module name
000007e: 0a                                        ; string length
000007f: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000089: 02                                        ; import kind
000008a: 00                                        ; limits: flags
000008b: 01                                        ; limits: initial
0000027: 64                                        ; FIXUP section size
; section "Function" (3)
000008c: 03                                        ; section code
000008d: 00                                        ; section size (guess)
000008e: 01                                        ; num functions
000008f: 04                                        ; function 0 signature index
000008d: 02                                        ; FIXUP section size
; section "Global" (6)
0000090: 06                                        ; section code
0000091: 00                                        ; section size (guess)
0000092: 0a                                        ; num globals
0000093: 7e                                        ; i64
0000094: 01                                        ; global mutability
0000095: 42                                        ; i64.const
0000096: 9d7f                                      ; i64 literal
0000098: 0b                                        ; end
0000099: 7f                                        ; i32
000009a: 01                                        ; global mutability
000009b: 41                                        ; i32.const
000009c: 00                                        ; i32 literal
000009d: 0b                                        ; end
000009e: 7e                                        ; i64
000009f: 01                                        ; global mutability
00000a0: 42                                        ; i64.const
00000a1: 00                                        ; i64 literal
00000a2: 0b                                        ; end
00000a3: 7d                                        ; f32
00000a4: 01                                        ; global mutability
00000a5: 43                                        ; f32.const
00000a6: 0000 b442                                 ; f32 literal
00000aa: 0b                                        ; end
00000ab: 7c                                        ; f64
00000ac: 01                                        ; global mutability
00000ad: 44                                        ; f64.const
00000ae: 0000 0000 0000 0000                       ; f64 literal
00000b6: 0b                                        ; end
00000b7: 7c                                        ; f64
00000b8: 01                                        ; global mutability
00000b9: 44                                        ; f64.const
00000ba: 0000 0000 0000 0000                       ; f64 literal
00000c2: 0b                                        ; end
00000c3: 7c                                        ; f64
00000c4: 01                                        ; global mutability
00000c5: 44                                        ; f64.const
00000c6: 0000 0000 0000 0000                       ; f64 literal
00000ce: 0b                                        ; end
00000cf: 7d                                        ; f32
00000d0: 01                                        ; global mutability
00000d1: 43                                        ; f32.const
00000d2: 0000 0000                                 ; f32 literal
00000d6: 0b                                        ; end
00000d7: 7e                                        ; i64
00000d8: 01                                        ; global mutability
00000d9: 42                                        ; i64.const
00000da: 00                                        ; i64 literal
00000db: 0b                                        ; end
00000dc: 7f                                        ; i32
00000dd: 01                                        ; global mutability
00000de: 41                                        ; i32.const
00000df: 00                                        ; i32 literal
00000e0: 0b                                        ; end
0000091: 4f                                        ; FIXUP section size
; section "Code" (10)
00000e1: 0a                                        ; section code
00000e2: 00                                        ; section size (guess)
00000e3: 01                                        ; num functions
; function body 0
00000e4: 00                                        ; func body size (guess)
00000e5: 09                                        ; local decl count
00000e6: 01                                        ; local type count
00000e7: 7c                                        ; f64
00000e8: 01                                        ; local type count
00000e9: 7e                                        ; i64
00000ea: 01                                        ; local type count
00000eb: 7d                                        ; f32
00000ec: 03                                        ; local type count
00000ed: 7c                                        ; f64
00000ee: 01                                        ; local type count
00000ef: 7d                                        ; f32
00000f0: 01                                        ; local type count
00000f1: 7e                                        ; i64
00000f2: 01                                        ; local type count
00000f3: 7f                                        ; i32
00000f4: 01                                        ; local type count
00000f5: 7e                                        ; i64
00000f6: 01                                        ; local type count
00000f7: 7f                                        ; i32
00000f8: 44                                        ; f64.const
00000f9: 0000 0000 4e21 2b41                       ; f64 literal
0000101: 23                                        ; global.get
0000102: 04                                        ; global index
0000103: a0                                        ; f64.add
0000104: 21                                        ; local.set
0000105: 00                                        ; local index
0000106: 41                                        ; i32.const
0000107: 00                                        ; i32 literal
0000108: 41                                        ; i32.const
0000109: e300                                      ; i32 literal
000010b: 6b                                        ; i32.sub
000010c: ac                                        ; i64.extend_i32_s
000010d: 21                                        ; local.set
000010e: 01                                        ; local index
000010f: 43                                        ; f32.const
0000110: 0000 b442                                 ; f32 literal
0000114: 21                                        ; local.set
0000115: 02                                        ; local index
0000116: 23                                        ; global.get
0000117: 07                                        ; global index
0000118: 21                                        ; local.set
0000119: 06                                        ; local index
000011a: 23                                        ; global.get
000011b: 08                                        ; global index
000011c: 42                                        ; i64.const
000011d: e300                                      ; i64 literal
000011f: 7e                                        ; i64.mul
0000120: 21                                        ; local.set
0000121: 07                                        ; local index
0000122: 44                                        ; f64.const
0000123: 0000 0000 0088 b340                       ; f64 literal
000012b: 21                                        ; local.set
000012c: 05                                        ; local index
000012d: 20                                        ; local.get
000012e: 05                                        ; local index
000012f: 23                                        ; global.get
0000130: 06                                        ; global index
0000131: 44                                        ; f64.const
0000132: 0000 0000 0000 f03f                       ; f64 literal
000013a: a0                                        ; f64.add
000013b: a2                                        ; f64.mul
000013c: 24                                        ; global.set
000013d: 06                                        ; global index
000013e: 41                                        ; i32.const
000013f: 01                                        ; i32 literal
0000140: 20                                        ; local.get
0000141: 05                                        ; local index
0000142: 10                                        ; call
0000143: 04                                        ; function index
0000144: 10                                        ; call
0000145: 01                                        ; function index
0000146: 24                                        ; global.set
0000147: 09                                        ; global index
0000148: 23                                        ; global.get
0000149: 00                                        ; global index
000014a: 23                                        ; global.get
000014b: 00                                        ; global index
000014c: 7c                                        ; i64.add
000014d: 23                                        ; global.get
000014e: 00                                        ; global index
000014f: 42                                        ; i64.const
0000150: 02                                        ; i64 literal
0000151: 7e                                        ; i64.mul
0000152: 51                                        ; i64.eq
0000153: 21                                        ; local.set
0000154: 0a                                        ; local index
0000155: 20                                        ; local.get
0000156: 0a                                        ; local index
0000157: 45                                        ; i32.eqz
0000158: 04                                        ; if
0000159: 40                                        ; void
000015a: 41                                        ; i32.const
000015b: 00                                        ; i32 literal
000015c: 41                                        ; i32.const
000015d: e400                                      ; i32 literal
000015f: 6b                                        ; i32.sub
0000160: b2                                        ; f32.convert_i32_s
0000161: 0f                                        ; return
0000162: 0b                                        ; end
0000163: 23                                        ; global.get
0000164: 00                                        ; global index
0000165: b9                                        ; f64.convert_i64_s
0000166: 20                                        ; local.get
0000167: 01                                        ; local index
0000168: b9                                        ; f64.convert_i64_s
0000169: a3                                        ; f64.div
000016a: 20                                        ; local.get
000016b: 02                                        ; local index
000016c: bb                                        ; f64.promote_f32
000016d: a0                                        ; f64.add
000016e: 20                                        ; local.get
000016f: 03                                        ; local index
0000170: 23                                        ; global.get
0000171: 05                                        ; global index
0000172: a2                                        ; f64.mul
0000173: a0                                        ; f64.add
0000174: 20                                        ; local.get
0000175: 04                                        ; local index
0000176: a0                                        ; f64.add
0000177: 20                                        ; local.get
0000178: 05                                        ; local index
0000179: a0                                        ; f64.add
000017a: 20                                        ; local.get
000017b: 06                                        ; local index
000017c: bb                                        ; f64.promote_f32
000017d: a2                                        ; f64.mul
000017e: 20                                        ; local.get
000017f: 07                                        ; local index
0000180: b9                                        ; f64.convert_i64_s
0000181: a3                                        ; f64.div
0000182: 20                                        ; local.get
0000183: 08                                        ; local index
0000184: b7                                        ; f64.convert_i32_s
0000185: a2                                        ; f64.mul
0000186: 20                                        ; local.get
0000187: 09                                        ; local index
0000188: b9                                        ; f64.convert_i64_s
0000189: a2                                        ; f64.mul
000018a: 23                                        ; global.get
000018b: 06                                        ; global index
000018c: b0                                        ; i64.trunc_f64_s
000018d: b9                                        ; f64.convert_i64_s
000018e: a3                                        ; f64.div
000018f: b6                                        ; f32.demote_f64
0000190: 0f                                        ; return
0000191: 0b                                        ; end
; move data: [e5, 192) -> [e6, 193)
00000e4: ad01                                      ; FIXUP func body size
; move data: [e3, 193) -> [e4, 194)
00000e2: b001                                      ; FIXUP section size
; section "Data" (11)
0000194: 0b                                        ; section code
0000195: 00                                        ; section size (guess)
0000196: 01                                        ; num data segments
; data segment header 0
0000197: 00                                      
0000198: 41                                        ; i32.const
0000199: 01                                        ; i32 literal
000019a: 0b                                        ; end
000019b: 08                                        ; data segment size
; data segment data 0
000019c: 4865 6c6c 6f3a 2000                       ; data segment data
0000195: 0e                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011c 0560 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 017c 
0000020: 017f 6000 017d 0264 0606 7374 7269 6e67 
0000030: 0772 6570 6c61 6365 0000 0673 7472 696e 
0000040: 6703 6164 6400 0106 7374 7269 6e67 066c 
0000050: 656e 6774 6800 0206 7374 7269 6e67 0769 
0000060: 6e64 6578 4f66 0001 0673 7472 696e 6708 
0000070: 746f 5374 7269 6e67 0003 0365 6e76 0a62 
0000080: 7974 6563 6875 6e6b 7302 0001 0302 0104 
0000090: 064f 0a7e 0142 9d7f 0b7f 0141 000b 7e01 
00000a0: 4200 0b7d 0143 0000 b442 0b7c 0144 0000 
00000b0: 0000 0000 0000 0b7c 0144 0000 0000 0000 
00000c0: 0000 0b7c 0144 0000 0000 0000 0000 0b7d 
00000d0: 0143 0000 0000 0b7e 0142 000b 7f01 4100 
00000e0: 0b0a b001 01ad 0109 017c 017e 017d 037c 
00000f0: 017d 017e 017f 017e 017f 4400 0000 004e 
0000100: 212b 4123 04a0 2100 4100 41e3 006b ac21 
0000110: 0143 0000 b442 2102 2307 2106 2308 42e3 
0000120: 007e 2107 4400 0000 0000 88b3 4021 0520 
0000130: 0523 0644 0000 0000 0000 f03f a0a2 2406 
0000140: 4101 2005 1004 1001 2409 2300 2300 7c23 
0000150: 0042 027e 5121 0a20 0a45 0440 4100 41e4 
0000160: 006b b20f 0b23 00b9 2001 b9a3 2002 bba0 
0000170: 2003 2305 a2a0 2004 a020 05a0 2006 bba2 
0000180: 2007 b9a3 2008 b7a2 2009 b9a2 2306 b0b9 
0000190: a3b6 0f0b 0b0e 0100 4101 0b08 4865 6c6c 
00001a0: 6f3a 2000                               
