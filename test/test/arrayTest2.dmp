0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 00                                        ; num params
0000011: 01                                        ; num results
0000012: 7f                                        ; i32
; type 2
0000013: 60                                        ; func
0000014: 00                                        ; num params
0000015: 01                                        ; num results
0000016: 7d                                        ; f32
; type 3
0000017: 60                                        ; func
0000018: 01                                        ; num params
0000019: 7f                                        ; i32
000001a: 00                                        ; num results
; type 4
000001b: 60                                        ; func
000001c: 00                                        ; num params
000001d: 00                                        ; num results
0000009: 14                                        ; FIXUP section size
; section "Import" (2)
000001e: 02                                        ; section code
000001f: 00                                        ; section size (guess)
0000020: 02                                        ; num imports
; import header 0
0000021: 07                                        ; string length
0000022: 636f 6e73 6f6c 65                        console  ; import module name
0000029: 03                                        ; string length
000002a: 6c6f 67                                  log  ; import field name
000002d: 00                                        ; import kind
000002e: 00                                        ; import signature index
; import header 1
000002f: 03                                        ; string length
0000030: 656e 76                                  env  ; import module name
0000033: 0a                                        ; string length
0000034: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000003e: 02                                        ; import kind
000003f: 00                                        ; limits: flags
0000040: 01                                        ; limits: initial
000001f: 21                                        ; FIXUP section size
; section "Function" (3)
0000041: 03                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 05                                        ; num functions
0000044: 01                                        ; function 0 signature index
0000045: 02                                        ; function 1 signature index
0000046: 03                                        ; function 2 signature index
0000047: 04                                        ; function 3 signature index
0000048: 04                                        ; function 4 signature index
0000042: 06                                        ; FIXUP section size
; section "Global" (6)
0000049: 06                                        ; section code
000004a: 00                                        ; section size (guess)
000004b: 0c                                        ; num globals
000004c: 7f                                        ; i32
000004d: 01                                        ; global mutability
000004e: 41                                        ; i32.const
000004f: 0b                                        ; i32 literal
0000050: 0b                                        ; end
0000051: 7c                                        ; f64
0000052: 01                                        ; global mutability
0000053: 44                                        ; f64.const
0000054: 7457 148b 0abf 0540                       ; f64 literal
000005c: 0b                                        ; end
000005d: 7c                                        ; f64
000005e: 01                                        ; global mutability
000005f: 44                                        ; f64.const
0000060: 112d 4454 fb21 0940                       ; f64 literal
0000068: 0b                                        ; end
0000069: 7f                                        ; i32
000006a: 01                                        ; global mutability
000006b: 41                                        ; i32.const
000006c: ffff ffff 07                              ; i32 literal
0000071: 0b                                        ; end
0000072: 7e                                        ; i64
0000073: 01                                        ; global mutability
0000074: 42                                        ; i64.const
0000075: ffff ffff ffff ffff ff00                  ; i64 literal
000007f: 0b                                        ; end
0000080: 7d                                        ; f32
0000081: 01                                        ; global mutability
0000082: 43                                        ; f32.const
0000083: ffff 7f7f                                 ; f32 literal
0000087: 0b                                        ; end
0000088: 7c                                        ; f64
0000089: 01                                        ; global mutability
000008a: 44                                        ; f64.const
000008b: ffff ffff ffff ef7f                       ; f64 literal
0000093: 0b                                        ; end
0000094: 7f                                        ; i32
0000095: 01                                        ; global mutability
0000096: 41                                        ; i32.const
0000097: 8080 8080 78                              ; i32 literal
000009c: 0b                                        ; end
000009d: 7e                                        ; i64
000009e: 01                                        ; global mutability
000009f: 42                                        ; i64.const
00000a0: 8080 8080 8080 8080 807f                  ; i64 literal
00000aa: 0b                                        ; end
00000ab: 7d                                        ; f32
00000ac: 01                                        ; global mutability
00000ad: 43                                        ; f32.const
00000ae: ffff 7fff                                 ; f32 literal
00000b2: 0b                                        ; end
00000b3: 7c                                        ; f64
00000b4: 01                                        ; global mutability
00000b5: 44                                        ; f64.const
00000b6: ffff ffff ffff efff                       ; f64 literal
00000be: 0b                                        ; end
00000bf: 7f                                        ; i32
00000c0: 01                                        ; global mutability
00000c1: 41                                        ; i32.const
00000c2: 00                                        ; i32 literal
00000c3: 0b                                        ; end
000004a: 79                                        ; FIXUP section size
; section "Export" (7)
00000c4: 07                                        ; section code
00000c5: 00                                        ; section size (guess)
00000c6: 03                                        ; num exports
00000c7: 1a                                        ; string length
00000c8: 6172 7261 7954 6573 7432 2e72 6574 7572  arrayTest2.retur
00000d8: 6e41 7272 6179 5465 7374                 nArrayTest  ; export name
00000e2: 00                                        ; export kind
00000e3: 01                                        ; export func index
00000e4: 13                                        ; string length
00000e5: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
00000f5: 6573 74                                  est  ; export name
00000f8: 00                                        ; export kind
00000f9: 02                                        ; export func index
00000fa: 17                                        ; string length
00000fb: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
000010b: 6c75 6554 6573 74                        lueTest  ; export name
0000112: 00                                        ; export kind
0000113: 03                                        ; export func index
00000c5: 4e                                        ; FIXUP section size
; section "Start" (8)
0000114: 08                                        ; section code
0000115: 00                                        ; section size (guess)
0000116: 04                                        ; start func index
0000115: 01                                        ; FIXUP section size
; section "Code" (10)
0000117: 0a                                        ; section code
0000118: 00                                        ; section size (guess)
0000119: 05                                        ; num functions
; function body 0
000011a: 00                                        ; func body size (guess)
000011b: 02                                        ; local decl count
000011c: 01                                        ; local type count
000011d: 7c                                        ; f64
000011e: 01                                        ; local type count
000011f: 7f                                        ; i32
0000120: 23                                        ; global.get
0000121: 0b                                        ; global index
0000122: 41                                        ; i32.const
0000123: 08                                        ; i32 literal
0000124: 6a                                        ; i32.add
0000125: 41                                        ; i32.const
0000126: 01                                        ; i32 literal
0000127: 41                                        ; i32.const
0000128: 08                                        ; i32 literal
0000129: 6c                                        ; i32.mul
000012a: 6a                                        ; i32.add
000012b: 2b                                        ; f64.load
000012c: 03                                        ; alignment
000012d: 00                                        ; load offset
000012e: 21                                        ; local.set
000012f: 00                                        ; local index
0000130: 23                                        ; global.get
0000131: 00                                        ; global index
0000132: 41                                        ; i32.const
0000133: 03                                        ; i32 literal
0000134: 36                                        ; i32.store
0000135: 02                                        ; alignment
0000136: 00                                        ; store offset
0000137: 23                                        ; global.get
0000138: 00                                        ; global index
0000139: 41                                        ; i32.const
000013a: 04                                        ; i32 literal
000013b: 6a                                        ; i32.add
000013c: 41                                        ; i32.const
000013d: 08                                        ; i32 literal
000013e: 36                                        ; i32.store
000013f: 02                                        ; alignment
0000140: 00                                        ; store offset
0000141: 23                                        ; global.get
0000142: 00                                        ; global index
0000143: 41                                        ; i32.const
0000144: 08                                        ; i32 literal
0000145: 6a                                        ; i32.add
0000146: 21                                        ; local.set
0000147: 01                                        ; local index
0000148: 20                                        ; local.get
0000149: 01                                        ; local index
000014a: 41                                        ; i32.const
000014b: 78                                        ; i32 literal
000014c: 6a                                        ; i32.add
000014d: 41                                        ; i32.const
000014e: 08                                        ; i32 literal
000014f: 41                                        ; i32.const
0000150: 08                                        ; i32 literal
0000151: 41                                        ; i32.const
0000152: 04                                        ; i32 literal
0000153: 6c                                        ; i32.mul
0000154: 6a                                        ; i32.add
0000155: 6a                                        ; i32.add
0000156: 24                                        ; global.set
0000157: 00                                        ; global index
0000158: 20                                        ; local.get
0000159: 01                                        ; local index
000015a: 41                                        ; i32.const
000015b: 00                                        ; i32 literal
000015c: 6a                                        ; i32.add
000015d: 20                                        ; local.get
000015e: 00                                        ; local index
000015f: b6                                        ; f32.demote_f64
0000160: 38                                        ; f32.store
0000161: 02                                        ; alignment
0000162: 00                                        ; store offset
0000163: 20                                        ; local.get
0000164: 01                                        ; local index
0000165: 41                                        ; i32.const
0000166: 04                                        ; i32 literal
0000167: 6a                                        ; i32.add
0000168: 41                                        ; i32.const
0000169: 00                                        ; i32 literal
000016a: b2                                        ; f32.convert_i32_s
000016b: 38                                        ; f32.store
000016c: 02                                        ; alignment
000016d: 00                                        ; store offset
000016e: 20                                        ; local.get
000016f: 01                                        ; local index
0000170: 41                                        ; i32.const
0000171: 08                                        ; i32 literal
0000172: 6a                                        ; i32.add
0000173: 41                                        ; i32.const
0000174: 23                                        ; i32 literal
0000175: b2                                        ; f32.convert_i32_s
0000176: 38                                        ; f32.store
0000177: 02                                        ; alignment
0000178: 00                                        ; store offset
0000179: 20                                        ; local.get
000017a: 01                                        ; local index
000017b: 41                                        ; i32.const
000017c: 0c                                        ; i32 literal
000017d: 6a                                        ; i32.add
000017e: 41                                        ; i32.const
000017f: 89e4 04                                   ; i32 literal
0000182: b2                                        ; f32.convert_i32_s
0000183: 38                                        ; f32.store
0000184: 02                                        ; alignment
0000185: 00                                        ; store offset
0000186: 20                                        ; local.get
0000187: 01                                        ; local index
0000188: 41                                        ; i32.const
0000189: 10                                        ; i32 literal
000018a: 6a                                        ; i32.add
000018b: 41                                        ; i32.const
000018c: 22                                        ; i32 literal
000018d: b2                                        ; f32.convert_i32_s
000018e: 38                                        ; f32.store
000018f: 02                                        ; alignment
0000190: 00                                        ; store offset
0000191: 20                                        ; local.get
0000192: 01                                        ; local index
0000193: 41                                        ; i32.const
0000194: 14                                        ; i32 literal
0000195: 6a                                        ; i32.add
0000196: 41                                        ; i32.const
0000197: 9604                                      ; i32 literal
0000199: b2                                        ; f32.convert_i32_s
000019a: 38                                        ; f32.store
000019b: 02                                        ; alignment
000019c: 00                                        ; store offset
000019d: 20                                        ; local.get
000019e: 01                                        ; local index
000019f: 41                                        ; i32.const
00001a0: 18                                        ; i32 literal
00001a1: 6a                                        ; i32.add
00001a2: 41                                        ; i32.const
00001a3: 35                                        ; i32 literal
00001a4: b2                                        ; f32.convert_i32_s
00001a5: 38                                        ; f32.store
00001a6: 02                                        ; alignment
00001a7: 00                                        ; store offset
00001a8: 20                                        ; local.get
00001a9: 01                                        ; local index
00001aa: 41                                        ; i32.const
00001ab: 1c                                        ; i32 literal
00001ac: 6a                                        ; i32.add
00001ad: 23                                        ; global.get
00001ae: 0b                                        ; global index
00001af: 41                                        ; i32.const
00001b0: 04                                        ; i32 literal
00001b1: 6a                                        ; i32.add
00001b2: 28                                        ; i32.load
00001b3: 02                                        ; alignment
00001b4: 00                                        ; load offset
00001b5: b2                                        ; f32.convert_i32_s
00001b6: 38                                        ; f32.store
00001b7: 02                                        ; alignment
00001b8: 00                                        ; store offset
00001b9: 20                                        ; local.get
00001ba: 01                                        ; local index
00001bb: 41                                        ; i32.const
00001bc: 78                                        ; i32 literal
00001bd: 6a                                        ; i32.add
00001be: 0f                                        ; return
00001bf: 0b                                        ; end
; move data: [11b, 1c0) -> [11c, 1c1)
000011a: a501                                      ; FIXUP func body size
; function body 1
00001c1: 00                                        ; func body size (guess)
00001c2: 02                                        ; local decl count
00001c3: 01                                        ; local type count
00001c4: 7e                                        ; i64
00001c5: 01                                        ; local type count
00001c6: 7f                                        ; i32
00001c7: 23                                        ; global.get
00001c8: 0b                                        ; global index
00001c9: 41                                        ; i32.const
00001ca: 08                                        ; i32 literal
00001cb: 6a                                        ; i32.add
00001cc: 41                                        ; i32.const
00001cd: 8fce 00                                   ; i32 literal
00001d0: 41                                        ; i32.const
00001d1: 08                                        ; i32 literal
00001d2: 6c                                        ; i32.mul
00001d3: 6a                                        ; i32.add
00001d4: 2b                                        ; f64.load
00001d5: 03                                        ; alignment
00001d6: 00                                        ; load offset
00001d7: b0                                        ; i64.trunc_f64_s
00001d8: 21                                        ; local.set
00001d9: 00                                        ; local index
00001da: 41                                        ; i32.const
00001db: 00                                        ; i32 literal
00001dc: 21                                        ; local.set
00001dd: 01                                        ; local index
00001de: 02                                        ; block
00001df: 40                                        ; void
00001e0: 03                                        ; loop
00001e1: 40                                        ; void
00001e2: 20                                        ; local.get
00001e3: 01                                        ; local index
00001e4: 23                                        ; global.get
00001e5: 0b                                        ; global index
00001e6: 41                                        ; i32.const
00001e7: 04                                        ; i32 literal
00001e8: 6a                                        ; i32.add
00001e9: 28                                        ; i32.load
00001ea: 02                                        ; alignment
00001eb: 00                                        ; load offset
00001ec: 41                                        ; i32.const
00001ed: 01                                        ; i32 literal
00001ee: 6b                                        ; i32.sub
00001ef: 4a                                        ; i32.gt_s
00001f0: 0d                                        ; br_if
00001f1: 01                                        ; break depth
00001f2: 23                                        ; global.get
00001f3: 0b                                        ; global index
00001f4: 41                                        ; i32.const
00001f5: 08                                        ; i32 literal
00001f6: 6a                                        ; i32.add
00001f7: 20                                        ; local.get
00001f8: 01                                        ; local index
00001f9: 41                                        ; i32.const
00001fa: 08                                        ; i32 literal
00001fb: 6c                                        ; i32.mul
00001fc: 6a                                        ; i32.add
00001fd: 2b                                        ; f64.load
00001fe: 03                                        ; alignment
00001ff: 00                                        ; load offset
0000200: 10                                        ; call
0000201: 00                                        ; function index
0000202: 20                                        ; local.get
0000203: 01                                        ; local index
0000204: 41                                        ; i32.const
0000205: 01                                        ; i32 literal
0000206: 6a                                        ; i32.add
0000207: 21                                        ; local.set
0000208: 01                                        ; local index
0000209: 0c                                        ; br
000020a: 00                                        ; break depth
000020b: 0b                                        ; end
000020c: 0b                                        ; end
000020d: 20                                        ; local.get
000020e: 00                                        ; local index
000020f: b4                                        ; f32.convert_i64_s
0000210: 0f                                        ; return
0000211: 0b                                        ; end
00001c1: 50                                        ; FIXUP func body size
; function body 2
0000212: 00                                        ; func body size (guess)
0000213: 00                                        ; local decl count
0000214: 23                                        ; global.get
0000215: 0b                                        ; global index
0000216: 41                                        ; i32.const
0000217: 08                                        ; i32 literal
0000218: 6a                                        ; i32.add
0000219: 20                                        ; local.get
000021a: 00                                        ; local index
000021b: 41                                        ; i32.const
000021c: 01                                        ; i32 literal
000021d: 6a                                        ; i32.add
000021e: 41                                        ; i32.const
000021f: 08                                        ; i32 literal
0000220: 6c                                        ; i32.mul
0000221: 6a                                        ; i32.add
0000222: 20                                        ; local.get
0000223: 00                                        ; local index
0000224: 41                                        ; i32.const
0000225: 02                                        ; i32 literal
0000226: 6c                                        ; i32.mul
0000227: b7                                        ; f64.convert_i32_s
0000228: 23                                        ; global.get
0000229: 0b                                        ; global index
000022a: 41                                        ; i32.const
000022b: 04                                        ; i32 literal
000022c: 6a                                        ; i32.add
000022d: 28                                        ; i32.load
000022e: 02                                        ; alignment
000022f: 00                                        ; load offset
0000230: 41                                        ; i32.const
0000231: 01                                        ; i32 literal
0000232: 6b                                        ; i32.sub
0000233: b7                                        ; f64.convert_i32_s
0000234: a3                                        ; f64.div
0000235: 39                                        ; f64.store
0000236: 03                                        ; alignment
0000237: 00                                        ; store offset
0000238: 23                                        ; global.get
0000239: 0b                                        ; global index
000023a: 41                                        ; i32.const
000023b: 08                                        ; i32 literal
000023c: 6a                                        ; i32.add
000023d: 20                                        ; local.get
000023e: 00                                        ; local index
000023f: 41                                        ; i32.const
0000240: e300                                      ; i32 literal
0000242: 6c                                        ; i32.mul
0000243: 41                                        ; i32.const
0000244: 08                                        ; i32 literal
0000245: 6c                                        ; i32.mul
0000246: 6a                                        ; i32.add
0000247: 2b                                        ; f64.load
0000248: 03                                        ; alignment
0000249: 00                                        ; load offset
000024a: 10                                        ; call
000024b: 00                                        ; function index
000024c: 0b                                        ; end
0000212: 3a                                        ; FIXUP func body size
; function body 3
000024d: 00                                        ; func body size (guess)
000024e: 00                                        ; local decl count
000024f: 10                                        ; call
0000250: 05                                        ; function index
0000251: 0b                                        ; end
000024d: 04                                        ; FIXUP func body size
; function body 4
0000252: 00                                        ; func body size (guess)
0000253: 01                                        ; local decl count
0000254: 01                                        ; local type count
0000255: 7f                                        ; i32
0000256: 23                                        ; global.get
0000257: 00                                        ; global index
0000258: 41                                        ; i32.const
0000259: 04                                        ; i32 literal
000025a: 36                                        ; i32.store
000025b: 02                                        ; alignment
000025c: 00                                        ; store offset
000025d: 23                                        ; global.get
000025e: 00                                        ; global index
000025f: 41                                        ; i32.const
0000260: 04                                        ; i32 literal
0000261: 6a                                        ; i32.add
0000262: 41                                        ; i32.const
0000263: 0c                                        ; i32 literal
0000264: 36                                        ; i32.store
0000265: 02                                        ; alignment
0000266: 00                                        ; store offset
0000267: 23                                        ; global.get
0000268: 00                                        ; global index
0000269: 41                                        ; i32.const
000026a: 08                                        ; i32 literal
000026b: 6a                                        ; i32.add
000026c: 21                                        ; local.set
000026d: 00                                        ; local index
000026e: 20                                        ; local.get
000026f: 00                                        ; local index
0000270: 41                                        ; i32.const
0000271: 78                                        ; i32 literal
0000272: 6a                                        ; i32.add
0000273: 41                                        ; i32.const
0000274: 08                                        ; i32 literal
0000275: 41                                        ; i32.const
0000276: 0c                                        ; i32 literal
0000277: 41                                        ; i32.const
0000278: 08                                        ; i32 literal
0000279: 6c                                        ; i32.mul
000027a: 6a                                        ; i32.add
000027b: 6a                                        ; i32.add
000027c: 24                                        ; global.set
000027d: 00                                        ; global index
000027e: 20                                        ; local.get
000027f: 00                                        ; local index
0000280: 41                                        ; i32.const
0000281: 00                                        ; i32 literal
0000282: 6a                                        ; i32.add
0000283: 41                                        ; i32.const
0000284: 18                                        ; i32 literal
0000285: b7                                        ; f64.convert_i32_s
0000286: 39                                        ; f64.store
0000287: 03                                        ; alignment
0000288: 00                                        ; store offset
0000289: 20                                        ; local.get
000028a: 00                                        ; local index
000028b: 41                                        ; i32.const
000028c: 08                                        ; i32 literal
000028d: 6a                                        ; i32.add
000028e: 41                                        ; i32.const
000028f: 17                                        ; i32 literal
0000290: b7                                        ; f64.convert_i32_s
0000291: 39                                        ; f64.store
0000292: 03                                        ; alignment
0000293: 00                                        ; store offset
0000294: 20                                        ; local.get
0000295: 00                                        ; local index
0000296: 41                                        ; i32.const
0000297: 10                                        ; i32 literal
0000298: 6a                                        ; i32.add
0000299: 41                                        ; i32.const
000029a: a803                                      ; i32 literal
000029c: b7                                        ; f64.convert_i32_s
000029d: 39                                        ; f64.store
000029e: 03                                        ; alignment
000029f: 00                                        ; store offset
00002a0: 20                                        ; local.get
00002a1: 00                                        ; local index
00002a2: 41                                        ; i32.const
00002a3: 18                                        ; i32 literal
00002a4: 6a                                        ; i32.add
00002a5: 41                                        ; i32.const
00002a6: f712                                      ; i32 literal
00002a8: b7                                        ; f64.convert_i32_s
00002a9: 39                                        ; f64.store
00002aa: 03                                        ; alignment
00002ab: 00                                        ; store offset
00002ac: 20                                        ; local.get
00002ad: 00                                        ; local index
00002ae: 41                                        ; i32.const
00002af: 20                                        ; i32 literal
00002b0: 6a                                        ; i32.add
00002b1: 41                                        ; i32.const
00002b2: b623                                      ; i32 literal
00002b4: b7                                        ; f64.convert_i32_s
00002b5: 39                                        ; f64.store
00002b6: 03                                        ; alignment
00002b7: 00                                        ; store offset
00002b8: 20                                        ; local.get
00002b9: 00                                        ; local index
00002ba: 41                                        ; i32.const
00002bb: 28                                        ; i32 literal
00002bc: 6a                                        ; i32.add
00002bd: 41                                        ; i32.const
00002be: e929                                      ; i32 literal
00002c0: b7                                        ; f64.convert_i32_s
00002c1: 39                                        ; f64.store
00002c2: 03                                        ; alignment
00002c3: 00                                        ; store offset
00002c4: 20                                        ; local.get
00002c5: 00                                        ; local index
00002c6: 41                                        ; i32.const
00002c7: 30                                        ; i32 literal
00002c8: 6a                                        ; i32.add
00002c9: 41                                        ; i32.const
00002ca: 37                                        ; i32 literal
00002cb: b7                                        ; f64.convert_i32_s
00002cc: 39                                        ; f64.store
00002cd: 03                                        ; alignment
00002ce: 00                                        ; store offset
00002cf: 20                                        ; local.get
00002d0: 00                                        ; local index
00002d1: 41                                        ; i32.const
00002d2: 38                                        ; i32 literal
00002d3: 6a                                        ; i32.add
00002d4: 41                                        ; i32.const
00002d5: 37                                        ; i32 literal
00002d6: b7                                        ; f64.convert_i32_s
00002d7: 39                                        ; f64.store
00002d8: 03                                        ; alignment
00002d9: 00                                        ; store offset
00002da: 20                                        ; local.get
00002db: 00                                        ; local index
00002dc: 41                                        ; i32.const
00002dd: c000                                      ; i32 literal
00002df: 6a                                        ; i32.add
00002e0: 41                                        ; i32.const
00002e1: 37                                        ; i32 literal
00002e2: b7                                        ; f64.convert_i32_s
00002e3: 39                                        ; f64.store
00002e4: 03                                        ; alignment
00002e5: 00                                        ; store offset
00002e6: 20                                        ; local.get
00002e7: 00                                        ; local index
00002e8: 41                                        ; i32.const
00002e9: c800                                      ; i32 literal
00002eb: 6a                                        ; i32.add
00002ec: 41                                        ; i32.const
00002ed: 37                                        ; i32 literal
00002ee: b7                                        ; f64.convert_i32_s
00002ef: 39                                        ; f64.store
00002f0: 03                                        ; alignment
00002f1: 00                                        ; store offset
00002f2: 20                                        ; local.get
00002f3: 00                                        ; local index
00002f4: 41                                        ; i32.const
00002f5: d000                                      ; i32 literal
00002f7: 6a                                        ; i32.add
00002f8: 41                                        ; i32.const
00002f9: b32b                                      ; i32 literal
00002fb: b7                                        ; f64.convert_i32_s
00002fc: 39                                        ; f64.store
00002fd: 03                                        ; alignment
00002fe: 00                                        ; store offset
00002ff: 20                                        ; local.get
0000300: 00                                        ; local index
0000301: 41                                        ; i32.const
0000302: d800                                      ; i32 literal
0000304: 6a                                        ; i32.add
0000305: 41                                        ; i32.const
0000306: 05                                        ; i32 literal
0000307: b7                                        ; f64.convert_i32_s
0000308: 39                                        ; f64.store
0000309: 03                                        ; alignment
000030a: 00                                        ; store offset
000030b: 20                                        ; local.get
000030c: 00                                        ; local index
000030d: 41                                        ; i32.const
000030e: 78                                        ; i32 literal
000030f: 6a                                        ; i32.add
0000310: 24                                        ; global.set
0000311: 0b                                        ; global index
0000312: 0b                                        ; end
; move data: [253, 313) -> [254, 314)
0000252: c001                                      ; FIXUP func body size
; move data: [119, 314) -> [11a, 315)
0000118: fb03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0114 0560 017c 0060 
0000010: 0001 7f60 0001 7d60 017f 0060 0000 0221 
0000020: 0207 636f 6e73 6f6c 6503 6c6f 6700 0003 
0000030: 656e 760a 6279 7465 6368 756e 6b73 0200 
0000040: 0103 0605 0102 0304 0406 790c 7f01 410b 
0000050: 0b7c 0144 7457 148b 0abf 0540 0b7c 0144 
0000060: 112d 4454 fb21 0940 0b7f 0141 ffff ffff 
0000070: 070b 7e01 42ff ffff ffff ffff ffff 000b 
0000080: 7d01 43ff ff7f 7f0b 7c01 44ff ffff ffff 
0000090: ffef 7f0b 7f01 4180 8080 8078 0b7e 0142 
00000a0: 8080 8080 8080 8080 807f 0b7d 0143 ffff 
00000b0: 7fff 0b7c 0144 ffff ffff ffff efff 0b7f 
00000c0: 0141 000b 074e 031a 6172 7261 7954 6573 
00000d0: 7432 2e72 6574 7572 6e41 7272 6179 5465 
00000e0: 7374 0001 1361 7272 6179 5465 7374 322e 
00000f0: 7265 6164 5465 7374 0002 1761 7272 6179 
0000100: 5465 7374 322e 7365 7456 616c 7565 5465 
0000110: 7374 0003 0801 040a fb03 05a5 0102 017c 
0000120: 017f 230b 4108 6a41 0141 086c 6a2b 0300 
0000130: 2100 2300 4103 3602 0023 0041 046a 4108 
0000140: 3602 0023 0041 086a 2101 2001 4178 6a41 
0000150: 0841 0841 046c 6a6a 2400 2001 4100 6a20 
0000160: 00b6 3802 0020 0141 046a 4100 b238 0200 
0000170: 2001 4108 6a41 23b2 3802 0020 0141 0c6a 
0000180: 4189 e404 b238 0200 2001 4110 6a41 22b2 
0000190: 3802 0020 0141 146a 4196 04b2 3802 0020 
00001a0: 0141 186a 4135 b238 0200 2001 411c 6a23 
00001b0: 0b41 046a 2802 00b2 3802 0020 0141 786a 
00001c0: 0f0b 5002 017e 017f 230b 4108 6a41 8fce 
00001d0: 0041 086c 6a2b 0300 b021 0041 0021 0102 
00001e0: 4003 4020 0123 0b41 046a 2802 0041 016b 
00001f0: 4a0d 0123 0b41 086a 2001 4108 6c6a 2b03 
0000200: 0010 0020 0141 016a 2101 0c00 0b0b 2000 
0000210: b40f 0b3a 0023 0b41 086a 2000 4101 6a41 
0000220: 086c 6a20 0041 026c b723 0b41 046a 2802 
0000230: 0041 016b b7a3 3903 0023 0b41 086a 2000 
0000240: 41e3 006c 4108 6c6a 2b03 0010 000b 0400 
0000250: 1005 0bc0 0101 017f 2300 4104 3602 0023 
0000260: 0041 046a 410c 3602 0023 0041 086a 2100 
0000270: 2000 4178 6a41 0841 0c41 086c 6a6a 2400 
0000280: 2000 4100 6a41 18b7 3903 0020 0041 086a 
0000290: 4117 b739 0300 2000 4110 6a41 a803 b739 
00002a0: 0300 2000 4118 6a41 f712 b739 0300 2000 
00002b0: 4120 6a41 b623 b739 0300 2000 4128 6a41 
00002c0: e929 b739 0300 2000 4130 6a41 37b7 3903 
00002d0: 0020 0041 386a 4137 b739 0300 2000 41c0 
00002e0: 006a 4137 b739 0300 2000 41c8 006a 4137 
00002f0: b739 0300 2000 41d0 006a 41b3 2bb7 3903 
0000300: 0020 0041 d800 6a41 05b7 3903 0020 0041 
0000310: 786a 240b 0b                            
