0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 00                                        ; num params
0000011: 01                                        ; num results
0000012: 7f                                        ; i32
; type 2
0000013: 60                                        ; func
0000014: 00                                        ; num params
0000015: 01                                        ; num results
0000016: 7d                                        ; f32
; type 3
0000017: 60                                        ; func
0000018: 01                                        ; num params
0000019: 7f                                        ; i32
000001a: 00                                        ; num results
; type 4
000001b: 60                                        ; func
000001c: 00                                        ; num params
000001d: 00                                        ; num results
0000009: 14                                        ; FIXUP section size
; section "Import" (2)
000001e: 02                                        ; section code
000001f: 00                                        ; section size (guess)
0000020: 02                                        ; num imports
; import header 0
0000021: 07                                        ; string length
0000022: 636f 6e73 6f6c 65                        console  ; import module name
0000029: 03                                        ; string length
000002a: 6c6f 67                                  log  ; import field name
000002d: 00                                        ; import kind
000002e: 00                                        ; import signature index
; import header 1
000002f: 03                                        ; string length
0000030: 656e 76                                  env  ; import module name
0000033: 0a                                        ; string length
0000034: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000003e: 02                                        ; import kind
000003f: 00                                        ; limits: flags
0000040: 01                                        ; limits: initial
000001f: 21                                        ; FIXUP section size
; section "Function" (3)
0000041: 03                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 05                                        ; num functions
0000044: 01                                        ; function 0 signature index
0000045: 02                                        ; function 1 signature index
0000046: 03                                        ; function 2 signature index
0000047: 04                                        ; function 3 signature index
0000048: 04                                        ; function 4 signature index
0000042: 06                                        ; FIXUP section size
; section "Global" (6)
0000049: 06                                        ; section code
000004a: 00                                        ; section size (guess)
000004b: 02                                        ; num globals
000004c: 7f                                        ; i32
000004d: 01                                        ; global mutability
000004e: 41                                        ; i32.const
000004f: 0b                                        ; i32 literal
0000050: 0b                                        ; end
0000051: 7f                                        ; i32
0000052: 01                                        ; global mutability
0000053: 41                                        ; i32.const
0000054: 00                                        ; i32 literal
0000055: 0b                                        ; end
000004a: 0b                                        ; FIXUP section size
; section "Export" (7)
0000056: 07                                        ; section code
0000057: 00                                        ; section size (guess)
0000058: 03                                        ; num exports
0000059: 1a                                        ; string length
000005a: 6172 7261 7954 6573 7432 2e72 6574 7572  arrayTest2.retur
000006a: 6e41 7272 6179 5465 7374                 nArrayTest  ; export name
0000074: 00                                        ; export kind
0000075: 01                                        ; export func index
0000076: 13                                        ; string length
0000077: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
0000087: 6573 74                                  est  ; export name
000008a: 00                                        ; export kind
000008b: 02                                        ; export func index
000008c: 17                                        ; string length
000008d: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
000009d: 6c75 6554 6573 74                        lueTest  ; export name
00000a4: 00                                        ; export kind
00000a5: 03                                        ; export func index
0000057: 4e                                        ; FIXUP section size
; section "Start" (8)
00000a6: 08                                        ; section code
00000a7: 00                                        ; section size (guess)
00000a8: 04                                        ; start func index
00000a7: 01                                        ; FIXUP section size
; section "Code" (10)
00000a9: 0a                                        ; section code
00000aa: 00                                        ; section size (guess)
00000ab: 05                                        ; num functions
; function body 0
00000ac: 00                                        ; func body size (guess)
00000ad: 02                                        ; local decl count
00000ae: 01                                        ; local type count
00000af: 7c                                        ; f64
00000b0: 01                                        ; local type count
00000b1: 7f                                        ; i32
00000b2: 23                                        ; global.get
00000b3: 01                                        ; global index
00000b4: 41                                        ; i32.const
00000b5: 08                                        ; i32 literal
00000b6: 6a                                        ; i32.add
00000b7: 41                                        ; i32.const
00000b8: 01                                        ; i32 literal
00000b9: 41                                        ; i32.const
00000ba: 08                                        ; i32 literal
00000bb: 6c                                        ; i32.mul
00000bc: 6a                                        ; i32.add
00000bd: 2b                                        ; f64.load
00000be: 03                                        ; alignment
00000bf: 00                                        ; load offset
00000c0: 21                                        ; local.set
00000c1: 00                                        ; local index
00000c2: 23                                        ; global.get
00000c3: 00                                        ; global index
00000c4: 41                                        ; i32.const
00000c5: 03                                        ; i32 literal
00000c6: 36                                        ; i32.store
00000c7: 02                                        ; alignment
00000c8: 00                                        ; store offset
00000c9: 23                                        ; global.get
00000ca: 00                                        ; global index
00000cb: 41                                        ; i32.const
00000cc: 04                                        ; i32 literal
00000cd: 6a                                        ; i32.add
00000ce: 41                                        ; i32.const
00000cf: 08                                        ; i32 literal
00000d0: 36                                        ; i32.store
00000d1: 02                                        ; alignment
00000d2: 00                                        ; store offset
00000d3: 23                                        ; global.get
00000d4: 00                                        ; global index
00000d5: 41                                        ; i32.const
00000d6: 08                                        ; i32 literal
00000d7: 6a                                        ; i32.add
00000d8: 21                                        ; local.set
00000d9: 01                                        ; local index
00000da: 20                                        ; local.get
00000db: 01                                        ; local index
00000dc: 41                                        ; i32.const
00000dd: 00                                        ; i32 literal
00000de: 6a                                        ; i32.add
00000df: 20                                        ; local.get
00000e0: 00                                        ; local index
00000e1: b6                                        ; f32.demote_f64
00000e2: 38                                        ; f32.store
00000e3: 02                                        ; alignment
00000e4: 00                                        ; store offset
00000e5: 20                                        ; local.get
00000e6: 01                                        ; local index
00000e7: 41                                        ; i32.const
00000e8: 04                                        ; i32 literal
00000e9: 6a                                        ; i32.add
00000ea: 41                                        ; i32.const
00000eb: 00                                        ; i32 literal
00000ec: b2                                        ; f32.convert_i32_s
00000ed: 38                                        ; f32.store
00000ee: 02                                        ; alignment
00000ef: 00                                        ; store offset
00000f0: 20                                        ; local.get
00000f1: 01                                        ; local index
00000f2: 41                                        ; i32.const
00000f3: 08                                        ; i32 literal
00000f4: 6a                                        ; i32.add
00000f5: 41                                        ; i32.const
00000f6: 23                                        ; i32 literal
00000f7: b2                                        ; f32.convert_i32_s
00000f8: 38                                        ; f32.store
00000f9: 02                                        ; alignment
00000fa: 00                                        ; store offset
00000fb: 20                                        ; local.get
00000fc: 01                                        ; local index
00000fd: 41                                        ; i32.const
00000fe: 0c                                        ; i32 literal
00000ff: 6a                                        ; i32.add
0000100: 41                                        ; i32.const
0000101: 89e4 04                                   ; i32 literal
0000104: b2                                        ; f32.convert_i32_s
0000105: 38                                        ; f32.store
0000106: 02                                        ; alignment
0000107: 00                                        ; store offset
0000108: 20                                        ; local.get
0000109: 01                                        ; local index
000010a: 41                                        ; i32.const
000010b: 10                                        ; i32 literal
000010c: 6a                                        ; i32.add
000010d: 41                                        ; i32.const
000010e: 22                                        ; i32 literal
000010f: b2                                        ; f32.convert_i32_s
0000110: 38                                        ; f32.store
0000111: 02                                        ; alignment
0000112: 00                                        ; store offset
0000113: 20                                        ; local.get
0000114: 01                                        ; local index
0000115: 41                                        ; i32.const
0000116: 14                                        ; i32 literal
0000117: 6a                                        ; i32.add
0000118: 41                                        ; i32.const
0000119: 9604                                      ; i32 literal
000011b: b2                                        ; f32.convert_i32_s
000011c: 38                                        ; f32.store
000011d: 02                                        ; alignment
000011e: 00                                        ; store offset
000011f: 20                                        ; local.get
0000120: 01                                        ; local index
0000121: 41                                        ; i32.const
0000122: 18                                        ; i32 literal
0000123: 6a                                        ; i32.add
0000124: 41                                        ; i32.const
0000125: 35                                        ; i32 literal
0000126: b2                                        ; f32.convert_i32_s
0000127: 38                                        ; f32.store
0000128: 02                                        ; alignment
0000129: 00                                        ; store offset
000012a: 20                                        ; local.get
000012b: 01                                        ; local index
000012c: 41                                        ; i32.const
000012d: 1c                                        ; i32 literal
000012e: 6a                                        ; i32.add
000012f: 23                                        ; global.get
0000130: 01                                        ; global index
0000131: 41                                        ; i32.const
0000132: 04                                        ; i32 literal
0000133: 6a                                        ; i32.add
0000134: 28                                        ; i32.load
0000135: 02                                        ; alignment
0000136: 00                                        ; load offset
0000137: b2                                        ; f32.convert_i32_s
0000138: 38                                        ; f32.store
0000139: 02                                        ; alignment
000013a: 00                                        ; store offset
000013b: 20                                        ; local.get
000013c: 01                                        ; local index
000013d: 41                                        ; i32.const
000013e: 78                                        ; i32 literal
000013f: 6a                                        ; i32.add
0000140: 41                                        ; i32.const
0000141: 28                                        ; i32 literal
0000142: 6a                                        ; i32.add
0000143: 24                                        ; global.set
0000144: 00                                        ; global index
0000145: 20                                        ; local.get
0000146: 01                                        ; local index
0000147: 41                                        ; i32.const
0000148: 78                                        ; i32 literal
0000149: 6a                                        ; i32.add
000014a: 0f                                        ; return
000014b: 0b                                        ; end
; move data: [ad, 14c) -> [ae, 14d)
00000ac: 9f01                                      ; FIXUP func body size
; function body 1
000014d: 00                                        ; func body size (guess)
000014e: 02                                        ; local decl count
000014f: 01                                        ; local type count
0000150: 7e                                        ; i64
0000151: 01                                        ; local type count
0000152: 7f                                        ; i32
0000153: 23                                        ; global.get
0000154: 01                                        ; global index
0000155: 41                                        ; i32.const
0000156: 08                                        ; i32 literal
0000157: 6a                                        ; i32.add
0000158: 41                                        ; i32.const
0000159: 8fce 00                                   ; i32 literal
000015c: 41                                        ; i32.const
000015d: 08                                        ; i32 literal
000015e: 6c                                        ; i32.mul
000015f: 6a                                        ; i32.add
0000160: 2b                                        ; f64.load
0000161: 03                                        ; alignment
0000162: 00                                        ; load offset
0000163: b0                                        ; i64.trunc_f64_s
0000164: 21                                        ; local.set
0000165: 00                                        ; local index
0000166: 41                                        ; i32.const
0000167: 00                                        ; i32 literal
0000168: 21                                        ; local.set
0000169: 01                                        ; local index
000016a: 02                                        ; block
000016b: 40                                        ; void
000016c: 03                                        ; loop
000016d: 40                                        ; void
000016e: 20                                        ; local.get
000016f: 01                                        ; local index
0000170: 23                                        ; global.get
0000171: 01                                        ; global index
0000172: 41                                        ; i32.const
0000173: 04                                        ; i32 literal
0000174: 6a                                        ; i32.add
0000175: 28                                        ; i32.load
0000176: 02                                        ; alignment
0000177: 00                                        ; load offset
0000178: 41                                        ; i32.const
0000179: 01                                        ; i32 literal
000017a: 6b                                        ; i32.sub
000017b: 4a                                        ; i32.gt_s
000017c: 0d                                        ; br_if
000017d: 01                                        ; break depth
000017e: 23                                        ; global.get
000017f: 01                                        ; global index
0000180: 41                                        ; i32.const
0000181: 08                                        ; i32 literal
0000182: 6a                                        ; i32.add
0000183: 20                                        ; local.get
0000184: 01                                        ; local index
0000185: 41                                        ; i32.const
0000186: 08                                        ; i32 literal
0000187: 6c                                        ; i32.mul
0000188: 6a                                        ; i32.add
0000189: 2b                                        ; f64.load
000018a: 03                                        ; alignment
000018b: 00                                        ; load offset
000018c: 10                                        ; call
000018d: 00                                        ; function index
000018e: 20                                        ; local.get
000018f: 01                                        ; local index
0000190: 41                                        ; i32.const
0000191: 01                                        ; i32 literal
0000192: 6a                                        ; i32.add
0000193: 21                                        ; local.set
0000194: 01                                        ; local index
0000195: 0c                                        ; br
0000196: 00                                        ; break depth
0000197: 0b                                        ; end
0000198: 0b                                        ; end
0000199: 20                                        ; local.get
000019a: 00                                        ; local index
000019b: b4                                        ; f32.convert_i64_s
000019c: 0f                                        ; return
000019d: 0b                                        ; end
000014d: 50                                        ; FIXUP func body size
; function body 2
000019e: 00                                        ; func body size (guess)
000019f: 00                                        ; local decl count
00001a0: 23                                        ; global.get
00001a1: 01                                        ; global index
00001a2: 41                                        ; i32.const
00001a3: 08                                        ; i32 literal
00001a4: 6a                                        ; i32.add
00001a5: 20                                        ; local.get
00001a6: 00                                        ; local index
00001a7: 41                                        ; i32.const
00001a8: 01                                        ; i32 literal
00001a9: 6a                                        ; i32.add
00001aa: 41                                        ; i32.const
00001ab: 08                                        ; i32 literal
00001ac: 6c                                        ; i32.mul
00001ad: 6a                                        ; i32.add
00001ae: 20                                        ; local.get
00001af: 00                                        ; local index
00001b0: 41                                        ; i32.const
00001b1: 02                                        ; i32 literal
00001b2: 6c                                        ; i32.mul
00001b3: b7                                        ; f64.convert_i32_s
00001b4: 23                                        ; global.get
00001b5: 01                                        ; global index
00001b6: 41                                        ; i32.const
00001b7: 04                                        ; i32 literal
00001b8: 6a                                        ; i32.add
00001b9: 28                                        ; i32.load
00001ba: 02                                        ; alignment
00001bb: 00                                        ; load offset
00001bc: 41                                        ; i32.const
00001bd: 01                                        ; i32 literal
00001be: 6b                                        ; i32.sub
00001bf: b7                                        ; f64.convert_i32_s
00001c0: a3                                        ; f64.div
00001c1: 39                                        ; f64.store
00001c2: 03                                        ; alignment
00001c3: 00                                        ; store offset
00001c4: 23                                        ; global.get
00001c5: 01                                        ; global index
00001c6: 41                                        ; i32.const
00001c7: 08                                        ; i32 literal
00001c8: 6a                                        ; i32.add
00001c9: 20                                        ; local.get
00001ca: 00                                        ; local index
00001cb: 41                                        ; i32.const
00001cc: e300                                      ; i32 literal
00001ce: 6c                                        ; i32.mul
00001cf: 41                                        ; i32.const
00001d0: 08                                        ; i32 literal
00001d1: 6c                                        ; i32.mul
00001d2: 6a                                        ; i32.add
00001d3: 2b                                        ; f64.load
00001d4: 03                                        ; alignment
00001d5: 00                                        ; load offset
00001d6: 10                                        ; call
00001d7: 00                                        ; function index
00001d8: 0b                                        ; end
000019e: 3a                                        ; FIXUP func body size
; function body 3
00001d9: 00                                        ; func body size (guess)
00001da: 00                                        ; local decl count
00001db: 10                                        ; call
00001dc: 05                                        ; function index
00001dd: 0b                                        ; end
00001d9: 04                                        ; FIXUP func body size
; function body 4
00001de: 00                                        ; func body size (guess)
00001df: 01                                        ; local decl count
00001e0: 01                                        ; local type count
00001e1: 7f                                        ; i32
00001e2: 23                                        ; global.get
00001e3: 00                                        ; global index
00001e4: 41                                        ; i32.const
00001e5: 04                                        ; i32 literal
00001e6: 36                                        ; i32.store
00001e7: 02                                        ; alignment
00001e8: 00                                        ; store offset
00001e9: 23                                        ; global.get
00001ea: 00                                        ; global index
00001eb: 41                                        ; i32.const
00001ec: 04                                        ; i32 literal
00001ed: 6a                                        ; i32.add
00001ee: 41                                        ; i32.const
00001ef: 0c                                        ; i32 literal
00001f0: 36                                        ; i32.store
00001f1: 02                                        ; alignment
00001f2: 00                                        ; store offset
00001f3: 23                                        ; global.get
00001f4: 00                                        ; global index
00001f5: 41                                        ; i32.const
00001f6: 08                                        ; i32 literal
00001f7: 6a                                        ; i32.add
00001f8: 21                                        ; local.set
00001f9: 00                                        ; local index
00001fa: 20                                        ; local.get
00001fb: 00                                        ; local index
00001fc: 41                                        ; i32.const
00001fd: 00                                        ; i32 literal
00001fe: 6a                                        ; i32.add
00001ff: 41                                        ; i32.const
0000200: 18                                        ; i32 literal
0000201: b7                                        ; f64.convert_i32_s
0000202: 39                                        ; f64.store
0000203: 03                                        ; alignment
0000204: 00                                        ; store offset
0000205: 20                                        ; local.get
0000206: 00                                        ; local index
0000207: 41                                        ; i32.const
0000208: 08                                        ; i32 literal
0000209: 6a                                        ; i32.add
000020a: 41                                        ; i32.const
000020b: 17                                        ; i32 literal
000020c: b7                                        ; f64.convert_i32_s
000020d: 39                                        ; f64.store
000020e: 03                                        ; alignment
000020f: 00                                        ; store offset
0000210: 20                                        ; local.get
0000211: 00                                        ; local index
0000212: 41                                        ; i32.const
0000213: 10                                        ; i32 literal
0000214: 6a                                        ; i32.add
0000215: 41                                        ; i32.const
0000216: a803                                      ; i32 literal
0000218: b7                                        ; f64.convert_i32_s
0000219: 39                                        ; f64.store
000021a: 03                                        ; alignment
000021b: 00                                        ; store offset
000021c: 20                                        ; local.get
000021d: 00                                        ; local index
000021e: 41                                        ; i32.const
000021f: 18                                        ; i32 literal
0000220: 6a                                        ; i32.add
0000221: 41                                        ; i32.const
0000222: f712                                      ; i32 literal
0000224: b7                                        ; f64.convert_i32_s
0000225: 39                                        ; f64.store
0000226: 03                                        ; alignment
0000227: 00                                        ; store offset
0000228: 20                                        ; local.get
0000229: 00                                        ; local index
000022a: 41                                        ; i32.const
000022b: 20                                        ; i32 literal
000022c: 6a                                        ; i32.add
000022d: 41                                        ; i32.const
000022e: b623                                      ; i32 literal
0000230: b7                                        ; f64.convert_i32_s
0000231: 39                                        ; f64.store
0000232: 03                                        ; alignment
0000233: 00                                        ; store offset
0000234: 20                                        ; local.get
0000235: 00                                        ; local index
0000236: 41                                        ; i32.const
0000237: 28                                        ; i32 literal
0000238: 6a                                        ; i32.add
0000239: 41                                        ; i32.const
000023a: e929                                      ; i32 literal
000023c: b7                                        ; f64.convert_i32_s
000023d: 39                                        ; f64.store
000023e: 03                                        ; alignment
000023f: 00                                        ; store offset
0000240: 20                                        ; local.get
0000241: 00                                        ; local index
0000242: 41                                        ; i32.const
0000243: 30                                        ; i32 literal
0000244: 6a                                        ; i32.add
0000245: 41                                        ; i32.const
0000246: 37                                        ; i32 literal
0000247: b7                                        ; f64.convert_i32_s
0000248: 39                                        ; f64.store
0000249: 03                                        ; alignment
000024a: 00                                        ; store offset
000024b: 20                                        ; local.get
000024c: 00                                        ; local index
000024d: 41                                        ; i32.const
000024e: 38                                        ; i32 literal
000024f: 6a                                        ; i32.add
0000250: 41                                        ; i32.const
0000251: 37                                        ; i32 literal
0000252: b7                                        ; f64.convert_i32_s
0000253: 39                                        ; f64.store
0000254: 03                                        ; alignment
0000255: 00                                        ; store offset
0000256: 20                                        ; local.get
0000257: 00                                        ; local index
0000258: 41                                        ; i32.const
0000259: c000                                      ; i32 literal
000025b: 6a                                        ; i32.add
000025c: 41                                        ; i32.const
000025d: 37                                        ; i32 literal
000025e: b7                                        ; f64.convert_i32_s
000025f: 39                                        ; f64.store
0000260: 03                                        ; alignment
0000261: 00                                        ; store offset
0000262: 20                                        ; local.get
0000263: 00                                        ; local index
0000264: 41                                        ; i32.const
0000265: c800                                      ; i32 literal
0000267: 6a                                        ; i32.add
0000268: 41                                        ; i32.const
0000269: 37                                        ; i32 literal
000026a: b7                                        ; f64.convert_i32_s
000026b: 39                                        ; f64.store
000026c: 03                                        ; alignment
000026d: 00                                        ; store offset
000026e: 20                                        ; local.get
000026f: 00                                        ; local index
0000270: 41                                        ; i32.const
0000271: d000                                      ; i32 literal
0000273: 6a                                        ; i32.add
0000274: 41                                        ; i32.const
0000275: b32b                                      ; i32 literal
0000277: b7                                        ; f64.convert_i32_s
0000278: 39                                        ; f64.store
0000279: 03                                        ; alignment
000027a: 00                                        ; store offset
000027b: 20                                        ; local.get
000027c: 00                                        ; local index
000027d: 41                                        ; i32.const
000027e: d800                                      ; i32 literal
0000280: 6a                                        ; i32.add
0000281: 41                                        ; i32.const
0000282: 05                                        ; i32 literal
0000283: b7                                        ; f64.convert_i32_s
0000284: 39                                        ; f64.store
0000285: 03                                        ; alignment
0000286: 00                                        ; store offset
0000287: 20                                        ; local.get
0000288: 00                                        ; local index
0000289: 41                                        ; i32.const
000028a: 78                                        ; i32 literal
000028b: 6a                                        ; i32.add
000028c: 41                                        ; i32.const
000028d: e800                                      ; i32 literal
000028f: 6a                                        ; i32.add
0000290: 24                                        ; global.set
0000291: 00                                        ; global index
0000292: 20                                        ; local.get
0000293: 00                                        ; local index
0000294: 41                                        ; i32.const
0000295: 78                                        ; i32 literal
0000296: 6a                                        ; i32.add
0000297: 24                                        ; global.set
0000298: 01                                        ; global index
0000299: 0b                                        ; end
; move data: [1df, 29a) -> [1e0, 29b)
00001de: bb01                                      ; FIXUP func body size
; move data: [ab, 29b) -> [ac, 29c)
00000aa: f003                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0114 0560 017c 0060 
0000010: 0001 7f60 0001 7d60 017f 0060 0000 0221 
0000020: 0207 636f 6e73 6f6c 6503 6c6f 6700 0003 
0000030: 656e 760a 6279 7465 6368 756e 6b73 0200 
0000040: 0103 0605 0102 0304 0406 0b02 7f01 410b 
0000050: 0b7f 0141 000b 074e 031a 6172 7261 7954 
0000060: 6573 7432 2e72 6574 7572 6e41 7272 6179 
0000070: 5465 7374 0001 1361 7272 6179 5465 7374 
0000080: 322e 7265 6164 5465 7374 0002 1761 7272 
0000090: 6179 5465 7374 322e 7365 7456 616c 7565 
00000a0: 5465 7374 0003 0801 040a f003 059f 0102 
00000b0: 017c 017f 2301 4108 6a41 0141 086c 6a2b 
00000c0: 0300 2100 2300 4103 3602 0023 0041 046a 
00000d0: 4108 3602 0023 0041 086a 2101 2001 4100 
00000e0: 6a20 00b6 3802 0020 0141 046a 4100 b238 
00000f0: 0200 2001 4108 6a41 23b2 3802 0020 0141 
0000100: 0c6a 4189 e404 b238 0200 2001 4110 6a41 
0000110: 22b2 3802 0020 0141 146a 4196 04b2 3802 
0000120: 0020 0141 186a 4135 b238 0200 2001 411c 
0000130: 6a23 0141 046a 2802 00b2 3802 0020 0141 
0000140: 786a 4128 6a24 0020 0141 786a 0f0b 5002 
0000150: 017e 017f 2301 4108 6a41 8fce 0041 086c 
0000160: 6a2b 0300 b021 0041 0021 0102 4003 4020 
0000170: 0123 0141 046a 2802 0041 016b 4a0d 0123 
0000180: 0141 086a 2001 4108 6c6a 2b03 0010 0020 
0000190: 0141 016a 2101 0c00 0b0b 2000 b40f 0b3a 
00001a0: 0023 0141 086a 2000 4101 6a41 086c 6a20 
00001b0: 0041 026c b723 0141 046a 2802 0041 016b 
00001c0: b7a3 3903 0023 0141 086a 2000 41e3 006c 
00001d0: 4108 6c6a 2b03 0010 000b 0400 1005 0bbb 
00001e0: 0101 017f 2300 4104 3602 0023 0041 046a 
00001f0: 410c 3602 0023 0041 086a 2100 2000 4100 
0000200: 6a41 18b7 3903 0020 0041 086a 4117 b739 
0000210: 0300 2000 4110 6a41 a803 b739 0300 2000 
0000220: 4118 6a41 f712 b739 0300 2000 4120 6a41 
0000230: b623 b739 0300 2000 4128 6a41 e929 b739 
0000240: 0300 2000 4130 6a41 37b7 3903 0020 0041 
0000250: 386a 4137 b739 0300 2000 41c0 006a 4137 
0000260: b739 0300 2000 41c8 006a 4137 b739 0300 
0000270: 2000 41d0 006a 41b3 2bb7 3903 0020 0041 
0000280: d800 6a41 05b7 3903 0020 0041 786a 41e8 
0000290: 006a 2400 2000 4178 6a24 010b           
