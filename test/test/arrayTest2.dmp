0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 01                                        ; num params
0000011: 7f                                        ; i32
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7f                                        ; i32
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 03                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 7f                                        ; i32
000001f: 00                                        ; num results
; type 4
0000020: 60                                        ; func
0000021: 00                                        ; num params
0000022: 01                                        ; num results
0000023: 7d                                        ; f32
; type 5
0000024: 60                                        ; func
0000025: 01                                        ; num params
0000026: 7f                                        ; i32
0000027: 00                                        ; num results
; type 6
0000028: 60                                        ; func
0000029: 00                                        ; num params
000002a: 00                                        ; num results
0000009: 21                                        ; FIXUP section size
; section "Import" (2)
000002b: 02                                        ; section code
000002c: 00                                        ; section size (guess)
000002d: 07                                        ; num imports
; import header 0
000002e: 07                                        ; string length
000002f: 636f 6e73 6f6c 65                        console  ; import module name
0000036: 03                                        ; string length
0000037: 6c6f 67                                  log  ; import field name
000003a: 00                                        ; import kind
000003b: 00                                        ; import signature index
; import header 1
000003c: 05                                        ; string length
000003d: 4172 7261 79                             Array  ; import module name
0000042: 06                                        ; string length
0000043: 6c65 6e67 7468                           length  ; import field name
0000049: 00                                        ; import kind
000004a: 01                                        ; import signature index
; import header 2
000004b: 05                                        ; string length
000004c: 4172 7261 79                             Array  ; import module name
0000051: 06                                        ; string length
0000052: 6372 6561 7465                           create  ; import field name
0000058: 00                                        ; import kind
0000059: 01                                        ; import signature index
; import header 3
000005a: 05                                        ; string length
000005b: 4172 7261 79                             Array  ; import module name
0000060: 04                                        ; string length
0000061: 7075 7368                                push  ; import field name
0000065: 00                                        ; import kind
0000066: 02                                        ; import signature index
; import header 4
0000067: 05                                        ; string length
0000068: 4172 7261 79                             Array  ; import module name
000006d: 03                                        ; string length
000006e: 6765 74                                  get  ; import field name
0000071: 00                                        ; import kind
0000072: 02                                        ; import signature index
; import header 5
0000073: 05                                        ; string length
0000074: 4172 7261 79                             Array  ; import module name
0000079: 03                                        ; string length
000007a: 7365 74                                  set  ; import field name
000007d: 00                                        ; import kind
000007e: 03                                        ; import signature index
; import header 6
000007f: 03                                        ; string length
0000080: 656e 76                                  env  ; import module name
0000083: 0a                                        ; string length
0000084: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000008e: 02                                        ; import kind
000008f: 00                                        ; limits: flags
0000090: 01                                        ; limits: initial
000002c: 64                                        ; FIXUP section size
; section "Function" (3)
0000091: 03                                        ; section code
0000092: 00                                        ; section size (guess)
0000093: 03                                        ; num functions
0000094: 04                                        ; function 0 signature index
0000095: 05                                        ; function 1 signature index
0000096: 06                                        ; function 2 signature index
0000092: 04                                        ; FIXUP section size
; section "Global" (6)
0000097: 06                                        ; section code
0000098: 00                                        ; section size (guess)
0000099: 01                                        ; num globals
000009a: 7f                                        ; i32
000009b: 01                                        ; global mutability
000009c: 41                                        ; i32.const
000009d: 00                                        ; i32 literal
000009e: 0b                                        ; end
0000098: 06                                        ; FIXUP section size
; section "Export" (7)
000009f: 07                                        ; section code
00000a0: 00                                        ; section size (guess)
00000a1: 02                                        ; num exports
00000a2: 13                                        ; string length
00000a3: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
00000b3: 6573 74                                  est  ; export name
00000b6: 00                                        ; export kind
00000b7: 06                                        ; export func index
00000b8: 17                                        ; string length
00000b9: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
00000c9: 6c75 6554 6573 74                        lueTest  ; export name
00000d0: 00                                        ; export kind
00000d1: 07                                        ; export func index
00000a0: 31                                        ; FIXUP section size
; section "Start" (8)
00000d2: 08                                        ; section code
00000d3: 00                                        ; section size (guess)
00000d4: 08                                        ; start func index
00000d3: 01                                        ; FIXUP section size
; section "Code" (10)
00000d5: 0a                                        ; section code
00000d6: 00                                        ; section size (guess)
00000d7: 03                                        ; num functions
; function body 0
00000d8: 00                                        ; func body size (guess)
00000d9: 02                                        ; local decl count
00000da: 01                                        ; local type count
00000db: 7e                                        ; i64
00000dc: 01                                        ; local type count
00000dd: 7f                                        ; i32
00000de: 23                                        ; global.get
00000df: 00                                        ; global index
00000e0: 41                                        ; i32.const
00000e1: 8fce 00                                   ; i32 literal
00000e4: 41                                        ; i32.const
00000e5: 08                                        ; i32 literal
00000e6: 6c                                        ; i32.mul
00000e7: 6a                                        ; i32.add
00000e8: 2b                                        ; f64.load
00000e9: 03                                        ; alignment
00000ea: 00                                        ; load offset
00000eb: b0                                        ; i64.trunc_f64_s
00000ec: 21                                        ; local.set
00000ed: 00                                        ; local index
00000ee: 41                                        ; i32.const
00000ef: 00                                        ; i32 literal
00000f0: 21                                        ; local.set
00000f1: 01                                        ; local index
00000f2: 02                                        ; block
00000f3: 40                                        ; void
00000f4: 03                                        ; loop
00000f5: 40                                        ; void
00000f6: 20                                        ; local.get
00000f7: 01                                        ; local index
00000f8: 23                                        ; global.get
00000f9: 00                                        ; global index
00000fa: 10                                        ; call
00000fb: 01                                        ; function index
00000fc: 41                                        ; i32.const
00000fd: 01                                        ; i32 literal
00000fe: 6b                                        ; i32.sub
00000ff: 4a                                        ; i32.gt_s
0000100: 0d                                        ; br_if
0000101: 01                                        ; break depth
0000102: 23                                        ; global.get
0000103: 00                                        ; global index
0000104: 20                                        ; local.get
0000105: 01                                        ; local index
0000106: 41                                        ; i32.const
0000107: 08                                        ; i32 literal
0000108: 6c                                        ; i32.mul
0000109: 6a                                        ; i32.add
000010a: 2b                                        ; f64.load
000010b: 03                                        ; alignment
000010c: 00                                        ; load offset
000010d: 10                                        ; call
000010e: 00                                        ; function index
000010f: 20                                        ; local.get
0000110: 01                                        ; local index
0000111: 41                                        ; i32.const
0000112: 01                                        ; i32 literal
0000113: 6a                                        ; i32.add
0000114: 21                                        ; local.set
0000115: 01                                        ; local index
0000116: 0c                                        ; br
0000117: 00                                        ; break depth
0000118: 0b                                        ; end
0000119: 0b                                        ; end
000011a: 20                                        ; local.get
000011b: 00                                        ; local index
000011c: b4                                        ; f32.convert_i64_s
000011d: 0f                                        ; return
000011e: 0b                                        ; end
00000d8: 46                                        ; FIXUP func body size
; function body 1
000011f: 00                                        ; func body size (guess)
0000120: 00                                        ; local decl count
0000121: 23                                        ; global.get
0000122: 00                                        ; global index
0000123: 20                                        ; local.get
0000124: 00                                        ; local index
0000125: 41                                        ; i32.const
0000126: 01                                        ; i32 literal
0000127: 6a                                        ; i32.add
0000128: 41                                        ; i32.const
0000129: 08                                        ; i32 literal
000012a: 6c                                        ; i32.mul
000012b: 6a                                        ; i32.add
000012c: 20                                        ; local.get
000012d: 00                                        ; local index
000012e: 41                                        ; i32.const
000012f: 02                                        ; i32 literal
0000130: 6c                                        ; i32.mul
0000131: b7                                        ; f64.convert_i32_s
0000132: 39                                        ; f64.store
0000133: 03                                        ; alignment
0000134: 00                                        ; store offset
0000135: 23                                        ; global.get
0000136: 00                                        ; global index
0000137: 20                                        ; local.get
0000138: 00                                        ; local index
0000139: 41                                        ; i32.const
000013a: e300                                      ; i32 literal
000013c: 6c                                        ; i32.mul
000013d: 41                                        ; i32.const
000013e: 08                                        ; i32 literal
000013f: 6c                                        ; i32.mul
0000140: 6a                                        ; i32.add
0000141: 2b                                        ; f64.load
0000142: 03                                        ; alignment
0000143: 00                                        ; load offset
0000144: 10                                        ; call
0000145: 00                                        ; function index
0000146: 0b                                        ; end
000011f: 27                                        ; FIXUP func body size
; function body 2
0000147: 00                                        ; func body size (guess)
0000148: 00                                        ; local decl count
0000149: 41                                        ; i32.const
000014a: 01                                        ; i32 literal
000014b: 41                                        ; i32.const
000014c: 18                                        ; i32 literal
000014d: 36                                        ; i32.store
000014e: 02                                        ; alignment
000014f: 00                                        ; store offset
0000150: 41                                        ; i32.const
0000151: 09                                        ; i32 literal
0000152: 41                                        ; i32.const
0000153: 17                                        ; i32 literal
0000154: 36                                        ; i32.store
0000155: 02                                        ; alignment
0000156: 00                                        ; store offset
0000157: 41                                        ; i32.const
0000158: 11                                        ; i32 literal
0000159: 41                                        ; i32.const
000015a: a803                                      ; i32 literal
000015c: 36                                        ; i32.store
000015d: 02                                        ; alignment
000015e: 00                                        ; store offset
000015f: 41                                        ; i32.const
0000160: 19                                        ; i32 literal
0000161: 41                                        ; i32.const
0000162: f712                                      ; i32 literal
0000164: 36                                        ; i32.store
0000165: 02                                        ; alignment
0000166: 00                                        ; store offset
0000167: 41                                        ; i32.const
0000168: 21                                        ; i32 literal
0000169: 41                                        ; i32.const
000016a: b623                                      ; i32 literal
000016c: 36                                        ; i32.store
000016d: 02                                        ; alignment
000016e: 00                                        ; store offset
000016f: 41                                        ; i32.const
0000170: 29                                        ; i32 literal
0000171: 41                                        ; i32.const
0000172: e929                                      ; i32 literal
0000174: 36                                        ; i32.store
0000175: 02                                        ; alignment
0000176: 00                                        ; store offset
0000177: 41                                        ; i32.const
0000178: 31                                        ; i32 literal
0000179: 41                                        ; i32.const
000017a: 37                                        ; i32 literal
000017b: 36                                        ; i32.store
000017c: 02                                        ; alignment
000017d: 00                                        ; store offset
000017e: 41                                        ; i32.const
000017f: 39                                        ; i32 literal
0000180: 41                                        ; i32.const
0000181: 37                                        ; i32 literal
0000182: 36                                        ; i32.store
0000183: 02                                        ; alignment
0000184: 00                                        ; store offset
0000185: 41                                        ; i32.const
0000186: c100                                      ; i32 literal
0000188: 41                                        ; i32.const
0000189: 37                                        ; i32 literal
000018a: 36                                        ; i32.store
000018b: 02                                        ; alignment
000018c: 00                                        ; store offset
000018d: 41                                        ; i32.const
000018e: c900                                      ; i32 literal
0000190: 41                                        ; i32.const
0000191: 37                                        ; i32 literal
0000192: 36                                        ; i32.store
0000193: 02                                        ; alignment
0000194: 00                                        ; store offset
0000195: 41                                        ; i32.const
0000196: d100                                      ; i32 literal
0000198: 41                                        ; i32.const
0000199: b32b                                      ; i32 literal
000019b: 36                                        ; i32.store
000019c: 02                                        ; alignment
000019d: 00                                        ; store offset
000019e: 41                                        ; i32.const
000019f: d900                                      ; i32 literal
00001a1: 41                                        ; i32.const
00001a2: 05                                        ; i32 literal
00001a3: 36                                        ; i32.store
00001a4: 02                                        ; alignment
00001a5: 00                                        ; store offset
00001a6: 41                                        ; i32.const
00001a7: 01                                        ; i32 literal
00001a8: 24                                        ; global.set
00001a9: 00                                        ; global index
00001aa: 0b                                        ; end
0000147: 63                                        ; FIXUP func body size
; move data: [d7, 1ab) -> [d8, 1ac)
00000d6: d401                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0121 0760 017c 0060 
0000010: 017f 017f 6002 7f7f 017f 6003 7f7f 7f00 
0000020: 6000 017d 6001 7f00 6000 0002 6407 0763 
0000030: 6f6e 736f 6c65 036c 6f67 0000 0541 7272 
0000040: 6179 066c 656e 6774 6800 0105 4172 7261 
0000050: 7906 6372 6561 7465 0001 0541 7272 6179 
0000060: 0470 7573 6800 0205 4172 7261 7903 6765 
0000070: 7400 0205 4172 7261 7903 7365 7400 0303 
0000080: 656e 760a 6279 7465 6368 756e 6b73 0200 
0000090: 0103 0403 0405 0606 0601 7f01 4100 0b07 
00000a0: 3102 1361 7272 6179 5465 7374 322e 7265 
00000b0: 6164 5465 7374 0006 1761 7272 6179 5465 
00000c0: 7374 322e 7365 7456 616c 7565 5465 7374 
00000d0: 0007 0801 080a d401 0346 0201 7e01 7f23 
00000e0: 0041 8fce 0041 086c 6a2b 0300 b021 0041 
00000f0: 0021 0102 4003 4020 0123 0010 0141 016b 
0000100: 4a0d 0123 0020 0141 086c 6a2b 0300 1000 
0000110: 2001 4101 6a21 010c 000b 0b20 00b4 0f0b 
0000120: 2700 2300 2000 4101 6a41 086c 6a20 0041 
0000130: 026c b739 0300 2300 2000 41e3 006c 4108 
0000140: 6c6a 2b03 0010 000b 6300 4101 4118 3602 
0000150: 0041 0941 1736 0200 4111 41a8 0336 0200 
0000160: 4119 41f7 1236 0200 4121 41b6 2336 0200 
0000170: 4129 41e9 2936 0200 4131 4137 3602 0041 
0000180: 3941 3736 0200 41c1 0041 3736 0200 41c9 
0000190: 0041 3736 0200 41d1 0041 b32b 3602 0041 
00001a0: d900 4105 3602 0041 0124 000b           
