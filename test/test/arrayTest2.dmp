0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0b                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 01                                        ; num params
0000011: 7f                                        ; i32
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7c                                        ; f64
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 01                                        ; num results
000001f: 7c                                        ; f64
; type 4
0000020: 60                                        ; func
0000021: 03                                        ; num params
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 7c                                        ; f64
0000025: 00                                        ; num results
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 03                                        ; num params
000002e: 7f                                        ; i32
000002f: 7f                                        ; i32
0000030: 7f                                        ; i32
0000031: 00                                        ; num results
; type 7
0000032: 60                                        ; func
0000033: 00                                        ; num params
0000034: 01                                        ; num results
0000035: 7f                                        ; i32
; type 8
0000036: 60                                        ; func
0000037: 00                                        ; num params
0000038: 01                                        ; num results
0000039: 7d                                        ; f32
; type 9
000003a: 60                                        ; func
000003b: 01                                        ; num params
000003c: 7f                                        ; i32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
0000009: 37                                        ; FIXUP section size
; section "Import" (2)
0000041: 02                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 0a                                        ; num imports
; import header 0
0000044: 07                                        ; string length
0000045: 636f 6e73 6f6c 65                        console  ; import module name
000004c: 03                                        ; string length
000004d: 6c6f 67                                  log  ; import field name
0000050: 00                                        ; import kind
0000051: 00                                        ; import signature index
; import header 1
0000052: 05                                        ; string length
0000053: 4172 7261 79                             Array  ; import module name
0000058: 06                                        ; string length
0000059: 6372 6561 7465                           create  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 2
0000061: 05                                        ; string length
0000062: 4172 7261 79                             Array  ; import module name
0000067: 04                                        ; string length
0000068: 7075 7368                                push  ; import field name
000006c: 00                                        ; import kind
000006d: 02                                        ; import signature index
; import header 3
000006e: 05                                        ; string length
000006f: 4172 7261 79                             Array  ; import module name
0000074: 03                                        ; string length
0000075: 6765 74                                  get  ; import field name
0000078: 00                                        ; import kind
0000079: 03                                        ; import signature index
; import header 4
000007a: 05                                        ; string length
000007b: 4172 7261 79                             Array  ; import module name
0000080: 03                                        ; string length
0000081: 7365 74                                  set  ; import field name
0000084: 00                                        ; import kind
0000085: 04                                        ; import signature index
; import header 5
0000086: 05                                        ; string length
0000087: 4172 7261 79                             Array  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 05                                        ; string length
0000096: 4172 7261 79                             Array  ; import module name
000009b: 04                                        ; string length
000009c: 7075 7368                                push  ; import field name
00000a0: 00                                        ; import kind
00000a1: 05                                        ; import signature index
; import header 7
00000a2: 05                                        ; string length
00000a3: 4172 7261 79                             Array  ; import module name
00000a8: 03                                        ; string length
00000a9: 6765 74                                  get  ; import field name
00000ac: 00                                        ; import kind
00000ad: 05                                        ; import signature index
; import header 8
00000ae: 05                                        ; string length
00000af: 4172 7261 79                             Array  ; import module name
00000b4: 03                                        ; string length
00000b5: 7365 74                                  set  ; import field name
00000b8: 00                                        ; import kind
00000b9: 06                                        ; import signature index
; import header 9
00000ba: 03                                        ; string length
00000bb: 656e 76                                  env  ; import module name
00000be: 0a                                        ; string length
00000bf: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c9: 02                                        ; import kind
00000ca: 00                                        ; limits: flags
00000cb: 01                                        ; limits: initial
; move data: [43, cc) -> [44, cd)
0000042: 8901                                      ; FIXUP section size
; section "Function" (3)
00000cd: 03                                        ; section code
00000ce: 00                                        ; section size (guess)
00000cf: 04                                        ; num functions
00000d0: 07                                        ; function 0 signature index
00000d1: 08                                        ; function 1 signature index
00000d2: 09                                        ; function 2 signature index
00000d3: 0a                                        ; function 3 signature index
00000ce: 05                                        ; FIXUP section size
; section "Global" (6)
00000d4: 06                                        ; section code
00000d5: 00                                        ; section size (guess)
00000d6: 02                                        ; num globals
00000d7: 7f                                        ; i32
00000d8: 01                                        ; global mutability
00000d9: 41                                        ; i32.const
00000da: e100                                      ; i32 literal
00000dc: 0b                                        ; end
00000dd: 7f                                        ; i32
00000de: 01                                        ; global mutability
00000df: 41                                        ; i32.const
00000e0: 00                                        ; i32 literal
00000e1: 0b                                        ; end
00000d5: 0c                                        ; FIXUP section size
; section "Export" (7)
00000e2: 07                                        ; section code
00000e3: 00                                        ; section size (guess)
00000e4: 03                                        ; num exports
00000e5: 1a                                        ; string length
00000e6: 6172 7261 7954 6573 7432 2e72 6574 7572  arrayTest2.retur
00000f6: 6e41 7272 6179 5465 7374                 nArrayTest  ; export name
0000100: 00                                        ; export kind
0000101: 09                                        ; export func index
0000102: 13                                        ; string length
0000103: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
0000113: 6573 74                                  est  ; export name
0000116: 00                                        ; export kind
0000117: 0a                                        ; export func index
0000118: 17                                        ; string length
0000119: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
0000129: 6c75 6554 6573 74                        lueTest  ; export name
0000130: 00                                        ; export kind
0000131: 0b                                        ; export func index
00000e3: 4e                                        ; FIXUP section size
; section "Start" (8)
0000132: 08                                        ; section code
0000133: 00                                        ; section size (guess)
0000134: 0c                                        ; start func index
0000133: 01                                        ; FIXUP section size
; section "Code" (10)
0000135: 0a                                        ; section code
0000136: 00                                        ; section size (guess)
0000137: 04                                        ; num functions
; function body 0
0000138: 00                                        ; func body size (guess)
0000139: 01                                        ; local decl count
000013a: 01                                        ; local type count
000013b: 7c                                        ; f64
000013c: 23                                        ; global.get
000013d: 01                                        ; global index
000013e: 41                                        ; i32.const
000013f: 08                                        ; i32 literal
0000140: 6a                                        ; i32.add
0000141: 41                                        ; i32.const
0000142: 01                                        ; i32 literal
0000143: 41                                        ; i32.const
0000144: 08                                        ; i32 literal
0000145: 6c                                        ; i32.mul
0000146: 6a                                        ; i32.add
0000147: 2b                                        ; f64.load
0000148: 03                                        ; alignment
0000149: 00                                        ; load offset
000014a: 21                                        ; local.set
000014b: 00                                        ; local index
000014c: 41                                        ; i32.const
000014d: 01                                        ; i32 literal
000014e: 41                                        ; i32.const
000014f: 03                                        ; i32 literal
0000150: 36                                        ; i32.store
0000151: 02                                        ; alignment
0000152: 00                                        ; store offset
0000153: 41                                        ; i32.const
0000154: 02                                        ; i32 literal
0000155: 41                                        ; i32.const
0000156: 08                                        ; i32 literal
0000157: 36                                        ; i32.store
0000158: 02                                        ; alignment
0000159: 00                                        ; store offset
000015a: 41                                        ; i32.const
000015b: 09                                        ; i32 literal
000015c: 20                                        ; local.get
000015d: 00                                        ; local index
000015e: b6                                        ; f32.demote_f64
000015f: 38                                        ; f32.store
0000160: 02                                        ; alignment
0000161: 00                                        ; store offset
0000162: 41                                        ; i32.const
0000163: 0d                                        ; i32 literal
0000164: 41                                        ; i32.const
0000165: 00                                        ; i32 literal
0000166: b2                                        ; f32.convert_i32_s
0000167: 38                                        ; f32.store
0000168: 02                                        ; alignment
0000169: 00                                        ; store offset
000016a: 41                                        ; i32.const
000016b: 11                                        ; i32 literal
000016c: 41                                        ; i32.const
000016d: 23                                        ; i32 literal
000016e: b2                                        ; f32.convert_i32_s
000016f: 38                                        ; f32.store
0000170: 02                                        ; alignment
0000171: 00                                        ; store offset
0000172: 41                                        ; i32.const
0000173: 15                                        ; i32 literal
0000174: 41                                        ; i32.const
0000175: 89e4 04                                   ; i32 literal
0000178: b2                                        ; f32.convert_i32_s
0000179: 38                                        ; f32.store
000017a: 02                                        ; alignment
000017b: 00                                        ; store offset
000017c: 41                                        ; i32.const
000017d: 19                                        ; i32 literal
000017e: 41                                        ; i32.const
000017f: 22                                        ; i32 literal
0000180: b2                                        ; f32.convert_i32_s
0000181: 38                                        ; f32.store
0000182: 02                                        ; alignment
0000183: 00                                        ; store offset
0000184: 41                                        ; i32.const
0000185: 1d                                        ; i32 literal
0000186: 41                                        ; i32.const
0000187: 9604                                      ; i32 literal
0000189: b2                                        ; f32.convert_i32_s
000018a: 38                                        ; f32.store
000018b: 02                                        ; alignment
000018c: 00                                        ; store offset
000018d: 41                                        ; i32.const
000018e: 21                                        ; i32 literal
000018f: 41                                        ; i32.const
0000190: 35                                        ; i32 literal
0000191: b2                                        ; f32.convert_i32_s
0000192: 38                                        ; f32.store
0000193: 02                                        ; alignment
0000194: 00                                        ; store offset
0000195: 41                                        ; i32.const
0000196: 25                                        ; i32 literal
0000197: 23                                        ; global.get
0000198: 01                                        ; global index
0000199: 41                                        ; i32.const
000019a: 04                                        ; i32 literal
000019b: 6a                                        ; i32.add
000019c: 28                                        ; i32.load
000019d: 02                                        ; alignment
000019e: 00                                        ; load offset
000019f: b2                                        ; f32.convert_i32_s
00001a0: 38                                        ; f32.store
00001a1: 02                                        ; alignment
00001a2: 00                                        ; store offset
00001a3: 41                                        ; i32.const
00001a4: 01                                        ; i32 literal
00001a5: 0f                                        ; return
00001a6: 0b                                        ; end
0000138: 6e                                        ; FIXUP func body size
; function body 1
00001a7: 00                                        ; func body size (guess)
00001a8: 02                                        ; local decl count
00001a9: 01                                        ; local type count
00001aa: 7e                                        ; i64
00001ab: 01                                        ; local type count
00001ac: 7f                                        ; i32
00001ad: 23                                        ; global.get
00001ae: 01                                        ; global index
00001af: 41                                        ; i32.const
00001b0: 08                                        ; i32 literal
00001b1: 6a                                        ; i32.add
00001b2: 41                                        ; i32.const
00001b3: 8fce 00                                   ; i32 literal
00001b6: 41                                        ; i32.const
00001b7: 08                                        ; i32 literal
00001b8: 6c                                        ; i32.mul
00001b9: 6a                                        ; i32.add
00001ba: 2b                                        ; f64.load
00001bb: 03                                        ; alignment
00001bc: 00                                        ; load offset
00001bd: b0                                        ; i64.trunc_f64_s
00001be: 21                                        ; local.set
00001bf: 00                                        ; local index
00001c0: 41                                        ; i32.const
00001c1: 00                                        ; i32 literal
00001c2: 21                                        ; local.set
00001c3: 01                                        ; local index
00001c4: 02                                        ; block
00001c5: 40                                        ; void
00001c6: 03                                        ; loop
00001c7: 40                                        ; void
00001c8: 20                                        ; local.get
00001c9: 01                                        ; local index
00001ca: 23                                        ; global.get
00001cb: 01                                        ; global index
00001cc: 41                                        ; i32.const
00001cd: 04                                        ; i32 literal
00001ce: 6a                                        ; i32.add
00001cf: 28                                        ; i32.load
00001d0: 02                                        ; alignment
00001d1: 00                                        ; load offset
00001d2: 41                                        ; i32.const
00001d3: 01                                        ; i32 literal
00001d4: 6b                                        ; i32.sub
00001d5: 4a                                        ; i32.gt_s
00001d6: 0d                                        ; br_if
00001d7: 01                                        ; break depth
00001d8: 23                                        ; global.get
00001d9: 01                                        ; global index
00001da: 41                                        ; i32.const
00001db: 08                                        ; i32 literal
00001dc: 6a                                        ; i32.add
00001dd: 20                                        ; local.get
00001de: 01                                        ; local index
00001df: 41                                        ; i32.const
00001e0: 08                                        ; i32 literal
00001e1: 6c                                        ; i32.mul
00001e2: 6a                                        ; i32.add
00001e3: 2b                                        ; f64.load
00001e4: 03                                        ; alignment
00001e5: 00                                        ; load offset
00001e6: 10                                        ; call
00001e7: 00                                        ; function index
00001e8: 20                                        ; local.get
00001e9: 01                                        ; local index
00001ea: 41                                        ; i32.const
00001eb: 01                                        ; i32 literal
00001ec: 6a                                        ; i32.add
00001ed: 21                                        ; local.set
00001ee: 01                                        ; local index
00001ef: 0c                                        ; br
00001f0: 00                                        ; break depth
00001f1: 0b                                        ; end
00001f2: 0b                                        ; end
00001f3: 20                                        ; local.get
00001f4: 00                                        ; local index
00001f5: b4                                        ; f32.convert_i64_s
00001f6: 0f                                        ; return
00001f7: 0b                                        ; end
00001a7: 50                                        ; FIXUP func body size
; function body 2
00001f8: 00                                        ; func body size (guess)
00001f9: 00                                        ; local decl count
00001fa: 23                                        ; global.get
00001fb: 01                                        ; global index
00001fc: 41                                        ; i32.const
00001fd: 08                                        ; i32 literal
00001fe: 6a                                        ; i32.add
00001ff: 20                                        ; local.get
0000200: 00                                        ; local index
0000201: 41                                        ; i32.const
0000202: 01                                        ; i32 literal
0000203: 6a                                        ; i32.add
0000204: 41                                        ; i32.const
0000205: 08                                        ; i32 literal
0000206: 6c                                        ; i32.mul
0000207: 6a                                        ; i32.add
0000208: 20                                        ; local.get
0000209: 00                                        ; local index
000020a: 41                                        ; i32.const
000020b: 02                                        ; i32 literal
000020c: 6c                                        ; i32.mul
000020d: b7                                        ; f64.convert_i32_s
000020e: 39                                        ; f64.store
000020f: 03                                        ; alignment
0000210: 00                                        ; store offset
0000211: 23                                        ; global.get
0000212: 01                                        ; global index
0000213: 41                                        ; i32.const
0000214: 08                                        ; i32 literal
0000215: 6a                                        ; i32.add
0000216: 20                                        ; local.get
0000217: 00                                        ; local index
0000218: 41                                        ; i32.const
0000219: e300                                      ; i32 literal
000021b: 6c                                        ; i32.mul
000021c: 41                                        ; i32.const
000021d: 08                                        ; i32 literal
000021e: 6c                                        ; i32.mul
000021f: 6a                                        ; i32.add
0000220: 2b                                        ; f64.load
0000221: 03                                        ; alignment
0000222: 00                                        ; load offset
0000223: 10                                        ; call
0000224: 00                                        ; function index
0000225: 0b                                        ; end
00001f8: 2d                                        ; FIXUP func body size
; function body 3
0000226: 00                                        ; func body size (guess)
0000227: 00                                        ; local decl count
0000228: 41                                        ; i32.const
0000229: 29                                        ; i32 literal
000022a: 41                                        ; i32.const
000022b: 04                                        ; i32 literal
000022c: 36                                        ; i32.store
000022d: 02                                        ; alignment
000022e: 00                                        ; store offset
000022f: 41                                        ; i32.const
0000230: 2a                                        ; i32 literal
0000231: 41                                        ; i32.const
0000232: 0c                                        ; i32 literal
0000233: 36                                        ; i32.store
0000234: 02                                        ; alignment
0000235: 00                                        ; store offset
0000236: 41                                        ; i32.const
0000237: 31                                        ; i32 literal
0000238: 41                                        ; i32.const
0000239: 18                                        ; i32 literal
000023a: b7                                        ; f64.convert_i32_s
000023b: 39                                        ; f64.store
000023c: 03                                        ; alignment
000023d: 00                                        ; store offset
000023e: 41                                        ; i32.const
000023f: 39                                        ; i32 literal
0000240: 41                                        ; i32.const
0000241: 17                                        ; i32 literal
0000242: b7                                        ; f64.convert_i32_s
0000243: 39                                        ; f64.store
0000244: 03                                        ; alignment
0000245: 00                                        ; store offset
0000246: 41                                        ; i32.const
0000247: c100                                      ; i32 literal
0000249: 41                                        ; i32.const
000024a: a803                                      ; i32 literal
000024c: b7                                        ; f64.convert_i32_s
000024d: 39                                        ; f64.store
000024e: 03                                        ; alignment
000024f: 00                                        ; store offset
0000250: 41                                        ; i32.const
0000251: c900                                      ; i32 literal
0000253: 41                                        ; i32.const
0000254: f712                                      ; i32 literal
0000256: b7                                        ; f64.convert_i32_s
0000257: 39                                        ; f64.store
0000258: 03                                        ; alignment
0000259: 00                                        ; store offset
000025a: 41                                        ; i32.const
000025b: d100                                      ; i32 literal
000025d: 41                                        ; i32.const
000025e: b623                                      ; i32 literal
0000260: b7                                        ; f64.convert_i32_s
0000261: 39                                        ; f64.store
0000262: 03                                        ; alignment
0000263: 00                                        ; store offset
0000264: 41                                        ; i32.const
0000265: d900                                      ; i32 literal
0000267: 41                                        ; i32.const
0000268: e929                                      ; i32 literal
000026a: b7                                        ; f64.convert_i32_s
000026b: 39                                        ; f64.store
000026c: 03                                        ; alignment
000026d: 00                                        ; store offset
000026e: 41                                        ; i32.const
000026f: e100                                      ; i32 literal
0000271: 41                                        ; i32.const
0000272: 37                                        ; i32 literal
0000273: b7                                        ; f64.convert_i32_s
0000274: 39                                        ; f64.store
0000275: 03                                        ; alignment
0000276: 00                                        ; store offset
0000277: 41                                        ; i32.const
0000278: e900                                      ; i32 literal
000027a: 41                                        ; i32.const
000027b: 37                                        ; i32 literal
000027c: b7                                        ; f64.convert_i32_s
000027d: 39                                        ; f64.store
000027e: 03                                        ; alignment
000027f: 00                                        ; store offset
0000280: 41                                        ; i32.const
0000281: f100                                      ; i32 literal
0000283: 41                                        ; i32.const
0000284: 37                                        ; i32 literal
0000285: b7                                        ; f64.convert_i32_s
0000286: 39                                        ; f64.store
0000287: 03                                        ; alignment
0000288: 00                                        ; store offset
0000289: 41                                        ; i32.const
000028a: f900                                      ; i32 literal
000028c: 41                                        ; i32.const
000028d: 37                                        ; i32 literal
000028e: b7                                        ; f64.convert_i32_s
000028f: 39                                        ; f64.store
0000290: 03                                        ; alignment
0000291: 00                                        ; store offset
0000292: 41                                        ; i32.const
0000293: 8101                                      ; i32 literal
0000295: 41                                        ; i32.const
0000296: b32b                                      ; i32 literal
0000298: b7                                        ; f64.convert_i32_s
0000299: 39                                        ; f64.store
000029a: 03                                        ; alignment
000029b: 00                                        ; store offset
000029c: 41                                        ; i32.const
000029d: 8901                                      ; i32 literal
000029f: 41                                        ; i32.const
00002a0: 05                                        ; i32 literal
00002a1: b7                                        ; f64.convert_i32_s
00002a2: 39                                        ; f64.store
00002a3: 03                                        ; alignment
00002a4: 00                                        ; store offset
00002a5: 41                                        ; i32.const
00002a6: 29                                        ; i32 literal
00002a7: 24                                        ; global.set
00002a8: 01                                        ; global index
00002a9: 0b                                        ; end
; move data: [227, 2aa) -> [228, 2ab)
0000226: 8301                                      ; FIXUP func body size
; move data: [137, 2ab) -> [138, 2ac)
0000136: f402                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0137 0b60 017c 0060 
0000010: 017f 017f 6002 7f7c 017f 6002 7f7f 017c 
0000020: 6003 7f7f 7c00 6002 7f7f 017f 6003 7f7f 
0000030: 7f00 6000 017f 6000 017d 6001 7f00 6000 
0000040: 0002 8901 0a07 636f 6e73 6f6c 6503 6c6f 
0000050: 6700 0005 4172 7261 7906 6372 6561 7465 
0000060: 0001 0541 7272 6179 0470 7573 6800 0205 
0000070: 4172 7261 7903 6765 7400 0305 4172 7261 
0000080: 7903 7365 7400 0405 4172 7261 7906 6c65 
0000090: 6e67 7468 0001 0541 7272 6179 0470 7573 
00000a0: 6800 0505 4172 7261 7903 6765 7400 0505 
00000b0: 4172 7261 7903 7365 7400 0603 656e 760a 
00000c0: 6279 7465 6368 756e 6b73 0200 0103 0504 
00000d0: 0708 090a 060c 027f 0141 e100 0b7f 0141 
00000e0: 000b 074e 031a 6172 7261 7954 6573 7432 
00000f0: 2e72 6574 7572 6e41 7272 6179 5465 7374 
0000100: 0009 1361 7272 6179 5465 7374 322e 7265 
0000110: 6164 5465 7374 000a 1761 7272 6179 5465 
0000120: 7374 322e 7365 7456 616c 7565 5465 7374 
0000130: 000b 0801 0c0a f402 046e 0101 7c23 0141 
0000140: 086a 4101 4108 6c6a 2b03 0021 0041 0141 
0000150: 0336 0200 4102 4108 3602 0041 0920 00b6 
0000160: 3802 0041 0d41 00b2 3802 0041 1141 23b2 
0000170: 3802 0041 1541 89e4 04b2 3802 0041 1941 
0000180: 22b2 3802 0041 1d41 9604 b238 0200 4121 
0000190: 4135 b238 0200 4125 2301 4104 6a28 0200 
00001a0: b238 0200 4101 0f0b 5002 017e 017f 2301 
00001b0: 4108 6a41 8fce 0041 086c 6a2b 0300 b021 
00001c0: 0041 0021 0102 4003 4020 0123 0141 046a 
00001d0: 2802 0041 016b 4a0d 0123 0141 086a 2001 
00001e0: 4108 6c6a 2b03 0010 0020 0141 016a 2101 
00001f0: 0c00 0b0b 2000 b40f 0b2d 0023 0141 086a 
0000200: 2000 4101 6a41 086c 6a20 0041 026c b739 
0000210: 0300 2301 4108 6a20 0041 e300 6c41 086c 
0000220: 6a2b 0300 1000 0b83 0100 4129 4104 3602 
0000230: 0041 2a41 0c36 0200 4131 4118 b739 0300 
0000240: 4139 4117 b739 0300 41c1 0041 a803 b739 
0000250: 0300 41c9 0041 f712 b739 0300 41d1 0041 
0000260: b623 b739 0300 41d9 0041 e929 b739 0300 
0000270: 41e1 0041 37b7 3903 0041 e900 4137 b739 
0000280: 0300 41f1 0041 37b7 3903 0041 f900 4137 
0000290: b739 0300 4181 0141 b32b b739 0300 4189 
00002a0: 0141 05b7 3903 0041 2924 010b           
