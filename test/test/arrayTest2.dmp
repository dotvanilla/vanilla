0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0b                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 01                                        ; num params
0000011: 7f                                        ; i32
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7c                                        ; f64
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 01                                        ; num results
000001f: 7c                                        ; f64
; type 4
0000020: 60                                        ; func
0000021: 03                                        ; num params
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 7c                                        ; f64
0000025: 00                                        ; num results
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 03                                        ; num params
000002e: 7f                                        ; i32
000002f: 7f                                        ; i32
0000030: 7f                                        ; i32
0000031: 00                                        ; num results
; type 7
0000032: 60                                        ; func
0000033: 00                                        ; num params
0000034: 01                                        ; num results
0000035: 7f                                        ; i32
; type 8
0000036: 60                                        ; func
0000037: 00                                        ; num params
0000038: 01                                        ; num results
0000039: 7d                                        ; f32
; type 9
000003a: 60                                        ; func
000003b: 01                                        ; num params
000003c: 7f                                        ; i32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
0000009: 37                                        ; FIXUP section size
; section "Import" (2)
0000041: 02                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 0a                                        ; num imports
; import header 0
0000044: 07                                        ; string length
0000045: 636f 6e73 6f6c 65                        console  ; import module name
000004c: 03                                        ; string length
000004d: 6c6f 67                                  log  ; import field name
0000050: 00                                        ; import kind
0000051: 00                                        ; import signature index
; import header 1
0000052: 05                                        ; string length
0000053: 4172 7261 79                             Array  ; import module name
0000058: 06                                        ; string length
0000059: 6372 6561 7465                           create  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 2
0000061: 05                                        ; string length
0000062: 4172 7261 79                             Array  ; import module name
0000067: 04                                        ; string length
0000068: 7075 7368                                push  ; import field name
000006c: 00                                        ; import kind
000006d: 02                                        ; import signature index
; import header 3
000006e: 05                                        ; string length
000006f: 4172 7261 79                             Array  ; import module name
0000074: 03                                        ; string length
0000075: 6765 74                                  get  ; import field name
0000078: 00                                        ; import kind
0000079: 03                                        ; import signature index
; import header 4
000007a: 05                                        ; string length
000007b: 4172 7261 79                             Array  ; import module name
0000080: 03                                        ; string length
0000081: 7365 74                                  set  ; import field name
0000084: 00                                        ; import kind
0000085: 04                                        ; import signature index
; import header 5
0000086: 05                                        ; string length
0000087: 4172 7261 79                             Array  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 05                                        ; string length
0000096: 4172 7261 79                             Array  ; import module name
000009b: 04                                        ; string length
000009c: 7075 7368                                push  ; import field name
00000a0: 00                                        ; import kind
00000a1: 05                                        ; import signature index
; import header 7
00000a2: 05                                        ; string length
00000a3: 4172 7261 79                             Array  ; import module name
00000a8: 03                                        ; string length
00000a9: 6765 74                                  get  ; import field name
00000ac: 00                                        ; import kind
00000ad: 05                                        ; import signature index
; import header 8
00000ae: 05                                        ; string length
00000af: 4172 7261 79                             Array  ; import module name
00000b4: 03                                        ; string length
00000b5: 7365 74                                  set  ; import field name
00000b8: 00                                        ; import kind
00000b9: 06                                        ; import signature index
; import header 9
00000ba: 03                                        ; string length
00000bb: 656e 76                                  env  ; import module name
00000be: 0a                                        ; string length
00000bf: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c9: 02                                        ; import kind
00000ca: 00                                        ; limits: flags
00000cb: 01                                        ; limits: initial
; move data: [43, cc) -> [44, cd)
0000042: 8901                                      ; FIXUP section size
; section "Function" (3)
00000cd: 03                                        ; section code
00000ce: 00                                        ; section size (guess)
00000cf: 04                                        ; num functions
00000d0: 07                                        ; function 0 signature index
00000d1: 08                                        ; function 1 signature index
00000d2: 09                                        ; function 2 signature index
00000d3: 0a                                        ; function 3 signature index
00000ce: 05                                        ; FIXUP section size
; section "Global" (6)
00000d4: 06                                        ; section code
00000d5: 00                                        ; section size (guess)
00000d6: 02                                        ; num globals
00000d7: 7f                                        ; i32
00000d8: 01                                        ; global mutability
00000d9: 41                                        ; i32.const
00000da: 01                                        ; i32 literal
00000db: 0b                                        ; end
00000dc: 7f                                        ; i32
00000dd: 01                                        ; global mutability
00000de: 41                                        ; i32.const
00000df: 00                                        ; i32 literal
00000e0: 0b                                        ; end
00000d5: 0b                                        ; FIXUP section size
; section "Export" (7)
00000e1: 07                                        ; section code
00000e2: 00                                        ; section size (guess)
00000e3: 03                                        ; num exports
00000e4: 1a                                        ; string length
00000e5: 6172 7261 7954 6573 7432 2e72 6574 7572  arrayTest2.retur
00000f5: 6e41 7272 6179 5465 7374                 nArrayTest  ; export name
00000ff: 00                                        ; export kind
0000100: 09                                        ; export func index
0000101: 13                                        ; string length
0000102: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
0000112: 6573 74                                  est  ; export name
0000115: 00                                        ; export kind
0000116: 0a                                        ; export func index
0000117: 17                                        ; string length
0000118: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
0000128: 6c75 6554 6573 74                        lueTest  ; export name
000012f: 00                                        ; export kind
0000130: 0b                                        ; export func index
00000e2: 4e                                        ; FIXUP section size
; section "Start" (8)
0000131: 08                                        ; section code
0000132: 00                                        ; section size (guess)
0000133: 0c                                        ; start func index
0000132: 01                                        ; FIXUP section size
; section "Code" (10)
0000134: 0a                                        ; section code
0000135: 00                                        ; section size (guess)
0000136: 04                                        ; num functions
; function body 0
0000137: 00                                        ; func body size (guess)
0000138: 01                                        ; local decl count
0000139: 01                                        ; local type count
000013a: 7c                                        ; f64
000013b: 23                                        ; global.get
000013c: 01                                        ; global index
000013d: 41                                        ; i32.const
000013e: 08                                        ; i32 literal
000013f: 6a                                        ; i32.add
0000140: 41                                        ; i32.const
0000141: 01                                        ; i32 literal
0000142: 41                                        ; i32.const
0000143: 08                                        ; i32 literal
0000144: 6c                                        ; i32.mul
0000145: 6a                                        ; i32.add
0000146: 2b                                        ; f64.load
0000147: 03                                        ; alignment
0000148: 00                                        ; load offset
0000149: 21                                        ; local.set
000014a: 00                                        ; local index
000014b: 23                                        ; global.get
000014c: 00                                        ; global index
000014d: 41                                        ; i32.const
000014e: 03                                        ; i32 literal
000014f: 36                                        ; i32.store
0000150: 02                                        ; alignment
0000151: 00                                        ; store offset
0000152: 23                                        ; global.get
0000153: 00                                        ; global index
0000154: 41                                        ; i32.const
0000155: 04                                        ; i32 literal
0000156: 6a                                        ; i32.add
0000157: 41                                        ; i32.const
0000158: 08                                        ; i32 literal
0000159: 36                                        ; i32.store
000015a: 02                                        ; alignment
000015b: 00                                        ; store offset
000015c: 23                                        ; global.get
000015d: 00                                        ; global index
000015e: 41                                        ; i32.const
000015f: 08                                        ; i32 literal
0000160: 6a                                        ; i32.add
0000161: 41                                        ; i32.const
0000162: 00                                        ; i32 literal
0000163: 6a                                        ; i32.add
0000164: 20                                        ; local.get
0000165: 00                                        ; local index
0000166: b6                                        ; f32.demote_f64
0000167: 38                                        ; f32.store
0000168: 02                                        ; alignment
0000169: 00                                        ; store offset
000016a: 23                                        ; global.get
000016b: 00                                        ; global index
000016c: 41                                        ; i32.const
000016d: 08                                        ; i32 literal
000016e: 6a                                        ; i32.add
000016f: 41                                        ; i32.const
0000170: 04                                        ; i32 literal
0000171: 6a                                        ; i32.add
0000172: 41                                        ; i32.const
0000173: 00                                        ; i32 literal
0000174: b2                                        ; f32.convert_i32_s
0000175: 38                                        ; f32.store
0000176: 02                                        ; alignment
0000177: 00                                        ; store offset
0000178: 23                                        ; global.get
0000179: 00                                        ; global index
000017a: 41                                        ; i32.const
000017b: 08                                        ; i32 literal
000017c: 6a                                        ; i32.add
000017d: 41                                        ; i32.const
000017e: 08                                        ; i32 literal
000017f: 6a                                        ; i32.add
0000180: 41                                        ; i32.const
0000181: 23                                        ; i32 literal
0000182: b2                                        ; f32.convert_i32_s
0000183: 38                                        ; f32.store
0000184: 02                                        ; alignment
0000185: 00                                        ; store offset
0000186: 23                                        ; global.get
0000187: 00                                        ; global index
0000188: 41                                        ; i32.const
0000189: 08                                        ; i32 literal
000018a: 6a                                        ; i32.add
000018b: 41                                        ; i32.const
000018c: 0c                                        ; i32 literal
000018d: 6a                                        ; i32.add
000018e: 41                                        ; i32.const
000018f: 89e4 04                                   ; i32 literal
0000192: b2                                        ; f32.convert_i32_s
0000193: 38                                        ; f32.store
0000194: 02                                        ; alignment
0000195: 00                                        ; store offset
0000196: 23                                        ; global.get
0000197: 00                                        ; global index
0000198: 41                                        ; i32.const
0000199: 08                                        ; i32 literal
000019a: 6a                                        ; i32.add
000019b: 41                                        ; i32.const
000019c: 10                                        ; i32 literal
000019d: 6a                                        ; i32.add
000019e: 41                                        ; i32.const
000019f: 22                                        ; i32 literal
00001a0: b2                                        ; f32.convert_i32_s
00001a1: 38                                        ; f32.store
00001a2: 02                                        ; alignment
00001a3: 00                                        ; store offset
00001a4: 23                                        ; global.get
00001a5: 00                                        ; global index
00001a6: 41                                        ; i32.const
00001a7: 08                                        ; i32 literal
00001a8: 6a                                        ; i32.add
00001a9: 41                                        ; i32.const
00001aa: 14                                        ; i32 literal
00001ab: 6a                                        ; i32.add
00001ac: 41                                        ; i32.const
00001ad: 9604                                      ; i32 literal
00001af: b2                                        ; f32.convert_i32_s
00001b0: 38                                        ; f32.store
00001b1: 02                                        ; alignment
00001b2: 00                                        ; store offset
00001b3: 23                                        ; global.get
00001b4: 00                                        ; global index
00001b5: 41                                        ; i32.const
00001b6: 08                                        ; i32 literal
00001b7: 6a                                        ; i32.add
00001b8: 41                                        ; i32.const
00001b9: 18                                        ; i32 literal
00001ba: 6a                                        ; i32.add
00001bb: 41                                        ; i32.const
00001bc: 35                                        ; i32 literal
00001bd: b2                                        ; f32.convert_i32_s
00001be: 38                                        ; f32.store
00001bf: 02                                        ; alignment
00001c0: 00                                        ; store offset
00001c1: 23                                        ; global.get
00001c2: 00                                        ; global index
00001c3: 41                                        ; i32.const
00001c4: 08                                        ; i32 literal
00001c5: 6a                                        ; i32.add
00001c6: 41                                        ; i32.const
00001c7: 1c                                        ; i32 literal
00001c8: 6a                                        ; i32.add
00001c9: 23                                        ; global.get
00001ca: 01                                        ; global index
00001cb: 41                                        ; i32.const
00001cc: 04                                        ; i32 literal
00001cd: 6a                                        ; i32.add
00001ce: 28                                        ; i32.load
00001cf: 02                                        ; alignment
00001d0: 00                                        ; load offset
00001d1: b2                                        ; f32.convert_i32_s
00001d2: 38                                        ; f32.store
00001d3: 02                                        ; alignment
00001d4: 00                                        ; store offset
00001d5: 23                                        ; global.get
00001d6: 00                                        ; global index
00001d7: 41                                        ; i32.const
00001d8: 28                                        ; i32 literal
00001d9: 6a                                        ; i32.add
00001da: 24                                        ; global.set
00001db: 00                                        ; global index
00001dc: 23                                        ; global.get
00001dd: 00                                        ; global index
00001de: 0f                                        ; return
00001df: 0b                                        ; end
; move data: [138, 1e0) -> [139, 1e1)
0000137: a801                                      ; FIXUP func body size
; function body 1
00001e1: 00                                        ; func body size (guess)
00001e2: 02                                        ; local decl count
00001e3: 01                                        ; local type count
00001e4: 7e                                        ; i64
00001e5: 01                                        ; local type count
00001e6: 7f                                        ; i32
00001e7: 23                                        ; global.get
00001e8: 01                                        ; global index
00001e9: 41                                        ; i32.const
00001ea: 08                                        ; i32 literal
00001eb: 6a                                        ; i32.add
00001ec: 41                                        ; i32.const
00001ed: 8fce 00                                   ; i32 literal
00001f0: 41                                        ; i32.const
00001f1: 08                                        ; i32 literal
00001f2: 6c                                        ; i32.mul
00001f3: 6a                                        ; i32.add
00001f4: 2b                                        ; f64.load
00001f5: 03                                        ; alignment
00001f6: 00                                        ; load offset
00001f7: b0                                        ; i64.trunc_f64_s
00001f8: 21                                        ; local.set
00001f9: 00                                        ; local index
00001fa: 41                                        ; i32.const
00001fb: 00                                        ; i32 literal
00001fc: 21                                        ; local.set
00001fd: 01                                        ; local index
00001fe: 02                                        ; block
00001ff: 40                                        ; void
0000200: 03                                        ; loop
0000201: 40                                        ; void
0000202: 20                                        ; local.get
0000203: 01                                        ; local index
0000204: 23                                        ; global.get
0000205: 01                                        ; global index
0000206: 41                                        ; i32.const
0000207: 04                                        ; i32 literal
0000208: 6a                                        ; i32.add
0000209: 28                                        ; i32.load
000020a: 02                                        ; alignment
000020b: 00                                        ; load offset
000020c: 41                                        ; i32.const
000020d: 01                                        ; i32 literal
000020e: 6b                                        ; i32.sub
000020f: 4a                                        ; i32.gt_s
0000210: 0d                                        ; br_if
0000211: 01                                        ; break depth
0000212: 23                                        ; global.get
0000213: 01                                        ; global index
0000214: 41                                        ; i32.const
0000215: 08                                        ; i32 literal
0000216: 6a                                        ; i32.add
0000217: 20                                        ; local.get
0000218: 01                                        ; local index
0000219: 41                                        ; i32.const
000021a: 08                                        ; i32 literal
000021b: 6c                                        ; i32.mul
000021c: 6a                                        ; i32.add
000021d: 2b                                        ; f64.load
000021e: 03                                        ; alignment
000021f: 00                                        ; load offset
0000220: 10                                        ; call
0000221: 00                                        ; function index
0000222: 20                                        ; local.get
0000223: 01                                        ; local index
0000224: 41                                        ; i32.const
0000225: 01                                        ; i32 literal
0000226: 6a                                        ; i32.add
0000227: 21                                        ; local.set
0000228: 01                                        ; local index
0000229: 0c                                        ; br
000022a: 00                                        ; break depth
000022b: 0b                                        ; end
000022c: 0b                                        ; end
000022d: 20                                        ; local.get
000022e: 00                                        ; local index
000022f: b4                                        ; f32.convert_i64_s
0000230: 0f                                        ; return
0000231: 0b                                        ; end
00001e1: 50                                        ; FIXUP func body size
; function body 2
0000232: 00                                        ; func body size (guess)
0000233: 00                                        ; local decl count
0000234: 23                                        ; global.get
0000235: 01                                        ; global index
0000236: 41                                        ; i32.const
0000237: 08                                        ; i32 literal
0000238: 6a                                        ; i32.add
0000239: 20                                        ; local.get
000023a: 00                                        ; local index
000023b: 41                                        ; i32.const
000023c: 01                                        ; i32 literal
000023d: 6a                                        ; i32.add
000023e: 41                                        ; i32.const
000023f: 08                                        ; i32 literal
0000240: 6c                                        ; i32.mul
0000241: 6a                                        ; i32.add
0000242: 20                                        ; local.get
0000243: 00                                        ; local index
0000244: 41                                        ; i32.const
0000245: 02                                        ; i32 literal
0000246: 6c                                        ; i32.mul
0000247: b7                                        ; f64.convert_i32_s
0000248: 39                                        ; f64.store
0000249: 03                                        ; alignment
000024a: 00                                        ; store offset
000024b: 23                                        ; global.get
000024c: 01                                        ; global index
000024d: 41                                        ; i32.const
000024e: 08                                        ; i32 literal
000024f: 6a                                        ; i32.add
0000250: 20                                        ; local.get
0000251: 00                                        ; local index
0000252: 41                                        ; i32.const
0000253: e300                                      ; i32 literal
0000255: 6c                                        ; i32.mul
0000256: 41                                        ; i32.const
0000257: 08                                        ; i32 literal
0000258: 6c                                        ; i32.mul
0000259: 6a                                        ; i32.add
000025a: 2b                                        ; f64.load
000025b: 03                                        ; alignment
000025c: 00                                        ; load offset
000025d: 10                                        ; call
000025e: 00                                        ; function index
000025f: 0b                                        ; end
0000232: 2d                                        ; FIXUP func body size
; function body 3
0000260: 00                                        ; func body size (guess)
0000261: 00                                        ; local decl count
0000262: 23                                        ; global.get
0000263: 00                                        ; global index
0000264: 41                                        ; i32.const
0000265: 04                                        ; i32 literal
0000266: 36                                        ; i32.store
0000267: 02                                        ; alignment
0000268: 00                                        ; store offset
0000269: 23                                        ; global.get
000026a: 00                                        ; global index
000026b: 41                                        ; i32.const
000026c: 04                                        ; i32 literal
000026d: 6a                                        ; i32.add
000026e: 41                                        ; i32.const
000026f: 0c                                        ; i32 literal
0000270: 36                                        ; i32.store
0000271: 02                                        ; alignment
0000272: 00                                        ; store offset
0000273: 23                                        ; global.get
0000274: 00                                        ; global index
0000275: 41                                        ; i32.const
0000276: 08                                        ; i32 literal
0000277: 6a                                        ; i32.add
0000278: 41                                        ; i32.const
0000279: 00                                        ; i32 literal
000027a: 6a                                        ; i32.add
000027b: 41                                        ; i32.const
000027c: 18                                        ; i32 literal
000027d: b7                                        ; f64.convert_i32_s
000027e: 39                                        ; f64.store
000027f: 03                                        ; alignment
0000280: 00                                        ; store offset
0000281: 23                                        ; global.get
0000282: 00                                        ; global index
0000283: 41                                        ; i32.const
0000284: 08                                        ; i32 literal
0000285: 6a                                        ; i32.add
0000286: 41                                        ; i32.const
0000287: 08                                        ; i32 literal
0000288: 6a                                        ; i32.add
0000289: 41                                        ; i32.const
000028a: 17                                        ; i32 literal
000028b: b7                                        ; f64.convert_i32_s
000028c: 39                                        ; f64.store
000028d: 03                                        ; alignment
000028e: 00                                        ; store offset
000028f: 23                                        ; global.get
0000290: 00                                        ; global index
0000291: 41                                        ; i32.const
0000292: 08                                        ; i32 literal
0000293: 6a                                        ; i32.add
0000294: 41                                        ; i32.const
0000295: 10                                        ; i32 literal
0000296: 6a                                        ; i32.add
0000297: 41                                        ; i32.const
0000298: a803                                      ; i32 literal
000029a: b7                                        ; f64.convert_i32_s
000029b: 39                                        ; f64.store
000029c: 03                                        ; alignment
000029d: 00                                        ; store offset
000029e: 23                                        ; global.get
000029f: 00                                        ; global index
00002a0: 41                                        ; i32.const
00002a1: 08                                        ; i32 literal
00002a2: 6a                                        ; i32.add
00002a3: 41                                        ; i32.const
00002a4: 18                                        ; i32 literal
00002a5: 6a                                        ; i32.add
00002a6: 41                                        ; i32.const
00002a7: f712                                      ; i32 literal
00002a9: b7                                        ; f64.convert_i32_s
00002aa: 39                                        ; f64.store
00002ab: 03                                        ; alignment
00002ac: 00                                        ; store offset
00002ad: 23                                        ; global.get
00002ae: 00                                        ; global index
00002af: 41                                        ; i32.const
00002b0: 08                                        ; i32 literal
00002b1: 6a                                        ; i32.add
00002b2: 41                                        ; i32.const
00002b3: 20                                        ; i32 literal
00002b4: 6a                                        ; i32.add
00002b5: 41                                        ; i32.const
00002b6: b623                                      ; i32 literal
00002b8: b7                                        ; f64.convert_i32_s
00002b9: 39                                        ; f64.store
00002ba: 03                                        ; alignment
00002bb: 00                                        ; store offset
00002bc: 23                                        ; global.get
00002bd: 00                                        ; global index
00002be: 41                                        ; i32.const
00002bf: 08                                        ; i32 literal
00002c0: 6a                                        ; i32.add
00002c1: 41                                        ; i32.const
00002c2: 28                                        ; i32 literal
00002c3: 6a                                        ; i32.add
00002c4: 41                                        ; i32.const
00002c5: e929                                      ; i32 literal
00002c7: b7                                        ; f64.convert_i32_s
00002c8: 39                                        ; f64.store
00002c9: 03                                        ; alignment
00002ca: 00                                        ; store offset
00002cb: 23                                        ; global.get
00002cc: 00                                        ; global index
00002cd: 41                                        ; i32.const
00002ce: 08                                        ; i32 literal
00002cf: 6a                                        ; i32.add
00002d0: 41                                        ; i32.const
00002d1: 30                                        ; i32 literal
00002d2: 6a                                        ; i32.add
00002d3: 41                                        ; i32.const
00002d4: 37                                        ; i32 literal
00002d5: b7                                        ; f64.convert_i32_s
00002d6: 39                                        ; f64.store
00002d7: 03                                        ; alignment
00002d8: 00                                        ; store offset
00002d9: 23                                        ; global.get
00002da: 00                                        ; global index
00002db: 41                                        ; i32.const
00002dc: 08                                        ; i32 literal
00002dd: 6a                                        ; i32.add
00002de: 41                                        ; i32.const
00002df: 38                                        ; i32 literal
00002e0: 6a                                        ; i32.add
00002e1: 41                                        ; i32.const
00002e2: 37                                        ; i32 literal
00002e3: b7                                        ; f64.convert_i32_s
00002e4: 39                                        ; f64.store
00002e5: 03                                        ; alignment
00002e6: 00                                        ; store offset
00002e7: 23                                        ; global.get
00002e8: 00                                        ; global index
00002e9: 41                                        ; i32.const
00002ea: 08                                        ; i32 literal
00002eb: 6a                                        ; i32.add
00002ec: 41                                        ; i32.const
00002ed: c000                                      ; i32 literal
00002ef: 6a                                        ; i32.add
00002f0: 41                                        ; i32.const
00002f1: 37                                        ; i32 literal
00002f2: b7                                        ; f64.convert_i32_s
00002f3: 39                                        ; f64.store
00002f4: 03                                        ; alignment
00002f5: 00                                        ; store offset
00002f6: 23                                        ; global.get
00002f7: 00                                        ; global index
00002f8: 41                                        ; i32.const
00002f9: 08                                        ; i32 literal
00002fa: 6a                                        ; i32.add
00002fb: 41                                        ; i32.const
00002fc: c800                                      ; i32 literal
00002fe: 6a                                        ; i32.add
00002ff: 41                                        ; i32.const
0000300: 37                                        ; i32 literal
0000301: b7                                        ; f64.convert_i32_s
0000302: 39                                        ; f64.store
0000303: 03                                        ; alignment
0000304: 00                                        ; store offset
0000305: 23                                        ; global.get
0000306: 00                                        ; global index
0000307: 41                                        ; i32.const
0000308: 08                                        ; i32 literal
0000309: 6a                                        ; i32.add
000030a: 41                                        ; i32.const
000030b: d000                                      ; i32 literal
000030d: 6a                                        ; i32.add
000030e: 41                                        ; i32.const
000030f: b32b                                      ; i32 literal
0000311: b7                                        ; f64.convert_i32_s
0000312: 39                                        ; f64.store
0000313: 03                                        ; alignment
0000314: 00                                        ; store offset
0000315: 23                                        ; global.get
0000316: 00                                        ; global index
0000317: 41                                        ; i32.const
0000318: 08                                        ; i32 literal
0000319: 6a                                        ; i32.add
000031a: 41                                        ; i32.const
000031b: d800                                      ; i32 literal
000031d: 6a                                        ; i32.add
000031e: 41                                        ; i32.const
000031f: 05                                        ; i32 literal
0000320: b7                                        ; f64.convert_i32_s
0000321: 39                                        ; f64.store
0000322: 03                                        ; alignment
0000323: 00                                        ; store offset
0000324: 23                                        ; global.get
0000325: 00                                        ; global index
0000326: 41                                        ; i32.const
0000327: 38                                        ; i32 literal
0000328: 6a                                        ; i32.add
0000329: 24                                        ; global.set
000032a: 00                                        ; global index
000032b: 23                                        ; global.get
000032c: 00                                        ; global index
000032d: 24                                        ; global.set
000032e: 01                                        ; global index
000032f: 0b                                        ; end
; move data: [261, 330) -> [262, 331)
0000260: cf01                                      ; FIXUP func body size
; move data: [136, 331) -> [137, 332)
0000135: fb03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0137 0b60 017c 0060 
0000010: 017f 017f 6002 7f7c 017f 6002 7f7f 017c 
0000020: 6003 7f7f 7c00 6002 7f7f 017f 6003 7f7f 
0000030: 7f00 6000 017f 6000 017d 6001 7f00 6000 
0000040: 0002 8901 0a07 636f 6e73 6f6c 6503 6c6f 
0000050: 6700 0005 4172 7261 7906 6372 6561 7465 
0000060: 0001 0541 7272 6179 0470 7573 6800 0205 
0000070: 4172 7261 7903 6765 7400 0305 4172 7261 
0000080: 7903 7365 7400 0405 4172 7261 7906 6c65 
0000090: 6e67 7468 0001 0541 7272 6179 0470 7573 
00000a0: 6800 0505 4172 7261 7903 6765 7400 0505 
00000b0: 4172 7261 7903 7365 7400 0603 656e 760a 
00000c0: 6279 7465 6368 756e 6b73 0200 0103 0504 
00000d0: 0708 090a 060b 027f 0141 010b 7f01 4100 
00000e0: 0b07 4e03 1a61 7272 6179 5465 7374 322e 
00000f0: 7265 7475 726e 4172 7261 7954 6573 7400 
0000100: 0913 6172 7261 7954 6573 7432 2e72 6561 
0000110: 6454 6573 7400 0a17 6172 7261 7954 6573 
0000120: 7432 2e73 6574 5661 6c75 6554 6573 7400 
0000130: 0b08 010c 0afb 0304 a801 0101 7c23 0141 
0000140: 086a 4101 4108 6c6a 2b03 0021 0023 0041 
0000150: 0336 0200 2300 4104 6a41 0836 0200 2300 
0000160: 4108 6a41 006a 2000 b638 0200 2300 4108 
0000170: 6a41 046a 4100 b238 0200 2300 4108 6a41 
0000180: 086a 4123 b238 0200 2300 4108 6a41 0c6a 
0000190: 4189 e404 b238 0200 2300 4108 6a41 106a 
00001a0: 4122 b238 0200 2300 4108 6a41 146a 4196 
00001b0: 04b2 3802 0023 0041 086a 4118 6a41 35b2 
00001c0: 3802 0023 0041 086a 411c 6a23 0141 046a 
00001d0: 2802 00b2 3802 0023 0041 286a 2400 2300 
00001e0: 0f0b 5002 017e 017f 2301 4108 6a41 8fce 
00001f0: 0041 086c 6a2b 0300 b021 0041 0021 0102 
0000200: 4003 4020 0123 0141 046a 2802 0041 016b 
0000210: 4a0d 0123 0141 086a 2001 4108 6c6a 2b03 
0000220: 0010 0020 0141 016a 2101 0c00 0b0b 2000 
0000230: b40f 0b2d 0023 0141 086a 2000 4101 6a41 
0000240: 086c 6a20 0041 026c b739 0300 2301 4108 
0000250: 6a20 0041 e300 6c41 086c 6a2b 0300 1000 
0000260: 0bcf 0100 2300 4104 3602 0023 0041 046a 
0000270: 410c 3602 0023 0041 086a 4100 6a41 18b7 
0000280: 3903 0023 0041 086a 4108 6a41 17b7 3903 
0000290: 0023 0041 086a 4110 6a41 a803 b739 0300 
00002a0: 2300 4108 6a41 186a 41f7 12b7 3903 0023 
00002b0: 0041 086a 4120 6a41 b623 b739 0300 2300 
00002c0: 4108 6a41 286a 41e9 29b7 3903 0023 0041 
00002d0: 086a 4130 6a41 37b7 3903 0023 0041 086a 
00002e0: 4138 6a41 37b7 3903 0023 0041 086a 41c0 
00002f0: 006a 4137 b739 0300 2300 4108 6a41 c800 
0000300: 6a41 37b7 3903 0023 0041 086a 41d0 006a 
0000310: 41b3 2bb7 3903 0023 0041 086a 41d8 006a 
0000320: 4105 b739 0300 2300 4138 6a24 0023 0024 
0000330: 010b                                    
