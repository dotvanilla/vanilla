0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0b                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 01                                        ; num params
0000011: 7f                                        ; i32
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7c                                        ; f64
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 01                                        ; num results
000001f: 7c                                        ; f64
; type 4
0000020: 60                                        ; func
0000021: 03                                        ; num params
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 7c                                        ; f64
0000025: 00                                        ; num results
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 03                                        ; num params
000002e: 7f                                        ; i32
000002f: 7f                                        ; i32
0000030: 7f                                        ; i32
0000031: 00                                        ; num results
; type 7
0000032: 60                                        ; func
0000033: 00                                        ; num params
0000034: 01                                        ; num results
0000035: 7f                                        ; i32
; type 8
0000036: 60                                        ; func
0000037: 00                                        ; num params
0000038: 01                                        ; num results
0000039: 7d                                        ; f32
; type 9
000003a: 60                                        ; func
000003b: 01                                        ; num params
000003c: 7f                                        ; i32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
0000009: 37                                        ; FIXUP section size
; section "Import" (2)
0000041: 02                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 0a                                        ; num imports
; import header 0
0000044: 07                                        ; string length
0000045: 636f 6e73 6f6c 65                        console  ; import module name
000004c: 03                                        ; string length
000004d: 6c6f 67                                  log  ; import field name
0000050: 00                                        ; import kind
0000051: 00                                        ; import signature index
; import header 1
0000052: 05                                        ; string length
0000053: 4172 7261 79                             Array  ; import module name
0000058: 06                                        ; string length
0000059: 6372 6561 7465                           create  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 2
0000061: 05                                        ; string length
0000062: 4172 7261 79                             Array  ; import module name
0000067: 04                                        ; string length
0000068: 7075 7368                                push  ; import field name
000006c: 00                                        ; import kind
000006d: 02                                        ; import signature index
; import header 3
000006e: 05                                        ; string length
000006f: 4172 7261 79                             Array  ; import module name
0000074: 03                                        ; string length
0000075: 6765 74                                  get  ; import field name
0000078: 00                                        ; import kind
0000079: 03                                        ; import signature index
; import header 4
000007a: 05                                        ; string length
000007b: 4172 7261 79                             Array  ; import module name
0000080: 03                                        ; string length
0000081: 7365 74                                  set  ; import field name
0000084: 00                                        ; import kind
0000085: 04                                        ; import signature index
; import header 5
0000086: 05                                        ; string length
0000087: 4172 7261 79                             Array  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 05                                        ; string length
0000096: 4172 7261 79                             Array  ; import module name
000009b: 04                                        ; string length
000009c: 7075 7368                                push  ; import field name
00000a0: 00                                        ; import kind
00000a1: 05                                        ; import signature index
; import header 7
00000a2: 05                                        ; string length
00000a3: 4172 7261 79                             Array  ; import module name
00000a8: 03                                        ; string length
00000a9: 6765 74                                  get  ; import field name
00000ac: 00                                        ; import kind
00000ad: 05                                        ; import signature index
; import header 8
00000ae: 05                                        ; string length
00000af: 4172 7261 79                             Array  ; import module name
00000b4: 03                                        ; string length
00000b5: 7365 74                                  set  ; import field name
00000b8: 00                                        ; import kind
00000b9: 06                                        ; import signature index
; import header 9
00000ba: 03                                        ; string length
00000bb: 656e 76                                  env  ; import module name
00000be: 0a                                        ; string length
00000bf: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c9: 02                                        ; import kind
00000ca: 00                                        ; limits: flags
00000cb: 01                                        ; limits: initial
; move data: [43, cc) -> [44, cd)
0000042: 8901                                      ; FIXUP section size
; section "Function" (3)
00000cd: 03                                        ; section code
00000ce: 00                                        ; section size (guess)
00000cf: 04                                        ; num functions
00000d0: 07                                        ; function 0 signature index
00000d1: 08                                        ; function 1 signature index
00000d2: 09                                        ; function 2 signature index
00000d3: 0a                                        ; function 3 signature index
00000ce: 05                                        ; FIXUP section size
; section "Global" (6)
00000d4: 06                                        ; section code
00000d5: 00                                        ; section size (guess)
00000d6: 02                                        ; num globals
00000d7: 7f                                        ; i32
00000d8: 01                                        ; global mutability
00000d9: 41                                        ; i32.const
00000da: 01                                        ; i32 literal
00000db: 0b                                        ; end
00000dc: 7f                                        ; i32
00000dd: 01                                        ; global mutability
00000de: 41                                        ; i32.const
00000df: 00                                        ; i32 literal
00000e0: 0b                                        ; end
00000d5: 0b                                        ; FIXUP section size
; section "Export" (7)
00000e1: 07                                        ; section code
00000e2: 00                                        ; section size (guess)
00000e3: 03                                        ; num exports
00000e4: 1a                                        ; string length
00000e5: 6172 7261 7954 6573 7432 2e72 6574 7572  arrayTest2.retur
00000f5: 6e41 7272 6179 5465 7374                 nArrayTest  ; export name
00000ff: 00                                        ; export kind
0000100: 09                                        ; export func index
0000101: 13                                        ; string length
0000102: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
0000112: 6573 74                                  est  ; export name
0000115: 00                                        ; export kind
0000116: 0a                                        ; export func index
0000117: 17                                        ; string length
0000118: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
0000128: 6c75 6554 6573 74                        lueTest  ; export name
000012f: 00                                        ; export kind
0000130: 0b                                        ; export func index
00000e2: 4e                                        ; FIXUP section size
; section "Start" (8)
0000131: 08                                        ; section code
0000132: 00                                        ; section size (guess)
0000133: 0c                                        ; start func index
0000132: 01                                        ; FIXUP section size
; section "Code" (10)
0000134: 0a                                        ; section code
0000135: 00                                        ; section size (guess)
0000136: 04                                        ; num functions
; function body 0
0000137: 00                                        ; func body size (guess)
0000138: 02                                        ; local decl count
0000139: 01                                        ; local type count
000013a: 7c                                        ; f64
000013b: 01                                        ; local type count
000013c: 7f                                        ; i32
000013d: 23                                        ; global.get
000013e: 01                                        ; global index
000013f: 41                                        ; i32.const
0000140: 08                                        ; i32 literal
0000141: 6a                                        ; i32.add
0000142: 41                                        ; i32.const
0000143: 01                                        ; i32 literal
0000144: 41                                        ; i32.const
0000145: 08                                        ; i32 literal
0000146: 6c                                        ; i32.mul
0000147: 6a                                        ; i32.add
0000148: 2b                                        ; f64.load
0000149: 03                                        ; alignment
000014a: 00                                        ; load offset
000014b: 21                                        ; local.set
000014c: 00                                        ; local index
000014d: 23                                        ; global.get
000014e: 00                                        ; global index
000014f: 41                                        ; i32.const
0000150: 03                                        ; i32 literal
0000151: 36                                        ; i32.store
0000152: 02                                        ; alignment
0000153: 00                                        ; store offset
0000154: 23                                        ; global.get
0000155: 00                                        ; global index
0000156: 41                                        ; i32.const
0000157: 04                                        ; i32 literal
0000158: 6a                                        ; i32.add
0000159: 41                                        ; i32.const
000015a: 08                                        ; i32 literal
000015b: 36                                        ; i32.store
000015c: 02                                        ; alignment
000015d: 00                                        ; store offset
000015e: 23                                        ; global.get
000015f: 00                                        ; global index
0000160: 41                                        ; i32.const
0000161: 08                                        ; i32 literal
0000162: 6a                                        ; i32.add
0000163: 21                                        ; local.set
0000164: 01                                        ; local index
0000165: 20                                        ; local.get
0000166: 01                                        ; local index
0000167: 41                                        ; i32.const
0000168: 00                                        ; i32 literal
0000169: 6a                                        ; i32.add
000016a: 20                                        ; local.get
000016b: 00                                        ; local index
000016c: b6                                        ; f32.demote_f64
000016d: 38                                        ; f32.store
000016e: 02                                        ; alignment
000016f: 00                                        ; store offset
0000170: 20                                        ; local.get
0000171: 01                                        ; local index
0000172: 41                                        ; i32.const
0000173: 04                                        ; i32 literal
0000174: 6a                                        ; i32.add
0000175: 41                                        ; i32.const
0000176: 00                                        ; i32 literal
0000177: b2                                        ; f32.convert_i32_s
0000178: 38                                        ; f32.store
0000179: 02                                        ; alignment
000017a: 00                                        ; store offset
000017b: 20                                        ; local.get
000017c: 01                                        ; local index
000017d: 41                                        ; i32.const
000017e: 08                                        ; i32 literal
000017f: 6a                                        ; i32.add
0000180: 41                                        ; i32.const
0000181: 23                                        ; i32 literal
0000182: b2                                        ; f32.convert_i32_s
0000183: 38                                        ; f32.store
0000184: 02                                        ; alignment
0000185: 00                                        ; store offset
0000186: 20                                        ; local.get
0000187: 01                                        ; local index
0000188: 41                                        ; i32.const
0000189: 0c                                        ; i32 literal
000018a: 6a                                        ; i32.add
000018b: 41                                        ; i32.const
000018c: 89e4 04                                   ; i32 literal
000018f: b2                                        ; f32.convert_i32_s
0000190: 38                                        ; f32.store
0000191: 02                                        ; alignment
0000192: 00                                        ; store offset
0000193: 20                                        ; local.get
0000194: 01                                        ; local index
0000195: 41                                        ; i32.const
0000196: 10                                        ; i32 literal
0000197: 6a                                        ; i32.add
0000198: 41                                        ; i32.const
0000199: 22                                        ; i32 literal
000019a: b2                                        ; f32.convert_i32_s
000019b: 38                                        ; f32.store
000019c: 02                                        ; alignment
000019d: 00                                        ; store offset
000019e: 20                                        ; local.get
000019f: 01                                        ; local index
00001a0: 41                                        ; i32.const
00001a1: 14                                        ; i32 literal
00001a2: 6a                                        ; i32.add
00001a3: 41                                        ; i32.const
00001a4: 9604                                      ; i32 literal
00001a6: b2                                        ; f32.convert_i32_s
00001a7: 38                                        ; f32.store
00001a8: 02                                        ; alignment
00001a9: 00                                        ; store offset
00001aa: 20                                        ; local.get
00001ab: 01                                        ; local index
00001ac: 41                                        ; i32.const
00001ad: 18                                        ; i32 literal
00001ae: 6a                                        ; i32.add
00001af: 41                                        ; i32.const
00001b0: 35                                        ; i32 literal
00001b1: b2                                        ; f32.convert_i32_s
00001b2: 38                                        ; f32.store
00001b3: 02                                        ; alignment
00001b4: 00                                        ; store offset
00001b5: 20                                        ; local.get
00001b6: 01                                        ; local index
00001b7: 41                                        ; i32.const
00001b8: 1c                                        ; i32 literal
00001b9: 6a                                        ; i32.add
00001ba: 23                                        ; global.get
00001bb: 01                                        ; global index
00001bc: 41                                        ; i32.const
00001bd: 04                                        ; i32 literal
00001be: 6a                                        ; i32.add
00001bf: 28                                        ; i32.load
00001c0: 02                                        ; alignment
00001c1: 00                                        ; load offset
00001c2: b2                                        ; f32.convert_i32_s
00001c3: 38                                        ; f32.store
00001c4: 02                                        ; alignment
00001c5: 00                                        ; store offset
00001c6: 20                                        ; local.get
00001c7: 01                                        ; local index
00001c8: 41                                        ; i32.const
00001c9: 78                                        ; i32 literal
00001ca: 6a                                        ; i32.add
00001cb: 41                                        ; i32.const
00001cc: 28                                        ; i32 literal
00001cd: 6a                                        ; i32.add
00001ce: 24                                        ; global.set
00001cf: 00                                        ; global index
00001d0: 20                                        ; local.get
00001d1: 01                                        ; local index
00001d2: 41                                        ; i32.const
00001d3: 78                                        ; i32 literal
00001d4: 6a                                        ; i32.add
00001d5: 0f                                        ; return
00001d6: 0b                                        ; end
; move data: [138, 1d7) -> [139, 1d8)
0000137: 9f01                                      ; FIXUP func body size
; function body 1
00001d8: 00                                        ; func body size (guess)
00001d9: 02                                        ; local decl count
00001da: 01                                        ; local type count
00001db: 7e                                        ; i64
00001dc: 01                                        ; local type count
00001dd: 7f                                        ; i32
00001de: 23                                        ; global.get
00001df: 01                                        ; global index
00001e0: 41                                        ; i32.const
00001e1: 08                                        ; i32 literal
00001e2: 6a                                        ; i32.add
00001e3: 41                                        ; i32.const
00001e4: 8fce 00                                   ; i32 literal
00001e7: 41                                        ; i32.const
00001e8: 08                                        ; i32 literal
00001e9: 6c                                        ; i32.mul
00001ea: 6a                                        ; i32.add
00001eb: 2b                                        ; f64.load
00001ec: 03                                        ; alignment
00001ed: 00                                        ; load offset
00001ee: b0                                        ; i64.trunc_f64_s
00001ef: 21                                        ; local.set
00001f0: 00                                        ; local index
00001f1: 41                                        ; i32.const
00001f2: 00                                        ; i32 literal
00001f3: 21                                        ; local.set
00001f4: 01                                        ; local index
00001f5: 02                                        ; block
00001f6: 40                                        ; void
00001f7: 03                                        ; loop
00001f8: 40                                        ; void
00001f9: 20                                        ; local.get
00001fa: 01                                        ; local index
00001fb: 23                                        ; global.get
00001fc: 01                                        ; global index
00001fd: 41                                        ; i32.const
00001fe: 04                                        ; i32 literal
00001ff: 6a                                        ; i32.add
0000200: 28                                        ; i32.load
0000201: 02                                        ; alignment
0000202: 00                                        ; load offset
0000203: 41                                        ; i32.const
0000204: 01                                        ; i32 literal
0000205: 6b                                        ; i32.sub
0000206: 4a                                        ; i32.gt_s
0000207: 0d                                        ; br_if
0000208: 01                                        ; break depth
0000209: 23                                        ; global.get
000020a: 01                                        ; global index
000020b: 41                                        ; i32.const
000020c: 08                                        ; i32 literal
000020d: 6a                                        ; i32.add
000020e: 20                                        ; local.get
000020f: 01                                        ; local index
0000210: 41                                        ; i32.const
0000211: 08                                        ; i32 literal
0000212: 6c                                        ; i32.mul
0000213: 6a                                        ; i32.add
0000214: 2b                                        ; f64.load
0000215: 03                                        ; alignment
0000216: 00                                        ; load offset
0000217: 10                                        ; call
0000218: 00                                        ; function index
0000219: 20                                        ; local.get
000021a: 01                                        ; local index
000021b: 41                                        ; i32.const
000021c: 01                                        ; i32 literal
000021d: 6a                                        ; i32.add
000021e: 21                                        ; local.set
000021f: 01                                        ; local index
0000220: 0c                                        ; br
0000221: 00                                        ; break depth
0000222: 0b                                        ; end
0000223: 0b                                        ; end
0000224: 20                                        ; local.get
0000225: 00                                        ; local index
0000226: b4                                        ; f32.convert_i64_s
0000227: 0f                                        ; return
0000228: 0b                                        ; end
00001d8: 50                                        ; FIXUP func body size
; function body 2
0000229: 00                                        ; func body size (guess)
000022a: 00                                        ; local decl count
000022b: 23                                        ; global.get
000022c: 01                                        ; global index
000022d: 41                                        ; i32.const
000022e: 08                                        ; i32 literal
000022f: 6a                                        ; i32.add
0000230: 20                                        ; local.get
0000231: 00                                        ; local index
0000232: 41                                        ; i32.const
0000233: 01                                        ; i32 literal
0000234: 6a                                        ; i32.add
0000235: 41                                        ; i32.const
0000236: 08                                        ; i32 literal
0000237: 6c                                        ; i32.mul
0000238: 6a                                        ; i32.add
0000239: 20                                        ; local.get
000023a: 00                                        ; local index
000023b: 41                                        ; i32.const
000023c: 02                                        ; i32 literal
000023d: 6c                                        ; i32.mul
000023e: b7                                        ; f64.convert_i32_s
000023f: 23                                        ; global.get
0000240: 01                                        ; global index
0000241: 41                                        ; i32.const
0000242: 04                                        ; i32 literal
0000243: 6a                                        ; i32.add
0000244: 28                                        ; i32.load
0000245: 02                                        ; alignment
0000246: 00                                        ; load offset
0000247: 41                                        ; i32.const
0000248: 01                                        ; i32 literal
0000249: 6b                                        ; i32.sub
000024a: b7                                        ; f64.convert_i32_s
000024b: a3                                        ; f64.div
000024c: 39                                        ; f64.store
000024d: 03                                        ; alignment
000024e: 00                                        ; store offset
000024f: 23                                        ; global.get
0000250: 01                                        ; global index
0000251: 41                                        ; i32.const
0000252: 08                                        ; i32 literal
0000253: 6a                                        ; i32.add
0000254: 20                                        ; local.get
0000255: 00                                        ; local index
0000256: 41                                        ; i32.const
0000257: e300                                      ; i32 literal
0000259: 6c                                        ; i32.mul
000025a: 41                                        ; i32.const
000025b: 08                                        ; i32 literal
000025c: 6c                                        ; i32.mul
000025d: 6a                                        ; i32.add
000025e: 2b                                        ; f64.load
000025f: 03                                        ; alignment
0000260: 00                                        ; load offset
0000261: 10                                        ; call
0000262: 00                                        ; function index
0000263: 0b                                        ; end
0000229: 3a                                        ; FIXUP func body size
; function body 3
0000264: 00                                        ; func body size (guess)
0000265: 01                                        ; local decl count
0000266: 01                                        ; local type count
0000267: 7f                                        ; i32
0000268: 23                                        ; global.get
0000269: 00                                        ; global index
000026a: 41                                        ; i32.const
000026b: 04                                        ; i32 literal
000026c: 36                                        ; i32.store
000026d: 02                                        ; alignment
000026e: 00                                        ; store offset
000026f: 23                                        ; global.get
0000270: 00                                        ; global index
0000271: 41                                        ; i32.const
0000272: 04                                        ; i32 literal
0000273: 6a                                        ; i32.add
0000274: 41                                        ; i32.const
0000275: 0c                                        ; i32 literal
0000276: 36                                        ; i32.store
0000277: 02                                        ; alignment
0000278: 00                                        ; store offset
0000279: 23                                        ; global.get
000027a: 00                                        ; global index
000027b: 41                                        ; i32.const
000027c: 08                                        ; i32 literal
000027d: 6a                                        ; i32.add
000027e: 21                                        ; local.set
000027f: 00                                        ; local index
0000280: 20                                        ; local.get
0000281: 00                                        ; local index
0000282: 41                                        ; i32.const
0000283: 00                                        ; i32 literal
0000284: 6a                                        ; i32.add
0000285: 41                                        ; i32.const
0000286: 18                                        ; i32 literal
0000287: b7                                        ; f64.convert_i32_s
0000288: 39                                        ; f64.store
0000289: 03                                        ; alignment
000028a: 00                                        ; store offset
000028b: 20                                        ; local.get
000028c: 00                                        ; local index
000028d: 41                                        ; i32.const
000028e: 08                                        ; i32 literal
000028f: 6a                                        ; i32.add
0000290: 41                                        ; i32.const
0000291: 17                                        ; i32 literal
0000292: b7                                        ; f64.convert_i32_s
0000293: 39                                        ; f64.store
0000294: 03                                        ; alignment
0000295: 00                                        ; store offset
0000296: 20                                        ; local.get
0000297: 00                                        ; local index
0000298: 41                                        ; i32.const
0000299: 10                                        ; i32 literal
000029a: 6a                                        ; i32.add
000029b: 41                                        ; i32.const
000029c: a803                                      ; i32 literal
000029e: b7                                        ; f64.convert_i32_s
000029f: 39                                        ; f64.store
00002a0: 03                                        ; alignment
00002a1: 00                                        ; store offset
00002a2: 20                                        ; local.get
00002a3: 00                                        ; local index
00002a4: 41                                        ; i32.const
00002a5: 18                                        ; i32 literal
00002a6: 6a                                        ; i32.add
00002a7: 41                                        ; i32.const
00002a8: f712                                      ; i32 literal
00002aa: b7                                        ; f64.convert_i32_s
00002ab: 39                                        ; f64.store
00002ac: 03                                        ; alignment
00002ad: 00                                        ; store offset
00002ae: 20                                        ; local.get
00002af: 00                                        ; local index
00002b0: 41                                        ; i32.const
00002b1: 20                                        ; i32 literal
00002b2: 6a                                        ; i32.add
00002b3: 41                                        ; i32.const
00002b4: b623                                      ; i32 literal
00002b6: b7                                        ; f64.convert_i32_s
00002b7: 39                                        ; f64.store
00002b8: 03                                        ; alignment
00002b9: 00                                        ; store offset
00002ba: 20                                        ; local.get
00002bb: 00                                        ; local index
00002bc: 41                                        ; i32.const
00002bd: 28                                        ; i32 literal
00002be: 6a                                        ; i32.add
00002bf: 41                                        ; i32.const
00002c0: e929                                      ; i32 literal
00002c2: b7                                        ; f64.convert_i32_s
00002c3: 39                                        ; f64.store
00002c4: 03                                        ; alignment
00002c5: 00                                        ; store offset
00002c6: 20                                        ; local.get
00002c7: 00                                        ; local index
00002c8: 41                                        ; i32.const
00002c9: 30                                        ; i32 literal
00002ca: 6a                                        ; i32.add
00002cb: 41                                        ; i32.const
00002cc: 37                                        ; i32 literal
00002cd: b7                                        ; f64.convert_i32_s
00002ce: 39                                        ; f64.store
00002cf: 03                                        ; alignment
00002d0: 00                                        ; store offset
00002d1: 20                                        ; local.get
00002d2: 00                                        ; local index
00002d3: 41                                        ; i32.const
00002d4: 38                                        ; i32 literal
00002d5: 6a                                        ; i32.add
00002d6: 41                                        ; i32.const
00002d7: 37                                        ; i32 literal
00002d8: b7                                        ; f64.convert_i32_s
00002d9: 39                                        ; f64.store
00002da: 03                                        ; alignment
00002db: 00                                        ; store offset
00002dc: 20                                        ; local.get
00002dd: 00                                        ; local index
00002de: 41                                        ; i32.const
00002df: c000                                      ; i32 literal
00002e1: 6a                                        ; i32.add
00002e2: 41                                        ; i32.const
00002e3: 37                                        ; i32 literal
00002e4: b7                                        ; f64.convert_i32_s
00002e5: 39                                        ; f64.store
00002e6: 03                                        ; alignment
00002e7: 00                                        ; store offset
00002e8: 20                                        ; local.get
00002e9: 00                                        ; local index
00002ea: 41                                        ; i32.const
00002eb: c800                                      ; i32 literal
00002ed: 6a                                        ; i32.add
00002ee: 41                                        ; i32.const
00002ef: 37                                        ; i32 literal
00002f0: b7                                        ; f64.convert_i32_s
00002f1: 39                                        ; f64.store
00002f2: 03                                        ; alignment
00002f3: 00                                        ; store offset
00002f4: 20                                        ; local.get
00002f5: 00                                        ; local index
00002f6: 41                                        ; i32.const
00002f7: d000                                      ; i32 literal
00002f9: 6a                                        ; i32.add
00002fa: 41                                        ; i32.const
00002fb: b32b                                      ; i32 literal
00002fd: b7                                        ; f64.convert_i32_s
00002fe: 39                                        ; f64.store
00002ff: 03                                        ; alignment
0000300: 00                                        ; store offset
0000301: 20                                        ; local.get
0000302: 00                                        ; local index
0000303: 41                                        ; i32.const
0000304: d800                                      ; i32 literal
0000306: 6a                                        ; i32.add
0000307: 41                                        ; i32.const
0000308: 05                                        ; i32 literal
0000309: b7                                        ; f64.convert_i32_s
000030a: 39                                        ; f64.store
000030b: 03                                        ; alignment
000030c: 00                                        ; store offset
000030d: 20                                        ; local.get
000030e: 00                                        ; local index
000030f: 41                                        ; i32.const
0000310: 78                                        ; i32 literal
0000311: 6a                                        ; i32.add
0000312: 41                                        ; i32.const
0000313: 38                                        ; i32 literal
0000314: 6a                                        ; i32.add
0000315: 24                                        ; global.set
0000316: 00                                        ; global index
0000317: 20                                        ; local.get
0000318: 00                                        ; local index
0000319: 41                                        ; i32.const
000031a: 78                                        ; i32 literal
000031b: 6a                                        ; i32.add
000031c: 24                                        ; global.set
000031d: 01                                        ; global index
000031e: 0b                                        ; end
; move data: [265, 31f) -> [266, 320)
0000264: ba01                                      ; FIXUP func body size
; move data: [136, 320) -> [137, 321)
0000135: ea03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0137 0b60 017c 0060 
0000010: 017f 017f 6002 7f7c 017f 6002 7f7f 017c 
0000020: 6003 7f7f 7c00 6002 7f7f 017f 6003 7f7f 
0000030: 7f00 6000 017f 6000 017d 6001 7f00 6000 
0000040: 0002 8901 0a07 636f 6e73 6f6c 6503 6c6f 
0000050: 6700 0005 4172 7261 7906 6372 6561 7465 
0000060: 0001 0541 7272 6179 0470 7573 6800 0205 
0000070: 4172 7261 7903 6765 7400 0305 4172 7261 
0000080: 7903 7365 7400 0405 4172 7261 7906 6c65 
0000090: 6e67 7468 0001 0541 7272 6179 0470 7573 
00000a0: 6800 0505 4172 7261 7903 6765 7400 0505 
00000b0: 4172 7261 7903 7365 7400 0603 656e 760a 
00000c0: 6279 7465 6368 756e 6b73 0200 0103 0504 
00000d0: 0708 090a 060b 027f 0141 010b 7f01 4100 
00000e0: 0b07 4e03 1a61 7272 6179 5465 7374 322e 
00000f0: 7265 7475 726e 4172 7261 7954 6573 7400 
0000100: 0913 6172 7261 7954 6573 7432 2e72 6561 
0000110: 6454 6573 7400 0a17 6172 7261 7954 6573 
0000120: 7432 2e73 6574 5661 6c75 6554 6573 7400 
0000130: 0b08 010c 0aea 0304 9f01 0201 7c01 7f23 
0000140: 0141 086a 4101 4108 6c6a 2b03 0021 0023 
0000150: 0041 0336 0200 2300 4104 6a41 0836 0200 
0000160: 2300 4108 6a21 0120 0141 006a 2000 b638 
0000170: 0200 2001 4104 6a41 00b2 3802 0020 0141 
0000180: 086a 4123 b238 0200 2001 410c 6a41 89e4 
0000190: 04b2 3802 0020 0141 106a 4122 b238 0200 
00001a0: 2001 4114 6a41 9604 b238 0200 2001 4118 
00001b0: 6a41 35b2 3802 0020 0141 1c6a 2301 4104 
00001c0: 6a28 0200 b238 0200 2001 4178 6a41 286a 
00001d0: 2400 2001 4178 6a0f 0b50 0201 7e01 7f23 
00001e0: 0141 086a 418f ce00 4108 6c6a 2b03 00b0 
00001f0: 2100 4100 2101 0240 0340 2001 2301 4104 
0000200: 6a28 0200 4101 6b4a 0d01 2301 4108 6a20 
0000210: 0141 086c 6a2b 0300 1000 2001 4101 6a21 
0000220: 010c 000b 0b20 00b4 0f0b 3a00 2301 4108 
0000230: 6a20 0041 016a 4108 6c6a 2000 4102 6cb7 
0000240: 2301 4104 6a28 0200 4101 6bb7 a339 0300 
0000250: 2301 4108 6a20 0041 e300 6c41 086c 6a2b 
0000260: 0300 1000 0bba 0101 017f 2300 4104 3602 
0000270: 0023 0041 046a 410c 3602 0023 0041 086a 
0000280: 2100 2000 4100 6a41 18b7 3903 0020 0041 
0000290: 086a 4117 b739 0300 2000 4110 6a41 a803 
00002a0: b739 0300 2000 4118 6a41 f712 b739 0300 
00002b0: 2000 4120 6a41 b623 b739 0300 2000 4128 
00002c0: 6a41 e929 b739 0300 2000 4130 6a41 37b7 
00002d0: 3903 0020 0041 386a 4137 b739 0300 2000 
00002e0: 41c0 006a 4137 b739 0300 2000 41c8 006a 
00002f0: 4137 b739 0300 2000 41d0 006a 41b3 2bb7 
0000300: 3903 0020 0041 d800 6a41 05b7 3903 0020 
0000310: 0041 786a 4138 6a24 0020 0041 786a 2401 
0000320: 0b                                      
