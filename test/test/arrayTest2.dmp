0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0b                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 00                                        ; num results
; type 1
000000f: 60                                        ; func
0000010: 01                                        ; num params
0000011: 7f                                        ; i32
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7c                                        ; f64
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 01                                        ; num results
000001f: 7c                                        ; f64
; type 4
0000020: 60                                        ; func
0000021: 03                                        ; num params
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 7c                                        ; f64
0000025: 00                                        ; num results
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 03                                        ; num params
000002e: 7f                                        ; i32
000002f: 7f                                        ; i32
0000030: 7f                                        ; i32
0000031: 00                                        ; num results
; type 7
0000032: 60                                        ; func
0000033: 00                                        ; num params
0000034: 01                                        ; num results
0000035: 7f                                        ; i32
; type 8
0000036: 60                                        ; func
0000037: 00                                        ; num params
0000038: 01                                        ; num results
0000039: 7d                                        ; f32
; type 9
000003a: 60                                        ; func
000003b: 01                                        ; num params
000003c: 7f                                        ; i32
000003d: 00                                        ; num results
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
0000009: 37                                        ; FIXUP section size
; section "Import" (2)
0000041: 02                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 0a                                        ; num imports
; import header 0
0000044: 07                                        ; string length
0000045: 636f 6e73 6f6c 65                        console  ; import module name
000004c: 03                                        ; string length
000004d: 6c6f 67                                  log  ; import field name
0000050: 00                                        ; import kind
0000051: 00                                        ; import signature index
; import header 1
0000052: 05                                        ; string length
0000053: 4172 7261 79                             Array  ; import module name
0000058: 06                                        ; string length
0000059: 6372 6561 7465                           create  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 2
0000061: 05                                        ; string length
0000062: 4172 7261 79                             Array  ; import module name
0000067: 04                                        ; string length
0000068: 7075 7368                                push  ; import field name
000006c: 00                                        ; import kind
000006d: 02                                        ; import signature index
; import header 3
000006e: 05                                        ; string length
000006f: 4172 7261 79                             Array  ; import module name
0000074: 03                                        ; string length
0000075: 6765 74                                  get  ; import field name
0000078: 00                                        ; import kind
0000079: 03                                        ; import signature index
; import header 4
000007a: 05                                        ; string length
000007b: 4172 7261 79                             Array  ; import module name
0000080: 03                                        ; string length
0000081: 7365 74                                  set  ; import field name
0000084: 00                                        ; import kind
0000085: 04                                        ; import signature index
; import header 5
0000086: 05                                        ; string length
0000087: 4172 7261 79                             Array  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 01                                        ; import signature index
; import header 6
0000095: 05                                        ; string length
0000096: 4172 7261 79                             Array  ; import module name
000009b: 04                                        ; string length
000009c: 7075 7368                                push  ; import field name
00000a0: 00                                        ; import kind
00000a1: 05                                        ; import signature index
; import header 7
00000a2: 05                                        ; string length
00000a3: 4172 7261 79                             Array  ; import module name
00000a8: 03                                        ; string length
00000a9: 6765 74                                  get  ; import field name
00000ac: 00                                        ; import kind
00000ad: 05                                        ; import signature index
; import header 8
00000ae: 05                                        ; string length
00000af: 4172 7261 79                             Array  ; import module name
00000b4: 03                                        ; string length
00000b5: 7365 74                                  set  ; import field name
00000b8: 00                                        ; import kind
00000b9: 06                                        ; import signature index
; import header 9
00000ba: 03                                        ; string length
00000bb: 656e 76                                  env  ; import module name
00000be: 0a                                        ; string length
00000bf: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c9: 02                                        ; import kind
00000ca: 00                                        ; limits: flags
00000cb: 01                                        ; limits: initial
; move data: [43, cc) -> [44, cd)
0000042: 8901                                      ; FIXUP section size
; section "Function" (3)
00000cd: 03                                        ; section code
00000ce: 00                                        ; section size (guess)
00000cf: 04                                        ; num functions
00000d0: 07                                        ; function 0 signature index
00000d1: 08                                        ; function 1 signature index
00000d2: 09                                        ; function 2 signature index
00000d3: 0a                                        ; function 3 signature index
00000ce: 05                                        ; FIXUP section size
; section "Global" (6)
00000d4: 06                                        ; section code
00000d5: 00                                        ; section size (guess)
00000d6: 01                                        ; num globals
00000d7: 7f                                        ; i32
00000d8: 01                                        ; global mutability
00000d9: 41                                        ; i32.const
00000da: 00                                        ; i32 literal
00000db: 0b                                        ; end
00000d5: 06                                        ; FIXUP section size
; section "Export" (7)
00000dc: 07                                        ; section code
00000dd: 00                                        ; section size (guess)
00000de: 03                                        ; num exports
00000df: 1a                                        ; string length
00000e0: 6172 7261 7954 6573 7432 2e72 6574 7572  arrayTest2.retur
00000f0: 6e41 7272 6179 5465 7374                 nArrayTest  ; export name
00000fa: 00                                        ; export kind
00000fb: 09                                        ; export func index
00000fc: 13                                        ; string length
00000fd: 6172 7261 7954 6573 7432 2e72 6561 6454  arrayTest2.readT
000010d: 6573 74                                  est  ; export name
0000110: 00                                        ; export kind
0000111: 0a                                        ; export func index
0000112: 17                                        ; string length
0000113: 6172 7261 7954 6573 7432 2e73 6574 5661  arrayTest2.setVa
0000123: 6c75 6554 6573 74                        lueTest  ; export name
000012a: 00                                        ; export kind
000012b: 0b                                        ; export func index
00000dd: 4e                                        ; FIXUP section size
; section "Start" (8)
000012c: 08                                        ; section code
000012d: 00                                        ; section size (guess)
000012e: 0c                                        ; start func index
000012d: 01                                        ; FIXUP section size
; section "Code" (10)
000012f: 0a                                        ; section code
0000130: 00                                        ; section size (guess)
0000131: 04                                        ; num functions
; function body 0
0000132: 00                                        ; func body size (guess)
0000133: 01                                        ; local decl count
0000134: 01                                        ; local type count
0000135: 7c                                        ; f64
0000136: 23                                        ; global.get
0000137: 00                                        ; global index
0000138: 41                                        ; i32.const
0000139: 01                                        ; i32 literal
000013a: 41                                        ; i32.const
000013b: 08                                        ; i32 literal
000013c: 6c                                        ; i32.mul
000013d: 6a                                        ; i32.add
000013e: 2b                                        ; f64.load
000013f: 03                                        ; alignment
0000140: 00                                        ; load offset
0000141: 21                                        ; local.set
0000142: 00                                        ; local index
0000143: 41                                        ; i32.const
0000144: 01                                        ; i32 literal
0000145: 20                                        ; local.get
0000146: 00                                        ; local index
0000147: b6                                        ; f32.demote_f64
0000148: 38                                        ; f32.store
0000149: 02                                        ; alignment
000014a: 00                                        ; store offset
000014b: 41                                        ; i32.const
000014c: 05                                        ; i32 literal
000014d: 41                                        ; i32.const
000014e: 00                                        ; i32 literal
000014f: b2                                        ; f32.convert_i32_s
0000150: 38                                        ; f32.store
0000151: 02                                        ; alignment
0000152: 00                                        ; store offset
0000153: 41                                        ; i32.const
0000154: 09                                        ; i32 literal
0000155: 41                                        ; i32.const
0000156: 23                                        ; i32 literal
0000157: b2                                        ; f32.convert_i32_s
0000158: 38                                        ; f32.store
0000159: 02                                        ; alignment
000015a: 00                                        ; store offset
000015b: 41                                        ; i32.const
000015c: 0d                                        ; i32 literal
000015d: 41                                        ; i32.const
000015e: 89e4 04                                   ; i32 literal
0000161: b2                                        ; f32.convert_i32_s
0000162: 38                                        ; f32.store
0000163: 02                                        ; alignment
0000164: 00                                        ; store offset
0000165: 41                                        ; i32.const
0000166: 11                                        ; i32 literal
0000167: 41                                        ; i32.const
0000168: 22                                        ; i32 literal
0000169: b2                                        ; f32.convert_i32_s
000016a: 38                                        ; f32.store
000016b: 02                                        ; alignment
000016c: 00                                        ; store offset
000016d: 41                                        ; i32.const
000016e: 15                                        ; i32 literal
000016f: 41                                        ; i32.const
0000170: 9604                                      ; i32 literal
0000172: b2                                        ; f32.convert_i32_s
0000173: 38                                        ; f32.store
0000174: 02                                        ; alignment
0000175: 00                                        ; store offset
0000176: 41                                        ; i32.const
0000177: 19                                        ; i32 literal
0000178: 41                                        ; i32.const
0000179: 35                                        ; i32 literal
000017a: b2                                        ; f32.convert_i32_s
000017b: 38                                        ; f32.store
000017c: 02                                        ; alignment
000017d: 00                                        ; store offset
000017e: 41                                        ; i32.const
000017f: 01                                        ; i32 literal
0000180: 0f                                        ; return
0000181: 0b                                        ; end
0000132: 4f                                        ; FIXUP func body size
; function body 1
0000182: 00                                        ; func body size (guess)
0000183: 02                                        ; local decl count
0000184: 01                                        ; local type count
0000185: 7e                                        ; i64
0000186: 01                                        ; local type count
0000187: 7f                                        ; i32
0000188: 23                                        ; global.get
0000189: 00                                        ; global index
000018a: 41                                        ; i32.const
000018b: 8fce 00                                   ; i32 literal
000018e: 41                                        ; i32.const
000018f: 08                                        ; i32 literal
0000190: 6c                                        ; i32.mul
0000191: 6a                                        ; i32.add
0000192: 2b                                        ; f64.load
0000193: 03                                        ; alignment
0000194: 00                                        ; load offset
0000195: b0                                        ; i64.trunc_f64_s
0000196: 21                                        ; local.set
0000197: 00                                        ; local index
0000198: 41                                        ; i32.const
0000199: 00                                        ; i32 literal
000019a: 21                                        ; local.set
000019b: 01                                        ; local index
000019c: 02                                        ; block
000019d: 40                                        ; void
000019e: 03                                        ; loop
000019f: 40                                        ; void
00001a0: 20                                        ; local.get
00001a1: 01                                        ; local index
00001a2: 23                                        ; global.get
00001a3: 00                                        ; global index
00001a4: 10                                        ; call
00001a5: 05                                        ; function index
00001a6: 41                                        ; i32.const
00001a7: 01                                        ; i32 literal
00001a8: 6b                                        ; i32.sub
00001a9: 4a                                        ; i32.gt_s
00001aa: 0d                                        ; br_if
00001ab: 01                                        ; break depth
00001ac: 23                                        ; global.get
00001ad: 00                                        ; global index
00001ae: 20                                        ; local.get
00001af: 01                                        ; local index
00001b0: 41                                        ; i32.const
00001b1: 08                                        ; i32 literal
00001b2: 6c                                        ; i32.mul
00001b3: 6a                                        ; i32.add
00001b4: 2b                                        ; f64.load
00001b5: 03                                        ; alignment
00001b6: 00                                        ; load offset
00001b7: 10                                        ; call
00001b8: 00                                        ; function index
00001b9: 20                                        ; local.get
00001ba: 01                                        ; local index
00001bb: 41                                        ; i32.const
00001bc: 01                                        ; i32 literal
00001bd: 6a                                        ; i32.add
00001be: 21                                        ; local.set
00001bf: 01                                        ; local index
00001c0: 0c                                        ; br
00001c1: 00                                        ; break depth
00001c2: 0b                                        ; end
00001c3: 0b                                        ; end
00001c4: 20                                        ; local.get
00001c5: 00                                        ; local index
00001c6: b4                                        ; f32.convert_i64_s
00001c7: 0f                                        ; return
00001c8: 0b                                        ; end
0000182: 46                                        ; FIXUP func body size
; function body 2
00001c9: 00                                        ; func body size (guess)
00001ca: 00                                        ; local decl count
00001cb: 23                                        ; global.get
00001cc: 00                                        ; global index
00001cd: 20                                        ; local.get
00001ce: 00                                        ; local index
00001cf: 41                                        ; i32.const
00001d0: 01                                        ; i32 literal
00001d1: 6a                                        ; i32.add
00001d2: 41                                        ; i32.const
00001d3: 08                                        ; i32 literal
00001d4: 6c                                        ; i32.mul
00001d5: 6a                                        ; i32.add
00001d6: 20                                        ; local.get
00001d7: 00                                        ; local index
00001d8: 41                                        ; i32.const
00001d9: 02                                        ; i32 literal
00001da: 6c                                        ; i32.mul
00001db: b7                                        ; f64.convert_i32_s
00001dc: 39                                        ; f64.store
00001dd: 03                                        ; alignment
00001de: 00                                        ; store offset
00001df: 23                                        ; global.get
00001e0: 00                                        ; global index
00001e1: 20                                        ; local.get
00001e2: 00                                        ; local index
00001e3: 41                                        ; i32.const
00001e4: e300                                      ; i32 literal
00001e6: 6c                                        ; i32.mul
00001e7: 41                                        ; i32.const
00001e8: 08                                        ; i32 literal
00001e9: 6c                                        ; i32.mul
00001ea: 6a                                        ; i32.add
00001eb: 2b                                        ; f64.load
00001ec: 03                                        ; alignment
00001ed: 00                                        ; load offset
00001ee: 10                                        ; call
00001ef: 00                                        ; function index
00001f0: 0b                                        ; end
00001c9: 27                                        ; FIXUP func body size
; function body 3
00001f1: 00                                        ; func body size (guess)
00001f2: 00                                        ; local decl count
00001f3: 41                                        ; i32.const
00001f4: 1e                                        ; i32 literal
00001f5: 41                                        ; i32.const
00001f6: 18                                        ; i32 literal
00001f7: b7                                        ; f64.convert_i32_s
00001f8: 39                                        ; f64.store
00001f9: 03                                        ; alignment
00001fa: 00                                        ; store offset
00001fb: 41                                        ; i32.const
00001fc: 26                                        ; i32 literal
00001fd: 41                                        ; i32.const
00001fe: 17                                        ; i32 literal
00001ff: b7                                        ; f64.convert_i32_s
0000200: 39                                        ; f64.store
0000201: 03                                        ; alignment
0000202: 00                                        ; store offset
0000203: 41                                        ; i32.const
0000204: 2e                                        ; i32 literal
0000205: 41                                        ; i32.const
0000206: a803                                      ; i32 literal
0000208: b7                                        ; f64.convert_i32_s
0000209: 39                                        ; f64.store
000020a: 03                                        ; alignment
000020b: 00                                        ; store offset
000020c: 41                                        ; i32.const
000020d: 36                                        ; i32 literal
000020e: 41                                        ; i32.const
000020f: f712                                      ; i32 literal
0000211: b7                                        ; f64.convert_i32_s
0000212: 39                                        ; f64.store
0000213: 03                                        ; alignment
0000214: 00                                        ; store offset
0000215: 41                                        ; i32.const
0000216: 3e                                        ; i32 literal
0000217: 41                                        ; i32.const
0000218: b623                                      ; i32 literal
000021a: b7                                        ; f64.convert_i32_s
000021b: 39                                        ; f64.store
000021c: 03                                        ; alignment
000021d: 00                                        ; store offset
000021e: 41                                        ; i32.const
000021f: c600                                      ; i32 literal
0000221: 41                                        ; i32.const
0000222: e929                                      ; i32 literal
0000224: b7                                        ; f64.convert_i32_s
0000225: 39                                        ; f64.store
0000226: 03                                        ; alignment
0000227: 00                                        ; store offset
0000228: 41                                        ; i32.const
0000229: ce00                                      ; i32 literal
000022b: 41                                        ; i32.const
000022c: 37                                        ; i32 literal
000022d: b7                                        ; f64.convert_i32_s
000022e: 39                                        ; f64.store
000022f: 03                                        ; alignment
0000230: 00                                        ; store offset
0000231: 41                                        ; i32.const
0000232: d600                                      ; i32 literal
0000234: 41                                        ; i32.const
0000235: 37                                        ; i32 literal
0000236: b7                                        ; f64.convert_i32_s
0000237: 39                                        ; f64.store
0000238: 03                                        ; alignment
0000239: 00                                        ; store offset
000023a: 41                                        ; i32.const
000023b: de00                                      ; i32 literal
000023d: 41                                        ; i32.const
000023e: 37                                        ; i32 literal
000023f: b7                                        ; f64.convert_i32_s
0000240: 39                                        ; f64.store
0000241: 03                                        ; alignment
0000242: 00                                        ; store offset
0000243: 41                                        ; i32.const
0000244: e600                                      ; i32 literal
0000246: 41                                        ; i32.const
0000247: 37                                        ; i32 literal
0000248: b7                                        ; f64.convert_i32_s
0000249: 39                                        ; f64.store
000024a: 03                                        ; alignment
000024b: 00                                        ; store offset
000024c: 41                                        ; i32.const
000024d: ee00                                      ; i32 literal
000024f: 41                                        ; i32.const
0000250: b32b                                      ; i32 literal
0000252: b7                                        ; f64.convert_i32_s
0000253: 39                                        ; f64.store
0000254: 03                                        ; alignment
0000255: 00                                        ; store offset
0000256: 41                                        ; i32.const
0000257: f600                                      ; i32 literal
0000259: 41                                        ; i32.const
000025a: 05                                        ; i32 literal
000025b: b7                                        ; f64.convert_i32_s
000025c: 39                                        ; f64.store
000025d: 03                                        ; alignment
000025e: 00                                        ; store offset
000025f: 41                                        ; i32.const
0000260: 1e                                        ; i32 literal
0000261: 24                                        ; global.set
0000262: 00                                        ; global index
0000263: 0b                                        ; end
00001f1: 72                                        ; FIXUP func body size
; move data: [131, 264) -> [132, 265)
0000130: b302                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0137 0b60 017c 0060 
0000010: 017f 017f 6002 7f7c 017f 6002 7f7f 017c 
0000020: 6003 7f7f 7c00 6002 7f7f 017f 6003 7f7f 
0000030: 7f00 6000 017f 6000 017d 6001 7f00 6000 
0000040: 0002 8901 0a07 636f 6e73 6f6c 6503 6c6f 
0000050: 6700 0005 4172 7261 7906 6372 6561 7465 
0000060: 0001 0541 7272 6179 0470 7573 6800 0205 
0000070: 4172 7261 7903 6765 7400 0305 4172 7261 
0000080: 7903 7365 7400 0405 4172 7261 7906 6c65 
0000090: 6e67 7468 0001 0541 7272 6179 0470 7573 
00000a0: 6800 0505 4172 7261 7903 6765 7400 0505 
00000b0: 4172 7261 7903 7365 7400 0603 656e 760a 
00000c0: 6279 7465 6368 756e 6b73 0200 0103 0504 
00000d0: 0708 090a 0606 017f 0141 000b 074e 031a 
00000e0: 6172 7261 7954 6573 7432 2e72 6574 7572 
00000f0: 6e41 7272 6179 5465 7374 0009 1361 7272 
0000100: 6179 5465 7374 322e 7265 6164 5465 7374 
0000110: 000a 1761 7272 6179 5465 7374 322e 7365 
0000120: 7456 616c 7565 5465 7374 000b 0801 0c0a 
0000130: b302 044f 0101 7c23 0041 0141 086c 6a2b 
0000140: 0300 2100 4101 2000 b638 0200 4105 4100 
0000150: b238 0200 4109 4123 b238 0200 410d 4189 
0000160: e404 b238 0200 4111 4122 b238 0200 4115 
0000170: 4196 04b2 3802 0041 1941 35b2 3802 0041 
0000180: 010f 0b46 0201 7e01 7f23 0041 8fce 0041 
0000190: 086c 6a2b 0300 b021 0041 0021 0102 4003 
00001a0: 4020 0123 0010 0541 016b 4a0d 0123 0020 
00001b0: 0141 086c 6a2b 0300 1000 2001 4101 6a21 
00001c0: 010c 000b 0b20 00b4 0f0b 2700 2300 2000 
00001d0: 4101 6a41 086c 6a20 0041 026c b739 0300 
00001e0: 2300 2000 41e3 006c 4108 6c6a 2b03 0010 
00001f0: 000b 7200 411e 4118 b739 0300 4126 4117 
0000200: b739 0300 412e 41a8 03b7 3903 0041 3641 
0000210: f712 b739 0300 413e 41b6 23b7 3903 0041 
0000220: c600 41e9 29b7 3903 0041 ce00 4137 b739 
0000230: 0300 41d6 0041 37b7 3903 0041 de00 4137 
0000240: b739 0300 41e6 0041 37b7 3903 0041 ee00 
0000250: 41b3 2bb7 3903 0041 f600 4105 b739 0300 
0000260: 411e 2400 0b                            
