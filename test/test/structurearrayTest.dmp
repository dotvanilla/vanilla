0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 01                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
0000009: 04                                        ; FIXUP section size
; section "Import" (2)
000000e: 02                                        ; section code
000000f: 00                                        ; section size (guess)
0000010: 01                                        ; num imports
; import header 0
0000011: 03                                        ; string length
0000012: 656e 76                                  env  ; import module name
0000015: 0a                                        ; string length
0000016: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000020: 02                                        ; import kind
0000021: 00                                        ; limits: flags
0000022: 01                                        ; limits: initial
000000f: 13                                        ; FIXUP section size
; section "Function" (3)
0000023: 03                                        ; section code
0000024: 00                                        ; section size (guess)
0000025: 03                                        ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000024: 04                                        ; FIXUP section size
; section "Global" (6)
0000029: 06                                        ; section code
000002a: 00                                        ; section size (guess)
000002b: 01                                        ; num globals
000002c: 7f                                        ; i32
000002d: 01                                        ; global mutability
000002e: 41                                        ; i32.const
000002f: e402                                      ; i32 literal
0000031: 0b                                        ; end
000002a: 07                                        ; FIXUP section size
; section "Export" (7)
0000032: 07                                        ; section code
0000033: 00                                        ; section size (guess)
0000034: 01                                        ; num exports
0000035: 1e                                        ; string length
0000036: 7374 7275 6374 7572 6561 7272 6179 5465  structurearrayTe
0000046: 7374 2e63 7265 6174 6561 7272 6179       st.createarray  ; export name
0000054: 00                                        ; export kind
0000055: 00                                        ; export func index
0000033: 22                                        ; FIXUP section size
; section "Start" (8)
0000056: 08                                        ; section code
0000057: 00                                        ; section size (guess)
0000058: 01                                        ; start func index
0000057: 01                                        ; FIXUP section size
; section "Code" (10)
0000059: 0a                                        ; section code
000005a: 00                                        ; section size (guess)
000005b: 03                                        ; num functions
; function body 0
000005c: 00                                        ; func body size (guess)
000005d: 01                                        ; local decl count
000005e: 06                                        ; local type count
000005f: 7f                                        ; i32
0000060: 23                                        ; global.get
0000061: 00                                        ; global index
0000062: 41                                        ; i32.const
0000063: 0b                                        ; i32 literal
0000064: 36                                        ; i32.store
0000065: 02                                        ; alignment
0000066: 00                                        ; store offset
0000067: 23                                        ; global.get
0000068: 00                                        ; global index
0000069: 41                                        ; i32.const
000006a: 04                                        ; i32 literal
000006b: 6a                                        ; i32.add
000006c: 41                                        ; i32.const
000006d: 02                                        ; i32 literal
000006e: 36                                        ; i32.store
000006f: 02                                        ; alignment
0000070: 00                                        ; store offset
0000071: 23                                        ; global.get
0000072: 00                                        ; global index
0000073: 41                                        ; i32.const
0000074: 08                                        ; i32 literal
0000075: 6a                                        ; i32.add
0000076: 21                                        ; local.set
0000077: 02                                        ; local index
0000078: 20                                        ; local.get
0000079: 02                                        ; local index
000007a: 41                                        ; i32.const
000007b: 00                                        ; i32 literal
000007c: 6a                                        ; i32.add
000007d: 21                                        ; local.set
000007e: 03                                        ; local index
000007f: 23                                        ; global.get
0000080: 00                                        ; global index
0000081: 21                                        ; local.set
0000082: 03                                        ; local index
0000083: 20                                        ; local.get
0000084: 03                                        ; local index
0000085: 41                                        ; i32.const
0000086: 00                                        ; i32 literal
0000087: 6a                                        ; i32.add
0000088: 20                                        ; local.get
0000089: 00                                        ; local index
000008a: 41                                        ; i32.const
000008b: 00                                        ; i32 literal
000008c: 6a                                        ; i32.add
000008d: 28                                        ; i32.load
000008e: 02                                        ; alignment
000008f: 00                                        ; load offset
0000090: 36                                        ; i32.store
0000091: 02                                        ; alignment
0000092: 00                                        ; store offset
0000093: 20                                        ; local.get
0000094: 03                                        ; local index
0000095: 41                                        ; i32.const
0000096: 04                                        ; i32 literal
0000097: 6a                                        ; i32.add
0000098: 20                                        ; local.get
0000099: 00                                        ; local index
000009a: 41                                        ; i32.const
000009b: 04                                        ; i32 literal
000009c: 6a                                        ; i32.add
000009d: 28                                        ; i32.load
000009e: 02                                        ; alignment
000009f: 00                                        ; load offset
00000a0: 36                                        ; i32.store
00000a1: 02                                        ; alignment
00000a2: 00                                        ; store offset
00000a3: 20                                        ; local.get
00000a4: 03                                        ; local index
00000a5: 41                                        ; i32.const
00000a6: 08                                        ; i32 literal
00000a7: 6a                                        ; i32.add
00000a8: 20                                        ; local.get
00000a9: 00                                        ; local index
00000aa: 41                                        ; i32.const
00000ab: 08                                        ; i32 literal
00000ac: 6a                                        ; i32.add
00000ad: 2b                                        ; f64.load
00000ae: 03                                        ; alignment
00000af: 00                                        ; load offset
00000b0: 39                                        ; f64.store
00000b1: 03                                        ; alignment
00000b2: 00                                        ; store offset
00000b3: 20                                        ; local.get
00000b4: 03                                        ; local index
00000b5: 41                                        ; i32.const
00000b6: 10                                        ; i32 literal
00000b7: 6a                                        ; i32.add
00000b8: 24                                        ; global.set
00000b9: 00                                        ; global index
00000ba: 20                                        ; local.get
00000bb: 02                                        ; local index
00000bc: 41                                        ; i32.const
00000bd: 10                                        ; i32 literal
00000be: 6a                                        ; i32.add
00000bf: 21                                        ; local.set
00000c0: 04                                        ; local index
00000c1: 23                                        ; global.get
00000c2: 00                                        ; global index
00000c3: 21                                        ; local.set
00000c4: 04                                        ; local index
00000c5: 20                                        ; local.get
00000c6: 04                                        ; local index
00000c7: 41                                        ; i32.const
00000c8: 00                                        ; i32 literal
00000c9: 6a                                        ; i32.add
00000ca: 20                                        ; local.get
00000cb: 01                                        ; local index
00000cc: 41                                        ; i32.const
00000cd: 00                                        ; i32 literal
00000ce: 6a                                        ; i32.add
00000cf: 28                                        ; i32.load
00000d0: 02                                        ; alignment
00000d1: 00                                        ; load offset
00000d2: 36                                        ; i32.store
00000d3: 02                                        ; alignment
00000d4: 00                                        ; store offset
00000d5: 20                                        ; local.get
00000d6: 04                                        ; local index
00000d7: 41                                        ; i32.const
00000d8: 04                                        ; i32 literal
00000d9: 6a                                        ; i32.add
00000da: 20                                        ; local.get
00000db: 01                                        ; local index
00000dc: 41                                        ; i32.const
00000dd: 04                                        ; i32 literal
00000de: 6a                                        ; i32.add
00000df: 28                                        ; i32.load
00000e0: 02                                        ; alignment
00000e1: 00                                        ; load offset
00000e2: 36                                        ; i32.store
00000e3: 02                                        ; alignment
00000e4: 00                                        ; store offset
00000e5: 20                                        ; local.get
00000e6: 04                                        ; local index
00000e7: 41                                        ; i32.const
00000e8: 08                                        ; i32 literal
00000e9: 6a                                        ; i32.add
00000ea: 20                                        ; local.get
00000eb: 01                                        ; local index
00000ec: 41                                        ; i32.const
00000ed: 08                                        ; i32 literal
00000ee: 6a                                        ; i32.add
00000ef: 2b                                        ; f64.load
00000f0: 03                                        ; alignment
00000f1: 00                                        ; load offset
00000f2: 39                                        ; f64.store
00000f3: 03                                        ; alignment
00000f4: 00                                        ; store offset
00000f5: 20                                        ; local.get
00000f6: 04                                        ; local index
00000f7: 41                                        ; i32.const
00000f8: 10                                        ; i32 literal
00000f9: 6a                                        ; i32.add
00000fa: 24                                        ; global.set
00000fb: 00                                        ; global index
00000fc: 20                                        ; local.get
00000fd: 02                                        ; local index
00000fe: 41                                        ; i32.const
00000ff: 78                                        ; i32 literal
0000100: 6a                                        ; i32.add
0000101: 41                                        ; i32.const
0000102: 28                                        ; i32 literal
0000103: 6a                                        ; i32.add
0000104: 24                                        ; global.set
0000105: 00                                        ; global index
0000106: 20                                        ; local.get
0000107: 02                                        ; local index
0000108: 41                                        ; i32.const
0000109: 78                                        ; i32 literal
000010a: 6a                                        ; i32.add
000010b: 21                                        ; local.set
000010c: 05                                        ; local index
000010d: 0b                                        ; end
; move data: [5d, 10e) -> [5e, 10f)
000005c: b101                                      ; FIXUP func body size
; function body 1
000010f: 00                                        ; func body size (guess)
0000110: 00                                        ; local decl count
0000111: 10                                        ; call
0000112: 02                                        ; function index
0000113: 0b                                        ; end
000010f: 04                                        ; FIXUP func body size
; function body 2
0000114: 00                                        ; func body size (guess)
0000115: 00                                        ; local decl count
0000116: 0b                                        ; end
0000114: 02                                        ; FIXUP func body size
; move data: [5b, 117) -> [5c, 118)
000005a: bc01                                      ; FIXUP section size
; section "Data" (11)
0000118: 0b                                        ; section code
0000119: 00                                        ; section size (guess)
000011a: 01                                        ; num data segments
; data segment header 0
000011b: 00                                      
000011c: 41                                        ; i32.const
000011d: 0b                                        ; i32 literal
000011e: 0b                                        ; end
000011f: d902                                      ; data segment size
; data segment data 0
0000121: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
0000131: 4f6e 7369 566d 4673 6457 5569 4f6a 4578 
0000141: 6653 7769 5932 7868 6333 4d69 4f69 4a6a 
0000151: 6158 4a6a 6247 5569 4c43 4a6a 6247 467a 
0000161: 6331 3970 5a43 4936 4d54 4573 496d 5a70 
0000171: 5a57 786b 6379 4936 6579 4a34 496a 7037 
0000181: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000191: 4c43 4a79 5958 6369 4f69 4a70 4d7a 4969 
00001a1: 4c43 4a30 6558 426c 496a 6f78 6653 7769 
00001b1: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
00001c1: 496a 7062 5853 7769 636d 4633 496a 6f69 
00001d1: 6154 4d79 4969 7769 6448 6c77 5a53 4936 
00001e1: 4d58 3073 496e 4a68 5a47 6c31 6379 4936 
00001f1: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000201: 5853 7769 636d 4633 496a 6f69 5a6a 5930 
0000211: 4969 7769 6448 6c77 5a53 4936 4e48 3139 
0000221: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0000231: 6448 4a31 5a53 7769 6257 5630 6147 396b 
0000241: 6379 4936 6533 3073 496d 3568 6257 567a 
0000251: 6347 466a 5a53 4936 496e 4e30 636e 566a 
0000261: 6448 5679 5a55 4679 636d 4635 5257 786c 
0000271: 6257 5675 6443 4a39 00                    ; data segment data
; move data: [11a, 27a) -> [11b, 27b)
0000119: e002                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0104 0160 0000 0213 
0000010: 0103 656e 760a 6279 7465 6368 756e 6b73 
0000020: 0200 0103 0403 0000 0006 0701 7f01 41e4 
0000030: 020b 0722 011e 7374 7275 6374 7572 6561 
0000040: 7272 6179 5465 7374 2e63 7265 6174 6561 
0000050: 7272 6179 0000 0801 010a bc01 03b1 0101 
0000060: 067f 2300 410b 3602 0023 0041 046a 4102 
0000070: 3602 0023 0041 086a 2102 2002 4100 6a21 
0000080: 0323 0021 0320 0341 006a 2000 4100 6a28 
0000090: 0200 3602 0020 0341 046a 2000 4104 6a28 
00000a0: 0200 3602 0020 0341 086a 2000 4108 6a2b 
00000b0: 0300 3903 0020 0341 106a 2400 2002 4110 
00000c0: 6a21 0423 0021 0420 0441 006a 2001 4100 
00000d0: 6a28 0200 3602 0020 0441 046a 2001 4104 
00000e0: 6a28 0200 3602 0020 0441 086a 2001 4108 
00000f0: 6a2b 0300 3903 0020 0441 106a 2400 2002 
0000100: 4178 6a41 286a 2400 2002 4178 6a21 050b 
0000110: 0400 1002 0b02 000b 0be0 0201 0041 0b0b 
0000120: d902 6579 4a74 5a57 3176 636e 6c51 6448 
0000130: 4969 4f6e 7369 566d 4673 6457 5569 4f6a 
0000140: 4578 6653 7769 5932 7868 6333 4d69 4f69 
0000150: 4a6a 6158 4a6a 6247 5569 4c43 4a6a 6247 
0000160: 467a 6331 3970 5a43 4936 4d54 4573 496d 
0000170: 5a70 5a57 786b 6379 4936 6579 4a34 496a 
0000180: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
0000190: 7464 4c43 4a79 5958 6369 4f69 4a70 4d7a 
00001a0: 4969 4c43 4a30 6558 426c 496a 6f78 6653 
00001b0: 7769 6553 4936 6579 4a6e 5a57 356c 636d 
00001c0: 6c6a 496a 7062 5853 7769 636d 4633 496a 
00001d0: 6f69 6154 4d79 4969 7769 6448 6c77 5a53 
00001e0: 4936 4d58 3073 496e 4a68 5a47 6c31 6379 
00001f0: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0000200: 7062 5853 7769 636d 4633 496a 6f69 5a6a 
0000210: 5930 4969 7769 6448 6c77 5a53 4936 4e48 
0000220: 3139 4c43 4a70 6331 4e30 636e 566a 6443 
0000230: 4936 6448 4a31 5a53 7769 6257 5630 6147 
0000240: 396b 6379 4936 6533 3073 496d 3568 6257 
0000250: 567a 6347 466a 5a53 4936 496e 4e30 636e 
0000260: 566a 6448 5679 5a55 4679 636d 4635 5257 
0000270: 786c 6257 5675 6443 4a39 00             
