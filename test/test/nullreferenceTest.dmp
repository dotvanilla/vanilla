0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 03                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 7f                                        ; i32
0000015: 01                                        ; num results
0000016: 7f                                        ; i32
; type 2
0000017: 60                                        ; func
0000018: 02                                        ; num params
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 00                                        ; num results
; type 4
0000020: 60                                        ; func
0000021: 00                                        ; num params
0000022: 01                                        ; num results
0000023: 7f                                        ; i32
0000009: 1a                                        ; FIXUP section size
; section "Import" (2)
0000024: 02                                        ; section code
0000025: 00                                        ; section size (guess)
0000026: 09                                        ; num imports
; import header 0
0000027: 08                                        ; string length
0000028: 646f 6375 6d65 6e74                      document  ; import module name
0000030: 0e                                        ; string length
0000031: 6765 7445 6c65 6d65 6e74 4279 4964       getElementById  ; import field name
000003f: 00                                        ; import kind
0000040: 00                                        ; import signature index
; import header 1
0000041: 08                                        ; string length
0000042: 646f 6375 6d65 6e74                      document  ; import module name
000004a: 0c                                        ; string length
000004b: 7365 7441 7474 7269 6275 7465            setAttribute  ; import field name
0000057: 00                                        ; import kind
0000058: 01                                        ; import signature index
; import header 2
0000059: 07                                        ; string length
000005a: 636f 6e73 6f6c 65                        console  ; import module name
0000061: 03                                        ; string length
0000062: 6c6f 67                                  log  ; import field name
0000065: 00                                        ; import kind
0000066: 00                                        ; import signature index
; import header 3
0000067: 06                                        ; string length
0000068: 7374 7269 6e67                           string  ; import module name
000006e: 07                                        ; string length
000006f: 7265 706c 6163 65                        replace  ; import field name
0000076: 00                                        ; import kind
0000077: 01                                        ; import signature index
; import header 4
0000078: 06                                        ; string length
0000079: 7374 7269 6e67                           string  ; import module name
000007f: 03                                        ; string length
0000080: 6164 64                                  add  ; import field name
0000083: 00                                        ; import kind
0000084: 02                                        ; import signature index
; import header 5
0000085: 06                                        ; string length
0000086: 7374 7269 6e67                           string  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 00                                        ; import signature index
; import header 6
0000095: 06                                        ; string length
0000096: 7374 7269 6e67                           string  ; import module name
000009c: 07                                        ; string length
000009d: 696e 6465 784f 66                        indexOf  ; import field name
00000a4: 00                                        ; import kind
00000a5: 02                                        ; import signature index
; import header 7
00000a6: 06                                        ; string length
00000a7: 7374 7269 6e67                           string  ; import module name
00000ad: 08                                        ; string length
00000ae: 746f 5374 7269 6e67                      toString  ; import field name
00000b6: 00                                        ; import kind
00000b7: 00                                        ; import signature index
; import header 8
00000b8: 03                                        ; string length
00000b9: 656e 76                                  env  ; import module name
00000bc: 0a                                        ; string length
00000bd: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c7: 02                                        ; import kind
00000c8: 00                                        ; limits: flags
00000c9: 01                                        ; limits: initial
; move data: [26, ca) -> [27, cb)
0000025: a401                                      ; FIXUP section size
; section "Function" (3)
00000cb: 03                                        ; section code
00000cc: 00                                        ; section size (guess)
00000cd: 05                                        ; num functions
00000ce: 03                                        ; function 0 signature index
00000cf: 03                                        ; function 1 signature index
00000d0: 04                                        ; function 2 signature index
00000d1: 03                                        ; function 3 signature index
00000d2: 03                                        ; function 4 signature index
00000cc: 06                                        ; FIXUP section size
; section "Global" (6)
00000d3: 06                                        ; section code
00000d4: 00                                        ; section size (guess)
00000d5: 02                                        ; num globals
00000d6: 7f                                        ; i32
00000d7: 01                                        ; global mutability
00000d8: 41                                        ; i32.const
00000d9: ad01                                      ; i32 literal
00000db: 0b                                        ; end
00000dc: 7f                                        ; i32
00000dd: 01                                        ; global mutability
00000de: 41                                        ; i32.const
00000df: 00                                        ; i32 literal
00000e0: 0b                                        ; end
00000d4: 0c                                        ; FIXUP section size
; section "Export" (7)
00000e1: 07                                        ; section code
00000e2: 00                                        ; section size (guess)
00000e3: 03                                        ; num exports
00000e4: 1b                                        ; string length
00000e5: 6e75 6c6c 7265 6665 7265 6e63 6554 6573  nullreferenceTes
00000f5: 742e 6973 4e6f 7468 696e 67              t.isNothing  ; export name
0000100: 00                                        ; export kind
0000101: 08                                        ; export func index
0000102: 1b                                        ; string length
0000103: 6e75 6c6c 7265 6665 7265 6e63 6554 6573  nullreferenceTes
0000113: 742e 6e6f 5265 7475 726e 73              t.noReturns  ; export name
000011e: 00                                        ; export kind
000011f: 09                                        ; export func index
0000120: 16                                        ; string length
0000121: 6e75 6c6c 7265 6665 7265 6e63 6554 6573  nullreferenceTes
0000131: 742e 7465 7374                           t.test  ; export name
0000137: 00                                        ; export kind
0000138: 0a                                        ; export func index
00000e2: 56                                        ; FIXUP section size
; section "Start" (8)
0000139: 08                                        ; section code
000013a: 00                                        ; section size (guess)
000013b: 0b                                        ; start func index
000013a: 01                                        ; FIXUP section size
; section "Code" (10)
000013c: 0a                                        ; section code
000013d: 00                                        ; section size (guess)
000013e: 05                                        ; num functions
; function body 0
000013f: 00                                        ; func body size (guess)
0000140: 00                                        ; local decl count
0000141: 23                                        ; global.get
0000142: 01                                        ; global index
0000143: 41                                        ; i32.const
0000144: 00                                        ; i32 literal
0000145: 46                                        ; i32.eq
0000146: 04                                        ; if
0000147: 40                                        ; void
0000148: 41                                        ; i32.const
0000149: 0a                                        ; i32 literal
000014a: 10                                        ; call
000014b: 02                                        ; function index
000014c: 1a                                        ; drop
000014d: 05                                        ; else
000014e: 41                                        ; i32.const
000014f: 14                                        ; i32 literal
0000150: 10                                        ; call
0000151: 02                                        ; function index
0000152: 1a                                        ; drop
0000153: 23                                        ; global.get
0000154: 01                                        ; global index
0000155: 10                                        ; call
0000156: 02                                        ; function index
0000157: 1a                                        ; drop
0000158: 0b                                        ; end
0000159: 41                                        ; i32.const
000015a: 00                                        ; i32 literal
000015b: 23                                        ; global.get
000015c: 01                                        ; global index
000015d: 46                                        ; i32.eq
000015e: 04                                        ; if
000015f: 40                                        ; void
0000160: 41                                        ; i32.const
0000161: c600                                      ; i32 literal
0000163: 10                                        ; call
0000164: 02                                        ; function index
0000165: 1a                                        ; drop
0000166: 05                                        ; else
0000167: 41                                        ; i32.const
0000168: d000                                      ; i32 literal
000016a: 10                                        ; call
000016b: 02                                        ; function index
000016c: 1a                                        ; drop
000016d: 23                                        ; global.get
000016e: 01                                        ; global index
000016f: 10                                        ; call
0000170: 02                                        ; function index
0000171: 1a                                        ; drop
0000172: 0b                                        ; end
0000173: 0b                                        ; end
000013f: 34                                        ; FIXUP func body size
; function body 1
0000174: 00                                        ; func body size (guess)
0000175: 00                                        ; local decl count
0000176: 41                                        ; i32.const
0000177: 8a01                                      ; i32 literal
0000179: 10                                        ; call
000017a: 02                                        ; function index
000017b: 1a                                        ; drop
000017c: 41                                        ; i32.const
000017d: 00                                        ; i32 literal
000017e: 10                                        ; call
000017f: 02                                        ; function index
0000180: 1a                                        ; drop
0000181: 0b                                        ; end
0000174: 0d                                        ; FIXUP func body size
; function body 2
0000182: 00                                        ; func body size (guess)
0000183: 01                                        ; local decl count
0000184: 01                                        ; local type count
0000185: 7f                                        ; i32
0000186: 41                                        ; i32.const
0000187: 9201                                      ; i32 literal
0000189: 10                                        ; call
000018a: 00                                        ; function index
000018b: 21                                        ; local.set
000018c: 00                                        ; local index
000018d: 20                                        ; local.get
000018e: 00                                        ; local index
000018f: 41                                        ; i32.const
0000190: 9701                                      ; i32 literal
0000192: 20                                        ; local.get
0000193: 00                                        ; local index
0000194: 10                                        ; call
0000195: 07                                        ; function index
0000196: 41                                        ; i32.const
0000197: 9901                                      ; i32 literal
0000199: 10                                        ; call
000019a: 04                                        ; function index
000019b: 10                                        ; call
000019c: 01                                        ; function index
000019d: 1a                                        ; drop
000019e: 41                                        ; i32.const
000019f: 00                                        ; i32 literal
00001a0: 41                                        ; i32.const
00001a1: a901                                      ; i32 literal
00001a3: 41                                        ; i32.const
00001a4: ab01                                      ; i32 literal
00001a6: 10                                        ; call
00001a7: 01                                        ; function index
00001a8: 1a                                        ; drop
00001a9: 41                                        ; i32.const
00001aa: 00                                        ; i32 literal
00001ab: 0f                                        ; return
00001ac: 0b                                        ; end
0000182: 2a                                        ; FIXUP func body size
; function body 3
00001ad: 00                                        ; func body size (guess)
00001ae: 00                                        ; local decl count
00001af: 10                                        ; call
00001b0: 0c                                        ; function index
00001b1: 0b                                        ; end
00001ad: 04                                        ; FIXUP func body size
; function body 4
00001b2: 00                                        ; func body size (guess)
00001b3: 00                                        ; local decl count
00001b4: 0b                                        ; end
00001b2: 02                                        ; FIXUP func body size
000013d: 77                                        ; FIXUP section size
; section "Data" (11)
00001b5: 0b                                        ; section code
00001b6: 00                                        ; section size (guess)
00001b7: 0a                                        ; num data segments
; data segment header 0
00001b8: 00                                      
00001b9: 41                                        ; i32.const
00001ba: 0a                                        ; i32 literal
00001bb: 0b                                        ; end
00001bc: 0a                                        ; data segment size
; data segment data 0
00001bd: 4e6f 7468 696e 6720 3100                  ; data segment data
; data segment header 1
00001c7: 00                                      
00001c8: 41                                        ; i32.const
00001c9: 14                                        ; i32 literal
00001ca: 0b                                        ; end
00001cb: 32                                        ; data segment size
; data segment data 1
00001cc: 5468 6973 206d 6573 7361 6765 2073 686f 
00001dc: 756c 6420 6e65 7665 7220 6469 7370 6c61 
00001ec: 7920 6f6e 2074 6865 2063 6f6e 736f 6c65 
00001fc: 2100                                      ; data segment data
; data segment header 2
00001fe: 00                                      
00001ff: 41                                        ; i32.const
0000200: c600                                      ; i32 literal
0000202: 0b                                        ; end
0000203: 0a                                        ; data segment size
; data segment data 2
0000204: 4e6f 7468 696e 6720 3200                  ; data segment data
; data segment header 3
000020e: 00                                      
000020f: 41                                        ; i32.const
0000210: d000                                      ; i32 literal
0000212: 0b                                        ; end
0000213: 3a                                        ; data segment size
; data segment data 3
0000214: 5468 6973 206d 6573 7361 6765 2069 7320 
0000224: 616c 736f 2073 686f 756c 6420 6e65 7665 
0000234: 7220 6469 7370 6c61 7920 6f6e 2074 6865 
0000244: 2063 6f6e 736f 6c65 2100                  ; data segment data
; data segment header 4
000024e: 00                                      
000024f: 41                                        ; i32.const
0000250: 8a01                                      ; i32 literal
0000252: 0b                                        ; end
0000253: 08                                        ; data segment size
; data segment data 4
0000254: 4e6f 7468 696e 6700                       ; data segment data
; data segment header 5
000025c: 00                                      
000025d: 41                                        ; i32.const
000025e: 9201                                      ; i32 literal
0000260: 0b                                        ; end
0000261: 05                                        ; data segment size
; data segment data 5
0000262: 7465 7374 00                              ; data segment data
; data segment header 6
0000267: 00                                      
0000268: 41                                        ; i32.const
0000269: 9701                                      ; i32 literal
000026b: 0b                                        ; end
000026c: 02                                        ; data segment size
; data segment data 6
000026d: 6100                                      ; data segment data
; data segment header 7
000026f: 00                                      
0000270: 41                                        ; i32.const
0000271: 9901                                      ; i32 literal
0000273: 0b                                        ; end
0000274: 10                                        ; data segment size
; data segment data 7
0000275: 2069 7320 6e6f 7420 6e6f 7468 696e 6700   ; data segment data
; data segment header 8
0000285: 00                                      
0000286: 41                                        ; i32.const
0000287: a901                                      ; i32 literal
0000289: 0b                                        ; end
000028a: 02                                        ; data segment size
; data segment data 8
000028b: 6100                                      ; data segment data
; data segment header 9
000028d: 00                                      
000028e: 41                                        ; i32.const
000028f: ab01                                      ; i32 literal
0000291: 0b                                        ; end
0000292: 02                                        ; data segment size
; data segment data 9
0000293: 6200                                      ; data segment data
; move data: [1b7, 295) -> [1b8, 296)
00001b6: de01                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011a 0560 017f 017f 
0000010: 6003 7f7f 7f01 7f60 027f 7f01 7f60 0000 
0000020: 6000 017f 02a4 0109 0864 6f63 756d 656e 
0000030: 740e 6765 7445 6c65 6d65 6e74 4279 4964 
0000040: 0000 0864 6f63 756d 656e 740c 7365 7441 
0000050: 7474 7269 6275 7465 0001 0763 6f6e 736f 
0000060: 6c65 036c 6f67 0000 0673 7472 696e 6707 
0000070: 7265 706c 6163 6500 0106 7374 7269 6e67 
0000080: 0361 6464 0002 0673 7472 696e 6706 6c65 
0000090: 6e67 7468 0000 0673 7472 696e 6707 696e 
00000a0: 6465 784f 6600 0206 7374 7269 6e67 0874 
00000b0: 6f53 7472 696e 6700 0003 656e 760a 6279 
00000c0: 7465 6368 756e 6b73 0200 0103 0605 0303 
00000d0: 0403 0306 0c02 7f01 41ad 010b 7f01 4100 
00000e0: 0b07 5603 1b6e 756c 6c72 6566 6572 656e 
00000f0: 6365 5465 7374 2e69 734e 6f74 6869 6e67 
0000100: 0008 1b6e 756c 6c72 6566 6572 656e 6365 
0000110: 5465 7374 2e6e 6f52 6574 7572 6e73 0009 
0000120: 166e 756c 6c72 6566 6572 656e 6365 5465 
0000130: 7374 2e74 6573 7400 0a08 010b 0a77 0534 
0000140: 0023 0141 0046 0440 410a 1002 1a05 4114 
0000150: 1002 1a23 0110 021a 0b41 0023 0146 0440 
0000160: 41c6 0010 021a 0541 d000 1002 1a23 0110 
0000170: 021a 0b0b 0d00 418a 0110 021a 4100 1002 
0000180: 1a0b 2a01 017f 4192 0110 0021 0020 0041 
0000190: 9701 2000 1007 4199 0110 0410 011a 4100 
00001a0: 41a9 0141 ab01 1001 1a41 000f 0b04 0010 
00001b0: 0c0b 0200 0b0b de01 0a00 410a 0b0a 4e6f 
00001c0: 7468 696e 6720 3100 0041 140b 3254 6869 
00001d0: 7320 6d65 7373 6167 6520 7368 6f75 6c64 
00001e0: 206e 6576 6572 2064 6973 706c 6179 206f 
00001f0: 6e20 7468 6520 636f 6e73 6f6c 6521 0000 
0000200: 41c6 000b 0a4e 6f74 6869 6e67 2032 0000 
0000210: 41d0 000b 3a54 6869 7320 6d65 7373 6167 
0000220: 6520 6973 2061 6c73 6f20 7368 6f75 6c64 
0000230: 206e 6576 6572 2064 6973 706c 6179 206f 
0000240: 6e20 7468 6520 636f 6e73 6f6c 6521 0000 
0000250: 418a 010b 084e 6f74 6869 6e67 0000 4192 
0000260: 010b 0574 6573 7400 0041 9701 0b02 6100 
0000270: 0041 9901 0b10 2069 7320 6e6f 7420 6e6f 
0000280: 7468 696e 6700 0041 a901 0b02 6100 0041 
0000290: ab01 0b02 6200                          
