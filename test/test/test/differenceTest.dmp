0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 02                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
; type 1
000000e: 60                                        ; func
000000f: 01                                        ; num params
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
0000009: 08                                        ; FIXUP section size
; section "Import" (2)
0000012: 02                                        ; section code
0000013: 00                                        ; section size (guess)
0000014: 01                                        ; num imports
; import header 0
0000015: 03                                        ; string length
0000016: 656e 76                                  env  ; import module name
0000019: 0a                                        ; string length
000001a: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000024: 02                                        ; import kind
0000025: 00                                        ; limits: flags
0000026: 01                                        ; limits: initial
0000013: 13                                        ; FIXUP section size
; section "Function" (3)
0000027: 03                                        ; section code
0000028: 00                                        ; section size (guess)
0000029: 04                                        ; num functions
000002a: 00                                        ; function 0 signature index
000002b: 01                                        ; function 1 signature index
000002c: 00                                        ; function 2 signature index
000002d: 00                                        ; function 3 signature index
0000028: 05                                        ; FIXUP section size
; section "Global" (6)
000002e: 06                                        ; section code
000002f: 00                                        ; section size (guess)
0000030: 0b                                        ; num globals
0000031: 7f                                        ; i32
0000032: 01                                        ; global mutability
0000033: 41                                        ; i32.const
0000034: d905                                      ; i32 literal
0000036: 0b                                        ; end
0000037: 7c                                        ; f64
0000038: 01                                        ; global mutability
0000039: 44                                        ; f64.const
000003a: 6957 148b 0abf 0540                       ; f64 literal
0000042: 0b                                        ; end
0000043: 7c                                        ; f64
0000044: 01                                        ; global mutability
0000045: 44                                        ; f64.const
0000046: 182d 4454 fb21 0940                       ; f64 literal
000004e: 0b                                        ; end
000004f: 7f                                        ; i32
0000050: 01                                        ; global mutability
0000051: 41                                        ; i32.const
0000052: ffff ffff 07                              ; i32 literal
0000057: 0b                                        ; end
0000058: 7e                                        ; i64
0000059: 01                                        ; global mutability
000005a: 42                                        ; i64.const
000005b: ffff ffff ffff ffff ff00                  ; i64 literal
0000065: 0b                                        ; end
0000066: 7d                                        ; f32
0000067: 01                                        ; global mutability
0000068: 43                                        ; f32.const
0000069: ffff 7f7f                                 ; f32 literal
000006d: 0b                                        ; end
000006e: 7c                                        ; f64
000006f: 01                                        ; global mutability
0000070: 44                                        ; f64.const
0000071: ffff ffff ffff ef7f                       ; f64 literal
0000079: 0b                                        ; end
000007a: 7f                                        ; i32
000007b: 01                                        ; global mutability
000007c: 41                                        ; i32.const
000007d: 8080 8080 78                              ; i32 literal
0000082: 0b                                        ; end
0000083: 7e                                        ; i64
0000084: 01                                        ; global mutability
0000085: 42                                        ; i64.const
0000086: 8080 8080 8080 8080 807f                  ; i64 literal
0000090: 0b                                        ; end
0000091: 7d                                        ; f32
0000092: 01                                        ; global mutability
0000093: 43                                        ; f32.const
0000094: ffff 7fff                                 ; f32 literal
0000098: 0b                                        ; end
0000099: 7c                                        ; f64
000009a: 01                                        ; global mutability
000009b: 44                                        ; f64.const
000009c: ffff ffff ffff efff                       ; f64 literal
00000a4: 0b                                        ; end
000002f: 75                                        ; FIXUP section size
; section "Export" (7)
00000a5: 07                                        ; section code
00000a6: 00                                        ; section size (guess)
00000a7: 01                                        ; num exports
00000a8: 21                                        ; string length
00000a9: 436c 6173 7353 7472 7563 7475 7265 4469  ClassStructureDi
00000b9: 6666 6572 656e 6365 5465 7374 2e4d 6169  fferenceTest.Mai
00000c9: 6e                                       n  ; export name
00000ca: 00                                        ; export kind
00000cb: 00                                        ; export func index
00000a6: 25                                        ; FIXUP section size
; section "Start" (8)
00000cc: 08                                        ; section code
00000cd: 00                                        ; section size (guess)
00000ce: 02                                        ; start func index
00000cd: 01                                        ; FIXUP section size
; section "Code" (10)
00000cf: 0a                                        ; section code
00000d0: 00                                        ; section size (guess)
00000d1: 04                                        ; num functions
; function body 0
00000d2: 00                                        ; func body size (guess)
00000d3: 01                                        ; local decl count
00000d4: 08                                        ; local type count
00000d5: 7f                                        ; i32
00000d6: 23                                        ; global.get
00000d7: 00                                        ; global index
00000d8: 21                                        ; local.set
00000d9: 00                                        ; local index
00000da: 20                                        ; local.get
00000db: 00                                        ; local index
00000dc: 41                                        ; i32.const
00000dd: 14                                        ; i32 literal
00000de: 6a                                        ; i32.add
00000df: 24                                        ; global.set
00000e0: 00                                        ; global index
00000e1: 20                                        ; local.get
00000e2: 00                                        ; local index
00000e3: 41                                        ; i32.const
00000e4: 10                                        ; i32 literal
00000e5: 6a                                        ; i32.add
00000e6: 41                                        ; i32.const
00000e7: e400                                      ; i32 literal
00000e9: 36                                        ; i32.store
00000ea: 02                                        ; alignment
00000eb: 00                                        ; store offset
00000ec: 20                                        ; local.get
00000ed: 00                                        ; local index
00000ee: 41                                        ; i32.const
00000ef: 00                                        ; i32 literal
00000f0: 6a                                        ; i32.add
00000f1: 41                                        ; i32.const
00000f2: 01                                        ; i32 literal
00000f3: b7                                        ; f64.convert_i32_s
00000f4: 39                                        ; f64.store
00000f5: 03                                        ; alignment
00000f6: 00                                        ; store offset
00000f7: 20                                        ; local.get
00000f8: 00                                        ; local index
00000f9: 41                                        ; i32.const
00000fa: 08                                        ; i32 literal
00000fb: 6a                                        ; i32.add
00000fc: 41                                        ; i32.const
00000fd: 01                                        ; i32 literal
00000fe: b7                                        ; f64.convert_i32_s
00000ff: 39                                        ; f64.store
0000100: 03                                        ; alignment
0000101: 00                                        ; store offset
0000102: 20                                        ; local.get
0000103: 00                                        ; local index
0000104: 21                                        ; local.set
0000105: 01                                        ; local index
0000106: 20                                        ; local.get
0000107: 01                                        ; local index
0000108: 21                                        ; local.set
0000109: 02                                        ; local index
000010a: 20                                        ; local.get
000010b: 01                                        ; local index
000010c: 41                                        ; i32.const
000010d: 10                                        ; i32 literal
000010e: 6a                                        ; i32.add
000010f: 41                                        ; i32.const
0000110: 00                                        ; i32 literal
0000111: 41                                        ; i32.const
0000112: 9f8d 06                                   ; i32 literal
0000115: 6b                                        ; i32.sub
0000116: 36                                        ; i32.store
0000117: 02                                        ; alignment
0000118: 00                                        ; store offset
0000119: 23                                        ; global.get
000011a: 00                                        ; global index
000011b: 21                                        ; local.set
000011c: 03                                        ; local index
000011d: 20                                        ; local.get
000011e: 03                                        ; local index
000011f: 41                                        ; i32.const
0000120: 14                                        ; i32 literal
0000121: 6a                                        ; i32.add
0000122: 24                                        ; global.set
0000123: 00                                        ; global index
0000124: 20                                        ; local.get
0000125: 03                                        ; local index
0000126: 41                                        ; i32.const
0000127: 04                                        ; i32 literal
0000128: 6a                                        ; i32.add
0000129: 41                                        ; i32.const
000012a: e300                                      ; i32 literal
000012c: b7                                        ; f64.convert_i32_s
000012d: 39                                        ; f64.store
000012e: 03                                        ; alignment
000012f: 00                                        ; store offset
0000130: 20                                        ; local.get
0000131: 03                                        ; local index
0000132: 41                                        ; i32.const
0000133: 0c                                        ; i32 literal
0000134: 6a                                        ; i32.add
0000135: 20                                        ; local.get
0000136: 03                                        ; local index
0000137: 41                                        ; i32.const
0000138: 04                                        ; i32 literal
0000139: 6a                                        ; i32.add
000013a: 2b                                        ; f64.load
000013b: 03                                        ; alignment
000013c: 00                                        ; load offset
000013d: 39                                        ; f64.store
000013e: 03                                        ; alignment
000013f: 00                                        ; store offset
0000140: 20                                        ; local.get
0000141: 03                                        ; local index
0000142: 41                                        ; i32.const
0000143: 00                                        ; i32 literal
0000144: 6a                                        ; i32.add
0000145: 20                                        ; local.get
0000146: 03                                        ; local index
0000147: 41                                        ; i32.const
0000148: 0c                                        ; i32 literal
0000149: 6a                                        ; i32.add
000014a: 2b                                        ; f64.load
000014b: 03                                        ; alignment
000014c: 00                                        ; load offset
000014d: 20                                        ; local.get
000014e: 03                                        ; local index
000014f: 41                                        ; i32.const
0000150: 04                                        ; i32 literal
0000151: 6a                                        ; i32.add
0000152: 2b                                        ; f64.load
0000153: 03                                        ; alignment
0000154: 00                                        ; load offset
0000155: a2                                        ; f64.mul
0000156: aa                                        ; i32.trunc_f64_s
0000157: 36                                        ; i32.store
0000158: 02                                        ; alignment
0000159: 00                                        ; store offset
000015a: 20                                        ; local.get
000015b: 03                                        ; local index
000015c: 21                                        ; local.set
000015d: 04                                        ; local index
000015e: 23                                        ; global.get
000015f: 00                                        ; global index
0000160: 21                                        ; local.set
0000161: 05                                        ; local index
0000162: 20                                        ; local.get
0000163: 05                                        ; local index
0000164: 41                                        ; i32.const
0000165: 14                                        ; i32 literal
0000166: 6a                                        ; i32.add
0000167: 24                                        ; global.set
0000168: 00                                        ; global index
0000169: 20                                        ; local.get
000016a: 05                                        ; local index
000016b: 41                                        ; i32.const
000016c: 00                                        ; i32 literal
000016d: 6a                                        ; i32.add
000016e: 20                                        ; local.get
000016f: 04                                        ; local index
0000170: 41                                        ; i32.const
0000171: 00                                        ; i32 literal
0000172: 6a                                        ; i32.add
0000173: 28                                        ; i32.load
0000174: 02                                        ; alignment
0000175: 00                                        ; load offset
0000176: 36                                        ; i32.store
0000177: 02                                        ; alignment
0000178: 00                                        ; store offset
0000179: 20                                        ; local.get
000017a: 05                                        ; local index
000017b: 41                                        ; i32.const
000017c: 04                                        ; i32 literal
000017d: 6a                                        ; i32.add
000017e: 20                                        ; local.get
000017f: 04                                        ; local index
0000180: 41                                        ; i32.const
0000181: 04                                        ; i32 literal
0000182: 6a                                        ; i32.add
0000183: 2b                                        ; f64.load
0000184: 03                                        ; alignment
0000185: 00                                        ; load offset
0000186: 39                                        ; f64.store
0000187: 03                                        ; alignment
0000188: 00                                        ; store offset
0000189: 20                                        ; local.get
000018a: 05                                        ; local index
000018b: 41                                        ; i32.const
000018c: 0c                                        ; i32 literal
000018d: 6a                                        ; i32.add
000018e: 20                                        ; local.get
000018f: 04                                        ; local index
0000190: 41                                        ; i32.const
0000191: 0c                                        ; i32 literal
0000192: 6a                                        ; i32.add
0000193: 2b                                        ; f64.load
0000194: 03                                        ; alignment
0000195: 00                                        ; load offset
0000196: 39                                        ; f64.store
0000197: 03                                        ; alignment
0000198: 00                                        ; store offset
0000199: 20                                        ; local.get
000019a: 05                                        ; local index
000019b: 21                                        ; local.set
000019c: 06                                        ; local index
000019d: 20                                        ; local.get
000019e: 04                                        ; local index
000019f: 41                                        ; i32.const
00001a0: 00                                        ; i32 literal
00001a1: 6a                                        ; i32.add
00001a2: 41                                        ; i32.const
00001a3: 00                                        ; i32 literal
00001a4: 41                                        ; i32.const
00001a5: b8b6 05                                   ; i32 literal
00001a8: 6b                                        ; i32.sub
00001a9: 36                                        ; i32.store
00001aa: 02                                        ; alignment
00001ab: 00                                        ; store offset
00001ac: 20                                        ; local.get
00001ad: 07                                        ; local index
00001ae: 10                                        ; call
00001af: 01                                        ; function index
00001b0: 0b                                        ; end
; move data: [d3, 1b1) -> [d4, 1b2)
00000d2: de01                                      ; FIXUP func body size
; function body 1
00001b2: 00                                        ; func body size (guess)
00001b3: 00                                        ; local decl count
00001b4: 20                                        ; local.get
00001b5: 00                                        ; local index
00001b6: 41                                        ; i32.const
00001b7: 0c                                        ; i32 literal
00001b8: 6a                                        ; i32.add
00001b9: 42                                        ; i64.const
00001ba: ef93 d2a3 08                              ; i64 literal
00001bf: b9                                        ; f64.convert_i64_s
00001c0: 39                                        ; f64.store
00001c1: 03                                        ; alignment
00001c2: 00                                        ; store offset
00001c3: 0b                                        ; end
00001b2: 11                                        ; FIXUP func body size
; function body 2
00001c4: 00                                        ; func body size (guess)
00001c5: 00                                        ; local decl count
00001c6: 10                                        ; call
00001c7: 03                                        ; function index
00001c8: 0b                                        ; end
00001c4: 04                                        ; FIXUP func body size
; function body 3
00001c9: 00                                        ; func body size (guess)
00001ca: 00                                        ; local decl count
00001cb: 10                                        ; call
00001cc: 00                                        ; function index
00001cd: 0b                                        ; end
00001c9: 04                                        ; FIXUP func body size
; move data: [d1, 1ce) -> [d2, 1cf)
00000d0: fd01                                      ; FIXUP section size
; section "Data" (11)
00001cf: 0b                                        ; section code
00001d0: 00                                        ; section size (guess)
00001d1: 02                                        ; num data segments
; data segment header 0
00001d2: 00                                      
00001d3: 41                                        ; i32.const
00001d4: 0b                                        ; i32 literal
00001d5: 0b                                        ; end
00001d6: e502                                      ; data segment size
; data segment data 0
00001d8: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00001e8: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00001f8: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000208: 4f6a 4578 6653 7769 5932 7868 6333 4d69 
0000218: 4f69 4a6a 6158 4a6a 6247 5644 6247 467a 
0000228: 6379 4973 496d 4e73 5958 4e7a 5832 6c6b 
0000238: 496a 6f78 4d53 7769 5a6d 6c6c 6247 527a 
0000248: 496a 7037 496e 6769 4f6e 7369 5a32 5675 
0000258: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000268: 6479 4936 496d 5932 4e43 4973 496e 5235 
0000278: 6347 5569 4f6a 5239 4c43 4a35 496a 7037 
0000288: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000298: 4c43 4a79 5958 6369 4f69 4a6d 4e6a 5169 
00002a8: 4c43 4a30 6558 426c 496a 6f30 6653 7769 
00002b8: 6369 4936 6579 4a6e 5a57 356c 636d 6c6a 
00002c8: 496a 7062 5853 7769 636d 4633 496a 6f69 
00002d8: 6154 4d79 4969 7769 6448 6c77 5a53 4936 
00002e8: 4d58 3139 4c43 4a70 6331 4e30 636e 566a 
00002f8: 6443 4936 5a6d 4673 6332 5573 496d 316c 
0000308: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0000318: 5957 316c 6333 4268 5932 5569 4f69 4a30 
0000328: 5a58 4e30 5247 6c6d 5a6d 5679 5a57 356a 
0000338: 5a53 4a39 00                              ; data segment data
; data segment header 1
000033d: 00                                      
000033e: 41                                        ; i32.const
000033f: f002                                      ; i32 literal
0000341: 0b                                        ; end
0000342: e902                                      ; data segment size
; data segment data 1
0000344: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000354: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000364: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000374: 4f6a 4d32 4f48 3073 496d 4e73 5958 4e7a 
0000384: 496a 6f69 5932 6c79 5932 786c 5533 5279 
0000394: 6457 4e30 4969 7769 5932 7868 6333 4e66 
00003a4: 6157 5169 4f6a 4d32 4f43 7769 5a6d 6c6c 
00003b4: 6247 527a 496a 7037 496e 4969 4f6e 7369 
00003c4: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00003d4: 496e 4a68 6479 4936 496d 6b7a 4d69 4973 
00003e4: 496e 5235 6347 5569 4f6a 4639 4c43 4a35 
00003f4: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000404: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000414: 4e6a 5169 4c43 4a30 6558 426c 496a 6f30 
0000424: 6653 7769 6543 4936 6579 4a6e 5a57 356c 
0000434: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000444: 496a 6f69 5a6a 5930 4969 7769 6448 6c77 
0000454: 5a53 4936 4e48 3139 4c43 4a70 6331 4e30 
0000464: 636e 566a 6443 4936 6448 4a31 5a53 7769 
0000474: 6257 5630 6147 396b 6379 4936 6533 3073 
0000484: 496d 3568 6257 567a 6347 466a 5a53 4936 
0000494: 496e 526c 6333 5245 6157 5a6d 5a58 4a6c 
00004a4: 626d 4e6c 496e 303d 00                    ; data segment data
; move data: [1d1, 4ad) -> [1d2, 4ae)
00001d0: dc05                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0108 0260 0000 6001 
0000010: 7f00 0213 0103 656e 760a 6279 7465 6368 
0000020: 756e 6b73 0200 0103 0504 0001 0000 0675 
0000030: 0b7f 0141 d905 0b7c 0144 6957 148b 0abf 
0000040: 0540 0b7c 0144 182d 4454 fb21 0940 0b7f 
0000050: 0141 ffff ffff 070b 7e01 42ff ffff ffff 
0000060: ffff ffff 000b 7d01 43ff ff7f 7f0b 7c01 
0000070: 44ff ffff ffff ffef 7f0b 7f01 4180 8080 
0000080: 8078 0b7e 0142 8080 8080 8080 8080 807f 
0000090: 0b7d 0143 ffff 7fff 0b7c 0144 ffff ffff 
00000a0: ffff efff 0b07 2501 2143 6c61 7373 5374 
00000b0: 7275 6374 7572 6544 6966 6665 7265 6e63 
00000c0: 6554 6573 742e 4d61 696e 0000 0801 020a 
00000d0: fd01 04de 0101 087f 2300 2100 2000 4114 
00000e0: 6a24 0020 0041 106a 41e4 0036 0200 2000 
00000f0: 4100 6a41 01b7 3903 0020 0041 086a 4101 
0000100: b739 0300 2000 2101 2001 2102 2001 4110 
0000110: 6a41 0041 9f8d 066b 3602 0023 0021 0320 
0000120: 0341 146a 2400 2003 4104 6a41 e300 b739 
0000130: 0300 2003 410c 6a20 0341 046a 2b03 0039 
0000140: 0300 2003 4100 6a20 0341 0c6a 2b03 0020 
0000150: 0341 046a 2b03 00a2 aa36 0200 2003 2104 
0000160: 2300 2105 2005 4114 6a24 0020 0541 006a 
0000170: 2004 4100 6a28 0200 3602 0020 0541 046a 
0000180: 2004 4104 6a2b 0300 3903 0020 0541 0c6a 
0000190: 2004 410c 6a2b 0300 3903 0020 0521 0620 
00001a0: 0441 006a 4100 41b8 b605 6b36 0200 2007 
00001b0: 1001 0b11 0020 0041 0c6a 42ef 93d2 a308 
00001c0: b939 0300 0b04 0010 030b 0400 1000 0b0b 
00001d0: dc05 0200 410b 0be5 0265 794a 6a62 3231 
00001e0: 745a 5735 3049 6a70 7564 5778 734c 434a 
00001f0: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
0000200: 6956 6d46 7364 5755 694f 6a45 7866 5377 
0000210: 6959 3278 6863 334d 694f 694a 6a61 584a 
0000220: 6a62 4756 4462 4746 7a63 7949 7349 6d4e 
0000230: 7359 584e 7a58 326c 6b49 6a6f 784d 5377 
0000240: 695a 6d6c 6c62 4752 7a49 6a70 3749 6e67 
0000250: 694f 6e73 695a 3256 755a 584a 7059 7949 
0000260: 3657 3130 7349 6e4a 6864 7949 3649 6d59 
0000270: 324e 4349 7349 6e52 3563 4755 694f 6a52 
0000280: 394c 434a 3549 6a70 3749 6d64 6c62 6d56 
0000290: 7961 574d 694f 6c74 644c 434a 7959 5863 
00002a0: 694f 694a 6d4e 6a51 694c 434a 3065 5842 
00002b0: 6c49 6a6f 3066 5377 6963 6949 3665 794a 
00002c0: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
00002d0: 6963 6d46 3349 6a6f 6961 544d 7949 6977 
00002e0: 6964 486c 775a 5349 364d 5831 394c 434a 
00002f0: 7063 314e 3063 6e56 6a64 4349 365a 6d46 
0000300: 7363 3255 7349 6d31 6c64 4768 765a 484d 
0000310: 694f 6e74 394c 434a 7559 5731 6c63 3342 
0000320: 6859 3255 694f 694a 305a 584e 3052 476c 
0000330: 6d5a 6d56 795a 5735 6a5a 534a 3900 0041 
0000340: f002 0be9 0265 794a 6a62 3231 745a 5735 
0000350: 3049 6a70 7564 5778 734c 434a 745a 5731 
0000360: 7663 6e6c 5164 4849 694f 6e73 6956 6d46 
0000370: 7364 5755 694f 6a4d 324f 4830 7349 6d4e 
0000380: 7359 584e 7a49 6a6f 6959 326c 7959 3278 
0000390: 6c55 3352 7964 574e 3049 6977 6959 3278 
00003a0: 6863 334e 6661 5751 694f 6a4d 324f 4377 
00003b0: 695a 6d6c 6c62 4752 7a49 6a70 3749 6e49 
00003c0: 694f 6e73 695a 3256 755a 584a 7059 7949 
00003d0: 3657 3130 7349 6e4a 6864 7949 3649 6d6b 
00003e0: 7a4d 6949 7349 6e52 3563 4755 694f 6a46 
00003f0: 394c 434a 3549 6a70 3749 6d64 6c62 6d56 
0000400: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000410: 694f 694a 6d4e 6a51 694c 434a 3065 5842 
0000420: 6c49 6a6f 3066 5377 6965 4349 3665 794a 
0000430: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
0000440: 6963 6d46 3349 6a6f 695a 6a59 3049 6977 
0000450: 6964 486c 775a 5349 364e 4831 394c 434a 
0000460: 7063 314e 3063 6e56 6a64 4349 3664 484a 
0000470: 315a 5377 6962 5756 3061 4739 6b63 7949 
0000480: 3665 3330 7349 6d35 6862 5756 7a63 4746 
0000490: 6a5a 5349 3649 6e52 6c63 3352 4561 575a 
00004a0: 6d5a 584a 6c62 6d4e 6c49 6e30 3d00      
