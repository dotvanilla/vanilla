0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 01                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
0000009: 04                                        ; FIXUP section size
; section "Import" (2)
000000e: 02                                        ; section code
000000f: 00                                        ; section size (guess)
0000010: 01                                        ; num imports
; import header 0
0000011: 03                                        ; string length
0000012: 656e 76                                  env  ; import module name
0000015: 0a                                        ; string length
0000016: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000020: 02                                        ; import kind
0000021: 00                                        ; limits: flags
0000022: 01                                        ; limits: initial
000000f: 13                                        ; FIXUP section size
; section "Function" (3)
0000023: 03                                        ; section code
0000024: 00                                        ; section size (guess)
0000025: 03                                        ; num functions
0000026: 00                                        ; function 0 signature index
0000027: 00                                        ; function 1 signature index
0000028: 00                                        ; function 2 signature index
0000024: 04                                        ; FIXUP section size
; section "Global" (6)
0000029: 06                                        ; section code
000002a: 00                                        ; section size (guess)
000002b: 0b                                        ; num globals
000002c: 7f                                        ; i32
000002d: 01                                        ; global mutability
000002e: 41                                        ; i32.const
000002f: dc02                                      ; i32 literal
0000031: 0b                                        ; end
0000032: 7c                                        ; f64
0000033: 01                                        ; global mutability
0000034: 44                                        ; f64.const
0000035: 6957 148b 0abf 0540                       ; f64 literal
000003d: 0b                                        ; end
000003e: 7c                                        ; f64
000003f: 01                                        ; global mutability
0000040: 44                                        ; f64.const
0000041: 182d 4454 fb21 0940                       ; f64 literal
0000049: 0b                                        ; end
000004a: 7f                                        ; i32
000004b: 01                                        ; global mutability
000004c: 41                                        ; i32.const
000004d: ffff ffff 07                              ; i32 literal
0000052: 0b                                        ; end
0000053: 7e                                        ; i64
0000054: 01                                        ; global mutability
0000055: 42                                        ; i64.const
0000056: ffff ffff ffff ffff ff00                  ; i64 literal
0000060: 0b                                        ; end
0000061: 7d                                        ; f32
0000062: 01                                        ; global mutability
0000063: 43                                        ; f32.const
0000064: ffff 7f7f                                 ; f32 literal
0000068: 0b                                        ; end
0000069: 7c                                        ; f64
000006a: 01                                        ; global mutability
000006b: 44                                        ; f64.const
000006c: ffff ffff ffff ef7f                       ; f64 literal
0000074: 0b                                        ; end
0000075: 7f                                        ; i32
0000076: 01                                        ; global mutability
0000077: 41                                        ; i32.const
0000078: 8080 8080 78                              ; i32 literal
000007d: 0b                                        ; end
000007e: 7e                                        ; i64
000007f: 01                                        ; global mutability
0000080: 42                                        ; i64.const
0000081: 8080 8080 8080 8080 807f                  ; i64 literal
000008b: 0b                                        ; end
000008c: 7d                                        ; f32
000008d: 01                                        ; global mutability
000008e: 43                                        ; f32.const
000008f: ffff 7fff                                 ; f32 literal
0000093: 0b                                        ; end
0000094: 7c                                        ; f64
0000095: 01                                        ; global mutability
0000096: 44                                        ; f64.const
0000097: ffff ffff ffff efff                       ; f64 literal
000009f: 0b                                        ; end
000002a: 75                                        ; FIXUP section size
; section "Start" (8)
00000a0: 08                                        ; section code
00000a1: 00                                        ; section size (guess)
00000a2: 00                                        ; start func index
00000a1: 01                                        ; FIXUP section size
; section "Code" (10)
00000a3: 0a                                        ; section code
00000a4: 00                                        ; section size (guess)
00000a5: 03                                        ; num functions
; function body 0
00000a6: 00                                        ; func body size (guess)
00000a7: 00                                        ; local decl count
00000a8: 10                                        ; call
00000a9: 01                                        ; function index
00000aa: 10                                        ; call
00000ab: 02                                        ; function index
00000ac: 0b                                        ; end
00000a6: 06                                        ; FIXUP func body size
; function body 1
00000ad: 00                                        ; func body size (guess)
00000ae: 00                                        ; local decl count
00000af: 0b                                        ; end
00000ad: 02                                        ; FIXUP func body size
; function body 2
00000b0: 00                                        ; func body size (guess)
00000b1: 02                                        ; local decl count
00000b2: 04                                        ; local type count
00000b3: 7f                                        ; i32
00000b4: 01                                        ; local type count
00000b5: 7d                                        ; f32
00000b6: 41                                        ; i32.const
00000b7: 00                                        ; i32 literal
00000b8: 21                                        ; local.set
00000b9: 00                                        ; local index
00000ba: 23                                        ; global.get
00000bb: 00                                        ; global index
00000bc: 41                                        ; i32.const
00000bd: 0b                                        ; i32 literal
00000be: 36                                        ; i32.store
00000bf: 02                                        ; alignment
00000c0: 00                                        ; store offset
00000c1: 23                                        ; global.get
00000c2: 00                                        ; global index
00000c3: 41                                        ; i32.const
00000c4: 04                                        ; i32 literal
00000c5: 6a                                        ; i32.add
00000c6: 41                                        ; i32.const
00000c7: e400                                      ; i32 literal
00000c9: 41                                        ; i32.const
00000ca: e300                                      ; i32 literal
00000cc: 6b                                        ; i32.sub
00000cd: 36                                        ; i32.store
00000ce: 02                                        ; alignment
00000cf: 00                                        ; store offset
00000d0: 23                                        ; global.get
00000d1: 00                                        ; global index
00000d2: 41                                        ; i32.const
00000d3: 08                                        ; i32 literal
00000d4: 6a                                        ; i32.add
00000d5: 21                                        ; local.set
00000d6: 01                                        ; local index
00000d7: 20                                        ; local.get
00000d8: 01                                        ; local index
00000d9: 41                                        ; i32.const
00000da: 78                                        ; i32 literal
00000db: 6a                                        ; i32.add
00000dc: 41                                        ; i32.const
00000dd: 08                                        ; i32 literal
00000de: 41                                        ; i32.const
00000df: e400                                      ; i32 literal
00000e1: 41                                        ; i32.const
00000e2: e300                                      ; i32 literal
00000e4: 6b                                        ; i32.sub
00000e5: 41                                        ; i32.const
00000e6: 04                                        ; i32 literal
00000e7: 6c                                        ; i32.mul
00000e8: 6a                                        ; i32.add
00000e9: 6a                                        ; i32.add
00000ea: 24                                        ; global.set
00000eb: 00                                        ; global index
00000ec: 20                                        ; local.get
00000ed: 01                                        ; local index
00000ee: 41                                        ; i32.const
00000ef: 78                                        ; i32 literal
00000f0: 6a                                        ; i32.add
00000f1: 21                                        ; local.set
00000f2: 02                                        ; local index
00000f3: 20                                        ; local.get
00000f4: 02                                        ; local index
00000f5: 41                                        ; i32.const
00000f6: 08                                        ; i32 literal
00000f7: 6a                                        ; i32.add
00000f8: 41                                        ; i32.const
00000f9: 03                                        ; i32 literal
00000fa: 41                                        ; i32.const
00000fb: 04                                        ; i32 literal
00000fc: 6c                                        ; i32.mul
00000fd: 6a                                        ; i32.add
00000fe: 28                                        ; i32.load
00000ff: 02                                        ; alignment
0000100: 00                                        ; load offset
0000101: 21                                        ; local.set
0000102: 03                                        ; local index
0000103: 20                                        ; local.get
0000104: 03                                        ; local index
0000105: 41                                        ; i32.const
0000106: 08                                        ; i32 literal
0000107: 6a                                        ; i32.add
0000108: 41                                        ; i32.const
0000109: 21                                        ; i32 literal
000010a: 41                                        ; i32.const
000010b: 04                                        ; i32 literal
000010c: 6c                                        ; i32.mul
000010d: 6a                                        ; i32.add
000010e: 28                                        ; i32.load
000010f: 02                                        ; alignment
0000110: 00                                        ; load offset
0000111: 41                                        ; i32.const
0000112: 10                                        ; i32 literal
0000113: 6a                                        ; i32.add
0000114: 2b                                        ; f64.load
0000115: 03                                        ; alignment
0000116: 00                                        ; load offset
0000117: b6                                        ; f32.demote_f64
0000118: 21                                        ; local.set
0000119: 04                                        ; local index
000011a: 20                                        ; local.get
000011b: 00                                        ; local index
000011c: 41                                        ; i32.const
000011d: 08                                        ; i32 literal
000011e: 6a                                        ; i32.add
000011f: 41                                        ; i32.const
0000120: d800                                      ; i32 literal
0000122: 41                                        ; i32.const
0000123: 04                                        ; i32 literal
0000124: 6c                                        ; i32.mul
0000125: 6a                                        ; i32.add
0000126: 20                                        ; local.get
0000127: 03                                        ; local index
0000128: 41                                        ; i32.const
0000129: 08                                        ; i32 literal
000012a: 6a                                        ; i32.add
000012b: 41                                        ; i32.const
000012c: 05                                        ; i32 literal
000012d: 41                                        ; i32.const
000012e: 04                                        ; i32 literal
000012f: 6c                                        ; i32.mul
0000130: 6a                                        ; i32.add
0000131: 28                                        ; i32.load
0000132: 02                                        ; alignment
0000133: 00                                        ; load offset
0000134: 41                                        ; i32.const
0000135: 00                                        ; i32 literal
0000136: 6a                                        ; i32.add
0000137: 2b                                        ; f64.load
0000138: 03                                        ; alignment
0000139: 00                                        ; load offset
000013a: 20                                        ; local.get
000013b: 03                                        ; local index
000013c: 41                                        ; i32.const
000013d: 08                                        ; i32 literal
000013e: 6a                                        ; i32.add
000013f: 41                                        ; i32.const
0000140: 00                                        ; i32 literal
0000141: 41                                        ; i32.const
0000142: 04                                        ; i32 literal
0000143: 6c                                        ; i32.mul
0000144: 6a                                        ; i32.add
0000145: 28                                        ; i32.load
0000146: 02                                        ; alignment
0000147: 00                                        ; load offset
0000148: 41                                        ; i32.const
0000149: 08                                        ; i32 literal
000014a: 6a                                        ; i32.add
000014b: 2b                                        ; f64.load
000014c: 03                                        ; alignment
000014d: 00                                        ; load offset
000014e: a0                                        ; f64.add
000014f: aa                                        ; i32.trunc_f64_s
0000150: 36                                        ; i32.store
0000151: 02                                        ; alignment
0000152: 00                                        ; store offset
0000153: 0b                                        ; end
; move data: [b1, 154) -> [b2, 155)
00000b0: a301                                      ; FIXUP func body size
; move data: [a5, 155) -> [a6, 156)
00000a4: b001                                      ; FIXUP section size
; section "Data" (11)
0000156: 0b                                        ; section code
0000157: 00                                        ; section size (guess)
0000158: 01                                        ; num data segments
; data segment header 0
0000159: 00                                      
000015a: 41                                        ; i32.const
000015b: 0b                                        ; i32 literal
000015c: 0b                                        ; end
000015d: d102                                      ; data segment size
; data segment data 0
000015f: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000016f: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000017f: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000018f: 4f6a 4578 6653 7769 5932 7868 6333 4d69 
000019f: 4f69 4a4e 6555 4e70 636d 4e73 5a53 4973 
00001af: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f78 
00001bf: 4d53 7769 5a6d 6c6c 6247 527a 496a 7037 
00001cf: 496e 6769 4f6e 7369 5a32 5675 5a58 4a70 
00001df: 5979 4936 5731 3073 496e 4a68 6479 4936 
00001ef: 496d 5932 4e43 4973 496e 5235 6347 5569 
00001ff: 4f6a 5239 4c43 4a35 496a 7037 496d 646c 
000020f: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
000021f: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
000022f: 6558 426c 496a 6f30 6653 7769 6369 4936 
000023f: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
000024f: 5853 7769 636d 4633 496a 6f69 5a6a 5930 
000025f: 4969 7769 6448 6c77 5a53 4936 4e48 3139 
000026f: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
000027f: 5a6d 4673 6332 5573 496d 316c 6447 6876 
000028f: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
000029f: 6333 4268 5932 5569 4f6d 3531 6247 7839 
00002af: 00                                        ; data segment data
; move data: [158, 2b0) -> [159, 2b1)
0000157: d802                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0104 0160 0000 0213 
0000010: 0103 656e 760a 6279 7465 6368 756e 6b73 
0000020: 0200 0103 0403 0000 0006 750b 7f01 41dc 
0000030: 020b 7c01 4469 5714 8b0a bf05 400b 7c01 
0000040: 4418 2d44 54fb 2109 400b 7f01 41ff ffff 
0000050: ff07 0b7e 0142 ffff ffff ffff ffff ff00 
0000060: 0b7d 0143 ffff 7f7f 0b7c 0144 ffff ffff 
0000070: ffff ef7f 0b7f 0141 8080 8080 780b 7e01 
0000080: 4280 8080 8080 8080 8080 7f0b 7d01 43ff 
0000090: ff7f ff0b 7c01 44ff ffff ffff ffef ff0b 
00000a0: 0801 000a b001 0306 0010 0110 020b 0200 
00000b0: 0ba3 0102 047f 017d 4100 2100 2300 410b 
00000c0: 3602 0023 0041 046a 41e4 0041 e300 6b36 
00000d0: 0200 2300 4108 6a21 0120 0141 786a 4108 
00000e0: 41e4 0041 e300 6b41 046c 6a6a 2400 2001 
00000f0: 4178 6a21 0220 0241 086a 4103 4104 6c6a 
0000100: 2802 0021 0320 0341 086a 4121 4104 6c6a 
0000110: 2802 0041 106a 2b03 00b6 2104 2000 4108 
0000120: 6a41 d800 4104 6c6a 2003 4108 6a41 0541 
0000130: 046c 6a28 0200 4100 6a2b 0300 2003 4108 
0000140: 6a41 0041 046c 6a28 0200 4108 6a2b 0300 
0000150: a0aa 3602 000b 0bd8 0201 0041 0b0b d102 
0000160: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000170: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000180: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000190: 4f6a 4578 6653 7769 5932 7868 6333 4d69 
00001a0: 4f69 4a4e 6555 4e70 636d 4e73 5a53 4973 
00001b0: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f78 
00001c0: 4d53 7769 5a6d 6c6c 6247 527a 496a 7037 
00001d0: 496e 6769 4f6e 7369 5a32 5675 5a58 4a70 
00001e0: 5979 4936 5731 3073 496e 4a68 6479 4936 
00001f0: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000200: 4f6a 5239 4c43 4a35 496a 7037 496d 646c 
0000210: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000220: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000230: 6558 426c 496a 6f30 6653 7769 6369 4936 
0000240: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000250: 5853 7769 636d 4633 496a 6f69 5a6a 5930 
0000260: 4969 7769 6448 6c77 5a53 4936 4e48 3139 
0000270: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0000280: 5a6d 4673 6332 5573 496d 316c 6447 6876 
0000290: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
00002a0: 6333 4268 5932 5569 4f6d 3531 6247 7839 
00002b0: 00                                      
