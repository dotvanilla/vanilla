0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0b                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 01                                        ; num params
0000033: 7f                                        ; i32
0000034: 00                                        ; num results
; type 8
0000035: 60                                        ; func
0000036: 01                                        ; num params
0000037: 7c                                        ; f64
0000038: 01                                        ; num results
0000039: 7f                                        ; i32
; type 9
000003a: 60                                        ; func
000003b: 00                                        ; num params
000003c: 01                                        ; num results
000003d: 7f                                        ; i32
; type 10
000003e: 60                                        ; func
000003f: 00                                        ; num params
0000040: 00                                        ; num results
0000009: 37                                        ; FIXUP section size
; section "Import" (2)
0000041: 02                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 13                                        ; num imports
; import header 0
0000044: 04                                        ; string length
0000045: 4d61 7468                                Math  ; import module name
0000049: 03                                        ; string length
000004a: 706f 77                                  pow  ; import field name
000004d: 00                                        ; import kind
000004e: 00                                        ; import signature index
; import header 1
000004f: 04                                        ; string length
0000050: 4d61 7468                                Math  ; import module name
0000054: 04                                        ; string length
0000055: 7371 7274                                sqrt  ; import field name
0000059: 00                                        ; import kind
000005a: 01                                        ; import signature index
; import header 2
000005b: 04                                        ; string length
000005c: 4d61 7468                                Math  ; import module name
0000060: 03                                        ; string length
0000061: 6578 70                                  exp  ; import field name
0000064: 00                                        ; import kind
0000065: 01                                        ; import signature index
; import header 3
0000066: 04                                        ; string length
0000067: 4d61 7468                                Math  ; import module name
000006b: 03                                        ; string length
000006c: 636f 73                                  cos  ; import field name
000006f: 00                                        ; import kind
0000070: 01                                        ; import signature index
; import header 4
0000071: 04                                        ; string length
0000072: 4d61 7468                                Math  ; import module name
0000076: 06                                        ; string length
0000077: 7261 6e64 6f6d                           random  ; import field name
000007d: 00                                        ; import kind
000007e: 02                                        ; import signature index
; import header 5
000007f: 04                                        ; string length
0000080: 4d61 7468                                Math  ; import module name
0000084: 04                                        ; string length
0000085: 6365 696c                                ceil  ; import field name
0000089: 00                                        ; import kind
000008a: 01                                        ; import signature index
; import header 6
000008b: 04                                        ; string length
000008c: 4d61 7468                                Math  ; import module name
0000090: 05                                        ; string length
0000091: 666c 6f6f 72                             floor  ; import field name
0000096: 00                                        ; import kind
0000097: 01                                        ; import signature index
; import header 7
0000098: 02                                        ; string length
0000099: 4743                                     GC  ; import module name
000009b: 09                                        ; string length
000009c: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a5: 00                                        ; import kind
00000a6: 03                                        ; import signature index
; import header 8
00000a7: 06                                        ; string length
00000a8: 7374 7269 6e67                           string  ; import module name
00000ae: 07                                        ; string length
00000af: 7265 706c 6163 65                        replace  ; import field name
00000b6: 00                                        ; import kind
00000b7: 04                                        ; import signature index
; import header 9
00000b8: 06                                        ; string length
00000b9: 7374 7269 6e67                           string  ; import module name
00000bf: 03                                        ; string length
00000c0: 6164 64                                  add  ; import field name
00000c3: 00                                        ; import kind
00000c4: 05                                        ; import signature index
; import header 10
00000c5: 06                                        ; string length
00000c6: 7374 7269 6e67                           string  ; import module name
00000cc: 06                                        ; string length
00000cd: 6c65 6e67 7468                           length  ; import field name
00000d3: 00                                        ; import kind
00000d4: 06                                        ; import signature index
; import header 11
00000d5: 06                                        ; string length
00000d6: 7374 7269 6e67                           string  ; import module name
00000dc: 07                                        ; string length
00000dd: 696e 6465 784f 66                        indexOf  ; import field name
00000e4: 00                                        ; import kind
00000e5: 05                                        ; import signature index
; import header 12
00000e6: 07                                        ; string length
00000e7: 636f 6e73 6f6c 65                        console  ; import module name
00000ee: 03                                        ; string length
00000ef: 6c6f 67                                  log  ; import field name
00000f2: 00                                        ; import kind
00000f3: 07                                        ; import signature index
; import header 13
00000f4: 07                                        ; string length
00000f5: 636f 6e73 6f6c 65                        console  ; import module name
00000fc: 03                                        ; string length
00000fd: 6c6f 67                                  log  ; import field name
0000100: 00                                        ; import kind
0000101: 07                                        ; import signature index
; import header 14
0000102: 07                                        ; string length
0000103: 636f 6e73 6f6c 65                        console  ; import module name
000010a: 04                                        ; string length
000010b: 7761 726e                                warn  ; import field name
000010f: 00                                        ; import kind
0000110: 07                                        ; import signature index
; import header 15
0000111: 07                                        ; string length
0000112: 636f 6e73 6f6c 65                        console  ; import module name
0000119: 03                                        ; string length
000011a: 6c6f 67                                  log  ; import field name
000011d: 00                                        ; import kind
000011e: 07                                        ; import signature index
; import header 16
000011f: 06                                        ; string length
0000120: 7374 7269 6e67                           string  ; import module name
0000126: 08                                        ; string length
0000127: 746f 5374 7269 6e67                      toString  ; import field name
000012f: 00                                        ; import kind
0000130: 06                                        ; import signature index
; import header 17
0000131: 06                                        ; string length
0000132: 7374 7269 6e67                           string  ; import module name
0000138: 08                                        ; string length
0000139: 746f 5374 7269 6e67                      toString  ; import field name
0000141: 00                                        ; import kind
0000142: 08                                        ; import signature index
; import header 18
0000143: 03                                        ; string length
0000144: 656e 76                                  env  ; import module name
0000147: 0a                                        ; string length
0000148: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000152: 02                                        ; import kind
0000153: 00                                        ; limits: flags
0000154: 01                                        ; limits: initial
; move data: [43, 155) -> [44, 156)
0000042: 9202                                      ; FIXUP section size
; section "Function" (3)
0000156: 03                                        ; section code
0000157: 00                                        ; section size (guess)
0000158: 08                                        ; num functions
0000159: 05                                        ; function 0 signature index
000015a: 09                                        ; function 1 signature index
000015b: 0a                                        ; function 2 signature index
000015c: 0a                                        ; function 3 signature index
000015d: 09                                        ; function 4 signature index
000015e: 0a                                        ; function 5 signature index
000015f: 0a                                        ; function 6 signature index
0000160: 0a                                        ; function 7 signature index
0000157: 09                                        ; FIXUP section size
; section "Global" (6)
0000161: 06                                        ; section code
0000162: 00                                        ; section size (guess)
0000163: 0d                                        ; num globals
0000164: 7f                                        ; i32
0000165: 01                                        ; global mutability
0000166: 41                                        ; i32.const
0000167: e007                                      ; i32 literal
0000169: 0b                                        ; end
000016a: 7c                                        ; f64
000016b: 01                                        ; global mutability
000016c: 44                                        ; f64.const
000016d: 6957 148b 0abf 0540                       ; f64 literal
0000175: 0b                                        ; end
0000176: 7c                                        ; f64
0000177: 01                                        ; global mutability
0000178: 44                                        ; f64.const
0000179: 182d 4454 fb21 0940                       ; f64 literal
0000181: 0b                                        ; end
0000182: 7f                                        ; i32
0000183: 01                                        ; global mutability
0000184: 41                                        ; i32.const
0000185: ffff ffff 07                              ; i32 literal
000018a: 0b                                        ; end
000018b: 7e                                        ; i64
000018c: 01                                        ; global mutability
000018d: 42                                        ; i64.const
000018e: ffff ffff ffff ffff ff00                  ; i64 literal
0000198: 0b                                        ; end
0000199: 7d                                        ; f32
000019a: 01                                        ; global mutability
000019b: 43                                        ; f32.const
000019c: ffff 7f7f                                 ; f32 literal
00001a0: 0b                                        ; end
00001a1: 7c                                        ; f64
00001a2: 01                                        ; global mutability
00001a3: 44                                        ; f64.const
00001a4: ffff ffff ffff ef7f                       ; f64 literal
00001ac: 0b                                        ; end
00001ad: 7f                                        ; i32
00001ae: 01                                        ; global mutability
00001af: 41                                        ; i32.const
00001b0: 8080 8080 78                              ; i32 literal
00001b5: 0b                                        ; end
00001b6: 7e                                        ; i64
00001b7: 01                                        ; global mutability
00001b8: 42                                        ; i64.const
00001b9: 8080 8080 8080 8080 807f                  ; i64 literal
00001c3: 0b                                        ; end
00001c4: 7d                                        ; f32
00001c5: 01                                        ; global mutability
00001c6: 43                                        ; f32.const
00001c7: ffff 7fff                                 ; f32 literal
00001cb: 0b                                        ; end
00001cc: 7c                                        ; f64
00001cd: 01                                        ; global mutability
00001ce: 44                                        ; f64.const
00001cf: ffff ffff ffff efff                       ; f64 literal
00001d7: 0b                                        ; end
00001d8: 7f                                        ; i32
00001d9: 01                                        ; global mutability
00001da: 41                                        ; i32.const
00001db: 00                                        ; i32 literal
00001dc: 0b                                        ; end
00001dd: 7f                                        ; i32
00001de: 01                                        ; global mutability
00001df: 41                                        ; i32.const
00001e0: 00                                        ; i32 literal
00001e1: 0b                                        ; end
0000162: 7f                                        ; FIXUP section size
; section "Export" (7)
00001e2: 07                                        ; section code
00001e3: 00                                        ; section size (guess)
00001e4: 03                                        ; num exports
00001e5: 14                                        ; string length
00001e6: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001f6: 5369 7a65                                Size  ; export name
00001fa: 00                                        ; export kind
00001fb: 13                                        ; export func index
00001fc: 1a                                        ; string length
00001fd: 6f62 6a65 6374 4172 7261 7954 6573 742e  objectArrayTest.
000020d: 7072 696e 7441 7272 6179                 printArray  ; export name
0000217: 00                                        ; export kind
0000218: 14                                        ; export func index
0000219: 19                                        ; string length
000021a: 6f62 6a65 6374 4172 7261 7954 6573 742e  objectArrayTest.
000022a: 4765 7450 6f69 6e74 73                   GetPoints  ; export name
0000233: 00                                        ; export kind
0000234: 16                                        ; export func index
00001e3: 51                                        ; FIXUP section size
; section "Start" (8)
0000235: 08                                        ; section code
0000236: 00                                        ; section size (guess)
0000237: 17                                        ; start func index
0000236: 01                                        ; FIXUP section size
; section "Code" (10)
0000238: 0a                                        ; section code
0000239: 00                                        ; section size (guess)
000023a: 08                                        ; num functions
; function body 0
000023b: 00                                        ; func body size (guess)
000023c: 01                                        ; local decl count
000023d: 02                                        ; local type count
000023e: 7f                                        ; i32
000023f: 23                                        ; global.get
0000240: 00                                        ; global index
0000241: 21                                        ; local.set
0000242: 02                                        ; local index
0000243: 20                                        ; local.get
0000244: 02                                        ; local index
0000245: 20                                        ; local.get
0000246: 00                                        ; local index
0000247: 6a                                        ; i32.add
0000248: 24                                        ; global.set
0000249: 00                                        ; global index
000024a: 23                                        ; global.get
000024b: 00                                        ; global index
000024c: 41                                        ; i32.const
000024d: 08                                        ; i32 literal
000024e: 6f                                        ; i32.rem_s
000024f: 21                                        ; local.set
0000250: 03                                        ; local index
0000251: 20                                        ; local.get
0000252: 03                                        ; local index
0000253: 04                                        ; if
0000254: 40                                        ; void
0000255: 41                                        ; i32.const
0000256: 08                                        ; i32 literal
0000257: 20                                        ; local.get
0000258: 03                                        ; local index
0000259: 6b                                        ; i32.sub
000025a: 21                                        ; local.set
000025b: 03                                        ; local index
000025c: 23                                        ; global.get
000025d: 00                                        ; global index
000025e: 20                                        ; local.get
000025f: 03                                        ; local index
0000260: 6a                                        ; i32.add
0000261: 24                                        ; global.set
0000262: 00                                        ; global index
0000263: 05                                        ; else
0000264: 23                                        ; global.get
0000265: 00                                        ; global index
0000266: 41                                        ; i32.const
0000267: 08                                        ; i32 literal
0000268: 6a                                        ; i32.add
0000269: 24                                        ; global.set
000026a: 00                                        ; global index
000026b: 0b                                        ; end
000026c: 20                                        ; local.get
000026d: 02                                        ; local index
000026e: 20                                        ; local.get
000026f: 01                                        ; local index
0000270: 10                                        ; call
0000271: 07                                        ; function index
0000272: 20                                        ; local.get
0000273: 02                                        ; local index
0000274: 0f                                        ; return
0000275: 0b                                        ; end
000023b: 3a                                        ; FIXUP func body size
; function body 1
0000276: 00                                        ; func body size (guess)
0000277: 00                                        ; local decl count
0000278: 23                                        ; global.get
0000279: 00                                        ; global index
000027a: 0f                                        ; return
000027b: 0b                                        ; end
0000276: 05                                        ; FIXUP func body size
; function body 2
000027c: 00                                        ; func body size (guess)
000027d: 01                                        ; local decl count
000027e: 08                                        ; local type count
000027f: 7f                                        ; i32
0000280: 10                                        ; call
0000281: 15                                        ; function index
0000282: 41                                        ; i32.const
0000283: 00                                        ; i32 literal
0000284: 21                                        ; local.set
0000285: 06                                        ; local index
0000286: 02                                        ; block
0000287: 40                                        ; void
0000288: 03                                        ; loop
0000289: 40                                        ; void
000028a: 20                                        ; local.get
000028b: 06                                        ; local index
000028c: 23                                        ; global.get
000028d: 0c                                        ; global index
000028e: 41                                        ; i32.const
000028f: 04                                        ; i32 literal
0000290: 6a                                        ; i32.add
0000291: 28                                        ; i32.load
0000292: 02                                        ; alignment
0000293: 00                                        ; load offset
0000294: 41                                        ; i32.const
0000295: 01                                        ; i32 literal
0000296: 6b                                        ; i32.sub
0000297: 4a                                        ; i32.gt_s
0000298: 0d                                        ; br_if
0000299: 01                                        ; break depth
000029a: 41                                        ; i32.const
000029b: d805                                      ; i32 literal
000029d: 20                                        ; local.get
000029e: 06                                        ; local index
000029f: 10                                        ; call
00002a0: 10                                        ; function index
00002a1: 10                                        ; call
00002a2: 09                                        ; function index
00002a3: 41                                        ; i32.const
00002a4: e005                                      ; i32 literal
00002a6: 10                                        ; call
00002a7: 09                                        ; function index
00002a8: 23                                        ; global.get
00002a9: 0c                                        ; global index
00002aa: 41                                        ; i32.const
00002ab: 08                                        ; i32 literal
00002ac: 6a                                        ; i32.add
00002ad: 20                                        ; local.get
00002ae: 06                                        ; local index
00002af: 41                                        ; i32.const
00002b0: 04                                        ; i32 literal
00002b1: 6c                                        ; i32.mul
00002b2: 6a                                        ; i32.add
00002b3: 28                                        ; i32.load
00002b4: 02                                        ; alignment
00002b5: 00                                        ; load offset
00002b6: 10                                        ; call
00002b7: 10                                        ; function index
00002b8: 10                                        ; call
00002b9: 09                                        ; function index
00002ba: 41                                        ; i32.const
00002bb: f005                                      ; i32 literal
00002bd: 10                                        ; call
00002be: 09                                        ; function index
00002bf: 23                                        ; global.get
00002c0: 0c                                        ; global index
00002c1: 41                                        ; i32.const
00002c2: 08                                        ; i32 literal
00002c3: 6a                                        ; i32.add
00002c4: 20                                        ; local.get
00002c5: 06                                        ; local index
00002c6: 41                                        ; i32.const
00002c7: 04                                        ; i32 literal
00002c8: 6c                                        ; i32.mul
00002c9: 6a                                        ; i32.add
00002ca: 28                                        ; i32.load
00002cb: 02                                        ; alignment
00002cc: 00                                        ; load offset
00002cd: 41                                        ; i32.const
00002ce: 10                                        ; i32 literal
00002cf: 6a                                        ; i32.add
00002d0: 28                                        ; i32.load
00002d1: 02                                        ; alignment
00002d2: 00                                        ; load offset
00002d3: 10                                        ; call
00002d4: 10                                        ; function index
00002d5: 10                                        ; call
00002d6: 09                                        ; function index
00002d7: 10                                        ; call
00002d8: 0d                                        ; function index
00002d9: 41                                        ; i32.const
00002da: 8006                                      ; i32 literal
00002dc: 23                                        ; global.get
00002dd: 0c                                        ; global index
00002de: 41                                        ; i32.const
00002df: 08                                        ; i32 literal
00002e0: 6a                                        ; i32.add
00002e1: 20                                        ; local.get
00002e2: 06                                        ; local index
00002e3: 41                                        ; i32.const
00002e4: 04                                        ; i32 literal
00002e5: 6c                                        ; i32.mul
00002e6: 6a                                        ; i32.add
00002e7: 28                                        ; i32.load
00002e8: 02                                        ; alignment
00002e9: 00                                        ; load offset
00002ea: 41                                        ; i32.const
00002eb: 00                                        ; i32 literal
00002ec: 6a                                        ; i32.add
00002ed: 2b                                        ; f64.load
00002ee: 03                                        ; alignment
00002ef: 00                                        ; load offset
00002f0: 10                                        ; call
00002f1: 11                                        ; function index
00002f2: 10                                        ; call
00002f3: 09                                        ; function index
00002f4: 41                                        ; i32.const
00002f5: 9006                                      ; i32 literal
00002f7: 10                                        ; call
00002f8: 09                                        ; function index
00002f9: 23                                        ; global.get
00002fa: 0c                                        ; global index
00002fb: 41                                        ; i32.const
00002fc: 08                                        ; i32 literal
00002fd: 6a                                        ; i32.add
00002fe: 20                                        ; local.get
00002ff: 06                                        ; local index
0000300: 41                                        ; i32.const
0000301: 04                                        ; i32 literal
0000302: 6c                                        ; i32.mul
0000303: 6a                                        ; i32.add
0000304: 28                                        ; i32.load
0000305: 02                                        ; alignment
0000306: 00                                        ; load offset
0000307: 41                                        ; i32.const
0000308: 08                                        ; i32 literal
0000309: 6a                                        ; i32.add
000030a: 2b                                        ; f64.load
000030b: 03                                        ; alignment
000030c: 00                                        ; load offset
000030d: 10                                        ; call
000030e: 11                                        ; function index
000030f: 10                                        ; call
0000310: 09                                        ; function index
0000311: 41                                        ; i32.const
0000312: 9806                                      ; i32 literal
0000314: 10                                        ; call
0000315: 09                                        ; function index
0000316: 10                                        ; call
0000317: 0d                                        ; function index
0000318: 23                                        ; global.get
0000319: 0c                                        ; global index
000031a: 41                                        ; i32.const
000031b: 08                                        ; i32 literal
000031c: 6a                                        ; i32.add
000031d: 20                                        ; local.get
000031e: 06                                        ; local index
000031f: 41                                        ; i32.const
0000320: 04                                        ; i32 literal
0000321: 6c                                        ; i32.mul
0000322: 6a                                        ; i32.add
0000323: 28                                        ; i32.load
0000324: 02                                        ; alignment
0000325: 00                                        ; load offset
0000326: 10                                        ; call
0000327: 0c                                        ; function index
0000328: 20                                        ; local.get
0000329: 06                                        ; local index
000032a: 41                                        ; i32.const
000032b: 01                                        ; i32 literal
000032c: 6a                                        ; i32.add
000032d: 21                                        ; local.set
000032e: 06                                        ; local index
000032f: 0c                                        ; br
0000330: 00                                        ; break depth
0000331: 0b                                        ; end
0000332: 0b                                        ; end
0000333: 41                                        ; i32.const
0000334: a006                                      ; i32 literal
0000336: 10                                        ; call
0000337: 0d                                        ; function index
0000338: 41                                        ; i32.const
0000339: 00                                        ; i32 literal
000033a: 21                                        ; local.set
000033b: 07                                        ; local index
000033c: 02                                        ; block
000033d: 40                                        ; void
000033e: 03                                        ; loop
000033f: 40                                        ; void
0000340: 20                                        ; local.get
0000341: 07                                        ; local index
0000342: 23                                        ; global.get
0000343: 0b                                        ; global index
0000344: 41                                        ; i32.const
0000345: 04                                        ; i32 literal
0000346: 6a                                        ; i32.add
0000347: 28                                        ; i32.load
0000348: 02                                        ; alignment
0000349: 00                                        ; load offset
000034a: 41                                        ; i32.const
000034b: 01                                        ; i32 literal
000034c: 6b                                        ; i32.sub
000034d: 4a                                        ; i32.gt_s
000034e: 0d                                        ; br_if
000034f: 01                                        ; break depth
0000350: 23                                        ; global.get
0000351: 0b                                        ; global index
0000352: 41                                        ; i32.const
0000353: 08                                        ; i32 literal
0000354: 6a                                        ; i32.add
0000355: 20                                        ; local.get
0000356: 07                                        ; local index
0000357: 41                                        ; i32.const
0000358: 04                                        ; i32 literal
0000359: 6c                                        ; i32.mul
000035a: 6a                                        ; i32.add
000035b: 28                                        ; i32.load
000035c: 02                                        ; alignment
000035d: 00                                        ; load offset
000035e: 10                                        ; call
000035f: 0f                                        ; function index
0000360: 20                                        ; local.get
0000361: 07                                        ; local index
0000362: 41                                        ; i32.const
0000363: 01                                        ; i32 literal
0000364: 6a                                        ; i32.add
0000365: 21                                        ; local.set
0000366: 07                                        ; local index
0000367: 0c                                        ; br
0000368: 00                                        ; break depth
0000369: 0b                                        ; end
000036a: 0b                                        ; end
000036b: 0b                                        ; end
; move data: [27d, 36c) -> [27e, 36d)
000027c: ef01                                      ; FIXUP func body size
; function body 3
000036d: 00                                        ; func body size (guess)
000036e: 01                                        ; local decl count
000036f: 01                                        ; local type count
0000370: 7f                                        ; i32
0000371: 41                                        ; i32.const
0000372: 00                                        ; i32 literal
0000373: 21                                        ; local.set
0000374: 00                                        ; local index
0000375: 02                                        ; block
0000376: 40                                        ; void
0000377: 03                                        ; loop
0000378: 40                                        ; void
0000379: 20                                        ; local.get
000037a: 00                                        ; local index
000037b: 23                                        ; global.get
000037c: 0c                                        ; global index
000037d: 41                                        ; i32.const
000037e: 04                                        ; i32 literal
000037f: 6a                                        ; i32.add
0000380: 28                                        ; i32.load
0000381: 02                                        ; alignment
0000382: 00                                        ; load offset
0000383: 41                                        ; i32.const
0000384: 01                                        ; i32 literal
0000385: 6b                                        ; i32.sub
0000386: 4a                                        ; i32.gt_s
0000387: 0d                                        ; br_if
0000388: 01                                        ; break depth
0000389: 23                                        ; global.get
000038a: 0c                                        ; global index
000038b: 41                                        ; i32.const
000038c: 08                                        ; i32 literal
000038d: 6a                                        ; i32.add
000038e: 20                                        ; local.get
000038f: 00                                        ; local index
0000390: 41                                        ; i32.const
0000391: 04                                        ; i32 literal
0000392: 6c                                        ; i32.mul
0000393: 6a                                        ; i32.add
0000394: 28                                        ; i32.load
0000395: 02                                        ; alignment
0000396: 00                                        ; load offset
0000397: 41                                        ; i32.const
0000398: 00                                        ; i32 literal
0000399: 6a                                        ; i32.add
000039a: 10                                        ; call
000039b: 04                                        ; function index
000039c: 39                                        ; f64.store
000039d: 03                                        ; alignment
000039e: 00                                        ; store offset
000039f: 23                                        ; global.get
00003a0: 0c                                        ; global index
00003a1: 41                                        ; i32.const
00003a2: 08                                        ; i32 literal
00003a3: 6a                                        ; i32.add
00003a4: 20                                        ; local.get
00003a5: 00                                        ; local index
00003a6: 41                                        ; i32.const
00003a7: 04                                        ; i32 literal
00003a8: 6c                                        ; i32.mul
00003a9: 6a                                        ; i32.add
00003aa: 28                                        ; i32.load
00003ab: 02                                        ; alignment
00003ac: 00                                        ; load offset
00003ad: 41                                        ; i32.const
00003ae: 08                                        ; i32 literal
00003af: 6a                                        ; i32.add
00003b0: 10                                        ; call
00003b1: 04                                        ; function index
00003b2: 41                                        ; i32.const
00003b3: e400                                      ; i32 literal
00003b5: b7                                        ; f64.convert_i32_s
00003b6: a2                                        ; f64.mul
00003b7: 39                                        ; f64.store
00003b8: 03                                        ; alignment
00003b9: 00                                        ; store offset
00003ba: 41                                        ; i32.const
00003bb: 8807                                      ; i32 literal
00003bd: 23                                        ; global.get
00003be: 0c                                        ; global index
00003bf: 41                                        ; i32.const
00003c0: 08                                        ; i32 literal
00003c1: 6a                                        ; i32.add
00003c2: 20                                        ; local.get
00003c3: 00                                        ; local index
00003c4: 41                                        ; i32.const
00003c5: 04                                        ; i32 literal
00003c6: 6c                                        ; i32.mul
00003c7: 6a                                        ; i32.add
00003c8: 28                                        ; i32.load
00003c9: 02                                        ; alignment
00003ca: 00                                        ; load offset
00003cb: 41                                        ; i32.const
00003cc: 00                                        ; i32 literal
00003cd: 6a                                        ; i32.add
00003ce: 2b                                        ; f64.load
00003cf: 03                                        ; alignment
00003d0: 00                                        ; load offset
00003d1: 10                                        ; call
00003d2: 11                                        ; function index
00003d3: 10                                        ; call
00003d4: 09                                        ; function index
00003d5: 41                                        ; i32.const
00003d6: a807                                      ; i32 literal
00003d8: 10                                        ; call
00003d9: 09                                        ; function index
00003da: 23                                        ; global.get
00003db: 0c                                        ; global index
00003dc: 41                                        ; i32.const
00003dd: 08                                        ; i32 literal
00003de: 6a                                        ; i32.add
00003df: 20                                        ; local.get
00003e0: 00                                        ; local index
00003e1: 41                                        ; i32.const
00003e2: 04                                        ; i32 literal
00003e3: 6c                                        ; i32.mul
00003e4: 6a                                        ; i32.add
00003e5: 28                                        ; i32.load
00003e6: 02                                        ; alignment
00003e7: 00                                        ; load offset
00003e8: 41                                        ; i32.const
00003e9: 08                                        ; i32 literal
00003ea: 6a                                        ; i32.add
00003eb: 2b                                        ; f64.load
00003ec: 03                                        ; alignment
00003ed: 00                                        ; load offset
00003ee: 10                                        ; call
00003ef: 11                                        ; function index
00003f0: 10                                        ; call
00003f1: 09                                        ; function index
00003f2: 41                                        ; i32.const
00003f3: b007                                      ; i32 literal
00003f5: 10                                        ; call
00003f6: 09                                        ; function index
00003f7: 10                                        ; call
00003f8: 0e                                        ; function index
00003f9: 20                                        ; local.get
00003fa: 00                                        ; local index
00003fb: 41                                        ; i32.const
00003fc: 01                                        ; i32 literal
00003fd: 6a                                        ; i32.add
00003fe: 21                                        ; local.set
00003ff: 00                                        ; local index
0000400: 0c                                        ; br
0000401: 00                                        ; break depth
0000402: 0b                                        ; end
0000403: 0b                                        ; end
0000404: 0b                                        ; end
; move data: [36e, 405) -> [36f, 406)
000036d: 9701                                      ; FIXUP func body size
; function body 4
0000406: 00                                        ; func body size (guess)
0000407: 00                                        ; local decl count
0000408: 23                                        ; global.get
0000409: 0c                                        ; global index
000040a: 0f                                        ; return
000040b: 0b                                        ; end
0000406: 05                                        ; FIXUP func body size
; function body 5
000040c: 00                                        ; func body size (guess)
000040d: 00                                        ; local decl count
000040e: 10                                        ; call
000040f: 18                                        ; function index
0000410: 10                                        ; call
0000411: 19                                        ; function index
0000412: 0b                                        ; end
000040c: 06                                        ; FIXUP func body size
; function body 6
0000413: 00                                        ; func body size (guess)
0000414: 01                                        ; local decl count
0000415: 06                                        ; local type count
0000416: 7f                                        ; i32
0000417: 41                                        ; i32.const
0000418: 08                                        ; i32 literal
0000419: 41                                        ; i32.const
000041a: 04                                        ; i32 literal
000041b: 41                                        ; i32.const
000041c: 04                                        ; i32 literal
000041d: 6c                                        ; i32.mul
000041e: 6a                                        ; i32.add
000041f: 41                                        ; i32.const
0000420: 07                                        ; i32 literal
0000421: 10                                        ; call
0000422: 12                                        ; function index
0000423: 21                                        ; local.set
0000424: 00                                        ; local index
0000425: 20                                        ; local.get
0000426: 00                                        ; local index
0000427: 41                                        ; i32.const
0000428: 18                                        ; i32 literal
0000429: 36                                        ; i32.store
000042a: 02                                        ; alignment
000042b: 00                                        ; store offset
000042c: 20                                        ; local.get
000042d: 00                                        ; local index
000042e: 41                                        ; i32.const
000042f: 04                                        ; i32 literal
0000430: 6a                                        ; i32.add
0000431: 41                                        ; i32.const
0000432: 04                                        ; i32 literal
0000433: 36                                        ; i32.store
0000434: 02                                        ; alignment
0000435: 00                                        ; store offset
0000436: 20                                        ; local.get
0000437: 00                                        ; local index
0000438: 41                                        ; i32.const
0000439: 08                                        ; i32 literal
000043a: 6a                                        ; i32.add
000043b: 21                                        ; local.set
000043c: 01                                        ; local index
000043d: 41                                        ; i32.const
000043e: 14                                        ; i32 literal
000043f: 41                                        ; i32.const
0000440: 18                                        ; i32 literal
0000441: 10                                        ; call
0000442: 12                                        ; function index
0000443: 21                                        ; local.set
0000444: 02                                        ; local index
0000445: 20                                        ; local.get
0000446: 02                                        ; local index
0000447: 41                                        ; i32.const
0000448: 00                                        ; i32 literal
0000449: 6a                                        ; i32.add
000044a: 41                                        ; i32.const
000044b: e400                                      ; i32 literal
000044d: b7                                        ; f64.convert_i32_s
000044e: 39                                        ; f64.store
000044f: 03                                        ; alignment
0000450: 00                                        ; store offset
0000451: 20                                        ; local.get
0000452: 02                                        ; local index
0000453: 41                                        ; i32.const
0000454: 08                                        ; i32 literal
0000455: 6a                                        ; i32.add
0000456: 41                                        ; i32.const
0000457: f403                                      ; i32 literal
0000459: b7                                        ; f64.convert_i32_s
000045a: 39                                        ; f64.store
000045b: 03                                        ; alignment
000045c: 00                                        ; store offset
000045d: 20                                        ; local.get
000045e: 02                                        ; local index
000045f: 41                                        ; i32.const
0000460: 10                                        ; i32 literal
0000461: 6a                                        ; i32.add
0000462: 41                                        ; i32.const
0000463: 0d                                        ; i32 literal
0000464: 36                                        ; i32.store
0000465: 02                                        ; alignment
0000466: 00                                        ; store offset
0000467: 20                                        ; local.get
0000468: 01                                        ; local index
0000469: 41                                        ; i32.const
000046a: 00                                        ; i32 literal
000046b: 6a                                        ; i32.add
000046c: 20                                        ; local.get
000046d: 02                                        ; local index
000046e: 36                                        ; i32.store
000046f: 02                                        ; alignment
0000470: 00                                        ; store offset
0000471: 41                                        ; i32.const
0000472: 14                                        ; i32 literal
0000473: 41                                        ; i32.const
0000474: 18                                        ; i32 literal
0000475: 10                                        ; call
0000476: 12                                        ; function index
0000477: 21                                        ; local.set
0000478: 03                                        ; local index
0000479: 20                                        ; local.get
000047a: 03                                        ; local index
000047b: 41                                        ; i32.const
000047c: 00                                        ; i32 literal
000047d: 6a                                        ; i32.add
000047e: 41                                        ; i32.const
000047f: 01                                        ; i32 literal
0000480: b7                                        ; f64.convert_i32_s
0000481: 39                                        ; f64.store
0000482: 03                                        ; alignment
0000483: 00                                        ; store offset
0000484: 20                                        ; local.get
0000485: 03                                        ; local index
0000486: 41                                        ; i32.const
0000487: 08                                        ; i32 literal
0000488: 6a                                        ; i32.add
0000489: 20                                        ; local.get
000048a: 03                                        ; local index
000048b: 41                                        ; i32.const
000048c: 00                                        ; i32 literal
000048d: 6a                                        ; i32.add
000048e: 2b                                        ; f64.load
000048f: 03                                        ; alignment
0000490: 00                                        ; load offset
0000491: 41                                        ; i32.const
0000492: e707                                      ; i32 literal
0000494: b7                                        ; f64.convert_i32_s
0000495: a2                                        ; f64.mul
0000496: 39                                        ; f64.store
0000497: 03                                        ; alignment
0000498: 00                                        ; store offset
0000499: 20                                        ; local.get
000049a: 03                                        ; local index
000049b: 41                                        ; i32.const
000049c: 10                                        ; i32 literal
000049d: 6a                                        ; i32.add
000049e: 41                                        ; i32.const
000049f: b805                                      ; i32 literal
00004a1: 36                                        ; i32.store
00004a2: 02                                        ; alignment
00004a3: 00                                        ; store offset
00004a4: 20                                        ; local.get
00004a5: 01                                        ; local index
00004a6: 41                                        ; i32.const
00004a7: 04                                        ; i32 literal
00004a8: 6a                                        ; i32.add
00004a9: 20                                        ; local.get
00004aa: 03                                        ; local index
00004ab: 36                                        ; i32.store
00004ac: 02                                        ; alignment
00004ad: 00                                        ; store offset
00004ae: 41                                        ; i32.const
00004af: 14                                        ; i32 literal
00004b0: 41                                        ; i32.const
00004b1: 18                                        ; i32 literal
00004b2: 10                                        ; call
00004b3: 12                                        ; function index
00004b4: 21                                        ; local.set
00004b5: 04                                        ; local index
00004b6: 20                                        ; local.get
00004b7: 04                                        ; local index
00004b8: 41                                        ; i32.const
00004b9: 10                                        ; i32 literal
00004ba: 6a                                        ; i32.add
00004bb: 41                                        ; i32.const
00004bc: c805                                      ; i32 literal
00004be: 36                                        ; i32.store
00004bf: 02                                        ; alignment
00004c0: 00                                        ; store offset
00004c1: 20                                        ; local.get
00004c2: 04                                        ; local index
00004c3: 41                                        ; i32.const
00004c4: 00                                        ; i32 literal
00004c5: 6a                                        ; i32.add
00004c6: 44                                        ; f64.const
00004c7: 0000 0000 0000 0000                       ; f64 literal
00004cf: 39                                        ; f64.store
00004d0: 03                                        ; alignment
00004d1: 00                                        ; store offset
00004d2: 20                                        ; local.get
00004d3: 04                                        ; local index
00004d4: 41                                        ; i32.const
00004d5: 08                                        ; i32 literal
00004d6: 6a                                        ; i32.add
00004d7: 44                                        ; f64.const
00004d8: 0000 0000 0000 0000                       ; f64 literal
00004e0: 39                                        ; f64.store
00004e1: 03                                        ; alignment
00004e2: 00                                        ; store offset
00004e3: 20                                        ; local.get
00004e4: 01                                        ; local index
00004e5: 41                                        ; i32.const
00004e6: 08                                        ; i32 literal
00004e7: 6a                                        ; i32.add
00004e8: 20                                        ; local.get
00004e9: 04                                        ; local index
00004ea: 36                                        ; i32.store
00004eb: 02                                        ; alignment
00004ec: 00                                        ; store offset
00004ed: 41                                        ; i32.const
00004ee: 14                                        ; i32 literal
00004ef: 41                                        ; i32.const
00004f0: 18                                        ; i32 literal
00004f1: 10                                        ; call
00004f2: 12                                        ; function index
00004f3: 21                                        ; local.set
00004f4: 05                                        ; local index
00004f5: 20                                        ; local.get
00004f6: 05                                        ; local index
00004f7: 41                                        ; i32.const
00004f8: 10                                        ; i32 literal
00004f9: 6a                                        ; i32.add
00004fa: 41                                        ; i32.const
00004fb: d005                                      ; i32 literal
00004fd: 36                                        ; i32.store
00004fe: 02                                        ; alignment
00004ff: 00                                        ; store offset
0000500: 20                                        ; local.get
0000501: 05                                        ; local index
0000502: 41                                        ; i32.const
0000503: 00                                        ; i32 literal
0000504: 6a                                        ; i32.add
0000505: 44                                        ; f64.const
0000506: 0000 0000 0000 0000                       ; f64 literal
000050e: 39                                        ; f64.store
000050f: 03                                        ; alignment
0000510: 00                                        ; store offset
0000511: 20                                        ; local.get
0000512: 05                                        ; local index
0000513: 41                                        ; i32.const
0000514: 08                                        ; i32 literal
0000515: 6a                                        ; i32.add
0000516: 44                                        ; f64.const
0000517: 0000 0000 0000 0000                       ; f64 literal
000051f: 39                                        ; f64.store
0000520: 03                                        ; alignment
0000521: 00                                        ; store offset
0000522: 20                                        ; local.get
0000523: 01                                        ; local index
0000524: 41                                        ; i32.const
0000525: 0c                                        ; i32 literal
0000526: 6a                                        ; i32.add
0000527: 20                                        ; local.get
0000528: 05                                        ; local index
0000529: 36                                        ; i32.store
000052a: 02                                        ; alignment
000052b: 00                                        ; store offset
000052c: 20                                        ; local.get
000052d: 00                                        ; local index
000052e: 24                                        ; global.set
000052f: 0c                                        ; global index
0000530: 0b                                        ; end
; move data: [414, 531) -> [415, 532)
0000413: 9d02                                      ; FIXUP func body size
; function body 7
0000532: 00                                        ; func body size (guess)
0000533: 01                                        ; local decl count
0000534: 06                                        ; local type count
0000535: 7f                                        ; i32
0000536: 41                                        ; i32.const
0000537: 00                                        ; i32 literal
0000538: 21                                        ; local.set
0000539: 00                                        ; local index
000053a: 41                                        ; i32.const
000053b: 00                                        ; i32 literal
000053c: 21                                        ; local.set
000053d: 01                                        ; local index
000053e: 02                                        ; block
000053f: 40                                        ; void
0000540: 03                                        ; loop
0000541: 40                                        ; void
0000542: 20                                        ; local.get
0000543: 01                                        ; local index
0000544: 23                                        ; global.get
0000545: 0c                                        ; global index
0000546: 41                                        ; i32.const
0000547: 04                                        ; i32 literal
0000548: 6a                                        ; i32.add
0000549: 28                                        ; i32.load
000054a: 02                                        ; alignment
000054b: 00                                        ; load offset
000054c: 41                                        ; i32.const
000054d: 01                                        ; i32 literal
000054e: 6b                                        ; i32.sub
000054f: 4a                                        ; i32.gt_s
0000550: 0d                                        ; br_if
0000551: 01                                        ; break depth
0000552: 23                                        ; global.get
0000553: 0c                                        ; global index
0000554: 41                                        ; i32.const
0000555: 08                                        ; i32 literal
0000556: 6a                                        ; i32.add
0000557: 20                                        ; local.get
0000558: 01                                        ; local index
0000559: 41                                        ; i32.const
000055a: 04                                        ; i32 literal
000055b: 6c                                        ; i32.mul
000055c: 6a                                        ; i32.add
000055d: 28                                        ; i32.load
000055e: 02                                        ; alignment
000055f: 00                                        ; load offset
0000560: 21                                        ; local.set
0000561: 00                                        ; local index
0000562: 41                                        ; i32.const
0000563: b807                                      ; i32 literal
0000565: 20                                        ; local.get
0000566: 01                                        ; local index
0000567: 10                                        ; call
0000568: 10                                        ; function index
0000569: 10                                        ; call
000056a: 09                                        ; function index
000056b: 41                                        ; i32.const
000056c: c007                                      ; i32 literal
000056e: 10                                        ; call
000056f: 09                                        ; function index
0000570: 20                                        ; local.get
0000571: 00                                        ; local index
0000572: 10                                        ; call
0000573: 10                                        ; function index
0000574: 10                                        ; call
0000575: 09                                        ; function index
0000576: 41                                        ; i32.const
0000577: d007                                      ; i32 literal
0000579: 10                                        ; call
000057a: 09                                        ; function index
000057b: 20                                        ; local.get
000057c: 00                                        ; local index
000057d: 41                                        ; i32.const
000057e: 10                                        ; i32 literal
000057f: 6a                                        ; i32.add
0000580: 28                                        ; i32.load
0000581: 02                                        ; alignment
0000582: 00                                        ; load offset
0000583: 10                                        ; call
0000584: 10                                        ; function index
0000585: 10                                        ; call
0000586: 09                                        ; function index
0000587: 10                                        ; call
0000588: 0d                                        ; function index
0000589: 20                                        ; local.get
000058a: 00                                        ; local index
000058b: 10                                        ; call
000058c: 0c                                        ; function index
000058d: 20                                        ; local.get
000058e: 01                                        ; local index
000058f: 41                                        ; i32.const
0000590: 01                                        ; i32 literal
0000591: 6a                                        ; i32.add
0000592: 21                                        ; local.set
0000593: 01                                        ; local index
0000594: 0c                                        ; br
0000595: 00                                        ; break depth
0000596: 0b                                        ; end
0000597: 0b                                        ; end
0000598: 41                                        ; i32.const
0000599: 08                                        ; i32 literal
000059a: 41                                        ; i32.const
000059b: 02                                        ; i32 literal
000059c: 41                                        ; i32.const
000059d: 04                                        ; i32 literal
000059e: 6c                                        ; i32.mul
000059f: 6a                                        ; i32.add
00005a0: 41                                        ; i32.const
00005a1: 07                                        ; i32 literal
00005a2: 10                                        ; call
00005a3: 12                                        ; function index
00005a4: 21                                        ; local.set
00005a5: 04                                        ; local index
00005a6: 20                                        ; local.get
00005a7: 04                                        ; local index
00005a8: 41                                        ; i32.const
00005a9: e002                                      ; i32 literal
00005ab: 36                                        ; i32.store
00005ac: 02                                        ; alignment
00005ad: 00                                        ; store offset
00005ae: 20                                        ; local.get
00005af: 04                                        ; local index
00005b0: 41                                        ; i32.const
00005b1: 04                                        ; i32 literal
00005b2: 6a                                        ; i32.add
00005b3: 41                                        ; i32.const
00005b4: 02                                        ; i32 literal
00005b5: 36                                        ; i32.store
00005b6: 02                                        ; alignment
00005b7: 00                                        ; store offset
00005b8: 20                                        ; local.get
00005b9: 04                                        ; local index
00005ba: 41                                        ; i32.const
00005bb: 08                                        ; i32 literal
00005bc: 6a                                        ; i32.add
00005bd: 21                                        ; local.set
00005be: 05                                        ; local index
00005bf: 41                                        ; i32.const
00005c0: 08                                        ; i32 literal
00005c1: 41                                        ; i32.const
00005c2: e002                                      ; i32 literal
00005c4: 10                                        ; call
00005c5: 12                                        ; function index
00005c6: 21                                        ; local.set
00005c7: 02                                        ; local index
00005c8: 20                                        ; local.get
00005c9: 02                                        ; local index
00005ca: 41                                        ; i32.const
00005cb: 04                                        ; i32 literal
00005cc: 6a                                        ; i32.add
00005cd: 23                                        ; global.get
00005ce: 0c                                        ; global index
00005cf: 41                                        ; i32.const
00005d0: 08                                        ; i32 literal
00005d1: 6a                                        ; i32.add
00005d2: 41                                        ; i32.const
00005d3: 00                                        ; i32 literal
00005d4: 41                                        ; i32.const
00005d5: 04                                        ; i32 literal
00005d6: 6c                                        ; i32.mul
00005d7: 6a                                        ; i32.add
00005d8: 28                                        ; i32.load
00005d9: 02                                        ; alignment
00005da: 00                                        ; load offset
00005db: 36                                        ; i32.store
00005dc: 02                                        ; alignment
00005dd: 00                                        ; store offset
00005de: 20                                        ; local.get
00005df: 02                                        ; local index
00005e0: 41                                        ; i32.const
00005e1: 00                                        ; i32 literal
00005e2: 6a                                        ; i32.add
00005e3: 23                                        ; global.get
00005e4: 0c                                        ; global index
00005e5: 41                                        ; i32.const
00005e6: 08                                        ; i32 literal
00005e7: 6a                                        ; i32.add
00005e8: 41                                        ; i32.const
00005e9: 01                                        ; i32 literal
00005ea: 41                                        ; i32.const
00005eb: 04                                        ; i32 literal
00005ec: 6c                                        ; i32.mul
00005ed: 6a                                        ; i32.add
00005ee: 28                                        ; i32.load
00005ef: 02                                        ; alignment
00005f0: 00                                        ; load offset
00005f1: 36                                        ; i32.store
00005f2: 02                                        ; alignment
00005f3: 00                                        ; store offset
00005f4: 20                                        ; local.get
00005f5: 05                                        ; local index
00005f6: 41                                        ; i32.const
00005f7: 00                                        ; i32 literal
00005f8: 6a                                        ; i32.add
00005f9: 20                                        ; local.get
00005fa: 02                                        ; local index
00005fb: 36                                        ; i32.store
00005fc: 02                                        ; alignment
00005fd: 00                                        ; store offset
00005fe: 41                                        ; i32.const
00005ff: 08                                        ; i32 literal
0000600: 41                                        ; i32.const
0000601: e002                                      ; i32 literal
0000603: 10                                        ; call
0000604: 12                                        ; function index
0000605: 21                                        ; local.set
0000606: 03                                        ; local index
0000607: 20                                        ; local.get
0000608: 03                                        ; local index
0000609: 41                                        ; i32.const
000060a: 04                                        ; i32 literal
000060b: 6a                                        ; i32.add
000060c: 23                                        ; global.get
000060d: 0c                                        ; global index
000060e: 41                                        ; i32.const
000060f: 08                                        ; i32 literal
0000610: 6a                                        ; i32.add
0000611: 41                                        ; i32.const
0000612: 02                                        ; i32 literal
0000613: 41                                        ; i32.const
0000614: 04                                        ; i32 literal
0000615: 6c                                        ; i32.mul
0000616: 6a                                        ; i32.add
0000617: 28                                        ; i32.load
0000618: 02                                        ; alignment
0000619: 00                                        ; load offset
000061a: 36                                        ; i32.store
000061b: 02                                        ; alignment
000061c: 00                                        ; store offset
000061d: 20                                        ; local.get
000061e: 03                                        ; local index
000061f: 41                                        ; i32.const
0000620: 00                                        ; i32 literal
0000621: 6a                                        ; i32.add
0000622: 23                                        ; global.get
0000623: 0c                                        ; global index
0000624: 41                                        ; i32.const
0000625: 08                                        ; i32 literal
0000626: 6a                                        ; i32.add
0000627: 41                                        ; i32.const
0000628: 03                                        ; i32 literal
0000629: 41                                        ; i32.const
000062a: 04                                        ; i32 literal
000062b: 6c                                        ; i32.mul
000062c: 6a                                        ; i32.add
000062d: 28                                        ; i32.load
000062e: 02                                        ; alignment
000062f: 00                                        ; load offset
0000630: 36                                        ; i32.store
0000631: 02                                        ; alignment
0000632: 00                                        ; store offset
0000633: 20                                        ; local.get
0000634: 05                                        ; local index
0000635: 41                                        ; i32.const
0000636: 04                                        ; i32 literal
0000637: 6a                                        ; i32.add
0000638: 20                                        ; local.get
0000639: 03                                        ; local index
000063a: 36                                        ; i32.store
000063b: 02                                        ; alignment
000063c: 00                                        ; store offset
000063d: 20                                        ; local.get
000063e: 04                                        ; local index
000063f: 24                                        ; global.set
0000640: 0b                                        ; global index
0000641: 0b                                        ; end
; move data: [533, 642) -> [534, 643)
0000532: 8f02                                      ; FIXUP func body size
; move data: [23a, 643) -> [23b, 644)
0000239: 8908                                      ; FIXUP section size
; section "Data" (11)
0000644: 0b                                        ; section code
0000645: 00                                        ; section size (guess)
0000646: 13                                        ; num data segments
; data segment header 0
0000647: 00                                      
0000648: 41                                        ; i32.const
0000649: 0d                                        ; i32 literal
000064a: 0b                                        ; end
000064b: 04                                        ; data segment size
; data segment data 0
000064c: 4142 4300                                 ; data segment data
; data segment header 1
0000650: 00                                      
0000651: 41                                        ; i32.const
0000652: b805                                      ; i32 literal
0000654: 0b                                        ; end
0000655: 0c                                        ; data segment size
; data segment data 1
0000656: 4865 6c6c 6f20 776f 726c 6400             ; data segment data
; data segment header 2
0000662: 00                                      
0000663: 41                                        ; i32.const
0000664: c805                                      ; i32 literal
0000666: 0b                                        ; end
0000667: 08                                        ; data segment size
; data segment data 2
0000668: 623a 506f 696e 7400                       ; data segment data
; data segment header 3
0000670: 00                                      
0000671: 41                                        ; i32.const
0000672: d005                                      ; i32 literal
0000674: 0b                                        ; end
0000675: 08                                        ; data segment size
; data segment data 3
0000676: 633a 506f 696e 7400                       ; data segment data
; data segment header 4
000067e: 00                                      
000067f: 41                                        ; i32.const
0000680: d805                                      ; i32 literal
0000682: 0b                                        ; end
0000683: 02                                        ; data segment size
; data segment data 4
0000684: 2300                                      ; data segment data
; data segment header 5
0000686: 00                                      
0000687: 41                                        ; i32.const
0000688: e005                                      ; i32 literal
000068a: 0b                                        ; end
000068b: 0e                                        ; data segment size
; data segment data 5
000068c: 2061 6464 7265 7373 4f66 3a3d 2600        ; data segment data
; data segment header 6
000069a: 00                                      
000069b: 41                                        ; i32.const
000069c: f005                                      ; i32 literal
000069e: 0b                                        ; end
000069f: 09                                        ; data segment size
; data segment data 6
00006a0: 2c20 6e61 6d65 3a3d 00                    ; data segment data
; data segment header 7
00006a9: 00                                      
00006aa: 41                                        ; i32.const
00006ab: 8006                                      ; i32 literal
00006ad: 0b                                        ; end
00006ae: 0c                                        ; data segment size
; data segment data 7
00006af: 2020 205b 782c 795d 3a3d 5b00             ; data segment data
; data segment header 8
00006bb: 00                                      
00006bc: 41                                        ; i32.const
00006bd: 9006                                      ; i32 literal
00006bf: 0b                                        ; end
00006c0: 02                                        ; data segment size
; data segment data 8
00006c1: 2c00                                      ; data segment data
; data segment header 9
00006c3: 00                                      
00006c4: 41                                        ; i32.const
00006c5: 9806                                      ; i32 literal
00006c7: 0b                                        ; end
00006c8: 02                                        ; data segment size
; data segment data 9
00006c9: 5d00                                      ; data segment data
; data segment header 10
00006cb: 00                                      
00006cc: 41                                        ; i32.const
00006cd: a006                                      ; i32 literal
00006cf: 0b                                        ; end
00006d0: 63                                        ; data segment size
; data segment data 10
00006d1: 4173 2074 6865 2070 6f69 6e74 2061 6e64 
00006e1: 206c 696e 6520 6f62 6a65 6374 2069 7320 
00006f1: 7265 6665 7265 6e63 6520 7479 7065 2c20 
0000701: 736f 2074 6865 2070 6f69 6e74 2076 616c 
0000711: 7565 2069 6e20 6c69 6e65 7320 6172 7261 
0000721: 7920 6973 2061 6c73 6f20 6368 616e 6765 
0000731: 6421 00                                   ; data segment data
; data segment header 11
0000734: 00                                      
0000735: 41                                        ; i32.const
0000736: 8807                                      ; i32 literal
0000738: 0b                                        ; end
0000739: 19                                        ; data segment size
; data segment data 11
000073a: 4173 7369 676e 2061 2072 616e 646f 6d20 
000074a: 5b78 2c79 5d3a 3d5b 00                    ; data segment data
; data segment header 12
0000753: 00                                      
0000754: 41                                        ; i32.const
0000755: a807                                      ; i32 literal
0000757: 0b                                        ; end
0000758: 02                                        ; data segment size
; data segment data 12
0000759: 2c00                                      ; data segment data
; data segment header 13
000075b: 00                                      
000075c: 41                                        ; i32.const
000075d: b007                                      ; i32 literal
000075f: 0b                                        ; end
0000760: 02                                        ; data segment size
; data segment data 13
0000761: 5d00                                      ; data segment data
; data segment header 14
0000763: 00                                      
0000764: 41                                        ; i32.const
0000765: b807                                      ; i32 literal
0000767: 0b                                        ; end
0000768: 02                                        ; data segment size
; data segment data 14
0000769: 2300                                      ; data segment data
; data segment header 15
000076b: 00                                      
000076c: 41                                        ; i32.const
000076d: c007                                      ; i32 literal
000076f: 0b                                        ; end
0000770: 0e                                        ; data segment size
; data segment data 15
0000771: 2061 6464 7265 7373 4f66 3a3d 2600        ; data segment data
; data segment header 16
000077f: 00                                      
0000780: 41                                        ; i32.const
0000781: d007                                      ; i32 literal
0000783: 0b                                        ; end
0000784: 09                                        ; data segment size
; data segment data 16
0000785: 2c20 6e61 6d65 3a3d 00                    ; data segment data
; data segment header 17
000078e: 00                                      
000078f: 41                                        ; i32.const
0000790: 18                                        ; i32 literal
0000791: 0b                                        ; end
0000792: c102                                      ; data segment size
; data segment data 17
0000794: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00007a4: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00007b4: 496c 4276 6157 3530 4969 7769 5932 7868 
00007c4: 6333 4e66 6157 5169 4f6a 4930 4c43 4a6d 
00007d4: 6157 5673 5a48 4d69 4f6e 7369 6543 4936 
00007e4: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
00007f4: 5853 7769 636d 4633 496a 6f69 5a6a 5930 
0000804: 4969 7769 6448 6c77 5a53 4936 4e48 3073 
0000814: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000824: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000834: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000844: 4f6a 5239 4c43 4a75 5957 316c 496a 7037 
0000854: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000864: 4c43 4a79 5958 6369 4f69 4a7a 6448 4a70 
0000874: 626d 6369 4c43 4a30 6558 426c 496a 6f31 
0000884: 6658 3073 496d 6c7a 5533 5279 6457 4e30 
0000894: 496a 706d 5957 787a 5a53 7769 6257 5630 
00008a4: 6147 396b 6379 4936 6533 3073 496d 3568 
00008b4: 6257 567a 6347 466a 5a53 4936 496d 4679 
00008c4: 636d 4635 5432 4a71 5a57 4e30 6379 4a39 
00008d4: 00                                        ; data segment data
; data segment header 18
00008d5: 00                                      
00008d6: 41                                        ; i32.const
00008d7: e002                                      ; i32 literal
00008d9: 0b                                        ; end
00008da: 9902                                      ; data segment size
; data segment data 18
00008dc: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00008ec: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00008fc: 496d 7870 626d 5569 4c43 4a6a 6247 467a 
000090c: 6331 3970 5a43 4936 4d7a 5579 4c43 4a6d 
000091c: 6157 5673 5a48 4d69 4f6e 7369 5969 4936 
000092c: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
000093c: 5853 7769 636d 4633 496a 6f69 577a 4930 
000094c: 5856 4276 6157 3530 4969 7769 6448 6c77 
000095c: 5a53 4936 4d54 4239 4c43 4a68 496a 7037 
000096c: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
000097c: 4c43 4a79 5958 6369 4f69 4a62 4d6a 5264 
000098c: 5547 3970 626e 5169 4c43 4a30 6558 426c 
000099c: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
00009ac: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00009bc: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00009cc: 4c43 4a75 5957 316c 6333 4268 5932 5569 
00009dc: 4f69 4a68 636e 4a68 6555 3969 616d 566a 
00009ec: 6448 4d69 6651 3d3d 00                    ; data segment data
; move data: [646, 9f5) -> [647, 9f6)
0000645: af07                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0137 0b60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 017f 0060 017c 017f 6000 017f 6000 
0000040: 0002 9202 1304 4d61 7468 0370 6f77 0000 
0000050: 044d 6174 6804 7371 7274 0001 044d 6174 
0000060: 6803 6578 7000 0104 4d61 7468 0363 6f73 
0000070: 0001 044d 6174 6806 7261 6e64 6f6d 0002 
0000080: 044d 6174 6804 6365 696c 0001 044d 6174 
0000090: 6805 666c 6f6f 7200 0102 4743 0961 6464 
00000a0: 4f62 6a65 6374 0003 0673 7472 696e 6707 
00000b0: 7265 706c 6163 6500 0406 7374 7269 6e67 
00000c0: 0361 6464 0005 0673 7472 696e 6706 6c65 
00000d0: 6e67 7468 0006 0673 7472 696e 6707 696e 
00000e0: 6465 784f 6600 0507 636f 6e73 6f6c 6503 
00000f0: 6c6f 6700 0707 636f 6e73 6f6c 6503 6c6f 
0000100: 6700 0707 636f 6e73 6f6c 6504 7761 726e 
0000110: 0007 0763 6f6e 736f 6c65 036c 6f67 0007 
0000120: 0673 7472 696e 6708 746f 5374 7269 6e67 
0000130: 0006 0673 7472 696e 6708 746f 5374 7269 
0000140: 6e67 0008 0365 6e76 0a62 7974 6563 6875 
0000150: 6e6b 7302 0001 0309 0805 090a 0a09 0a0a 
0000160: 0a06 7f0d 7f01 41e0 070b 7c01 4469 5714 
0000170: 8b0a bf05 400b 7c01 4418 2d44 54fb 2109 
0000180: 400b 7f01 41ff ffff ff07 0b7e 0142 ffff 
0000190: ffff ffff ffff ff00 0b7d 0143 ffff 7f7f 
00001a0: 0b7c 0144 ffff ffff ffff ef7f 0b7f 0141 
00001b0: 8080 8080 780b 7e01 4280 8080 8080 8080 
00001c0: 8080 7f0b 7d01 43ff ff7f ff0b 7c01 44ff 
00001d0: ffff ffff ffef ff0b 7f01 4100 0b7f 0141 
00001e0: 000b 0751 0314 676c 6f62 616c 2e47 6574 
00001f0: 4d65 6d6f 7279 5369 7a65 0013 1a6f 626a 
0000200: 6563 7441 7272 6179 5465 7374 2e70 7269 
0000210: 6e74 4172 7261 7900 1419 6f62 6a65 6374 
0000220: 4172 7261 7954 6573 742e 4765 7450 6f69 
0000230: 6e74 7300 1608 0117 0a89 0808 3a01 027f 
0000240: 2300 2102 2002 2000 6a24 0023 0041 086f 
0000250: 2103 2003 0440 4108 2003 6b21 0323 0020 
0000260: 036a 2400 0523 0041 086a 2400 0b20 0220 
0000270: 0110 0720 020f 0b05 0023 000f 0bef 0101 
0000280: 087f 1015 4100 2106 0240 0340 2006 230c 
0000290: 4104 6a28 0200 4101 6b4a 0d01 41d8 0520 
00002a0: 0610 1010 0941 e005 1009 230c 4108 6a20 
00002b0: 0641 046c 6a28 0200 1010 1009 41f0 0510 
00002c0: 0923 0c41 086a 2006 4104 6c6a 2802 0041 
00002d0: 106a 2802 0010 1010 0910 0d41 8006 230c 
00002e0: 4108 6a20 0641 046c 6a28 0200 4100 6a2b 
00002f0: 0300 1011 1009 4190 0610 0923 0c41 086a 
0000300: 2006 4104 6c6a 2802 0041 086a 2b03 0010 
0000310: 1110 0941 9806 1009 100d 230c 4108 6a20 
0000320: 0641 046c 6a28 0200 100c 2006 4101 6a21 
0000330: 060c 000b 0b41 a006 100d 4100 2107 0240 
0000340: 0340 2007 230b 4104 6a28 0200 4101 6b4a 
0000350: 0d01 230b 4108 6a20 0741 046c 6a28 0200 
0000360: 100f 2007 4101 6a21 070c 000b 0b0b 9701 
0000370: 0101 7f41 0021 0002 4003 4020 0023 0c41 
0000380: 046a 2802 0041 016b 4a0d 0123 0c41 086a 
0000390: 2000 4104 6c6a 2802 0041 006a 1004 3903 
00003a0: 0023 0c41 086a 2000 4104 6c6a 2802 0041 
00003b0: 086a 1004 41e4 00b7 a239 0300 4188 0723 
00003c0: 0c41 086a 2000 4104 6c6a 2802 0041 006a 
00003d0: 2b03 0010 1110 0941 a807 1009 230c 4108 
00003e0: 6a20 0041 046c 6a28 0200 4108 6a2b 0300 
00003f0: 1011 1009 41b0 0710 0910 0e20 0041 016a 
0000400: 2100 0c00 0b0b 0b05 0023 0c0f 0b06 0010 
0000410: 1810 190b 9d02 0106 7f41 0841 0441 046c 
0000420: 6a41 0710 1221 0020 0041 1836 0200 2000 
0000430: 4104 6a41 0436 0200 2000 4108 6a21 0141 
0000440: 1441 1810 1221 0220 0241 006a 41e4 00b7 
0000450: 3903 0020 0241 086a 41f4 03b7 3903 0020 
0000460: 0241 106a 410d 3602 0020 0141 006a 2002 
0000470: 3602 0041 1441 1810 1221 0320 0341 006a 
0000480: 4101 b739 0300 2003 4108 6a20 0341 006a 
0000490: 2b03 0041 e707 b7a2 3903 0020 0341 106a 
00004a0: 41b8 0536 0200 2001 4104 6a20 0336 0200 
00004b0: 4114 4118 1012 2104 2004 4110 6a41 c805 
00004c0: 3602 0020 0441 006a 4400 0000 0000 0000 
00004d0: 0039 0300 2004 4108 6a44 0000 0000 0000 
00004e0: 0000 3903 0020 0141 086a 2004 3602 0041 
00004f0: 1441 1810 1221 0520 0541 106a 41d0 0536 
0000500: 0200 2005 4100 6a44 0000 0000 0000 0000 
0000510: 3903 0020 0541 086a 4400 0000 0000 0000 
0000520: 0039 0300 2001 410c 6a20 0536 0200 2000 
0000530: 240c 0b8f 0201 067f 4100 2100 4100 2101 
0000540: 0240 0340 2001 230c 4104 6a28 0200 4101 
0000550: 6b4a 0d01 230c 4108 6a20 0141 046c 6a28 
0000560: 0200 2100 41b8 0720 0110 1010 0941 c007 
0000570: 1009 2000 1010 1009 41d0 0710 0920 0041 
0000580: 106a 2802 0010 1010 0910 0d20 0010 0c20 
0000590: 0141 016a 2101 0c00 0b0b 4108 4102 4104 
00005a0: 6c6a 4107 1012 2104 2004 41e0 0236 0200 
00005b0: 2004 4104 6a41 0236 0200 2004 4108 6a21 
00005c0: 0541 0841 e002 1012 2102 2002 4104 6a23 
00005d0: 0c41 086a 4100 4104 6c6a 2802 0036 0200 
00005e0: 2002 4100 6a23 0c41 086a 4101 4104 6c6a 
00005f0: 2802 0036 0200 2005 4100 6a20 0236 0200 
0000600: 4108 41e0 0210 1221 0320 0341 046a 230c 
0000610: 4108 6a41 0241 046c 6a28 0200 3602 0020 
0000620: 0341 006a 230c 4108 6a41 0341 046c 6a28 
0000630: 0200 3602 0020 0541 046a 2003 3602 0020 
0000640: 0424 0b0b 0baf 0713 0041 0d0b 0441 4243 
0000650: 0000 41b8 050b 0c48 656c 6c6f 2077 6f72 
0000660: 6c64 0000 41c8 050b 0862 3a50 6f69 6e74 
0000670: 0000 41d0 050b 0863 3a50 6f69 6e74 0000 
0000680: 41d8 050b 0223 0000 41e0 050b 0e20 6164 
0000690: 6472 6573 734f 663a 3d26 0000 41f0 050b 
00006a0: 092c 206e 616d 653a 3d00 0041 8006 0b0c 
00006b0: 2020 205b 782c 795d 3a3d 5b00 0041 9006 
00006c0: 0b02 2c00 0041 9806 0b02 5d00 0041 a006 
00006d0: 0b63 4173 2074 6865 2070 6f69 6e74 2061 
00006e0: 6e64 206c 696e 6520 6f62 6a65 6374 2069 
00006f0: 7320 7265 6665 7265 6e63 6520 7479 7065 
0000700: 2c20 736f 2074 6865 2070 6f69 6e74 2076 
0000710: 616c 7565 2069 6e20 6c69 6e65 7320 6172 
0000720: 7261 7920 6973 2061 6c73 6f20 6368 616e 
0000730: 6765 6421 0000 4188 070b 1941 7373 6967 
0000740: 6e20 6120 7261 6e64 6f6d 205b 782c 795d 
0000750: 3a3d 5b00 0041 a807 0b02 2c00 0041 b007 
0000760: 0b02 5d00 0041 b807 0b02 2300 0041 c007 
0000770: 0b0e 2061 6464 7265 7373 4f66 3a3d 2600 
0000780: 0041 d007 0b09 2c20 6e61 6d65 3a3d 0000 
0000790: 4118 0bc1 0265 794a 6a62 3231 745a 5735 
00007a0: 3049 6a70 7564 5778 734c 434a 6a62 4746 
00007b0: 7a63 7949 3649 6c42 7661 5735 3049 6977 
00007c0: 6959 3278 6863 334e 6661 5751 694f 6a49 
00007d0: 304c 434a 6d61 5756 735a 484d 694f 6e73 
00007e0: 6965 4349 3665 794a 6e5a 5735 6c63 6d6c 
00007f0: 6a49 6a70 6258 5377 6963 6d46 3349 6a6f 
0000800: 695a 6a59 3049 6977 6964 486c 775a 5349 
0000810: 364e 4830 7349 6e6b 694f 6e73 695a 3256 
0000820: 755a 584a 7059 7949 3657 3130 7349 6e4a 
0000830: 6864 7949 3649 6d59 324e 4349 7349 6e52 
0000840: 3563 4755 694f 6a52 394c 434a 7559 5731 
0000850: 6c49 6a70 3749 6d64 6c62 6d56 7961 574d 
0000860: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000870: 7a64 484a 7062 6d63 694c 434a 3065 5842 
0000880: 6c49 6a6f 3166 5830 7349 6d6c 7a55 3352 
0000890: 7964 574e 3049 6a70 6d59 5778 7a5a 5377 
00008a0: 6962 5756 3061 4739 6b63 7949 3665 3330 
00008b0: 7349 6d35 6862 5756 7a63 4746 6a5a 5349 
00008c0: 3649 6d46 7963 6d46 3554 324a 715a 574e 
00008d0: 3063 794a 3900 0041 e002 0b99 0265 794a 
00008e0: 6a62 3231 745a 5735 3049 6a70 7564 5778 
00008f0: 734c 434a 6a62 4746 7a63 7949 3649 6d78 
0000900: 7062 6d55 694c 434a 6a62 4746 7a63 3139 
0000910: 705a 4349 364d 7a55 794c 434a 6d61 5756 
0000920: 735a 484d 694f 6e73 6959 6949 3665 794a 
0000930: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
0000940: 6963 6d46 3349 6a6f 6957 7a49 3058 5642 
0000950: 7661 5735 3049 6977 6964 486c 775a 5349 
0000960: 364d 5442 394c 434a 6849 6a70 3749 6d64 
0000970: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000980: 7959 5863 694f 694a 624d 6a52 6455 4739 
0000990: 7062 6e51 694c 434a 3065 5842 6c49 6a6f 
00009a0: 784d 4831 394c 434a 7063 314e 3063 6e56 
00009b0: 6a64 4349 365a 6d46 7363 3255 7349 6d31 
00009c0: 6c64 4768 765a 484d 694f 6e74 394c 434a 
00009d0: 7559 5731 6c63 3342 6859 3255 694f 694a 
00009e0: 6863 6e4a 6865 5539 6961 6d56 6a64 484d 
00009f0: 6966 513d 3d00                          
