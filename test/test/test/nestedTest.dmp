0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 02                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 01                                        ; num results
0000024: 7f                                        ; i32
; type 5
0000025: 60                                        ; func
0000026: 00                                        ; num params
0000027: 01                                        ; num results
0000028: 7f                                        ; i32
; type 6
0000029: 60                                        ; func
000002a: 00                                        ; num params
000002b: 00                                        ; num results
0000009: 22                                        ; FIXUP section size
; section "Import" (2)
000002c: 02                                        ; section code
000002d: 00                                        ; section size (guess)
000002e: 09                                        ; num imports
; import header 0
000002f: 04                                        ; string length
0000030: 4d61 7468                                Math  ; import module name
0000034: 03                                        ; string length
0000035: 706f 77                                  pow  ; import field name
0000038: 00                                        ; import kind
0000039: 00                                        ; import signature index
; import header 1
000003a: 04                                        ; string length
000003b: 4d61 7468                                Math  ; import module name
000003f: 04                                        ; string length
0000040: 7371 7274                                sqrt  ; import field name
0000044: 00                                        ; import kind
0000045: 01                                        ; import signature index
; import header 2
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 03                                        ; string length
000004c: 6578 70                                  exp  ; import field name
000004f: 00                                        ; import kind
0000050: 01                                        ; import signature index
; import header 3
0000051: 04                                        ; string length
0000052: 4d61 7468                                Math  ; import module name
0000056: 03                                        ; string length
0000057: 636f 73                                  cos  ; import field name
000005a: 00                                        ; import kind
000005b: 01                                        ; import signature index
; import header 4
000005c: 04                                        ; string length
000005d: 4d61 7468                                Math  ; import module name
0000061: 06                                        ; string length
0000062: 7261 6e64 6f6d                           random  ; import field name
0000068: 00                                        ; import kind
0000069: 02                                        ; import signature index
; import header 5
000006a: 04                                        ; string length
000006b: 4d61 7468                                Math  ; import module name
000006f: 04                                        ; string length
0000070: 6365 696c                                ceil  ; import field name
0000074: 00                                        ; import kind
0000075: 01                                        ; import signature index
; import header 6
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 05                                        ; string length
000007c: 666c 6f6f 72                             floor  ; import field name
0000081: 00                                        ; import kind
0000082: 01                                        ; import signature index
; import header 7
0000083: 02                                        ; string length
0000084: 4743                                     GC  ; import module name
0000086: 09                                        ; string length
0000087: 6164 644f 626a 6563 74                   addObject  ; import field name
0000090: 00                                        ; import kind
0000091: 03                                        ; import signature index
; import header 8
0000092: 03                                        ; string length
0000093: 656e 76                                  env  ; import module name
0000096: 0a                                        ; string length
0000097: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000a1: 02                                        ; import kind
00000a2: 00                                        ; limits: flags
00000a3: 01                                        ; limits: initial
000002d: 76                                        ; FIXUP section size
; section "Function" (3)
00000a4: 03                                        ; section code
00000a5: 00                                        ; section size (guess)
00000a6: 06                                        ; num functions
00000a7: 04                                        ; function 0 signature index
00000a8: 05                                        ; function 1 signature index
00000a9: 06                                        ; function 2 signature index
00000aa: 06                                        ; function 3 signature index
00000ab: 06                                        ; function 4 signature index
00000ac: 06                                        ; function 5 signature index
00000a5: 07                                        ; FIXUP section size
; section "Global" (6)
00000ad: 06                                        ; section code
00000ae: 00                                        ; section size (guess)
00000af: 0c                                        ; num globals
00000b0: 7f                                        ; i32
00000b1: 01                                        ; global mutability
00000b2: 41                                        ; i32.const
00000b3: e704                                      ; i32 literal
00000b5: 0b                                        ; end
00000b6: 7c                                        ; f64
00000b7: 01                                        ; global mutability
00000b8: 44                                        ; f64.const
00000b9: 6957 148b 0abf 0540                       ; f64 literal
00000c1: 0b                                        ; end
00000c2: 7c                                        ; f64
00000c3: 01                                        ; global mutability
00000c4: 44                                        ; f64.const
00000c5: 182d 4454 fb21 0940                       ; f64 literal
00000cd: 0b                                        ; end
00000ce: 7f                                        ; i32
00000cf: 01                                        ; global mutability
00000d0: 41                                        ; i32.const
00000d1: ffff ffff 07                              ; i32 literal
00000d6: 0b                                        ; end
00000d7: 7e                                        ; i64
00000d8: 01                                        ; global mutability
00000d9: 42                                        ; i64.const
00000da: ffff ffff ffff ffff ff00                  ; i64 literal
00000e4: 0b                                        ; end
00000e5: 7d                                        ; f32
00000e6: 01                                        ; global mutability
00000e7: 43                                        ; f32.const
00000e8: ffff 7f7f                                 ; f32 literal
00000ec: 0b                                        ; end
00000ed: 7c                                        ; f64
00000ee: 01                                        ; global mutability
00000ef: 44                                        ; f64.const
00000f0: ffff ffff ffff ef7f                       ; f64 literal
00000f8: 0b                                        ; end
00000f9: 7f                                        ; i32
00000fa: 01                                        ; global mutability
00000fb: 41                                        ; i32.const
00000fc: 8080 8080 78                              ; i32 literal
0000101: 0b                                        ; end
0000102: 7e                                        ; i64
0000103: 01                                        ; global mutability
0000104: 42                                        ; i64.const
0000105: 8080 8080 8080 8080 807f                  ; i64 literal
000010f: 0b                                        ; end
0000110: 7d                                        ; f32
0000111: 01                                        ; global mutability
0000112: 43                                        ; f32.const
0000113: ffff 7fff                                 ; f32 literal
0000117: 0b                                        ; end
0000118: 7c                                        ; f64
0000119: 01                                        ; global mutability
000011a: 44                                        ; f64.const
000011b: ffff ffff ffff efff                       ; f64 literal
0000123: 0b                                        ; end
0000124: 7f                                        ; i32
0000125: 01                                        ; global mutability
0000126: 41                                        ; i32.const
0000127: 00                                        ; i32 literal
0000128: 0b                                        ; end
00000ae: 7a                                        ; FIXUP section size
; section "Export" (7)
0000129: 07                                        ; section code
000012a: 00                                        ; section size (guess)
000012b: 01                                        ; num exports
000012c: 13                                        ; string length
000012d: 6e65 7374 6564 5465 7374 2e63 6f70 7974  nestedTest.copyt
000013d: 6573 74                                  est  ; export name
0000140: 00                                        ; export kind
0000141: 0a                                        ; export func index
000012a: 17                                        ; FIXUP section size
; section "Start" (8)
0000142: 08                                        ; section code
0000143: 00                                        ; section size (guess)
0000144: 0b                                        ; start func index
0000143: 01                                        ; FIXUP section size
; section "Code" (10)
0000145: 0a                                        ; section code
0000146: 00                                        ; section size (guess)
0000147: 06                                        ; num functions
; function body 0
0000148: 00                                        ; func body size (guess)
0000149: 01                                        ; local decl count
000014a: 01                                        ; local type count
000014b: 7f                                        ; i32
000014c: 23                                        ; global.get
000014d: 00                                        ; global index
000014e: 21                                        ; local.set
000014f: 02                                        ; local index
0000150: 20                                        ; local.get
0000151: 02                                        ; local index
0000152: 20                                        ; local.get
0000153: 00                                        ; local index
0000154: 6a                                        ; i32.add
0000155: 24                                        ; global.set
0000156: 00                                        ; global index
0000157: 20                                        ; local.get
0000158: 02                                        ; local index
0000159: 20                                        ; local.get
000015a: 01                                        ; local index
000015b: 10                                        ; call
000015c: 07                                        ; function index
000015d: 20                                        ; local.get
000015e: 02                                        ; local index
000015f: 0f                                        ; return
0000160: 0b                                        ; end
0000148: 18                                        ; FIXUP func body size
; function body 1
0000161: 00                                        ; func body size (guess)
0000162: 01                                        ; local decl count
0000163: 01                                        ; local type count
0000164: 7f                                        ; i32
0000165: 41                                        ; i32.const
0000166: 08                                        ; i32 literal
0000167: 41                                        ; i32.const
0000168: c202                                      ; i32 literal
000016a: 10                                        ; call
000016b: 08                                        ; function index
000016c: 21                                        ; local.set
000016d: 00                                        ; local index
000016e: 20                                        ; local.get
000016f: 00                                        ; local index
0000170: 41                                        ; i32.const
0000171: 04                                        ; i32 literal
0000172: 6a                                        ; i32.add
0000173: 41                                        ; i32.const
0000174: 00                                        ; i32 literal
0000175: 41                                        ; i32.const
0000176: 01                                        ; i32 literal
0000177: 6b                                        ; i32.sub
0000178: b2                                        ; f32.convert_i32_s
0000179: 38                                        ; f32.store
000017a: 02                                        ; alignment
000017b: 00                                        ; store offset
000017c: 20                                        ; local.get
000017d: 00                                        ; local index
000017e: 41                                        ; i32.const
000017f: 00                                        ; i32 literal
0000180: 6a                                        ; i32.add
0000181: 41                                        ; i32.const
0000182: 00                                        ; i32 literal
0000183: 41                                        ; i32.const
0000184: 01                                        ; i32 literal
0000185: 6b                                        ; i32.sub
0000186: b2                                        ; f32.convert_i32_s
0000187: 38                                        ; f32.store
0000188: 02                                        ; alignment
0000189: 00                                        ; store offset
000018a: 20                                        ; local.get
000018b: 00                                        ; local index
000018c: 0f                                        ; return
000018d: 0b                                        ; end
0000161: 2c                                        ; FIXUP func body size
; function body 2
000018e: 00                                        ; func body size (guess)
000018f: 01                                        ; local decl count
0000190: 03                                        ; local type count
0000191: 7f                                        ; i32
0000192: 41                                        ; i32.const
0000193: 10                                        ; i32 literal
0000194: 41                                        ; i32.const
0000195: 0d                                        ; i32 literal
0000196: 10                                        ; call
0000197: 08                                        ; function index
0000198: 21                                        ; local.set
0000199: 00                                        ; local index
000019a: 10                                        ; call
000019b: 09                                        ; function index
000019c: 21                                        ; local.set
000019d: 02                                        ; local index
000019e: 20                                        ; local.get
000019f: 00                                        ; local index
00001a0: 41                                        ; i32.const
00001a1: 00                                        ; i32 literal
00001a2: 6a                                        ; i32.add
00001a3: 21                                        ; local.set
00001a4: 01                                        ; local index
00001a5: 20                                        ; local.get
00001a6: 01                                        ; local index
00001a7: 41                                        ; i32.const
00001a8: 00                                        ; i32 literal
00001a9: 6a                                        ; i32.add
00001aa: 20                                        ; local.get
00001ab: 02                                        ; local index
00001ac: 41                                        ; i32.const
00001ad: 00                                        ; i32 literal
00001ae: 6a                                        ; i32.add
00001af: 2a                                        ; f32.load
00001b0: 02                                        ; alignment
00001b1: 00                                        ; load offset
00001b2: 38                                        ; f32.store
00001b3: 02                                        ; alignment
00001b4: 00                                        ; store offset
00001b5: 20                                        ; local.get
00001b6: 01                                        ; local index
00001b7: 41                                        ; i32.const
00001b8: 04                                        ; i32 literal
00001b9: 6a                                        ; i32.add
00001ba: 20                                        ; local.get
00001bb: 02                                        ; local index
00001bc: 41                                        ; i32.const
00001bd: 04                                        ; i32 literal
00001be: 6a                                        ; i32.add
00001bf: 2a                                        ; f32.load
00001c0: 02                                        ; alignment
00001c1: 00                                        ; load offset
00001c2: 38                                        ; f32.store
00001c3: 02                                        ; alignment
00001c4: 00                                        ; store offset
00001c5: 20                                        ; local.get
00001c6: 00                                        ; local index
00001c7: 24                                        ; global.set
00001c8: 0b                                        ; global index
00001c9: 0b                                        ; end
000018e: 3b                                        ; FIXUP func body size
; function body 3
00001ca: 00                                        ; func body size (guess)
00001cb: 00                                        ; local decl count
00001cc: 10                                        ; call
00001cd: 0c                                        ; function index
00001ce: 10                                        ; call
00001cf: 0d                                        ; function index
00001d0: 0b                                        ; end
00001ca: 06                                        ; FIXUP func body size
; function body 4
00001d1: 00                                        ; func body size (guess)
00001d2: 00                                        ; local decl count
00001d3: 0b                                        ; end
00001d1: 02                                        ; FIXUP func body size
; function body 5
00001d4: 00                                        ; func body size (guess)
00001d5: 01                                        ; local decl count
00001d6: 05                                        ; local type count
00001d7: 7f                                        ; i32
00001d8: 41                                        ; i32.const
00001d9: 10                                        ; i32 literal
00001da: 41                                        ; i32.const
00001db: 0d                                        ; i32 literal
00001dc: 10                                        ; call
00001dd: 08                                        ; function index
00001de: 21                                        ; local.set
00001df: 00                                        ; local index
00001e0: 41                                        ; i32.const
00001e1: 08                                        ; i32 literal
00001e2: 41                                        ; i32.const
00001e3: c202                                      ; i32 literal
00001e5: 10                                        ; call
00001e6: 08                                        ; function index
00001e7: 21                                        ; local.set
00001e8: 01                                        ; local index
00001e9: 20                                        ; local.get
00001ea: 01                                        ; local index
00001eb: 41                                        ; i32.const
00001ec: 04                                        ; i32 literal
00001ed: 6a                                        ; i32.add
00001ee: 41                                        ; i32.const
00001ef: e300                                      ; i32 literal
00001f1: b2                                        ; f32.convert_i32_s
00001f2: 38                                        ; f32.store
00001f3: 02                                        ; alignment
00001f4: 00                                        ; store offset
00001f5: 20                                        ; local.get
00001f6: 01                                        ; local index
00001f7: 41                                        ; i32.const
00001f8: 00                                        ; i32 literal
00001f9: 6a                                        ; i32.add
00001fa: 41                                        ; i32.const
00001fb: d800                                      ; i32 literal
00001fd: b2                                        ; f32.convert_i32_s
00001fe: 38                                        ; f32.store
00001ff: 02                                        ; alignment
0000200: 00                                        ; store offset
0000201: 20                                        ; local.get
0000202: 01                                        ; local index
0000203: 21                                        ; local.set
0000204: 03                                        ; local index
0000205: 20                                        ; local.get
0000206: 00                                        ; local index
0000207: 41                                        ; i32.const
0000208: 00                                        ; i32 literal
0000209: 6a                                        ; i32.add
000020a: 21                                        ; local.set
000020b: 02                                        ; local index
000020c: 20                                        ; local.get
000020d: 02                                        ; local index
000020e: 41                                        ; i32.const
000020f: 00                                        ; i32 literal
0000210: 6a                                        ; i32.add
0000211: 20                                        ; local.get
0000212: 03                                        ; local index
0000213: 41                                        ; i32.const
0000214: 00                                        ; i32 literal
0000215: 6a                                        ; i32.add
0000216: 2a                                        ; f32.load
0000217: 02                                        ; alignment
0000218: 00                                        ; load offset
0000219: 38                                        ; f32.store
000021a: 02                                        ; alignment
000021b: 00                                        ; store offset
000021c: 20                                        ; local.get
000021d: 02                                        ; local index
000021e: 41                                        ; i32.const
000021f: 04                                        ; i32 literal
0000220: 6a                                        ; i32.add
0000221: 20                                        ; local.get
0000222: 03                                        ; local index
0000223: 41                                        ; i32.const
0000224: 04                                        ; i32 literal
0000225: 6a                                        ; i32.add
0000226: 2a                                        ; f32.load
0000227: 02                                        ; alignment
0000228: 00                                        ; load offset
0000229: 38                                        ; f32.store
000022a: 02                                        ; alignment
000022b: 00                                        ; store offset
000022c: 20                                        ; local.get
000022d: 00                                        ; local index
000022e: 24                                        ; global.set
000022f: 0b                                        ; global index
0000230: 41                                        ; i32.const
0000231: 08                                        ; i32 literal
0000232: 41                                        ; i32.const
0000233: c202                                      ; i32 literal
0000235: 10                                        ; call
0000236: 08                                        ; function index
0000237: 21                                        ; local.set
0000238: 04                                        ; local index
0000239: 20                                        ; local.get
000023a: 04                                        ; local index
000023b: 41                                        ; i32.const
000023c: 04                                        ; i32 literal
000023d: 6a                                        ; i32.add
000023e: 41                                        ; i32.const
000023f: e400                                      ; i32 literal
0000241: b2                                        ; f32.convert_i32_s
0000242: 38                                        ; f32.store
0000243: 02                                        ; alignment
0000244: 00                                        ; store offset
0000245: 20                                        ; local.get
0000246: 04                                        ; local index
0000247: 41                                        ; i32.const
0000248: 00                                        ; i32 literal
0000249: 6a                                        ; i32.add
000024a: 41                                        ; i32.const
000024b: d086 03                                   ; i32 literal
000024e: b2                                        ; f32.convert_i32_s
000024f: 38                                        ; f32.store
0000250: 02                                        ; alignment
0000251: 00                                        ; store offset
0000252: 23                                        ; global.get
0000253: 0b                                        ; global index
0000254: 41                                        ; i32.const
0000255: 08                                        ; i32 literal
0000256: 6a                                        ; i32.add
0000257: 20                                        ; local.get
0000258: 04                                        ; local index
0000259: 36                                        ; i32.store
000025a: 02                                        ; alignment
000025b: 00                                        ; store offset
000025c: 0b                                        ; end
; move data: [1d5, 25d) -> [1d6, 25e)
00001d4: 8801                                      ; FIXUP func body size
; move data: [147, 25e) -> [148, 25f)
0000146: 9702                                      ; FIXUP section size
; section "Data" (11)
000025f: 0b                                        ; section code
0000260: 00                                        ; section size (guess)
0000261: 02                                        ; num data segments
; data segment header 0
0000262: 00                                      
0000263: 41                                        ; i32.const
0000264: 0d                                        ; i32 literal
0000265: 0b                                        ; end
0000266: b902                                      ; data segment size
; data segment data 0
0000268: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000278: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000288: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000298: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
00002a8: 4f69 4a73 6157 356c 4969 7769 5932 7868 
00002b8: 6333 4e66 6157 5169 4f6a 457a 4c43 4a6d 
00002c8: 6157 5673 5a48 4d69 4f6e 7369 5953 4936 
00002d8: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
00002e8: 5853 7769 636d 4633 496a 6f69 577a 4d79 
00002f8: 4d6c 3177 6232 6c75 6443 4973 496e 5235 
0000308: 6347 5569 4f6a 4577 6653 7769 5969 4936 
0000318: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000328: 5853 7769 636d 4633 496a 6f69 577a 4d79 
0000338: 4d6c 3177 6232 6c75 6443 4973 496e 5235 
0000348: 6347 5569 4f6a 4577 6658 3073 496d 6c7a 
0000358: 5533 5279 6457 4e30 496a 706d 5957 787a 
0000368: 5a53 7769 6257 5630 6147 396b 6379 4936 
0000378: 6533 3073 496d 3568 6257 567a 6347 466a 
0000388: 5a53 4936 496d 356c 6333 526c 5a46 5235 
0000398: 6347 567a 496e 303d 00                    ; data segment data
; data segment header 1
00003a1: 00                                      
00003a2: 41                                        ; i32.const
00003a3: c202                                      ; i32 literal
00003a5: 0b                                        ; end
00003a6: a502                                      ; data segment size
; data segment data 1
00003a8: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00003b8: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00003c8: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00003d8: 4f6a 4d79 4d6e 3073 496d 4e73 5958 4e7a 
00003e8: 496a 6f69 6347 3970 626e 5169 4c43 4a6a 
00003f8: 6247 467a 6331 3970 5a43 4936 4d7a 4979 
0000408: 4c43 4a6d 6157 5673 5a48 4d69 4f6e 7369 
0000418: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000428: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000438: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0000448: 4d33 3073 496e 6769 4f6e 7369 5a32 5675 
0000458: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000468: 6479 4936 496d 597a 4d69 4973 496e 5235 
0000478: 6347 5569 4f6a 4e39 6653 7769 6158 4e54 
0000488: 6448 4a31 5933 5169 4f6e 5279 6457 5573 
0000498: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00004a8: 4c43 4a75 5957 316c 6333 4268 5932 5569 
00004b8: 4f69 4a75 5a58 4e30 5a57 5255 6558 426c 
00004c8: 6379 4a39 00                              ; data segment data
; move data: [261, 4cd) -> [262, 4ce)
0000260: ec04                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0122 0760 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 027f 7f01 7f60 0001 7f60 0000 0276 0904 
0000030: 4d61 7468 0370 6f77 0000 044d 6174 6804 
0000040: 7371 7274 0001 044d 6174 6803 6578 7000 
0000050: 0104 4d61 7468 0363 6f73 0001 044d 6174 
0000060: 6806 7261 6e64 6f6d 0002 044d 6174 6804 
0000070: 6365 696c 0001 044d 6174 6805 666c 6f6f 
0000080: 7200 0102 4743 0961 6464 4f62 6a65 6374 
0000090: 0003 0365 6e76 0a62 7974 6563 6875 6e6b 
00000a0: 7302 0001 0307 0604 0506 0606 0606 7a0c 
00000b0: 7f01 41e7 040b 7c01 4469 5714 8b0a bf05 
00000c0: 400b 7c01 4418 2d44 54fb 2109 400b 7f01 
00000d0: 41ff ffff ff07 0b7e 0142 ffff ffff ffff 
00000e0: ffff ff00 0b7d 0143 ffff 7f7f 0b7c 0144 
00000f0: ffff ffff ffff ef7f 0b7f 0141 8080 8080 
0000100: 780b 7e01 4280 8080 8080 8080 8080 7f0b 
0000110: 7d01 43ff ff7f ff0b 7c01 44ff ffff ffff 
0000120: ffef ff0b 7f01 4100 0b07 1701 136e 6573 
0000130: 7465 6454 6573 742e 636f 7079 7465 7374 
0000140: 000a 0801 0b0a 9702 0618 0101 7f23 0021 
0000150: 0220 0220 006a 2400 2002 2001 1007 2002 
0000160: 0f0b 2c01 017f 4108 41c2 0210 0821 0020 
0000170: 0041 046a 4100 4101 6bb2 3802 0020 0041 
0000180: 006a 4100 4101 6bb2 3802 0020 000f 0b3b 
0000190: 0103 7f41 1041 0d10 0821 0010 0921 0220 
00001a0: 0041 006a 2101 2001 4100 6a20 0241 006a 
00001b0: 2a02 0038 0200 2001 4104 6a20 0241 046a 
00001c0: 2a02 0038 0200 2000 240b 0b06 0010 0c10 
00001d0: 0d0b 0200 0b88 0101 057f 4110 410d 1008 
00001e0: 2100 4108 41c2 0210 0821 0120 0141 046a 
00001f0: 41e3 00b2 3802 0020 0141 006a 41d8 00b2 
0000200: 3802 0020 0121 0320 0041 006a 2102 2002 
0000210: 4100 6a20 0341 006a 2a02 0038 0200 2002 
0000220: 4104 6a20 0341 046a 2a02 0038 0200 2000 
0000230: 240b 4108 41c2 0210 0821 0420 0441 046a 
0000240: 41e4 00b2 3802 0020 0441 006a 41d0 8603 
0000250: b238 0200 230b 4108 6a20 0436 0200 0b0b 
0000260: ec04 0200 410d 0bb9 0265 794a 6a62 3231 
0000270: 745a 5735 3049 6a70 7564 5778 734c 434a 
0000280: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
0000290: 6956 6d46 7364 5755 694f 6a45 7a66 5377 
00002a0: 6959 3278 6863 334d 694f 694a 7361 5735 
00002b0: 6c49 6977 6959 3278 6863 334e 6661 5751 
00002c0: 694f 6a45 7a4c 434a 6d61 5756 735a 484d 
00002d0: 694f 6e73 6959 5349 3665 794a 6e5a 5735 
00002e0: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
00002f0: 3349 6a6f 6957 7a4d 794d 6c31 7762 326c 
0000300: 7564 4349 7349 6e52 3563 4755 694f 6a45 
0000310: 7766 5377 6959 6949 3665 794a 6e5a 5735 
0000320: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
0000330: 3349 6a6f 6957 7a4d 794d 6c31 7762 326c 
0000340: 7564 4349 7349 6e52 3563 4755 694f 6a45 
0000350: 7766 5830 7349 6d6c 7a55 3352 7964 574e 
0000360: 3049 6a70 6d59 5778 7a5a 5377 6962 5756 
0000370: 3061 4739 6b63 7949 3665 3330 7349 6d35 
0000380: 6862 5756 7a63 4746 6a5a 5349 3649 6d35 
0000390: 6c63 3352 6c5a 4652 3563 4756 7a49 6e30 
00003a0: 3d00 0041 c202 0ba5 0265 794a 6a62 3231 
00003b0: 745a 5735 3049 6a70 7564 5778 734c 434a 
00003c0: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
00003d0: 6956 6d46 7364 5755 694f 6a4d 794d 6e30 
00003e0: 7349 6d4e 7359 584e 7a49 6a6f 6963 4739 
00003f0: 7062 6e51 694c 434a 6a62 4746 7a63 3139 
0000400: 705a 4349 364d 7a49 794c 434a 6d61 5756 
0000410: 735a 484d 694f 6e73 6965 5349 3665 794a 
0000420: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
0000430: 6963 6d46 3349 6a6f 695a 6a4d 7949 6977 
0000440: 6964 486c 775a 5349 364d 3330 7349 6e67 
0000450: 694f 6e73 695a 3256 755a 584a 7059 7949 
0000460: 3657 3130 7349 6e4a 6864 7949 3649 6d59 
0000470: 7a4d 6949 7349 6e52 3563 4755 694f 6a4e 
0000480: 3966 5377 6961 584e 5464 484a 3159 3351 
0000490: 694f 6e52 7964 5755 7349 6d31 6c64 4768 
00004a0: 765a 484d 694f 6e74 394c 434a 7559 5731 
00004b0: 6c63 3342 6859 3255 694f 694a 755a 584e 
00004c0: 305a 5752 5565 5842 6c63 794a 3900      
