0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
; type 4
0000021: 60                                        ; func
0000022: 00                                        ; num params
0000023: 00                                        ; num results
0000009: 1a                                        ; FIXUP section size
; section "Import" (2)
0000024: 02                                        ; section code
0000025: 00                                        ; section size (guess)
0000026: 05                                        ; num imports
; import header 0
0000027: 06                                        ; string length
0000028: 7374 7269 6e67                           string  ; import module name
000002e: 07                                        ; string length
000002f: 7265 706c 6163 65                        replace  ; import field name
0000036: 00                                        ; import kind
0000037: 00                                        ; import signature index
; import header 1
0000038: 06                                        ; string length
0000039: 7374 7269 6e67                           string  ; import module name
000003f: 03                                        ; string length
0000040: 6164 64                                  add  ; import field name
0000043: 00                                        ; import kind
0000044: 01                                        ; import signature index
; import header 2
0000045: 06                                        ; string length
0000046: 7374 7269 6e67                           string  ; import module name
000004c: 06                                        ; string length
000004d: 6c65 6e67 7468                           length  ; import field name
0000053: 00                                        ; import kind
0000054: 02                                        ; import signature index
; import header 3
0000055: 06                                        ; string length
0000056: 7374 7269 6e67                           string  ; import module name
000005c: 07                                        ; string length
000005d: 696e 6465 784f 66                        indexOf  ; import field name
0000064: 00                                        ; import kind
0000065: 01                                        ; import signature index
; import header 4
0000066: 03                                        ; string length
0000067: 656e 76                                  env  ; import module name
000006a: 0a                                        ; string length
000006b: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000075: 02                                        ; import kind
0000076: 00                                        ; limits: flags
0000077: 01                                        ; limits: initial
0000025: 52                                        ; FIXUP section size
; section "Function" (3)
0000078: 03                                        ; section code
0000079: 00                                        ; section size (guess)
000007a: 05                                        ; num functions
000007b: 03                                        ; function 0 signature index
000007c: 04                                        ; function 1 signature index
000007d: 04                                        ; function 2 signature index
000007e: 04                                        ; function 3 signature index
000007f: 04                                        ; function 4 signature index
0000079: 06                                        ; FIXUP section size
; section "Global" (6)
0000080: 06                                        ; section code
0000081: 00                                        ; section size (guess)
0000082: 04                                        ; num globals
0000083: 7f                                        ; i32
0000084: 01                                        ; global mutability
0000085: 41                                        ; i32.const
0000086: e203                                      ; i32 literal
0000088: 0b                                        ; end
0000089: 7f                                        ; i32
000008a: 01                                        ; global mutability
000008b: 41                                        ; i32.const
000008c: 00                                        ; i32 literal
000008d: 0b                                        ; end
000008e: 7f                                        ; i32
000008f: 01                                        ; global mutability
0000090: 41                                        ; i32.const
0000091: d003                                      ; i32 literal
0000093: 0b                                        ; end
0000094: 7f                                        ; i32
0000095: 01                                        ; global mutability
0000096: 41                                        ; i32.const
0000097: 00                                        ; i32 literal
0000098: 0b                                        ; end
0000081: 17                                        ; FIXUP section size
; section "Export" (7)
0000099: 07                                        ; section code
000009a: 00                                        ; section size (guess)
000009b: 01                                        ; num exports
000009c: 1e                                        ; string length
000009d: 636c 6173 7341 7272 6179 5465 7374 2e69  classArrayTest.i
00000ad: 6e69 7469 616c 697a 6541 7272 6179       nitializeArray  ; export name
00000bb: 00                                        ; export kind
00000bc: 05                                        ; export func index
000009a: 22                                        ; FIXUP section size
; section "Start" (8)
00000bd: 08                                        ; section code
00000be: 00                                        ; section size (guess)
00000bf: 06                                        ; start func index
00000be: 01                                        ; FIXUP section size
; section "Code" (10)
00000c0: 0a                                        ; section code
00000c1: 00                                        ; section size (guess)
00000c2: 05                                        ; num functions
; function body 0
00000c3: 00                                        ; func body size (guess)
00000c4: 01                                        ; local decl count
00000c5: 01                                        ; local type count
00000c6: 7f                                        ; i32
00000c7: 23                                        ; global.get
00000c8: 00                                        ; global index
00000c9: 21                                        ; local.set
00000ca: 00                                        ; local index
00000cb: 20                                        ; local.get
00000cc: 00                                        ; local index
00000cd: 41                                        ; i32.const
00000ce: 18                                        ; i32 literal
00000cf: 6a                                        ; i32.add
00000d0: 24                                        ; global.set
00000d1: 00                                        ; global index
00000d2: 20                                        ; local.get
00000d3: 00                                        ; local index
00000d4: 41                                        ; i32.const
00000d5: 00                                        ; i32 literal
00000d6: 6a                                        ; i32.add
00000d7: 41                                        ; i32.const
00000d8: 01                                        ; i32 literal
00000d9: b2                                        ; f32.convert_i32_s
00000da: 38                                        ; f32.store
00000db: 02                                        ; alignment
00000dc: 00                                        ; store offset
00000dd: 20                                        ; local.get
00000de: 00                                        ; local index
00000df: 41                                        ; i32.const
00000e0: 0c                                        ; i32 literal
00000e1: 6a                                        ; i32.add
00000e2: 20                                        ; local.get
00000e3: 00                                        ; local index
00000e4: 41                                        ; i32.const
00000e5: 00                                        ; i32 literal
00000e6: 6a                                        ; i32.add
00000e7: 2a                                        ; f32.load
00000e8: 02                                        ; alignment
00000e9: 00                                        ; load offset
00000ea: 20                                        ; local.get
00000eb: 00                                        ; local index
00000ec: 41                                        ; i32.const
00000ed: 04                                        ; i32 literal
00000ee: 6a                                        ; i32.add
00000ef: 2a                                        ; f32.load
00000f0: 02                                        ; alignment
00000f1: 00                                        ; load offset
00000f2: 94                                        ; f32.mul
00000f3: 20                                        ; local.get
00000f4: 00                                        ; local index
00000f5: 41                                        ; i32.const
00000f6: 08                                        ; i32 literal
00000f7: 6a                                        ; i32.add
00000f8: 2a                                        ; f32.load
00000f9: 02                                        ; alignment
00000fa: 00                                        ; load offset
00000fb: 94                                        ; f32.mul
00000fc: bb                                        ; f64.promote_f32
00000fd: 39                                        ; f64.store
00000fe: 03                                        ; alignment
00000ff: 00                                        ; store offset
0000100: 20                                        ; local.get
0000101: 00                                        ; local index
0000102: 41                                        ; i32.const
0000103: 14                                        ; i32 literal
0000104: 6a                                        ; i32.add
0000105: 41                                        ; i32.const
0000106: d703                                      ; i32 literal
0000108: 36                                        ; i32.store
0000109: 02                                        ; alignment
000010a: 00                                        ; store offset
000010b: 20                                        ; local.get
000010c: 00                                        ; local index
000010d: 41                                        ; i32.const
000010e: 04                                        ; i32 literal
000010f: 6a                                        ; i32.add
0000110: 43                                        ; f32.const
0000111: 0000 0000                                 ; f32 literal
0000115: 38                                        ; f32.store
0000116: 02                                        ; alignment
0000117: 00                                        ; store offset
0000118: 20                                        ; local.get
0000119: 00                                        ; local index
000011a: 41                                        ; i32.const
000011b: 08                                        ; i32 literal
000011c: 6a                                        ; i32.add
000011d: 43                                        ; f32.const
000011e: 0000 0000                                 ; f32 literal
0000122: 38                                        ; f32.store
0000123: 02                                        ; alignment
0000124: 00                                        ; store offset
0000125: 20                                        ; local.get
0000126: 00                                        ; local index
0000127: 0f                                        ; return
0000128: 0b                                        ; end
00000c3: 65                                        ; FIXUP func body size
; function body 1
0000129: 00                                        ; func body size (guess)
000012a: 01                                        ; local decl count
000012b: 04                                        ; local type count
000012c: 7f                                        ; i32
000012d: 23                                        ; global.get
000012e: 00                                        ; global index
000012f: 21                                        ; local.set
0000130: 00                                        ; local index
0000131: 20                                        ; local.get
0000132: 00                                        ; local index
0000133: 41                                        ; i32.const
0000134: 18                                        ; i32 literal
0000135: 6a                                        ; i32.add
0000136: 24                                        ; global.set
0000137: 00                                        ; global index
0000138: 20                                        ; local.get
0000139: 00                                        ; local index
000013a: 41                                        ; i32.const
000013b: 0c                                        ; i32 literal
000013c: 6a                                        ; i32.add
000013d: 41                                        ; i32.const
000013e: e400                                      ; i32 literal
0000140: b7                                        ; f64.convert_i32_s
0000141: 39                                        ; f64.store
0000142: 03                                        ; alignment
0000143: 00                                        ; store offset
0000144: 20                                        ; local.get
0000145: 00                                        ; local index
0000146: 41                                        ; i32.const
0000147: 00                                        ; i32 literal
0000148: 6a                                        ; i32.add
0000149: 43                                        ; f32.const
000014a: 0000 0000                                 ; f32 literal
000014e: 38                                        ; f32.store
000014f: 02                                        ; alignment
0000150: 00                                        ; store offset
0000151: 20                                        ; local.get
0000152: 00                                        ; local index
0000153: 41                                        ; i32.const
0000154: 04                                        ; i32 literal
0000155: 6a                                        ; i32.add
0000156: 43                                        ; f32.const
0000157: 0000 0000                                 ; f32 literal
000015b: 38                                        ; f32.store
000015c: 02                                        ; alignment
000015d: 00                                        ; store offset
000015e: 20                                        ; local.get
000015f: 00                                        ; local index
0000160: 41                                        ; i32.const
0000161: 08                                        ; i32 literal
0000162: 6a                                        ; i32.add
0000163: 43                                        ; f32.const
0000164: 0000 0000                                 ; f32 literal
0000168: 38                                        ; f32.store
0000169: 02                                        ; alignment
000016a: 00                                        ; store offset
000016b: 20                                        ; local.get
000016c: 00                                        ; local index
000016d: 41                                        ; i32.const
000016e: 14                                        ; i32 literal
000016f: 6a                                        ; i32.add
0000170: 41                                        ; i32.const
0000171: 0b                                        ; i32 literal
0000172: 36                                        ; i32.store
0000173: 02                                        ; alignment
0000174: 00                                        ; store offset
0000175: 20                                        ; local.get
0000176: 00                                        ; local index
0000177: 21                                        ; local.set
0000178: 01                                        ; local index
0000179: 23                                        ; global.get
000017a: 00                                        ; global index
000017b: 41                                        ; i32.const
000017c: 0f                                        ; i32 literal
000017d: 36                                        ; i32.store
000017e: 02                                        ; alignment
000017f: 00                                        ; store offset
0000180: 23                                        ; global.get
0000181: 00                                        ; global index
0000182: 41                                        ; i32.const
0000183: 04                                        ; i32 literal
0000184: 6a                                        ; i32.add
0000185: 41                                        ; i32.const
0000186: 03                                        ; i32 literal
0000187: 36                                        ; i32.store
0000188: 02                                        ; alignment
0000189: 00                                        ; store offset
000018a: 23                                        ; global.get
000018b: 00                                        ; global index
000018c: 41                                        ; i32.const
000018d: 08                                        ; i32 literal
000018e: 6a                                        ; i32.add
000018f: 21                                        ; local.set
0000190: 03                                        ; local index
0000191: 20                                        ; local.get
0000192: 03                                        ; local index
0000193: 41                                        ; i32.const
0000194: 78                                        ; i32 literal
0000195: 6a                                        ; i32.add
0000196: 41                                        ; i32.const
0000197: 08                                        ; i32 literal
0000198: 41                                        ; i32.const
0000199: 03                                        ; i32 literal
000019a: 41                                        ; i32.const
000019b: 04                                        ; i32 literal
000019c: 6c                                        ; i32.mul
000019d: 6a                                        ; i32.add
000019e: 6a                                        ; i32.add
000019f: 24                                        ; global.set
00001a0: 00                                        ; global index
00001a1: 23                                        ; global.get
00001a2: 00                                        ; global index
00001a3: 21                                        ; local.set
00001a4: 02                                        ; local index
00001a5: 20                                        ; local.get
00001a6: 02                                        ; local index
00001a7: 41                                        ; i32.const
00001a8: 18                                        ; i32 literal
00001a9: 6a                                        ; i32.add
00001aa: 24                                        ; global.set
00001ab: 00                                        ; global index
00001ac: 20                                        ; local.get
00001ad: 02                                        ; local index
00001ae: 41                                        ; i32.const
00001af: 00                                        ; i32 literal
00001b0: 6a                                        ; i32.add
00001b1: 41                                        ; i32.const
00001b2: 01                                        ; i32 literal
00001b3: b2                                        ; f32.convert_i32_s
00001b4: 38                                        ; f32.store
00001b5: 02                                        ; alignment
00001b6: 00                                        ; store offset
00001b7: 20                                        ; local.get
00001b8: 02                                        ; local index
00001b9: 41                                        ; i32.const
00001ba: 04                                        ; i32 literal
00001bb: 6a                                        ; i32.add
00001bc: 20                                        ; local.get
00001bd: 02                                        ; local index
00001be: 41                                        ; i32.const
00001bf: 00                                        ; i32 literal
00001c0: 6a                                        ; i32.add
00001c1: 2a                                        ; f32.load
00001c2: 02                                        ; alignment
00001c3: 00                                        ; load offset
00001c4: 38                                        ; f32.store
00001c5: 02                                        ; alignment
00001c6: 00                                        ; store offset
00001c7: 20                                        ; local.get
00001c8: 02                                        ; local index
00001c9: 41                                        ; i32.const
00001ca: 08                                        ; i32 literal
00001cb: 6a                                        ; i32.add
00001cc: 20                                        ; local.get
00001cd: 02                                        ; local index
00001ce: 41                                        ; i32.const
00001cf: 00                                        ; i32 literal
00001d0: 6a                                        ; i32.add
00001d1: 2a                                        ; f32.load
00001d2: 02                                        ; alignment
00001d3: 00                                        ; load offset
00001d4: 38                                        ; f32.store
00001d5: 02                                        ; alignment
00001d6: 00                                        ; store offset
00001d7: 20                                        ; local.get
00001d8: 02                                        ; local index
00001d9: 41                                        ; i32.const
00001da: 0c                                        ; i32 literal
00001db: 6a                                        ; i32.add
00001dc: 44                                        ; f64.const
00001dd: 0000 0000 0038 8f40                       ; f64 literal
00001e5: 39                                        ; f64.store
00001e6: 03                                        ; alignment
00001e7: 00                                        ; store offset
00001e8: 20                                        ; local.get
00001e9: 02                                        ; local index
00001ea: 41                                        ; i32.const
00001eb: 14                                        ; i32 literal
00001ec: 6a                                        ; i32.add
00001ed: 41                                        ; i32.const
00001ee: 0b                                        ; i32 literal
00001ef: 36                                        ; i32.store
00001f0: 02                                        ; alignment
00001f1: 00                                        ; store offset
00001f2: 20                                        ; local.get
00001f3: 03                                        ; local index
00001f4: 41                                        ; i32.const
00001f5: 00                                        ; i32 literal
00001f6: 6a                                        ; i32.add
00001f7: 20                                        ; local.get
00001f8: 02                                        ; local index
00001f9: 36                                        ; i32.store
00001fa: 02                                        ; alignment
00001fb: 00                                        ; store offset
00001fc: 20                                        ; local.get
00001fd: 03                                        ; local index
00001fe: 41                                        ; i32.const
00001ff: 04                                        ; i32 literal
0000200: 6a                                        ; i32.add
0000201: 20                                        ; local.get
0000202: 01                                        ; local index
0000203: 36                                        ; i32.store
0000204: 02                                        ; alignment
0000205: 00                                        ; store offset
0000206: 20                                        ; local.get
0000207: 03                                        ; local index
0000208: 41                                        ; i32.const
0000209: 08                                        ; i32 literal
000020a: 6a                                        ; i32.add
000020b: 10                                        ; call
000020c: 04                                        ; function index
000020d: 36                                        ; i32.store
000020e: 02                                        ; alignment
000020f: 00                                        ; store offset
0000210: 20                                        ; local.get
0000211: 03                                        ; local index
0000212: 41                                        ; i32.const
0000213: 78                                        ; i32 literal
0000214: 6a                                        ; i32.add
0000215: 24                                        ; global.set
0000216: 03                                        ; global index
0000217: 0b                                        ; end
; move data: [12a, 218) -> [12b, 219)
0000129: ee01                                      ; FIXUP func body size
; function body 2
0000219: 00                                        ; func body size (guess)
000021a: 00                                        ; local decl count
000021b: 10                                        ; call
000021c: 07                                        ; function index
000021d: 10                                        ; call
000021e: 08                                        ; function index
000021f: 0b                                        ; end
0000219: 06                                        ; FIXUP func body size
; function body 3
0000220: 00                                        ; func body size (guess)
0000221: 00                                        ; local decl count
0000222: 0b                                        ; end
0000220: 02                                        ; FIXUP func body size
; function body 4
0000223: 00                                        ; func body size (guess)
0000224: 01                                        ; local decl count
0000225: 01                                        ; local type count
0000226: 7f                                        ; i32
0000227: 23                                        ; global.get
0000228: 00                                        ; global index
0000229: 21                                        ; local.set
000022a: 00                                        ; local index
000022b: 20                                        ; local.get
000022c: 00                                        ; local index
000022d: 41                                        ; i32.const
000022e: 18                                        ; i32 literal
000022f: 6a                                        ; i32.add
0000230: 24                                        ; global.set
0000231: 00                                        ; global index
0000232: 20                                        ; local.get
0000233: 00                                        ; local index
0000234: 41                                        ; i32.const
0000235: 00                                        ; i32 literal
0000236: 6a                                        ; i32.add
0000237: 41                                        ; i32.const
0000238: 01                                        ; i32 literal
0000239: b2                                        ; f32.convert_i32_s
000023a: 38                                        ; f32.store
000023b: 02                                        ; alignment
000023c: 00                                        ; store offset
000023d: 20                                        ; local.get
000023e: 00                                        ; local index
000023f: 41                                        ; i32.const
0000240: 04                                        ; i32 literal
0000241: 6a                                        ; i32.add
0000242: 20                                        ; local.get
0000243: 00                                        ; local index
0000244: 41                                        ; i32.const
0000245: 00                                        ; i32 literal
0000246: 6a                                        ; i32.add
0000247: 2a                                        ; f32.load
0000248: 02                                        ; alignment
0000249: 00                                        ; load offset
000024a: 38                                        ; f32.store
000024b: 02                                        ; alignment
000024c: 00                                        ; store offset
000024d: 20                                        ; local.get
000024e: 00                                        ; local index
000024f: 41                                        ; i32.const
0000250: 08                                        ; i32 literal
0000251: 6a                                        ; i32.add
0000252: 20                                        ; local.get
0000253: 00                                        ; local index
0000254: 41                                        ; i32.const
0000255: 00                                        ; i32 literal
0000256: 6a                                        ; i32.add
0000257: 2a                                        ; f32.load
0000258: 02                                        ; alignment
0000259: 00                                        ; load offset
000025a: 20                                        ; local.get
000025b: 00                                        ; local index
000025c: 41                                        ; i32.const
000025d: 04                                        ; i32 literal
000025e: 6a                                        ; i32.add
000025f: 2a                                        ; f32.load
0000260: 02                                        ; alignment
0000261: 00                                        ; load offset
0000262: 92                                        ; f32.add
0000263: 38                                        ; f32.store
0000264: 02                                        ; alignment
0000265: 00                                        ; store offset
0000266: 20                                        ; local.get
0000267: 00                                        ; local index
0000268: 41                                        ; i32.const
0000269: 0c                                        ; i32 literal
000026a: 6a                                        ; i32.add
000026b: 44                                        ; f64.const
000026c: 0000 0000 0038 8f40                       ; f64 literal
0000274: 39                                        ; f64.store
0000275: 03                                        ; alignment
0000276: 00                                        ; store offset
0000277: 20                                        ; local.get
0000278: 00                                        ; local index
0000279: 41                                        ; i32.const
000027a: 14                                        ; i32 literal
000027b: 6a                                        ; i32.add
000027c: 41                                        ; i32.const
000027d: 0b                                        ; i32 literal
000027e: 36                                        ; i32.store
000027f: 02                                        ; alignment
0000280: 00                                        ; store offset
0000281: 20                                        ; local.get
0000282: 00                                        ; local index
0000283: 24                                        ; global.set
0000284: 01                                        ; global index
0000285: 0b                                        ; end
0000223: 62                                        ; FIXUP func body size
; move data: [c2, 286) -> [c3, 287)
00000c1: c403                                      ; FIXUP section size
; section "Data" (11)
0000287: 0b                                        ; section code
0000288: 00                                        ; section size (guess)
0000289: 04                                        ; num data segments
; data segment header 0
000028a: 00                                      
000028b: 41                                        ; i32.const
000028c: 0b                                        ; i32 literal
000028d: 0b                                        ; end
000028e: 04                                        ; data segment size
; data segment data 0
000028f: 4142 4300                                 ; data segment data
; data segment header 1
0000293: 00                                      
0000294: 41                                        ; i32.const
0000295: d003                                      ; i32 literal
0000297: 0b                                        ; end
0000298: 07                                        ; data segment size
; data segment data 1
0000299: 5353 5353 5353 00                         ; data segment data
; data segment header 2
00002a0: 00                                      
00002a1: 41                                        ; i32.const
00002a2: d703                                      ; i32 literal
00002a4: 0b                                        ; end
00002a5: 0b                                        ; data segment size
; data segment data 2
00002a6: 4141 4141 4141 4141 4141 00               ; data segment data
; data segment header 3
00002b1: 00                                      
00002b2: 41                                        ; i32.const
00002b3: 0f                                        ; i32 literal
00002b4: 0b                                        ; end
00002b5: c103                                      ; data segment size
; data segment data 3
00002b7: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
00002c7: 4f6e 7369 566d 4673 6457 5569 4f6a 4531 
00002d7: 6653 7769 5932 7868 6333 4d69 4f69 4a6a 
00002e7: 6158 4a6a 6247 5569 4c43 4a6a 6247 467a 
00002f7: 6331 3970 5a43 4936 4d54 5573 496d 5a70 
0000307: 5a57 786b 6379 4936 6579 4a34 496a 7037 
0000317: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000327: 4c43 4a79 5958 6369 4f69 4a6d 4d7a 4969 
0000337: 4c43 4a30 6558 426c 496a 6f7a 6653 7769 
0000347: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000357: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000367: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
0000377: 4d33 3073 496e 6f69 4f6e 7369 5a32 5675 
0000387: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000397: 6479 4936 496d 597a 4d69 4973 496e 5235 
00003a7: 6347 5569 4f6a 4e39 4c43 4a79 5957 5270 
00003b7: 6458 4d69 4f6e 7369 5a32 5675 5a58 4a70 
00003c7: 5979 4936 5731 3073 496e 4a68 6479 4936 
00003d7: 496d 5932 4e43 4973 496e 5235 6347 5569 
00003e7: 4f6a 5239 4c43 4a70 5a43 4936 6579 4a6e 
00003f7: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000407: 636d 4633 496a 6f69 6333 5279 6157 356e 
0000417: 4969 7769 6448 6c77 5a53 4936 4e58 3139 
0000427: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0000437: 5a6d 4673 6332 5573 496d 316c 6447 6876 
0000447: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
0000457: 6333 4268 5932 5569 4f69 4a30 5a58 4e30 
0000467: 546d 4674 5a58 4e77 5957 4e6c 496e 303d 
0000477: 00                                        ; data segment data
; move data: [289, 478) -> [28a, 479)
0000288: ef03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011a 0560 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 0001 
0000020: 7f60 0000 0252 0506 7374 7269 6e67 0772 
0000030: 6570 6c61 6365 0000 0673 7472 696e 6703 
0000040: 6164 6400 0106 7374 7269 6e67 066c 656e 
0000050: 6774 6800 0206 7374 7269 6e67 0769 6e64 
0000060: 6578 4f66 0001 0365 6e76 0a62 7974 6563 
0000070: 6875 6e6b 7302 0001 0306 0503 0404 0404 
0000080: 0617 047f 0141 e203 0b7f 0141 000b 7f01 
0000090: 41d0 030b 7f01 4100 0b07 2201 1e63 6c61 
00000a0: 7373 4172 7261 7954 6573 742e 696e 6974 
00000b0: 6961 6c69 7a65 4172 7261 7900 0508 0106 
00000c0: 0ac4 0305 6501 017f 2300 2100 2000 4118 
00000d0: 6a24 0020 0041 006a 4101 b238 0200 2000 
00000e0: 410c 6a20 0041 006a 2a02 0020 0041 046a 
00000f0: 2a02 0094 2000 4108 6a2a 0200 94bb 3903 
0000100: 0020 0041 146a 41d7 0336 0200 2000 4104 
0000110: 6a43 0000 0000 3802 0020 0041 086a 4300 
0000120: 0000 0038 0200 2000 0f0b ee01 0104 7f23 
0000130: 0021 0020 0041 186a 2400 2000 410c 6a41 
0000140: e400 b739 0300 2000 4100 6a43 0000 0000 
0000150: 3802 0020 0041 046a 4300 0000 0038 0200 
0000160: 2000 4108 6a43 0000 0000 3802 0020 0041 
0000170: 146a 410b 3602 0020 0021 0123 0041 0f36 
0000180: 0200 2300 4104 6a41 0336 0200 2300 4108 
0000190: 6a21 0320 0341 786a 4108 4103 4104 6c6a 
00001a0: 6a24 0023 0021 0220 0241 186a 2400 2002 
00001b0: 4100 6a41 01b2 3802 0020 0241 046a 2002 
00001c0: 4100 6a2a 0200 3802 0020 0241 086a 2002 
00001d0: 4100 6a2a 0200 3802 0020 0241 0c6a 4400 
00001e0: 0000 0000 388f 4039 0300 2002 4114 6a41 
00001f0: 0b36 0200 2003 4100 6a20 0236 0200 2003 
0000200: 4104 6a20 0136 0200 2003 4108 6a10 0436 
0000210: 0200 2003 4178 6a24 030b 0600 1007 1008 
0000220: 0b02 000b 6201 017f 2300 2100 2000 4118 
0000230: 6a24 0020 0041 006a 4101 b238 0200 2000 
0000240: 4104 6a20 0041 006a 2a02 0038 0200 2000 
0000250: 4108 6a20 0041 006a 2a02 0020 0041 046a 
0000260: 2a02 0092 3802 0020 0041 0c6a 4400 0000 
0000270: 0000 388f 4039 0300 2000 4114 6a41 0b36 
0000280: 0200 2000 2401 0b0b ef03 0400 410b 0b04 
0000290: 4142 4300 0041 d003 0b07 5353 5353 5353 
00002a0: 0000 41d7 030b 0b41 4141 4141 4141 4141 
00002b0: 4100 0041 0f0b c103 6579 4a74 5a57 3176 
00002c0: 636e 6c51 6448 4969 4f6e 7369 566d 4673 
00002d0: 6457 5569 4f6a 4531 6653 7769 5932 7868 
00002e0: 6333 4d69 4f69 4a6a 6158 4a6a 6247 5569 
00002f0: 4c43 4a6a 6247 467a 6331 3970 5a43 4936 
0000300: 4d54 5573 496d 5a70 5a57 786b 6379 4936 
0000310: 6579 4a34 496a 7037 496d 646c 626d 5679 
0000320: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000330: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000340: 496a 6f7a 6653 7769 6553 4936 6579 4a6e 
0000350: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000360: 636d 4633 496a 6f69 5a6a 4d79 4969 7769 
0000370: 6448 6c77 5a53 4936 4d33 3073 496e 6f69 
0000380: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000390: 5731 3073 496e 4a68 6479 4936 496d 597a 
00003a0: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
00003b0: 4c43 4a79 5957 5270 6458 4d69 4f6e 7369 
00003c0: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00003d0: 496e 4a68 6479 4936 496d 5932 4e43 4973 
00003e0: 496e 5235 6347 5569 4f6a 5239 4c43 4a70 
00003f0: 5a43 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000400: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000410: 6333 5279 6157 356e 4969 7769 6448 6c77 
0000420: 5a53 4936 4e58 3139 4c43 4a70 6331 4e30 
0000430: 636e 566a 6443 4936 5a6d 4673 6332 5573 
0000440: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
0000450: 4c43 4a75 5957 316c 6333 4268 5932 5569 
0000460: 4f69 4a30 5a58 4e30 546d 4674 5a58 4e77 
0000470: 5957 4e6c 496e 303d 00                  
