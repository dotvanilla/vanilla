0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 00                                        ; num results
; type 4
0000020: 60                                        ; func
0000021: 00                                        ; num params
0000022: 01                                        ; num results
0000023: 7f                                        ; i32
0000009: 1a                                        ; FIXUP section size
; section "Import" (2)
0000024: 02                                        ; section code
0000025: 00                                        ; section size (guess)
0000026: 05                                        ; num imports
; import header 0
0000027: 06                                        ; string length
0000028: 7374 7269 6e67                           string  ; import module name
000002e: 07                                        ; string length
000002f: 7265 706c 6163 65                        replace  ; import field name
0000036: 00                                        ; import kind
0000037: 00                                        ; import signature index
; import header 1
0000038: 06                                        ; string length
0000039: 7374 7269 6e67                           string  ; import module name
000003f: 03                                        ; string length
0000040: 6164 64                                  add  ; import field name
0000043: 00                                        ; import kind
0000044: 01                                        ; import signature index
; import header 2
0000045: 06                                        ; string length
0000046: 7374 7269 6e67                           string  ; import module name
000004c: 06                                        ; string length
000004d: 6c65 6e67 7468                           length  ; import field name
0000053: 00                                        ; import kind
0000054: 02                                        ; import signature index
; import header 3
0000055: 06                                        ; string length
0000056: 7374 7269 6e67                           string  ; import module name
000005c: 07                                        ; string length
000005d: 696e 6465 784f 66                        indexOf  ; import field name
0000064: 00                                        ; import kind
0000065: 01                                        ; import signature index
; import header 4
0000066: 03                                        ; string length
0000067: 656e 76                                  env  ; import module name
000006a: 0a                                        ; string length
000006b: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000075: 02                                        ; import kind
0000076: 00                                        ; limits: flags
0000077: 01                                        ; limits: initial
0000025: 52                                        ; FIXUP section size
; section "Function" (3)
0000078: 03                                        ; section code
0000079: 00                                        ; section size (guess)
000007a: 03                                        ; num functions
000007b: 03                                        ; function 0 signature index
000007c: 04                                        ; function 1 signature index
000007d: 03                                        ; function 2 signature index
0000079: 04                                        ; FIXUP section size
; section "Global" (6)
000007e: 06                                        ; section code
000007f: 00                                        ; section size (guess)
0000080: 04                                        ; num globals
0000081: 7f                                        ; i32
0000082: 01                                        ; global mutability
0000083: 41                                        ; i32.const
0000084: a902                                      ; i32 literal
0000086: 0b                                        ; end
0000087: 7f                                        ; i32
0000088: 01                                        ; global mutability
0000089: 41                                        ; i32.const
000008a: 00                                        ; i32 literal
000008b: 0b                                        ; end
000008c: 7f                                        ; i32
000008d: 01                                        ; global mutability
000008e: 41                                        ; i32.const
000008f: 9702                                      ; i32 literal
0000091: 0b                                        ; end
0000092: 7f                                        ; i32
0000093: 01                                        ; global mutability
0000094: 41                                        ; i32.const
0000095: 00                                        ; i32 literal
0000096: 0b                                        ; end
000007f: 17                                        ; FIXUP section size
; section "Export" (7)
0000097: 07                                        ; section code
0000098: 00                                        ; section size (guess)
0000099: 01                                        ; num exports
000009a: 1e                                        ; string length
000009b: 636c 6173 7341 7272 6179 5465 7374 2e69  classArrayTest.i
00000ab: 6e69 7469 616c 697a 6541 7272 6179       nitializeArray  ; export name
00000b9: 00                                        ; export kind
00000ba: 04                                        ; export func index
0000098: 22                                        ; FIXUP section size
; section "Start" (8)
00000bb: 08                                        ; section code
00000bc: 00                                        ; section size (guess)
00000bd: 06                                        ; start func index
00000bc: 01                                        ; FIXUP section size
; section "Code" (10)
00000be: 0a                                        ; section code
00000bf: 00                                        ; section size (guess)
00000c0: 03                                        ; num functions
; function body 0
00000c1: 00                                        ; func body size (guess)
00000c2: 01                                        ; local decl count
00000c3: 04                                        ; local type count
00000c4: 7f                                        ; i32
00000c5: 23                                        ; global.get
00000c6: 00                                        ; global index
00000c7: 21                                        ; local.set
00000c8: 00                                        ; local index
00000c9: 20                                        ; local.get
00000ca: 00                                        ; local index
00000cb: 41                                        ; i32.const
00000cc: 0c                                        ; i32 literal
00000cd: 6a                                        ; i32.add
00000ce: 41                                        ; i32.const
00000cf: e400                                      ; i32 literal
00000d1: b7                                        ; f64.convert_i32_s
00000d2: 39                                        ; f64.store
00000d3: 03                                        ; alignment
00000d4: 00                                        ; store offset
00000d5: 20                                        ; local.get
00000d6: 00                                        ; local index
00000d7: 41                                        ; i32.const
00000d8: 00                                        ; i32 literal
00000d9: 6a                                        ; i32.add
00000da: 43                                        ; f32.const
00000db: 0000 0000                                 ; f32 literal
00000df: 38                                        ; f32.store
00000e0: 02                                        ; alignment
00000e1: 00                                        ; store offset
00000e2: 20                                        ; local.get
00000e3: 00                                        ; local index
00000e4: 41                                        ; i32.const
00000e5: 04                                        ; i32 literal
00000e6: 6a                                        ; i32.add
00000e7: 43                                        ; f32.const
00000e8: 0000 0000                                 ; f32 literal
00000ec: 38                                        ; f32.store
00000ed: 02                                        ; alignment
00000ee: 00                                        ; store offset
00000ef: 20                                        ; local.get
00000f0: 00                                        ; local index
00000f1: 41                                        ; i32.const
00000f2: 08                                        ; i32 literal
00000f3: 6a                                        ; i32.add
00000f4: 43                                        ; f32.const
00000f5: 0000 0000                                 ; f32 literal
00000f9: 38                                        ; f32.store
00000fa: 02                                        ; alignment
00000fb: 00                                        ; store offset
00000fc: 20                                        ; local.get
00000fd: 00                                        ; local index
00000fe: 41                                        ; i32.const
00000ff: 14                                        ; i32 literal
0000100: 6a                                        ; i32.add
0000101: 41                                        ; i32.const
0000102: 0a                                        ; i32 literal
0000103: 36                                        ; i32.store
0000104: 02                                        ; alignment
0000105: 00                                        ; store offset
0000106: 20                                        ; local.get
0000107: 00                                        ; local index
0000108: 41                                        ; i32.const
0000109: 18                                        ; i32 literal
000010a: 6a                                        ; i32.add
000010b: 24                                        ; global.set
000010c: 00                                        ; global index
000010d: 20                                        ; local.get
000010e: 00                                        ; local index
000010f: 21                                        ; local.set
0000110: 01                                        ; local index
0000111: 23                                        ; global.get
0000112: 00                                        ; global index
0000113: 41                                        ; i32.const
0000114: 0e                                        ; i32 literal
0000115: 36                                        ; i32.store
0000116: 02                                        ; alignment
0000117: 00                                        ; store offset
0000118: 23                                        ; global.get
0000119: 00                                        ; global index
000011a: 41                                        ; i32.const
000011b: 04                                        ; i32 literal
000011c: 6a                                        ; i32.add
000011d: 41                                        ; i32.const
000011e: 03                                        ; i32 literal
000011f: 36                                        ; i32.store
0000120: 02                                        ; alignment
0000121: 00                                        ; store offset
0000122: 23                                        ; global.get
0000123: 00                                        ; global index
0000124: 41                                        ; i32.const
0000125: 08                                        ; i32 literal
0000126: 6a                                        ; i32.add
0000127: 21                                        ; local.set
0000128: 03                                        ; local index
0000129: 23                                        ; global.get
000012a: 00                                        ; global index
000012b: 21                                        ; local.set
000012c: 02                                        ; local index
000012d: 20                                        ; local.get
000012e: 02                                        ; local index
000012f: 41                                        ; i32.const
0000130: 00                                        ; i32 literal
0000131: 6a                                        ; i32.add
0000132: 41                                        ; i32.const
0000133: 01                                        ; i32 literal
0000134: b2                                        ; f32.convert_i32_s
0000135: 38                                        ; f32.store
0000136: 02                                        ; alignment
0000137: 00                                        ; store offset
0000138: 20                                        ; local.get
0000139: 02                                        ; local index
000013a: 41                                        ; i32.const
000013b: 04                                        ; i32 literal
000013c: 6a                                        ; i32.add
000013d: 20                                        ; local.get
000013e: 02                                        ; local index
000013f: 41                                        ; i32.const
0000140: 00                                        ; i32 literal
0000141: 6a                                        ; i32.add
0000142: 2a                                        ; f32.load
0000143: 02                                        ; alignment
0000144: 00                                        ; load offset
0000145: 38                                        ; f32.store
0000146: 02                                        ; alignment
0000147: 00                                        ; store offset
0000148: 20                                        ; local.get
0000149: 02                                        ; local index
000014a: 41                                        ; i32.const
000014b: 08                                        ; i32 literal
000014c: 6a                                        ; i32.add
000014d: 20                                        ; local.get
000014e: 02                                        ; local index
000014f: 41                                        ; i32.const
0000150: 00                                        ; i32 literal
0000151: 6a                                        ; i32.add
0000152: 2a                                        ; f32.load
0000153: 02                                        ; alignment
0000154: 00                                        ; load offset
0000155: 38                                        ; f32.store
0000156: 02                                        ; alignment
0000157: 00                                        ; store offset
0000158: 20                                        ; local.get
0000159: 02                                        ; local index
000015a: 41                                        ; i32.const
000015b: 0c                                        ; i32 literal
000015c: 6a                                        ; i32.add
000015d: 44                                        ; f64.const
000015e: 0000 0000 0038 8f40                       ; f64 literal
0000166: 39                                        ; f64.store
0000167: 03                                        ; alignment
0000168: 00                                        ; store offset
0000169: 20                                        ; local.get
000016a: 02                                        ; local index
000016b: 41                                        ; i32.const
000016c: 14                                        ; i32 literal
000016d: 6a                                        ; i32.add
000016e: 41                                        ; i32.const
000016f: 0a                                        ; i32 literal
0000170: 36                                        ; i32.store
0000171: 02                                        ; alignment
0000172: 00                                        ; store offset
0000173: 20                                        ; local.get
0000174: 02                                        ; local index
0000175: 41                                        ; i32.const
0000176: 18                                        ; i32 literal
0000177: 6a                                        ; i32.add
0000178: 24                                        ; global.set
0000179: 00                                        ; global index
000017a: 20                                        ; local.get
000017b: 03                                        ; local index
000017c: 41                                        ; i32.const
000017d: 00                                        ; i32 literal
000017e: 6a                                        ; i32.add
000017f: 20                                        ; local.get
0000180: 02                                        ; local index
0000181: 36                                        ; i32.store
0000182: 02                                        ; alignment
0000183: 00                                        ; store offset
0000184: 20                                        ; local.get
0000185: 03                                        ; local index
0000186: 41                                        ; i32.const
0000187: 04                                        ; i32 literal
0000188: 6a                                        ; i32.add
0000189: 20                                        ; local.get
000018a: 01                                        ; local index
000018b: 36                                        ; i32.store
000018c: 02                                        ; alignment
000018d: 00                                        ; store offset
000018e: 20                                        ; local.get
000018f: 03                                        ; local index
0000190: 41                                        ; i32.const
0000191: 08                                        ; i32 literal
0000192: 6a                                        ; i32.add
0000193: 10                                        ; call
0000194: 05                                        ; function index
0000195: 36                                        ; i32.store
0000196: 02                                        ; alignment
0000197: 00                                        ; store offset
0000198: 20                                        ; local.get
0000199: 03                                        ; local index
000019a: 41                                        ; i32.const
000019b: 78                                        ; i32 literal
000019c: 6a                                        ; i32.add
000019d: 41                                        ; i32.const
000019e: 14                                        ; i32 literal
000019f: 6a                                        ; i32.add
00001a0: 24                                        ; global.set
00001a1: 00                                        ; global index
00001a2: 20                                        ; local.get
00001a3: 03                                        ; local index
00001a4: 41                                        ; i32.const
00001a5: 78                                        ; i32 literal
00001a6: 6a                                        ; i32.add
00001a7: 24                                        ; global.set
00001a8: 01                                        ; global index
00001a9: 0b                                        ; end
; move data: [c2, 1aa) -> [c3, 1ab)
00000c1: e801                                      ; FIXUP func body size
; function body 1
00001ab: 00                                        ; func body size (guess)
00001ac: 01                                        ; local decl count
00001ad: 01                                        ; local type count
00001ae: 7f                                        ; i32
00001af: 23                                        ; global.get
00001b0: 00                                        ; global index
00001b1: 21                                        ; local.set
00001b2: 00                                        ; local index
00001b3: 20                                        ; local.get
00001b4: 00                                        ; local index
00001b5: 41                                        ; i32.const
00001b6: 00                                        ; i32 literal
00001b7: 6a                                        ; i32.add
00001b8: 41                                        ; i32.const
00001b9: 01                                        ; i32 literal
00001ba: b2                                        ; f32.convert_i32_s
00001bb: 38                                        ; f32.store
00001bc: 02                                        ; alignment
00001bd: 00                                        ; store offset
00001be: 20                                        ; local.get
00001bf: 00                                        ; local index
00001c0: 41                                        ; i32.const
00001c1: 0c                                        ; i32 literal
00001c2: 6a                                        ; i32.add
00001c3: 20                                        ; local.get
00001c4: 00                                        ; local index
00001c5: 41                                        ; i32.const
00001c6: 00                                        ; i32 literal
00001c7: 6a                                        ; i32.add
00001c8: 2a                                        ; f32.load
00001c9: 02                                        ; alignment
00001ca: 00                                        ; load offset
00001cb: 20                                        ; local.get
00001cc: 00                                        ; local index
00001cd: 41                                        ; i32.const
00001ce: 04                                        ; i32 literal
00001cf: 6a                                        ; i32.add
00001d0: 2a                                        ; f32.load
00001d1: 02                                        ; alignment
00001d2: 00                                        ; load offset
00001d3: 94                                        ; f32.mul
00001d4: 20                                        ; local.get
00001d5: 00                                        ; local index
00001d6: 41                                        ; i32.const
00001d7: 08                                        ; i32 literal
00001d8: 6a                                        ; i32.add
00001d9: 2a                                        ; f32.load
00001da: 02                                        ; alignment
00001db: 00                                        ; load offset
00001dc: 94                                        ; f32.mul
00001dd: bb                                        ; f64.promote_f32
00001de: 39                                        ; f64.store
00001df: 03                                        ; alignment
00001e0: 00                                        ; store offset
00001e1: 20                                        ; local.get
00001e2: 00                                        ; local index
00001e3: 41                                        ; i32.const
00001e4: 14                                        ; i32 literal
00001e5: 6a                                        ; i32.add
00001e6: 41                                        ; i32.const
00001e7: 9e02                                      ; i32 literal
00001e9: 36                                        ; i32.store
00001ea: 02                                        ; alignment
00001eb: 00                                        ; store offset
00001ec: 20                                        ; local.get
00001ed: 00                                        ; local index
00001ee: 41                                        ; i32.const
00001ef: 04                                        ; i32 literal
00001f0: 6a                                        ; i32.add
00001f1: 43                                        ; f32.const
00001f2: 0000 0000                                 ; f32 literal
00001f6: 38                                        ; f32.store
00001f7: 02                                        ; alignment
00001f8: 00                                        ; store offset
00001f9: 20                                        ; local.get
00001fa: 00                                        ; local index
00001fb: 41                                        ; i32.const
00001fc: 08                                        ; i32 literal
00001fd: 6a                                        ; i32.add
00001fe: 43                                        ; f32.const
00001ff: 0000 0000                                 ; f32 literal
0000203: 38                                        ; f32.store
0000204: 02                                        ; alignment
0000205: 00                                        ; store offset
0000206: 20                                        ; local.get
0000207: 00                                        ; local index
0000208: 41                                        ; i32.const
0000209: 18                                        ; i32 literal
000020a: 6a                                        ; i32.add
000020b: 24                                        ; global.set
000020c: 00                                        ; global index
000020d: 20                                        ; local.get
000020e: 00                                        ; local index
000020f: 0f                                        ; return
0000210: 0b                                        ; end
00001ab: 65                                        ; FIXUP func body size
; function body 2
0000211: 00                                        ; func body size (guess)
0000212: 01                                        ; local decl count
0000213: 01                                        ; local type count
0000214: 7f                                        ; i32
0000215: 23                                        ; global.get
0000216: 00                                        ; global index
0000217: 21                                        ; local.set
0000218: 00                                        ; local index
0000219: 20                                        ; local.get
000021a: 00                                        ; local index
000021b: 41                                        ; i32.const
000021c: 00                                        ; i32 literal
000021d: 6a                                        ; i32.add
000021e: 41                                        ; i32.const
000021f: 01                                        ; i32 literal
0000220: b2                                        ; f32.convert_i32_s
0000221: 38                                        ; f32.store
0000222: 02                                        ; alignment
0000223: 00                                        ; store offset
0000224: 20                                        ; local.get
0000225: 00                                        ; local index
0000226: 41                                        ; i32.const
0000227: 04                                        ; i32 literal
0000228: 6a                                        ; i32.add
0000229: 20                                        ; local.get
000022a: 00                                        ; local index
000022b: 41                                        ; i32.const
000022c: 00                                        ; i32 literal
000022d: 6a                                        ; i32.add
000022e: 2a                                        ; f32.load
000022f: 02                                        ; alignment
0000230: 00                                        ; load offset
0000231: 38                                        ; f32.store
0000232: 02                                        ; alignment
0000233: 00                                        ; store offset
0000234: 20                                        ; local.get
0000235: 00                                        ; local index
0000236: 41                                        ; i32.const
0000237: 08                                        ; i32 literal
0000238: 6a                                        ; i32.add
0000239: 20                                        ; local.get
000023a: 00                                        ; local index
000023b: 41                                        ; i32.const
000023c: 00                                        ; i32 literal
000023d: 6a                                        ; i32.add
000023e: 2a                                        ; f32.load
000023f: 02                                        ; alignment
0000240: 00                                        ; load offset
0000241: 20                                        ; local.get
0000242: 00                                        ; local index
0000243: 41                                        ; i32.const
0000244: 04                                        ; i32 literal
0000245: 6a                                        ; i32.add
0000246: 2a                                        ; f32.load
0000247: 02                                        ; alignment
0000248: 00                                        ; load offset
0000249: 92                                        ; f32.add
000024a: 38                                        ; f32.store
000024b: 02                                        ; alignment
000024c: 00                                        ; store offset
000024d: 20                                        ; local.get
000024e: 00                                        ; local index
000024f: 41                                        ; i32.const
0000250: 0c                                        ; i32 literal
0000251: 6a                                        ; i32.add
0000252: 44                                        ; f64.const
0000253: 0000 0000 0038 8f40                       ; f64 literal
000025b: 39                                        ; f64.store
000025c: 03                                        ; alignment
000025d: 00                                        ; store offset
000025e: 20                                        ; local.get
000025f: 00                                        ; local index
0000260: 41                                        ; i32.const
0000261: 14                                        ; i32 literal
0000262: 6a                                        ; i32.add
0000263: 41                                        ; i32.const
0000264: 0a                                        ; i32 literal
0000265: 36                                        ; i32.store
0000266: 02                                        ; alignment
0000267: 00                                        ; store offset
0000268: 20                                        ; local.get
0000269: 00                                        ; local index
000026a: 41                                        ; i32.const
000026b: 18                                        ; i32 literal
000026c: 6a                                        ; i32.add
000026d: 24                                        ; global.set
000026e: 00                                        ; global index
000026f: 20                                        ; local.get
0000270: 00                                        ; local index
0000271: 24                                        ; global.set
0000272: 03                                        ; global index
0000273: 0b                                        ; end
0000211: 62                                        ; FIXUP func body size
; move data: [c0, 274) -> [c1, 275)
00000bf: b403                                      ; FIXUP section size
; section "Data" (11)
0000275: 0b                                        ; section code
0000276: 00                                        ; section size (guess)
0000277: 04                                        ; num data segments
; data segment header 0
0000278: 00                                      
0000279: 41                                        ; i32.const
000027a: 0a                                        ; i32 literal
000027b: 0b                                        ; end
000027c: 04                                        ; data segment size
; data segment data 0
000027d: 4142 4300                                 ; data segment data
; data segment header 1
0000281: 00                                      
0000282: 41                                        ; i32.const
0000283: 9702                                      ; i32 literal
0000285: 0b                                        ; end
0000286: 07                                        ; data segment size
; data segment data 1
0000287: 5353 5353 5353 00                         ; data segment data
; data segment header 2
000028e: 00                                      
000028f: 41                                        ; i32.const
0000290: 9e02                                      ; i32 literal
0000292: 0b                                        ; end
0000293: 0b                                        ; data segment size
; data segment data 2
0000294: 4141 4141 4141 4141 4141 00               ; data segment data
; data segment header 3
000029f: 00                                      
00002a0: 41                                        ; i32.const
00002a1: 0e                                        ; i32 literal
00002a2: 0b                                        ; end
00002a3: 8902                                      ; data segment size
; data segment data 3
00002a5: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
00002b5: 4f6e 7369 566d 4673 6457 5569 4f6a 4530 
00002c5: 6653 7769 5132 7868 6333 4d69 4f69 4a6a 
00002d5: 6158 4a6a 6247 5569 4c43 4a47 6157 5673 
00002e5: 5a48 4d69 4f6e 7369 6543 4936 6579 4a6e 
00002f5: 5a57 356c 636d 6c6a 496a 7062 5858 3073 
0000305: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000315: 5979 4936 5731 3139 4c43 4a36 496a 7037 
0000325: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000335: 6653 7769 636d 466b 6158 567a 496a 7037 
0000345: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000355: 6653 7769 6157 5169 4f6e 7369 5a32 5675 
0000365: 5a58 4a70 5979 4936 5731 3139 6653 7769 
0000375: 5457 5630 6147 396b 6379 4936 6533 3073 
0000385: 496b 3568 6257 567a 6347 466a 5a53 4936 
0000395: 496e 526c 6333 524f 5957 316c 6333 4268 
00003a5: 5932 5569 6651 3d3d 00                    ; data segment data
; move data: [277, 3ae) -> [278, 3af)
0000276: b702                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011a 0560 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 0000 
0000020: 6000 017f 0252 0506 7374 7269 6e67 0772 
0000030: 6570 6c61 6365 0000 0673 7472 696e 6703 
0000040: 6164 6400 0106 7374 7269 6e67 066c 656e 
0000050: 6774 6800 0206 7374 7269 6e67 0769 6e64 
0000060: 6578 4f66 0001 0365 6e76 0a62 7974 6563 
0000070: 6875 6e6b 7302 0001 0304 0303 0403 0617 
0000080: 047f 0141 a902 0b7f 0141 000b 7f01 4197 
0000090: 020b 7f01 4100 0b07 2201 1e63 6c61 7373 
00000a0: 4172 7261 7954 6573 742e 696e 6974 6961 
00000b0: 6c69 7a65 4172 7261 7900 0408 0106 0ab4 
00000c0: 0303 e801 0104 7f23 0021 0020 0041 0c6a 
00000d0: 41e4 00b7 3903 0020 0041 006a 4300 0000 
00000e0: 0038 0200 2000 4104 6a43 0000 0000 3802 
00000f0: 0020 0041 086a 4300 0000 0038 0200 2000 
0000100: 4114 6a41 0a36 0200 2000 4118 6a24 0020 
0000110: 0021 0123 0041 0e36 0200 2300 4104 6a41 
0000120: 0336 0200 2300 4108 6a21 0323 0021 0220 
0000130: 0241 006a 4101 b238 0200 2002 4104 6a20 
0000140: 0241 006a 2a02 0038 0200 2002 4108 6a20 
0000150: 0241 006a 2a02 0038 0200 2002 410c 6a44 
0000160: 0000 0000 0038 8f40 3903 0020 0241 146a 
0000170: 410a 3602 0020 0241 186a 2400 2003 4100 
0000180: 6a20 0236 0200 2003 4104 6a20 0136 0200 
0000190: 2003 4108 6a10 0536 0200 2003 4178 6a41 
00001a0: 146a 2400 2003 4178 6a24 010b 6501 017f 
00001b0: 2300 2100 2000 4100 6a41 01b2 3802 0020 
00001c0: 0041 0c6a 2000 4100 6a2a 0200 2000 4104 
00001d0: 6a2a 0200 9420 0041 086a 2a02 0094 bb39 
00001e0: 0300 2000 4114 6a41 9e02 3602 0020 0041 
00001f0: 046a 4300 0000 0038 0200 2000 4108 6a43 
0000200: 0000 0000 3802 0020 0041 186a 2400 2000 
0000210: 0f0b 6201 017f 2300 2100 2000 4100 6a41 
0000220: 01b2 3802 0020 0041 046a 2000 4100 6a2a 
0000230: 0200 3802 0020 0041 086a 2000 4100 6a2a 
0000240: 0200 2000 4104 6a2a 0200 9238 0200 2000 
0000250: 410c 6a44 0000 0000 0038 8f40 3903 0020 
0000260: 0041 146a 410a 3602 0020 0041 186a 2400 
0000270: 2000 2403 0b0b b702 0400 410a 0b04 4142 
0000280: 4300 0041 9702 0b07 5353 5353 5353 0000 
0000290: 419e 020b 0b41 4141 4141 4141 4141 4100 
00002a0: 0041 0e0b 8902 6579 4a74 5a57 3176 636e 
00002b0: 6c51 6448 4969 4f6e 7369 566d 4673 6457 
00002c0: 5569 4f6a 4530 6653 7769 5132 7868 6333 
00002d0: 4d69 4f69 4a6a 6158 4a6a 6247 5569 4c43 
00002e0: 4a47 6157 5673 5a48 4d69 4f6e 7369 6543 
00002f0: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0000300: 7062 5858 3073 496e 6b69 4f6e 7369 5a32 
0000310: 5675 5a58 4a70 5979 4936 5731 3139 4c43 
0000320: 4a36 496a 7037 496d 646c 626d 5679 6157 
0000330: 4d69 4f6c 7464 6653 7769 636d 466b 6158 
0000340: 567a 496a 7037 496d 646c 626d 5679 6157 
0000350: 4d69 4f6c 7464 6653 7769 6157 5169 4f6e 
0000360: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
0000370: 3139 6653 7769 5457 5630 6147 396b 6379 
0000380: 4936 6533 3073 496b 3568 6257 567a 6347 
0000390: 466a 5a53 4936 496e 526c 6333 524f 5957 
00003a0: 316c 6333 4268 5932 5569 6651 3d3d 00   
