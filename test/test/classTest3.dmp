0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 01                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 00                                        ; num params
000000d: 00                                        ; num results
0000009: 04                                        ; FIXUP section size
; section "Import" (2)
000000e: 02                                        ; section code
000000f: 00                                        ; section size (guess)
0000010: 01                                        ; num imports
; import header 0
0000011: 03                                        ; string length
0000012: 656e 76                                  env  ; import module name
0000015: 0a                                        ; string length
0000016: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000020: 02                                        ; import kind
0000021: 00                                        ; limits: flags
0000022: 01                                        ; limits: initial
000000f: 13                                        ; FIXUP section size
; section "Function" (3)
0000023: 03                                        ; section code
0000024: 00                                        ; section size (guess)
0000025: 01                                        ; num functions
0000026: 00                                        ; function 0 signature index
0000024: 02                                        ; FIXUP section size
; section "Global" (6)
0000027: 06                                        ; section code
0000028: 00                                        ; section size (guess)
0000029: 02                                        ; num globals
000002a: 7f                                        ; i32
000002b: 01                                        ; global mutability
000002c: 41                                        ; i32.const
000002d: ee01                                      ; i32 literal
000002f: 0b                                        ; end
0000030: 7f                                        ; i32
0000031: 01                                        ; global mutability
0000032: 41                                        ; i32.const
0000033: 00                                        ; i32 literal
0000034: 0b                                        ; end
0000028: 0c                                        ; FIXUP section size
; section "Start" (8)
0000035: 08                                        ; section code
0000036: 00                                        ; section size (guess)
0000037: 00                                        ; start func index
0000036: 01                                        ; FIXUP section size
; section "Code" (10)
0000038: 0a                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 01                                        ; num functions
; function body 0
000003b: 00                                        ; func body size (guess)
000003c: 01                                        ; local decl count
000003d: 01                                        ; local type count
000003e: 7f                                        ; i32
000003f: 23                                        ; global.get
0000040: 00                                        ; global index
0000041: 21                                        ; local.set
0000042: 00                                        ; local index
0000043: 20                                        ; local.get
0000044: 00                                        ; local index
0000045: 41                                        ; i32.const
0000046: 00                                        ; i32 literal
0000047: 6a                                        ; i32.add
0000048: 41                                        ; i32.const
0000049: 01                                        ; i32 literal
000004a: b2                                        ; f32.convert_i32_s
000004b: 38                                        ; f32.store
000004c: 02                                        ; alignment
000004d: 00                                        ; store offset
000004e: 20                                        ; local.get
000004f: 00                                        ; local index
0000050: 41                                        ; i32.const
0000051: 04                                        ; i32 literal
0000052: 6a                                        ; i32.add
0000053: 20                                        ; local.get
0000054: 00                                        ; local index
0000055: 41                                        ; i32.const
0000056: 00                                        ; i32 literal
0000057: 6a                                        ; i32.add
0000058: 2a                                        ; f32.load
0000059: 02                                        ; alignment
000005a: 00                                        ; load offset
000005b: 38                                        ; f32.store
000005c: 02                                        ; alignment
000005d: 00                                        ; store offset
000005e: 20                                        ; local.get
000005f: 00                                        ; local index
0000060: 41                                        ; i32.const
0000061: 08                                        ; i32 literal
0000062: 6a                                        ; i32.add
0000063: 20                                        ; local.get
0000064: 00                                        ; local index
0000065: 41                                        ; i32.const
0000066: 00                                        ; i32 literal
0000067: 6a                                        ; i32.add
0000068: 2a                                        ; f32.load
0000069: 02                                        ; alignment
000006a: 00                                        ; load offset
000006b: 20                                        ; local.get
000006c: 00                                        ; local index
000006d: 41                                        ; i32.const
000006e: 04                                        ; i32 literal
000006f: 6a                                        ; i32.add
0000070: 2a                                        ; f32.load
0000071: 02                                        ; alignment
0000072: 00                                        ; load offset
0000073: 92                                        ; f32.add
0000074: 38                                        ; f32.store
0000075: 02                                        ; alignment
0000076: 00                                        ; store offset
0000077: 20                                        ; local.get
0000078: 00                                        ; local index
0000079: 41                                        ; i32.const
000007a: 14                                        ; i32 literal
000007b: 6a                                        ; i32.add
000007c: 24                                        ; global.set
000007d: 00                                        ; global index
000007e: 20                                        ; local.get
000007f: 00                                        ; local index
0000080: 24                                        ; global.set
0000081: 01                                        ; global index
0000082: 0b                                        ; end
000003b: 47                                        ; FIXUP func body size
0000039: 49                                        ; FIXUP section size
; section "Data" (11)
0000083: 0b                                        ; section code
0000084: 00                                        ; section size (guess)
0000085: 01                                        ; num data segments
; data segment header 0
0000086: 00                                      
0000087: 41                                        ; i32.const
0000088: 01                                        ; i32 literal
0000089: 0b                                        ; end
000008a: ed01                                      ; data segment size
; data segment data 0
000008c: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
000009c: 4f6e 7369 566d 4673 6457 5569 4f6a 4639 
00000ac: 4c43 4a44 6247 467a 6379 4936 496d 4e70 
00000bc: 636d 4e73 5a53 4973 496b 5a70 5a57 786b 
00000cc: 6379 4936 6579 4a34 496a 7037 496d 646c 
00000dc: 626d 5679 6157 4d69 4f6c 7464 6653 7769 
00000ec: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
00000fc: 496a 7062 5858 3073 496e 6f69 4f6e 7369 
000010c: 5a32 5675 5a58 4a70 5979 4936 5731 3139 
000011c: 4c43 4a79 5957 5270 6458 4d69 4f6e 7369 
000012c: 5a32 5675 5a58 4a70 5979 4936 5731 3139 
000013c: 6653 7769 5457 5630 6147 396b 6379 4936 
000014c: 6533 3073 496b 3568 6257 567a 6347 466a 
000015c: 5a53 4936 496e 526c 6333 524f 5957 316c 
000016c: 6333 4268 5932 5569 6651 3d3d 00          ; data segment data
; move data: [85, 179) -> [86, 17a)
0000084: f401                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0104 0160 0000 0213 
0000010: 0103 656e 760a 6279 7465 6368 756e 6b73 
0000020: 0200 0103 0201 0006 0c02 7f01 41ee 010b 
0000030: 7f01 4100 0b08 0100 0a49 0147 0101 7f23 
0000040: 0021 0020 0041 006a 4101 b238 0200 2000 
0000050: 4104 6a20 0041 006a 2a02 0038 0200 2000 
0000060: 4108 6a20 0041 006a 2a02 0020 0041 046a 
0000070: 2a02 0092 3802 0020 0041 146a 2400 2000 
0000080: 2401 0b0b f401 0100 4101 0bed 0165 794a 
0000090: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
00000a0: 6956 6d46 7364 5755 694f 6a46 394c 434a 
00000b0: 4462 4746 7a63 7949 3649 6d4e 7063 6d4e 
00000c0: 735a 5349 7349 6b5a 705a 5778 6b63 7949 
00000d0: 3665 794a 3449 6a70 3749 6d64 6c62 6d56 
00000e0: 7961 574d 694f 6c74 6466 5377 6965 5349 
00000f0: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000100: 6258 5830 7349 6e6f 694f 6e73 695a 3256 
0000110: 755a 584a 7059 7949 3657 3131 394c 434a 
0000120: 7959 5752 7064 584d 694f 6e73 695a 3256 
0000130: 755a 584a 7059 7949 3657 3131 3966 5377 
0000140: 6954 5756 3061 4739 6b63 7949 3665 3330 
0000150: 7349 6b35 6862 5756 7a63 4746 6a5a 5349 
0000160: 3649 6e52 6c63 3352 4f59 5731 6c63 3342 
0000170: 6859 3255 6966 513d 3d00                
