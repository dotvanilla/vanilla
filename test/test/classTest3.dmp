0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
; type 4
0000021: 60                                        ; func
0000022: 00                                        ; num params
0000023: 00                                        ; num results
0000009: 1a                                        ; FIXUP section size
; section "Import" (2)
0000024: 02                                        ; section code
0000025: 00                                        ; section size (guess)
0000026: 05                                        ; num imports
; import header 0
0000027: 06                                        ; string length
0000028: 7374 7269 6e67                           string  ; import module name
000002e: 07                                        ; string length
000002f: 7265 706c 6163 65                        replace  ; import field name
0000036: 00                                        ; import kind
0000037: 00                                        ; import signature index
; import header 1
0000038: 06                                        ; string length
0000039: 7374 7269 6e67                           string  ; import module name
000003f: 03                                        ; string length
0000040: 6164 64                                  add  ; import field name
0000043: 00                                        ; import kind
0000044: 01                                        ; import signature index
; import header 2
0000045: 06                                        ; string length
0000046: 7374 7269 6e67                           string  ; import module name
000004c: 06                                        ; string length
000004d: 6c65 6e67 7468                           length  ; import field name
0000053: 00                                        ; import kind
0000054: 02                                        ; import signature index
; import header 3
0000055: 06                                        ; string length
0000056: 7374 7269 6e67                           string  ; import module name
000005c: 07                                        ; string length
000005d: 696e 6465 784f 66                        indexOf  ; import field name
0000064: 00                                        ; import kind
0000065: 01                                        ; import signature index
; import header 4
0000066: 03                                        ; string length
0000067: 656e 76                                  env  ; import module name
000006a: 0a                                        ; string length
000006b: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000075: 02                                        ; import kind
0000076: 00                                        ; limits: flags
0000077: 01                                        ; limits: initial
0000025: 52                                        ; FIXUP section size
; section "Function" (3)
0000078: 03                                        ; section code
0000079: 00                                        ; section size (guess)
000007a: 05                                        ; num functions
000007b: 03                                        ; function 0 signature index
000007c: 04                                        ; function 1 signature index
000007d: 04                                        ; function 2 signature index
000007e: 04                                        ; function 3 signature index
000007f: 04                                        ; function 4 signature index
0000079: 06                                        ; FIXUP section size
; section "Global" (6)
0000080: 06                                        ; section code
0000081: 00                                        ; section size (guess)
0000082: 0e                                        ; num globals
0000083: 7f                                        ; i32
0000084: 01                                        ; global mutability
0000085: 41                                        ; i32.const
0000086: e203                                      ; i32 literal
0000088: 0b                                        ; end
0000089: 7c                                        ; f64
000008a: 01                                        ; global mutability
000008b: 44                                        ; f64.const
000008c: 7457 148b 0abf 0540                       ; f64 literal
0000094: 0b                                        ; end
0000095: 7c                                        ; f64
0000096: 01                                        ; global mutability
0000097: 44                                        ; f64.const
0000098: 112d 4454 fb21 0940                       ; f64 literal
00000a0: 0b                                        ; end
00000a1: 7f                                        ; i32
00000a2: 01                                        ; global mutability
00000a3: 41                                        ; i32.const
00000a4: ffff ffff 07                              ; i32 literal
00000a9: 0b                                        ; end
00000aa: 7e                                        ; i64
00000ab: 01                                        ; global mutability
00000ac: 42                                        ; i64.const
00000ad: ffff ffff ffff ffff ff00                  ; i64 literal
00000b7: 0b                                        ; end
00000b8: 7d                                        ; f32
00000b9: 01                                        ; global mutability
00000ba: 43                                        ; f32.const
00000bb: ffff 7f7f                                 ; f32 literal
00000bf: 0b                                        ; end
00000c0: 7c                                        ; f64
00000c1: 01                                        ; global mutability
00000c2: 44                                        ; f64.const
00000c3: ffff ffff ffff ef7f                       ; f64 literal
00000cb: 0b                                        ; end
00000cc: 7f                                        ; i32
00000cd: 01                                        ; global mutability
00000ce: 41                                        ; i32.const
00000cf: 8080 8080 78                              ; i32 literal
00000d4: 0b                                        ; end
00000d5: 7e                                        ; i64
00000d6: 01                                        ; global mutability
00000d7: 42                                        ; i64.const
00000d8: 8080 8080 8080 8080 807f                  ; i64 literal
00000e2: 0b                                        ; end
00000e3: 7d                                        ; f32
00000e4: 01                                        ; global mutability
00000e5: 43                                        ; f32.const
00000e6: ffff 7fff                                 ; f32 literal
00000ea: 0b                                        ; end
00000eb: 7c                                        ; f64
00000ec: 01                                        ; global mutability
00000ed: 44                                        ; f64.const
00000ee: ffff ffff ffff efff                       ; f64 literal
00000f6: 0b                                        ; end
00000f7: 7f                                        ; i32
00000f8: 01                                        ; global mutability
00000f9: 41                                        ; i32.const
00000fa: 00                                        ; i32 literal
00000fb: 0b                                        ; end
00000fc: 7f                                        ; i32
00000fd: 01                                        ; global mutability
00000fe: 41                                        ; i32.const
00000ff: d003                                      ; i32 literal
0000101: 0b                                        ; end
0000102: 7f                                        ; i32
0000103: 01                                        ; global mutability
0000104: 41                                        ; i32.const
0000105: 00                                        ; i32 literal
0000106: 0b                                        ; end
; move data: [82, 107) -> [83, 108)
0000081: 8501                                      ; FIXUP section size
; section "Export" (7)
0000108: 07                                        ; section code
0000109: 00                                        ; section size (guess)
000010a: 01                                        ; num exports
000010b: 1e                                        ; string length
000010c: 636c 6173 7341 7272 6179 5465 7374 2e69  classArrayTest.i
000011c: 6e69 7469 616c 697a 6541 7272 6179       nitializeArray  ; export name
000012a: 00                                        ; export kind
000012b: 05                                        ; export func index
0000109: 22                                        ; FIXUP section size
; section "Start" (8)
000012c: 08                                        ; section code
000012d: 00                                        ; section size (guess)
000012e: 06                                        ; start func index
000012d: 01                                        ; FIXUP section size
; section "Code" (10)
000012f: 0a                                        ; section code
0000130: 00                                        ; section size (guess)
0000131: 05                                        ; num functions
; function body 0
0000132: 00                                        ; func body size (guess)
0000133: 01                                        ; local decl count
0000134: 01                                        ; local type count
0000135: 7f                                        ; i32
0000136: 23                                        ; global.get
0000137: 00                                        ; global index
0000138: 21                                        ; local.set
0000139: 00                                        ; local index
000013a: 20                                        ; local.get
000013b: 00                                        ; local index
000013c: 41                                        ; i32.const
000013d: 18                                        ; i32 literal
000013e: 6a                                        ; i32.add
000013f: 24                                        ; global.set
0000140: 00                                        ; global index
0000141: 20                                        ; local.get
0000142: 00                                        ; local index
0000143: 41                                        ; i32.const
0000144: 00                                        ; i32 literal
0000145: 6a                                        ; i32.add
0000146: 41                                        ; i32.const
0000147: 01                                        ; i32 literal
0000148: b2                                        ; f32.convert_i32_s
0000149: 38                                        ; f32.store
000014a: 02                                        ; alignment
000014b: 00                                        ; store offset
000014c: 20                                        ; local.get
000014d: 00                                        ; local index
000014e: 41                                        ; i32.const
000014f: 0c                                        ; i32 literal
0000150: 6a                                        ; i32.add
0000151: 20                                        ; local.get
0000152: 00                                        ; local index
0000153: 41                                        ; i32.const
0000154: 00                                        ; i32 literal
0000155: 6a                                        ; i32.add
0000156: 2a                                        ; f32.load
0000157: 02                                        ; alignment
0000158: 00                                        ; load offset
0000159: 20                                        ; local.get
000015a: 00                                        ; local index
000015b: 41                                        ; i32.const
000015c: 04                                        ; i32 literal
000015d: 6a                                        ; i32.add
000015e: 2a                                        ; f32.load
000015f: 02                                        ; alignment
0000160: 00                                        ; load offset
0000161: 94                                        ; f32.mul
0000162: 20                                        ; local.get
0000163: 00                                        ; local index
0000164: 41                                        ; i32.const
0000165: 08                                        ; i32 literal
0000166: 6a                                        ; i32.add
0000167: 2a                                        ; f32.load
0000168: 02                                        ; alignment
0000169: 00                                        ; load offset
000016a: 94                                        ; f32.mul
000016b: bb                                        ; f64.promote_f32
000016c: 39                                        ; f64.store
000016d: 03                                        ; alignment
000016e: 00                                        ; store offset
000016f: 20                                        ; local.get
0000170: 00                                        ; local index
0000171: 41                                        ; i32.const
0000172: 14                                        ; i32 literal
0000173: 6a                                        ; i32.add
0000174: 41                                        ; i32.const
0000175: d703                                      ; i32 literal
0000177: 36                                        ; i32.store
0000178: 02                                        ; alignment
0000179: 00                                        ; store offset
000017a: 20                                        ; local.get
000017b: 00                                        ; local index
000017c: 41                                        ; i32.const
000017d: 04                                        ; i32 literal
000017e: 6a                                        ; i32.add
000017f: 43                                        ; f32.const
0000180: 0000 0000                                 ; f32 literal
0000184: 38                                        ; f32.store
0000185: 02                                        ; alignment
0000186: 00                                        ; store offset
0000187: 20                                        ; local.get
0000188: 00                                        ; local index
0000189: 41                                        ; i32.const
000018a: 08                                        ; i32 literal
000018b: 6a                                        ; i32.add
000018c: 43                                        ; f32.const
000018d: 0000 0000                                 ; f32 literal
0000191: 38                                        ; f32.store
0000192: 02                                        ; alignment
0000193: 00                                        ; store offset
0000194: 20                                        ; local.get
0000195: 00                                        ; local index
0000196: 0f                                        ; return
0000197: 0b                                        ; end
0000132: 65                                        ; FIXUP func body size
; function body 1
0000198: 00                                        ; func body size (guess)
0000199: 01                                        ; local decl count
000019a: 04                                        ; local type count
000019b: 7f                                        ; i32
000019c: 23                                        ; global.get
000019d: 00                                        ; global index
000019e: 21                                        ; local.set
000019f: 00                                        ; local index
00001a0: 20                                        ; local.get
00001a1: 00                                        ; local index
00001a2: 41                                        ; i32.const
00001a3: 18                                        ; i32 literal
00001a4: 6a                                        ; i32.add
00001a5: 24                                        ; global.set
00001a6: 00                                        ; global index
00001a7: 20                                        ; local.get
00001a8: 00                                        ; local index
00001a9: 41                                        ; i32.const
00001aa: 0c                                        ; i32 literal
00001ab: 6a                                        ; i32.add
00001ac: 41                                        ; i32.const
00001ad: e400                                      ; i32 literal
00001af: b7                                        ; f64.convert_i32_s
00001b0: 39                                        ; f64.store
00001b1: 03                                        ; alignment
00001b2: 00                                        ; store offset
00001b3: 20                                        ; local.get
00001b4: 00                                        ; local index
00001b5: 41                                        ; i32.const
00001b6: 00                                        ; i32 literal
00001b7: 6a                                        ; i32.add
00001b8: 43                                        ; f32.const
00001b9: 0000 0000                                 ; f32 literal
00001bd: 38                                        ; f32.store
00001be: 02                                        ; alignment
00001bf: 00                                        ; store offset
00001c0: 20                                        ; local.get
00001c1: 00                                        ; local index
00001c2: 41                                        ; i32.const
00001c3: 04                                        ; i32 literal
00001c4: 6a                                        ; i32.add
00001c5: 43                                        ; f32.const
00001c6: 0000 0000                                 ; f32 literal
00001ca: 38                                        ; f32.store
00001cb: 02                                        ; alignment
00001cc: 00                                        ; store offset
00001cd: 20                                        ; local.get
00001ce: 00                                        ; local index
00001cf: 41                                        ; i32.const
00001d0: 08                                        ; i32 literal
00001d1: 6a                                        ; i32.add
00001d2: 43                                        ; f32.const
00001d3: 0000 0000                                 ; f32 literal
00001d7: 38                                        ; f32.store
00001d8: 02                                        ; alignment
00001d9: 00                                        ; store offset
00001da: 20                                        ; local.get
00001db: 00                                        ; local index
00001dc: 41                                        ; i32.const
00001dd: 14                                        ; i32 literal
00001de: 6a                                        ; i32.add
00001df: 41                                        ; i32.const
00001e0: 0b                                        ; i32 literal
00001e1: 36                                        ; i32.store
00001e2: 02                                        ; alignment
00001e3: 00                                        ; store offset
00001e4: 20                                        ; local.get
00001e5: 00                                        ; local index
00001e6: 21                                        ; local.set
00001e7: 01                                        ; local index
00001e8: 23                                        ; global.get
00001e9: 00                                        ; global index
00001ea: 41                                        ; i32.const
00001eb: 0f                                        ; i32 literal
00001ec: 36                                        ; i32.store
00001ed: 02                                        ; alignment
00001ee: 00                                        ; store offset
00001ef: 23                                        ; global.get
00001f0: 00                                        ; global index
00001f1: 41                                        ; i32.const
00001f2: 04                                        ; i32 literal
00001f3: 6a                                        ; i32.add
00001f4: 41                                        ; i32.const
00001f5: 03                                        ; i32 literal
00001f6: 36                                        ; i32.store
00001f7: 02                                        ; alignment
00001f8: 00                                        ; store offset
00001f9: 23                                        ; global.get
00001fa: 00                                        ; global index
00001fb: 41                                        ; i32.const
00001fc: 08                                        ; i32 literal
00001fd: 6a                                        ; i32.add
00001fe: 21                                        ; local.set
00001ff: 03                                        ; local index
0000200: 20                                        ; local.get
0000201: 03                                        ; local index
0000202: 41                                        ; i32.const
0000203: 78                                        ; i32 literal
0000204: 6a                                        ; i32.add
0000205: 41                                        ; i32.const
0000206: 08                                        ; i32 literal
0000207: 41                                        ; i32.const
0000208: 03                                        ; i32 literal
0000209: 41                                        ; i32.const
000020a: 04                                        ; i32 literal
000020b: 6c                                        ; i32.mul
000020c: 6a                                        ; i32.add
000020d: 6a                                        ; i32.add
000020e: 24                                        ; global.set
000020f: 00                                        ; global index
0000210: 23                                        ; global.get
0000211: 00                                        ; global index
0000212: 21                                        ; local.set
0000213: 02                                        ; local index
0000214: 20                                        ; local.get
0000215: 02                                        ; local index
0000216: 41                                        ; i32.const
0000217: 18                                        ; i32 literal
0000218: 6a                                        ; i32.add
0000219: 24                                        ; global.set
000021a: 00                                        ; global index
000021b: 20                                        ; local.get
000021c: 02                                        ; local index
000021d: 41                                        ; i32.const
000021e: 00                                        ; i32 literal
000021f: 6a                                        ; i32.add
0000220: 41                                        ; i32.const
0000221: 01                                        ; i32 literal
0000222: b2                                        ; f32.convert_i32_s
0000223: 38                                        ; f32.store
0000224: 02                                        ; alignment
0000225: 00                                        ; store offset
0000226: 20                                        ; local.get
0000227: 02                                        ; local index
0000228: 41                                        ; i32.const
0000229: 04                                        ; i32 literal
000022a: 6a                                        ; i32.add
000022b: 20                                        ; local.get
000022c: 02                                        ; local index
000022d: 41                                        ; i32.const
000022e: 00                                        ; i32 literal
000022f: 6a                                        ; i32.add
0000230: 2a                                        ; f32.load
0000231: 02                                        ; alignment
0000232: 00                                        ; load offset
0000233: 38                                        ; f32.store
0000234: 02                                        ; alignment
0000235: 00                                        ; store offset
0000236: 20                                        ; local.get
0000237: 02                                        ; local index
0000238: 41                                        ; i32.const
0000239: 08                                        ; i32 literal
000023a: 6a                                        ; i32.add
000023b: 20                                        ; local.get
000023c: 02                                        ; local index
000023d: 41                                        ; i32.const
000023e: 00                                        ; i32 literal
000023f: 6a                                        ; i32.add
0000240: 2a                                        ; f32.load
0000241: 02                                        ; alignment
0000242: 00                                        ; load offset
0000243: 38                                        ; f32.store
0000244: 02                                        ; alignment
0000245: 00                                        ; store offset
0000246: 20                                        ; local.get
0000247: 02                                        ; local index
0000248: 41                                        ; i32.const
0000249: 0c                                        ; i32 literal
000024a: 6a                                        ; i32.add
000024b: 44                                        ; f64.const
000024c: 0000 0000 0038 8f40                       ; f64 literal
0000254: 39                                        ; f64.store
0000255: 03                                        ; alignment
0000256: 00                                        ; store offset
0000257: 20                                        ; local.get
0000258: 02                                        ; local index
0000259: 41                                        ; i32.const
000025a: 14                                        ; i32 literal
000025b: 6a                                        ; i32.add
000025c: 41                                        ; i32.const
000025d: 0b                                        ; i32 literal
000025e: 36                                        ; i32.store
000025f: 02                                        ; alignment
0000260: 00                                        ; store offset
0000261: 20                                        ; local.get
0000262: 03                                        ; local index
0000263: 41                                        ; i32.const
0000264: 00                                        ; i32 literal
0000265: 6a                                        ; i32.add
0000266: 20                                        ; local.get
0000267: 02                                        ; local index
0000268: 36                                        ; i32.store
0000269: 02                                        ; alignment
000026a: 00                                        ; store offset
000026b: 20                                        ; local.get
000026c: 03                                        ; local index
000026d: 41                                        ; i32.const
000026e: 04                                        ; i32 literal
000026f: 6a                                        ; i32.add
0000270: 20                                        ; local.get
0000271: 01                                        ; local index
0000272: 36                                        ; i32.store
0000273: 02                                        ; alignment
0000274: 00                                        ; store offset
0000275: 20                                        ; local.get
0000276: 03                                        ; local index
0000277: 41                                        ; i32.const
0000278: 08                                        ; i32 literal
0000279: 6a                                        ; i32.add
000027a: 10                                        ; call
000027b: 04                                        ; function index
000027c: 36                                        ; i32.store
000027d: 02                                        ; alignment
000027e: 00                                        ; store offset
000027f: 20                                        ; local.get
0000280: 03                                        ; local index
0000281: 41                                        ; i32.const
0000282: 78                                        ; i32 literal
0000283: 6a                                        ; i32.add
0000284: 24                                        ; global.set
0000285: 0d                                        ; global index
0000286: 0b                                        ; end
; move data: [199, 287) -> [19a, 288)
0000198: ee01                                      ; FIXUP func body size
; function body 2
0000288: 00                                        ; func body size (guess)
0000289: 00                                        ; local decl count
000028a: 10                                        ; call
000028b: 07                                        ; function index
000028c: 10                                        ; call
000028d: 08                                        ; function index
000028e: 0b                                        ; end
0000288: 06                                        ; FIXUP func body size
; function body 3
000028f: 00                                        ; func body size (guess)
0000290: 00                                        ; local decl count
0000291: 0b                                        ; end
000028f: 02                                        ; FIXUP func body size
; function body 4
0000292: 00                                        ; func body size (guess)
0000293: 01                                        ; local decl count
0000294: 01                                        ; local type count
0000295: 7f                                        ; i32
0000296: 23                                        ; global.get
0000297: 00                                        ; global index
0000298: 21                                        ; local.set
0000299: 00                                        ; local index
000029a: 20                                        ; local.get
000029b: 00                                        ; local index
000029c: 41                                        ; i32.const
000029d: 18                                        ; i32 literal
000029e: 6a                                        ; i32.add
000029f: 24                                        ; global.set
00002a0: 00                                        ; global index
00002a1: 20                                        ; local.get
00002a2: 00                                        ; local index
00002a3: 41                                        ; i32.const
00002a4: 00                                        ; i32 literal
00002a5: 6a                                        ; i32.add
00002a6: 41                                        ; i32.const
00002a7: 01                                        ; i32 literal
00002a8: b2                                        ; f32.convert_i32_s
00002a9: 38                                        ; f32.store
00002aa: 02                                        ; alignment
00002ab: 00                                        ; store offset
00002ac: 20                                        ; local.get
00002ad: 00                                        ; local index
00002ae: 41                                        ; i32.const
00002af: 04                                        ; i32 literal
00002b0: 6a                                        ; i32.add
00002b1: 20                                        ; local.get
00002b2: 00                                        ; local index
00002b3: 41                                        ; i32.const
00002b4: 00                                        ; i32 literal
00002b5: 6a                                        ; i32.add
00002b6: 2a                                        ; f32.load
00002b7: 02                                        ; alignment
00002b8: 00                                        ; load offset
00002b9: 38                                        ; f32.store
00002ba: 02                                        ; alignment
00002bb: 00                                        ; store offset
00002bc: 20                                        ; local.get
00002bd: 00                                        ; local index
00002be: 41                                        ; i32.const
00002bf: 08                                        ; i32 literal
00002c0: 6a                                        ; i32.add
00002c1: 20                                        ; local.get
00002c2: 00                                        ; local index
00002c3: 41                                        ; i32.const
00002c4: 00                                        ; i32 literal
00002c5: 6a                                        ; i32.add
00002c6: 2a                                        ; f32.load
00002c7: 02                                        ; alignment
00002c8: 00                                        ; load offset
00002c9: 20                                        ; local.get
00002ca: 00                                        ; local index
00002cb: 41                                        ; i32.const
00002cc: 04                                        ; i32 literal
00002cd: 6a                                        ; i32.add
00002ce: 2a                                        ; f32.load
00002cf: 02                                        ; alignment
00002d0: 00                                        ; load offset
00002d1: 92                                        ; f32.add
00002d2: 38                                        ; f32.store
00002d3: 02                                        ; alignment
00002d4: 00                                        ; store offset
00002d5: 20                                        ; local.get
00002d6: 00                                        ; local index
00002d7: 41                                        ; i32.const
00002d8: 0c                                        ; i32 literal
00002d9: 6a                                        ; i32.add
00002da: 44                                        ; f64.const
00002db: 0000 0000 0038 8f40                       ; f64 literal
00002e3: 39                                        ; f64.store
00002e4: 03                                        ; alignment
00002e5: 00                                        ; store offset
00002e6: 20                                        ; local.get
00002e7: 00                                        ; local index
00002e8: 41                                        ; i32.const
00002e9: 14                                        ; i32 literal
00002ea: 6a                                        ; i32.add
00002eb: 41                                        ; i32.const
00002ec: 0b                                        ; i32 literal
00002ed: 36                                        ; i32.store
00002ee: 02                                        ; alignment
00002ef: 00                                        ; store offset
00002f0: 20                                        ; local.get
00002f1: 00                                        ; local index
00002f2: 24                                        ; global.set
00002f3: 0b                                        ; global index
00002f4: 0b                                        ; end
0000292: 62                                        ; FIXUP func body size
; move data: [131, 2f5) -> [132, 2f6)
0000130: c403                                      ; FIXUP section size
; section "Data" (11)
00002f6: 0b                                        ; section code
00002f7: 00                                        ; section size (guess)
00002f8: 04                                        ; num data segments
; data segment header 0
00002f9: 00                                      
00002fa: 41                                        ; i32.const
00002fb: 0b                                        ; i32 literal
00002fc: 0b                                        ; end
00002fd: 04                                        ; data segment size
; data segment data 0
00002fe: 4142 4300                                 ; data segment data
; data segment header 1
0000302: 00                                      
0000303: 41                                        ; i32.const
0000304: d003                                      ; i32 literal
0000306: 0b                                        ; end
0000307: 07                                        ; data segment size
; data segment data 1
0000308: 5353 5353 5353 00                         ; data segment data
; data segment header 2
000030f: 00                                      
0000310: 41                                        ; i32.const
0000311: d703                                      ; i32 literal
0000313: 0b                                        ; end
0000314: 0b                                        ; data segment size
; data segment data 2
0000315: 4141 4141 4141 4141 4141 00               ; data segment data
; data segment header 3
0000320: 00                                      
0000321: 41                                        ; i32.const
0000322: 0f                                        ; i32 literal
0000323: 0b                                        ; end
0000324: c103                                      ; data segment size
; data segment data 3
0000326: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
0000336: 4f6e 7369 566d 4673 6457 5569 4f6a 4531 
0000346: 6653 7769 5932 7868 6333 4d69 4f69 4a6a 
0000356: 6158 4a6a 6247 5569 4c43 4a6a 6247 467a 
0000366: 6331 3970 5a43 4936 4d54 5573 496d 5a70 
0000376: 5a57 786b 6379 4936 6579 4a34 496a 7037 
0000386: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000396: 4c43 4a79 5958 6369 4f69 4a6d 4d7a 4969 
00003a6: 4c43 4a30 6558 426c 496a 6f7a 6653 7769 
00003b6: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
00003c6: 496a 7062 5853 7769 636d 4633 496a 6f69 
00003d6: 5a6a 4d79 4969 7769 6448 6c77 5a53 4936 
00003e6: 4d33 3073 496e 6f69 4f6e 7369 5a32 5675 
00003f6: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000406: 6479 4936 496d 597a 4d69 4973 496e 5235 
0000416: 6347 5569 4f6a 4e39 4c43 4a79 5957 5270 
0000426: 6458 4d69 4f6e 7369 5a32 5675 5a58 4a70 
0000436: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000446: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000456: 4f6a 5239 4c43 4a70 5a43 4936 6579 4a6e 
0000466: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000476: 636d 4633 496a 6f69 6333 5279 6157 356e 
0000486: 4969 7769 6448 6c77 5a53 4936 4e58 3139 
0000496: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
00004a6: 5a6d 4673 6332 5573 496d 316c 6447 6876 
00004b6: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
00004c6: 6333 4268 5932 5569 4f69 4a30 5a58 4e30 
00004d6: 546d 4674 5a58 4e77 5957 4e6c 496e 303d 
00004e6: 00                                        ; data segment data
; move data: [2f8, 4e7) -> [2f9, 4e8)
00002f7: ef03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011a 0560 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 0001 
0000020: 7f60 0000 0252 0506 7374 7269 6e67 0772 
0000030: 6570 6c61 6365 0000 0673 7472 696e 6703 
0000040: 6164 6400 0106 7374 7269 6e67 066c 656e 
0000050: 6774 6800 0206 7374 7269 6e67 0769 6e64 
0000060: 6578 4f66 0001 0365 6e76 0a62 7974 6563 
0000070: 6875 6e6b 7302 0001 0306 0503 0404 0404 
0000080: 0685 010e 7f01 41e2 030b 7c01 4474 5714 
0000090: 8b0a bf05 400b 7c01 4411 2d44 54fb 2109 
00000a0: 400b 7f01 41ff ffff ff07 0b7e 0142 ffff 
00000b0: ffff ffff ffff ff00 0b7d 0143 ffff 7f7f 
00000c0: 0b7c 0144 ffff ffff ffff ef7f 0b7f 0141 
00000d0: 8080 8080 780b 7e01 4280 8080 8080 8080 
00000e0: 8080 7f0b 7d01 43ff ff7f ff0b 7c01 44ff 
00000f0: ffff ffff ffef ff0b 7f01 4100 0b7f 0141 
0000100: d003 0b7f 0141 000b 0722 011e 636c 6173 
0000110: 7341 7272 6179 5465 7374 2e69 6e69 7469 
0000120: 616c 697a 6541 7272 6179 0005 0801 060a 
0000130: c403 0565 0101 7f23 0021 0020 0041 186a 
0000140: 2400 2000 4100 6a41 01b2 3802 0020 0041 
0000150: 0c6a 2000 4100 6a2a 0200 2000 4104 6a2a 
0000160: 0200 9420 0041 086a 2a02 0094 bb39 0300 
0000170: 2000 4114 6a41 d703 3602 0020 0041 046a 
0000180: 4300 0000 0038 0200 2000 4108 6a43 0000 
0000190: 0000 3802 0020 000f 0bee 0101 047f 2300 
00001a0: 2100 2000 4118 6a24 0020 0041 0c6a 41e4 
00001b0: 00b7 3903 0020 0041 006a 4300 0000 0038 
00001c0: 0200 2000 4104 6a43 0000 0000 3802 0020 
00001d0: 0041 086a 4300 0000 0038 0200 2000 4114 
00001e0: 6a41 0b36 0200 2000 2101 2300 410f 3602 
00001f0: 0023 0041 046a 4103 3602 0023 0041 086a 
0000200: 2103 2003 4178 6a41 0841 0341 046c 6a6a 
0000210: 2400 2300 2102 2002 4118 6a24 0020 0241 
0000220: 006a 4101 b238 0200 2002 4104 6a20 0241 
0000230: 006a 2a02 0038 0200 2002 4108 6a20 0241 
0000240: 006a 2a02 0038 0200 2002 410c 6a44 0000 
0000250: 0000 0038 8f40 3903 0020 0241 146a 410b 
0000260: 3602 0020 0341 006a 2002 3602 0020 0341 
0000270: 046a 2001 3602 0020 0341 086a 1004 3602 
0000280: 0020 0341 786a 240d 0b06 0010 0710 080b 
0000290: 0200 0b62 0101 7f23 0021 0020 0041 186a 
00002a0: 2400 2000 4100 6a41 01b2 3802 0020 0041 
00002b0: 046a 2000 4100 6a2a 0200 3802 0020 0041 
00002c0: 086a 2000 4100 6a2a 0200 2000 4104 6a2a 
00002d0: 0200 9238 0200 2000 410c 6a44 0000 0000 
00002e0: 0038 8f40 3903 0020 0041 146a 410b 3602 
00002f0: 0020 0024 0b0b 0bef 0304 0041 0b0b 0441 
0000300: 4243 0000 41d0 030b 0753 5353 5353 5300 
0000310: 0041 d703 0b0b 4141 4141 4141 4141 4141 
0000320: 0000 410f 0bc1 0365 794a 745a 5731 7663 
0000330: 6e6c 5164 4849 694f 6e73 6956 6d46 7364 
0000340: 5755 694f 6a45 3166 5377 6959 3278 6863 
0000350: 334d 694f 694a 6a61 584a 6a62 4755 694c 
0000360: 434a 6a62 4746 7a63 3139 705a 4349 364d 
0000370: 5455 7349 6d5a 705a 5778 6b63 7949 3665 
0000380: 794a 3449 6a70 3749 6d64 6c62 6d56 7961 
0000390: 574d 694f 6c74 644c 434a 7959 5863 694f 
00003a0: 694a 6d4d 7a49 694c 434a 3065 5842 6c49 
00003b0: 6a6f 7a66 5377 6965 5349 3665 794a 6e5a 
00003c0: 5735 6c63 6d6c 6a49 6a70 6258 5377 6963 
00003d0: 6d46 3349 6a6f 695a 6a4d 7949 6977 6964 
00003e0: 486c 775a 5349 364d 3330 7349 6e6f 694f 
00003f0: 6e73 695a 3256 755a 584a 7059 7949 3657 
0000400: 3130 7349 6e4a 6864 7949 3649 6d59 7a4d 
0000410: 6949 7349 6e52 3563 4755 694f 6a4e 394c 
0000420: 434a 7959 5752 7064 584d 694f 6e73 695a 
0000430: 3256 755a 584a 7059 7949 3657 3130 7349 
0000440: 6e4a 6864 7949 3649 6d59 324e 4349 7349 
0000450: 6e52 3563 4755 694f 6a52 394c 434a 705a 
0000460: 4349 3665 794a 6e5a 5735 6c63 6d6c 6a49 
0000470: 6a70 6258 5377 6963 6d46 3349 6a6f 6963 
0000480: 3352 7961 5735 6e49 6977 6964 486c 775a 
0000490: 5349 364e 5831 394c 434a 7063 314e 3063 
00004a0: 6e56 6a64 4349 365a 6d46 7363 3255 7349 
00004b0: 6d31 6c64 4768 765a 484d 694f 6e74 394c 
00004c0: 434a 7559 5731 6c63 3342 6859 3255 694f 
00004d0: 694a 305a 584e 3054 6d46 745a 584e 7759 
00004e0: 574e 6c49 6e30 3d00                     
