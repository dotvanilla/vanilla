0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 07                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 00                                        ; num results
; type 1
0000010: 60                                        ; func
0000011: 03                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 7f                                        ; i32
0000015: 01                                        ; num results
0000016: 7f                                        ; i32
; type 2
0000017: 60                                        ; func
0000018: 02                                        ; num params
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7f                                        ; i32
0000020: 01                                        ; num results
0000021: 7f                                        ; i32
; type 4
0000022: 60                                        ; func
0000023: 01                                        ; num params
0000024: 7d                                        ; f32
0000025: 01                                        ; num results
0000026: 7f                                        ; i32
; type 5
0000027: 60                                        ; func
0000028: 00                                        ; num params
0000029: 01                                        ; num results
000002a: 7f                                        ; i32
; type 6
000002b: 60                                        ; func
000002c: 00                                        ; num params
000002d: 00                                        ; num results
0000009: 24                                        ; FIXUP section size
; section "Import" (2)
000002e: 02                                        ; section code
000002f: 00                                        ; section size (guess)
0000030: 07                                        ; num imports
; import header 0
0000031: 07                                        ; string length
0000032: 636f 6e73 6f6c 65                        console  ; import module name
0000039: 03                                        ; string length
000003a: 6c6f 67                                  log  ; import field name
000003d: 00                                        ; import kind
000003e: 00                                        ; import signature index
; import header 1
000003f: 06                                        ; string length
0000040: 7374 7269 6e67                           string  ; import module name
0000046: 07                                        ; string length
0000047: 7265 706c 6163 65                        replace  ; import field name
000004e: 00                                        ; import kind
000004f: 01                                        ; import signature index
; import header 2
0000050: 06                                        ; string length
0000051: 7374 7269 6e67                           string  ; import module name
0000057: 03                                        ; string length
0000058: 6164 64                                  add  ; import field name
000005b: 00                                        ; import kind
000005c: 02                                        ; import signature index
; import header 3
000005d: 06                                        ; string length
000005e: 7374 7269 6e67                           string  ; import module name
0000064: 06                                        ; string length
0000065: 6c65 6e67 7468                           length  ; import field name
000006b: 00                                        ; import kind
000006c: 03                                        ; import signature index
; import header 4
000006d: 06                                        ; string length
000006e: 7374 7269 6e67                           string  ; import module name
0000074: 07                                        ; string length
0000075: 696e 6465 784f 66                        indexOf  ; import field name
000007c: 00                                        ; import kind
000007d: 02                                        ; import signature index
; import header 5
000007e: 06                                        ; string length
000007f: 7374 7269 6e67                           string  ; import module name
0000085: 08                                        ; string length
0000086: 746f 5374 7269 6e67                      toString  ; import field name
000008e: 00                                        ; import kind
000008f: 04                                        ; import signature index
; import header 6
0000090: 03                                        ; string length
0000091: 656e 76                                  env  ; import module name
0000094: 0a                                        ; string length
0000095: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000009f: 02                                        ; import kind
00000a0: 00                                        ; limits: flags
00000a1: 01                                        ; limits: initial
000002f: 72                                        ; FIXUP section size
; section "Function" (3)
00000a2: 03                                        ; section code
00000a3: 00                                        ; section size (guess)
00000a4: 03                                        ; num functions
00000a5: 05                                        ; function 0 signature index
00000a6: 06                                        ; function 1 signature index
00000a7: 06                                        ; function 2 signature index
00000a3: 04                                        ; FIXUP section size
; section "Global" (6)
00000a8: 06                                        ; section code
00000a9: 00                                        ; section size (guess)
00000aa: 01                                        ; num globals
00000ab: 7f                                        ; i32
00000ac: 01                                        ; global mutability
00000ad: 41                                        ; i32.const
00000ae: c303                                      ; i32 literal
00000b0: 0b                                        ; end
00000a9: 07                                        ; FIXUP section size
; section "Start" (8)
00000b1: 08                                        ; section code
00000b2: 00                                        ; section size (guess)
00000b3: 07                                        ; start func index
00000b2: 01                                        ; FIXUP section size
; section "Code" (10)
00000b4: 0a                                        ; section code
00000b5: 00                                        ; section size (guess)
00000b6: 03                                        ; num functions
; function body 0
00000b7: 00                                        ; func body size (guess)
00000b8: 01                                        ; local decl count
00000b9: 01                                        ; local type count
00000ba: 7f                                        ; i32
00000bb: 23                                        ; global.get
00000bc: 00                                        ; global index
00000bd: 21                                        ; local.set
00000be: 00                                        ; local index
00000bf: 20                                        ; local.get
00000c0: 00                                        ; local index
00000c1: 41                                        ; i32.const
00000c2: 0c                                        ; i32 literal
00000c3: 6a                                        ; i32.add
00000c4: 41                                        ; i32.const
00000c5: a703                                      ; i32 literal
00000c7: 36                                        ; i32.store
00000c8: 02                                        ; alignment
00000c9: 00                                        ; store offset
00000ca: 20                                        ; local.get
00000cb: 00                                        ; local index
00000cc: 41                                        ; i32.const
00000cd: 00                                        ; i32 literal
00000ce: 6a                                        ; i32.add
00000cf: 43                                        ; f32.const
00000d0: 0000 0000                                 ; f32 literal
00000d4: 38                                        ; f32.store
00000d5: 02                                        ; alignment
00000d6: 00                                        ; store offset
00000d7: 20                                        ; local.get
00000d8: 00                                        ; local index
00000d9: 41                                        ; i32.const
00000da: 04                                        ; i32 literal
00000db: 6a                                        ; i32.add
00000dc: 43                                        ; f32.const
00000dd: 0000 0000                                 ; f32 literal
00000e1: 38                                        ; f32.store
00000e2: 02                                        ; alignment
00000e3: 00                                        ; store offset
00000e4: 20                                        ; local.get
00000e5: 00                                        ; local index
00000e6: 41                                        ; i32.const
00000e7: 08                                        ; i32 literal
00000e8: 6a                                        ; i32.add
00000e9: 43                                        ; f32.const
00000ea: 0000 0000                                 ; f32 literal
00000ee: 38                                        ; f32.store
00000ef: 02                                        ; alignment
00000f0: 00                                        ; store offset
00000f1: 20                                        ; local.get
00000f2: 00                                        ; local index
00000f3: 41                                        ; i32.const
00000f4: 10                                        ; i32 literal
00000f5: 6a                                        ; i32.add
00000f6: 24                                        ; global.set
00000f7: 00                                        ; global index
00000f8: 20                                        ; local.get
00000f9: 00                                        ; local index
00000fa: 0f                                        ; return
00000fb: 0b                                        ; end
00000b7: 44                                        ; FIXUP func body size
; function body 1
00000fc: 00                                        ; func body size (guess)
00000fd: 00                                        ; local decl count
00000fe: 10                                        ; call
00000ff: 08                                        ; function index
0000100: 0b                                        ; end
00000fc: 04                                        ; FIXUP func body size
; function body 2
0000101: 00                                        ; func body size (guess)
0000102: 01                                        ; local decl count
0000103: 07                                        ; local type count
0000104: 7f                                        ; i32
0000105: 23                                        ; global.get
0000106: 00                                        ; global index
0000107: 21                                        ; local.set
0000108: 00                                        ; local index
0000109: 20                                        ; local.get
000010a: 00                                        ; local index
000010b: 41                                        ; i32.const
000010c: 0c                                        ; i32 literal
000010d: 6a                                        ; i32.add
000010e: 41                                        ; i32.const
000010f: ad03                                      ; i32 literal
0000111: 36                                        ; i32.store
0000112: 02                                        ; alignment
0000113: 00                                        ; store offset
0000114: 20                                        ; local.get
0000115: 00                                        ; local index
0000116: 41                                        ; i32.const
0000117: 00                                        ; i32 literal
0000118: 6a                                        ; i32.add
0000119: 41                                        ; i32.const
000011a: 01                                        ; i32 literal
000011b: b2                                        ; f32.convert_i32_s
000011c: 38                                        ; f32.store
000011d: 02                                        ; alignment
000011e: 00                                        ; store offset
000011f: 20                                        ; local.get
0000120: 00                                        ; local index
0000121: 41                                        ; i32.const
0000122: 04                                        ; i32 literal
0000123: 6a                                        ; i32.add
0000124: 41                                        ; i32.const
0000125: 02                                        ; i32 literal
0000126: b2                                        ; f32.convert_i32_s
0000127: 38                                        ; f32.store
0000128: 02                                        ; alignment
0000129: 00                                        ; store offset
000012a: 20                                        ; local.get
000012b: 00                                        ; local index
000012c: 41                                        ; i32.const
000012d: 08                                        ; i32 literal
000012e: 6a                                        ; i32.add
000012f: 43                                        ; f32.const
0000130: 0000 0000                                 ; f32 literal
0000134: 38                                        ; f32.store
0000135: 02                                        ; alignment
0000136: 00                                        ; store offset
0000137: 20                                        ; local.get
0000138: 00                                        ; local index
0000139: 41                                        ; i32.const
000013a: 10                                        ; i32 literal
000013b: 6a                                        ; i32.add
000013c: 24                                        ; global.set
000013d: 00                                        ; global index
000013e: 20                                        ; local.get
000013f: 00                                        ; local index
0000140: 21                                        ; local.set
0000141: 01                                        ; local index
0000142: 20                                        ; local.get
0000143: 01                                        ; local index
0000144: 21                                        ; local.set
0000145: 02                                        ; local index
0000146: 20                                        ; local.get
0000147: 02                                        ; local index
0000148: 41                                        ; i32.const
0000149: 04                                        ; i32 literal
000014a: 6a                                        ; i32.add
000014b: 41                                        ; i32.const
000014c: e400                                      ; i32 literal
000014e: b2                                        ; f32.convert_i32_s
000014f: 38                                        ; f32.store
0000150: 02                                        ; alignment
0000151: 00                                        ; store offset
0000152: 20                                        ; local.get
0000153: 01                                        ; local index
0000154: 41                                        ; i32.const
0000155: 04                                        ; i32 literal
0000156: 6a                                        ; i32.add
0000157: 41                                        ; i32.const
0000158: f403                                      ; i32 literal
000015a: b2                                        ; f32.convert_i32_s
000015b: 38                                        ; f32.store
000015c: 02                                        ; alignment
000015d: 00                                        ; store offset
000015e: 20                                        ; local.get
000015f: 02                                        ; local index
0000160: 41                                        ; i32.const
0000161: 04                                        ; i32 literal
0000162: 6a                                        ; i32.add
0000163: 2a                                        ; f32.load
0000164: 02                                        ; alignment
0000165: 00                                        ; load offset
0000166: 10                                        ; call
0000167: 05                                        ; function index
0000168: 41                                        ; i32.const
0000169: af03                                      ; i32 literal
000016b: 10                                        ; call
000016c: 00                                        ; function index
000016d: 20                                        ; local.get
000016e: 01                                        ; local index
000016f: 41                                        ; i32.const
0000170: 04                                        ; i32 literal
0000171: 6a                                        ; i32.add
0000172: 2a                                        ; f32.load
0000173: 02                                        ; alignment
0000174: 00                                        ; load offset
0000175: 10                                        ; call
0000176: 05                                        ; function index
0000177: 41                                        ; i32.const
0000178: b403                                      ; i32 literal
000017a: 10                                        ; call
000017b: 00                                        ; function index
000017c: 23                                        ; global.get
000017d: 00                                        ; global index
000017e: 41                                        ; i32.const
000017f: 0a                                        ; i32 literal
0000180: 36                                        ; i32.store
0000181: 02                                        ; alignment
0000182: 00                                        ; store offset
0000183: 23                                        ; global.get
0000184: 00                                        ; global index
0000185: 41                                        ; i32.const
0000186: 04                                        ; i32 literal
0000187: 6a                                        ; i32.add
0000188: 41                                        ; i32.const
0000189: 03                                        ; i32 literal
000018a: 36                                        ; i32.store
000018b: 02                                        ; alignment
000018c: 00                                        ; store offset
000018d: 23                                        ; global.get
000018e: 00                                        ; global index
000018f: 41                                        ; i32.const
0000190: 08                                        ; i32 literal
0000191: 6a                                        ; i32.add
0000192: 21                                        ; local.set
0000193: 03                                        ; local index
0000194: 20                                        ; local.get
0000195: 03                                        ; local index
0000196: 41                                        ; i32.const
0000197: 00                                        ; i32 literal
0000198: 6a                                        ; i32.add
0000199: 20                                        ; local.get
000019a: 02                                        ; local index
000019b: 36                                        ; i32.store
000019c: 02                                        ; alignment
000019d: 00                                        ; store offset
000019e: 20                                        ; local.get
000019f: 03                                        ; local index
00001a0: 41                                        ; i32.const
00001a1: 04                                        ; i32 literal
00001a2: 6a                                        ; i32.add
00001a3: 20                                        ; local.get
00001a4: 01                                        ; local index
00001a5: 36                                        ; i32.store
00001a6: 02                                        ; alignment
00001a7: 00                                        ; store offset
00001a8: 20                                        ; local.get
00001a9: 03                                        ; local index
00001aa: 41                                        ; i32.const
00001ab: 08                                        ; i32 literal
00001ac: 6a                                        ; i32.add
00001ad: 10                                        ; call
00001ae: 06                                        ; function index
00001af: 36                                        ; i32.store
00001b0: 02                                        ; alignment
00001b1: 00                                        ; store offset
00001b2: 20                                        ; local.get
00001b3: 03                                        ; local index
00001b4: 41                                        ; i32.const
00001b5: 78                                        ; i32 literal
00001b6: 6a                                        ; i32.add
00001b7: 41                                        ; i32.const
00001b8: 14                                        ; i32 literal
00001b9: 6a                                        ; i32.add
00001ba: 24                                        ; global.set
00001bb: 00                                        ; global index
00001bc: 20                                        ; local.get
00001bd: 03                                        ; local index
00001be: 41                                        ; i32.const
00001bf: 78                                        ; i32 literal
00001c0: 6a                                        ; i32.add
00001c1: 21                                        ; local.set
00001c2: 04                                        ; local index
00001c3: 20                                        ; local.get
00001c4: 04                                        ; local index
00001c5: 41                                        ; i32.const
00001c6: 08                                        ; i32 literal
00001c7: 6a                                        ; i32.add
00001c8: 41                                        ; i32.const
00001c9: 00                                        ; i32 literal
00001ca: 41                                        ; i32.const
00001cb: 04                                        ; i32 literal
00001cc: 6c                                        ; i32.mul
00001cd: 6a                                        ; i32.add
00001ce: 28                                        ; i32.load
00001cf: 02                                        ; alignment
00001d0: 00                                        ; load offset
00001d1: 21                                        ; local.set
00001d2: 05                                        ; local index
00001d3: 20                                        ; local.get
00001d4: 04                                        ; local index
00001d5: 41                                        ; i32.const
00001d6: 08                                        ; i32 literal
00001d7: 6a                                        ; i32.add
00001d8: 41                                        ; i32.const
00001d9: 01                                        ; i32 literal
00001da: 41                                        ; i32.const
00001db: 04                                        ; i32 literal
00001dc: 6c                                        ; i32.mul
00001dd: 6a                                        ; i32.add
00001de: 28                                        ; i32.load
00001df: 02                                        ; alignment
00001e0: 00                                        ; load offset
00001e1: 21                                        ; local.set
00001e2: 06                                        ; local index
00001e3: 20                                        ; local.get
00001e4: 04                                        ; local index
00001e5: 41                                        ; i32.const
00001e6: 08                                        ; i32 literal
00001e7: 6a                                        ; i32.add
00001e8: 41                                        ; i32.const
00001e9: 00                                        ; i32 literal
00001ea: 41                                        ; i32.const
00001eb: 10                                        ; i32 literal
00001ec: 6c                                        ; i32.mul
00001ed: 6a                                        ; i32.add
00001ee: 41                                        ; i32.const
00001ef: 08                                        ; i32 literal
00001f0: 6a                                        ; i32.add
00001f1: 41                                        ; i32.const
00001f2: 00                                        ; i32 literal
00001f3: 41                                        ; i32.const
00001f4: e400                                      ; i32 literal
00001f6: 6b                                        ; i32.sub
00001f7: b2                                        ; f32.convert_i32_s
00001f8: 38                                        ; f32.store
00001f9: 02                                        ; alignment
00001fa: 00                                        ; store offset
00001fb: 20                                        ; local.get
00001fc: 04                                        ; local index
00001fd: 41                                        ; i32.const
00001fe: 08                                        ; i32 literal
00001ff: 6a                                        ; i32.add
0000200: 41                                        ; i32.const
0000201: 00                                        ; i32 literal
0000202: 41                                        ; i32.const
0000203: 04                                        ; i32 literal
0000204: 6c                                        ; i32.mul
0000205: 6a                                        ; i32.add
0000206: 28                                        ; i32.load
0000207: 02                                        ; alignment
0000208: 00                                        ; load offset
0000209: 41                                        ; i32.const
000020a: 08                                        ; i32 literal
000020b: 6a                                        ; i32.add
000020c: 2a                                        ; f32.load
000020d: 02                                        ; alignment
000020e: 00                                        ; load offset
000020f: 10                                        ; call
0000210: 05                                        ; function index
0000211: 41                                        ; i32.const
0000212: b903                                      ; i32 literal
0000214: 10                                        ; call
0000215: 00                                        ; function index
0000216: 20                                        ; local.get
0000217: 05                                        ; local index
0000218: 41                                        ; i32.const
0000219: 08                                        ; i32 literal
000021a: 6a                                        ; i32.add
000021b: 2a                                        ; f32.load
000021c: 02                                        ; alignment
000021d: 00                                        ; load offset
000021e: 10                                        ; call
000021f: 05                                        ; function index
0000220: 41                                        ; i32.const
0000221: be03                                      ; i32 literal
0000223: 10                                        ; call
0000224: 00                                        ; function index
0000225: 0b                                        ; end
; move data: [102, 226) -> [103, 227)
0000101: a402                                      ; FIXUP func body size
; move data: [b6, 227) -> [b7, 228)
00000b5: f102                                      ; FIXUP section size
; section "Data" (11)
0000228: 0b                                        ; section code
0000229: 00                                        ; section size (guess)
000022a: 07                                        ; num data segments
; data segment header 0
000022b: 00                                      
000022c: 41                                        ; i32.const
000022d: a703                                      ; i32 literal
000022f: 0b                                        ; end
0000230: 06                                        ; data segment size
; data segment data 0
0000231: 3939 3939 3900                            ; data segment data
; data segment header 1
0000237: 00                                      
0000238: 41                                        ; i32.const
0000239: ad03                                      ; i32 literal
000023b: 0b                                        ; end
000023c: 02                                        ; data segment size
; data segment data 1
000023d: 4100                                      ; data segment data
; data segment header 2
000023f: 00                                      
0000240: 41                                        ; i32.const
0000241: af03                                      ; i32 literal
0000243: 0b                                        ; end
0000244: 05                                        ; data segment size
; data segment data 2
0000245: 626c 7565 00                              ; data segment data
; data segment header 3
000024a: 00                                      
000024b: 41                                        ; i32.const
000024c: b403                                      ; i32 literal
000024e: 0b                                        ; end
000024f: 05                                        ; data segment size
; data segment data 3
0000250: 626c 7565 00                              ; data segment data
; data segment header 4
0000255: 00                                      
0000256: 41                                        ; i32.const
0000257: b903                                      ; i32 literal
0000259: 0b                                        ; end
000025a: 05                                        ; data segment size
; data segment data 4
000025b: 626c 7565 00                              ; data segment data
; data segment header 5
0000260: 00                                      
0000261: 41                                        ; i32.const
0000262: be03                                      ; i32 literal
0000264: 0b                                        ; end
0000265: 05                                        ; data segment size
; data segment data 5
0000266: 626c 7565 00                              ; data segment data
; data segment header 6
000026b: 00                                      
000026c: 41                                        ; i32.const
000026d: 0a                                        ; i32 literal
000026e: 0b                                        ; end
000026f: 9d03                                      ; data segment size
; data segment data 6
0000271: 6579 4a74 5a57 3176 636e 6c51 6448 4969 
0000281: 4f6e 7369 566d 4673 6457 5569 4f6a 4577 
0000291: 6653 7769 5932 7868 6333 4d69 4f69 4a6a 
00002a1: 6158 4a6a 6247 5569 4c43 4a6a 6247 467a 
00002b1: 6331 3970 5a43 4936 4d54 4173 496d 5a70 
00002c1: 5a57 786b 6379 4936 6579 4a34 496a 7037 
00002d1: 496d 646c 626d 5679 6157 4d69 4f6d 3531 
00002e1: 6247 7773 496e 4a68 6479 4936 496c 4e70 
00002f1: 626d 6473 5a53 4973 496e 5235 6347 5569 
0000301: 4f6a 4e39 4c43 4a35 496a 7037 496d 646c 
0000311: 626d 5679 6157 4d69 4f6d 3531 6247 7773 
0000321: 496e 4a68 6479 4936 496c 4e70 626d 6473 
0000331: 5a53 4973 496e 5235 6347 5569 4f6a 4e39 
0000341: 4c43 4a79 5957 5270 6458 4d69 4f6e 7369 
0000351: 5a32 5675 5a58 4a70 5979 4936 626e 5673 
0000361: 6243 7769 636d 4633 496a 6f69 5532 6c75 
0000371: 5a32 786c 4969 7769 6448 6c77 5a53 4936 
0000381: 4d33 3073 496d 6c6b 496a 7037 496d 646c 
0000391: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00003a1: 5958 6369 4f69 4a7a 6448 4a70 626d 6369 
00003b1: 4c43 4a30 6558 426c 496a 6f31 6658 3073 
00003c1: 496d 6c7a 5533 5279 6457 4e30 496a 7030 
00003d1: 636e 566c 4c43 4a74 5a58 526f 6232 527a 
00003e1: 496a 7037 6653 7769 626d 4674 5a58 4e77 
00003f1: 5957 4e6c 496a 6f69 6333 5279 6457 4e30 
0000401: 6458 4a6c 6447 567a 6443 4a39 00          ; data segment data
; move data: [22a, 40e) -> [22b, 40f)
0000229: e403                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0124 0760 027f 7f00 
0000010: 6003 7f7f 7f01 7f60 027f 7f01 7f60 017f 
0000020: 017f 6001 7d01 7f60 0001 7f60 0000 0272 
0000030: 0707 636f 6e73 6f6c 6503 6c6f 6700 0006 
0000040: 7374 7269 6e67 0772 6570 6c61 6365 0001 
0000050: 0673 7472 696e 6703 6164 6400 0206 7374 
0000060: 7269 6e67 066c 656e 6774 6800 0306 7374 
0000070: 7269 6e67 0769 6e64 6578 4f66 0002 0673 
0000080: 7472 696e 6708 746f 5374 7269 6e67 0004 
0000090: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
00000a0: 0001 0304 0305 0606 0607 017f 0141 c303 
00000b0: 0b08 0107 0af1 0203 4401 017f 2300 2100 
00000c0: 2000 410c 6a41 a703 3602 0020 0041 006a 
00000d0: 4300 0000 0038 0200 2000 4104 6a43 0000 
00000e0: 0000 3802 0020 0041 086a 4300 0000 0038 
00000f0: 0200 2000 4110 6a24 0020 000f 0b04 0010 
0000100: 080b a402 0107 7f23 0021 0020 0041 0c6a 
0000110: 41ad 0336 0200 2000 4100 6a41 01b2 3802 
0000120: 0020 0041 046a 4102 b238 0200 2000 4108 
0000130: 6a43 0000 0000 3802 0020 0041 106a 2400 
0000140: 2000 2101 2001 2102 2002 4104 6a41 e400 
0000150: b238 0200 2001 4104 6a41 f403 b238 0200 
0000160: 2002 4104 6a2a 0200 1005 41af 0310 0020 
0000170: 0141 046a 2a02 0010 0541 b403 1000 2300 
0000180: 410a 3602 0023 0041 046a 4103 3602 0023 
0000190: 0041 086a 2103 2003 4100 6a20 0236 0200 
00001a0: 2003 4104 6a20 0136 0200 2003 4108 6a10 
00001b0: 0636 0200 2003 4178 6a41 146a 2400 2003 
00001c0: 4178 6a21 0420 0441 086a 4100 4104 6c6a 
00001d0: 2802 0021 0520 0441 086a 4101 4104 6c6a 
00001e0: 2802 0021 0620 0441 086a 4100 4110 6c6a 
00001f0: 4108 6a41 0041 e400 6bb2 3802 0020 0441 
0000200: 086a 4100 4104 6c6a 2802 0041 086a 2a02 
0000210: 0010 0541 b903 1000 2005 4108 6a2a 0200 
0000220: 1005 41be 0310 000b 0be4 0307 0041 a703 
0000230: 0b06 3939 3939 3900 0041 ad03 0b02 4100 
0000240: 0041 af03 0b05 626c 7565 0000 41b4 030b 
0000250: 0562 6c75 6500 0041 b903 0b05 626c 7565 
0000260: 0000 41be 030b 0562 6c75 6500 0041 0a0b 
0000270: 9d03 6579 4a74 5a57 3176 636e 6c51 6448 
0000280: 4969 4f6e 7369 566d 4673 6457 5569 4f6a 
0000290: 4577 6653 7769 5932 7868 6333 4d69 4f69 
00002a0: 4a6a 6158 4a6a 6247 5569 4c43 4a6a 6247 
00002b0: 467a 6331 3970 5a43 4936 4d54 4173 496d 
00002c0: 5a70 5a57 786b 6379 4936 6579 4a34 496a 
00002d0: 7037 496d 646c 626d 5679 6157 4d69 4f6d 
00002e0: 3531 6247 7773 496e 4a68 6479 4936 496c 
00002f0: 4e70 626d 6473 5a53 4973 496e 5235 6347 
0000300: 5569 4f6a 4e39 4c43 4a35 496a 7037 496d 
0000310: 646c 626d 5679 6157 4d69 4f6d 3531 6247 
0000320: 7773 496e 4a68 6479 4936 496c 4e70 626d 
0000330: 6473 5a53 4973 496e 5235 6347 5569 4f6a 
0000340: 4e39 4c43 4a79 5957 5270 6458 4d69 4f6e 
0000350: 7369 5a32 5675 5a58 4a70 5979 4936 626e 
0000360: 5673 6243 7769 636d 4633 496a 6f69 5532 
0000370: 6c75 5a32 786c 4969 7769 6448 6c77 5a53 
0000380: 4936 4d33 3073 496d 6c6b 496a 7037 496d 
0000390: 646c 626d 5679 6157 4d69 4f6c 7464 4c43 
00003a0: 4a79 5958 6369 4f69 4a7a 6448 4a70 626d 
00003b0: 6369 4c43 4a30 6558 426c 496a 6f31 6658 
00003c0: 3073 496d 6c7a 5533 5279 6457 4e30 496a 
00003d0: 7030 636e 566c 4c43 4a74 5a58 526f 6232 
00003e0: 527a 496a 7037 6653 7769 626d 4674 5a58 
00003f0: 4e77 5957 4e6c 496a 6f69 6333 5279 6457 
0000400: 4e30 6458 4a6c 6447 567a 6443 4a39 00   
