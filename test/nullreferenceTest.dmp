0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 03                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 7f                                        ; i32
0000015: 01                                        ; num results
0000016: 7f                                        ; i32
; type 2
0000017: 60                                        ; func
0000018: 02                                        ; num params
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 00                                        ; num results
; type 4
0000020: 60                                        ; func
0000021: 00                                        ; num params
0000022: 01                                        ; num results
0000023: 7f                                        ; i32
0000009: 1a                                        ; FIXUP section size
; section "Import" (2)
0000024: 02                                        ; section code
0000025: 00                                        ; section size (guess)
0000026: 09                                        ; num imports
; import header 0
0000027: 08                                        ; string length
0000028: 646f 6375 6d65 6e74                      document  ; import module name
0000030: 0e                                        ; string length
0000031: 6765 7445 6c65 6d65 6e74 4279 4964       getElementById  ; import field name
000003f: 00                                        ; import kind
0000040: 00                                        ; import signature index
; import header 1
0000041: 08                                        ; string length
0000042: 646f 6375 6d65 6e74                      document  ; import module name
000004a: 0c                                        ; string length
000004b: 7365 7441 7474 7269 6275 7465            setAttribute  ; import field name
0000057: 00                                        ; import kind
0000058: 01                                        ; import signature index
; import header 2
0000059: 07                                        ; string length
000005a: 636f 6e73 6f6c 65                        console  ; import module name
0000061: 03                                        ; string length
0000062: 6c6f 67                                  log  ; import field name
0000065: 00                                        ; import kind
0000066: 00                                        ; import signature index
; import header 3
0000067: 06                                        ; string length
0000068: 7374 7269 6e67                           string  ; import module name
000006e: 07                                        ; string length
000006f: 7265 706c 6163 65                        replace  ; import field name
0000076: 00                                        ; import kind
0000077: 01                                        ; import signature index
; import header 4
0000078: 06                                        ; string length
0000079: 7374 7269 6e67                           string  ; import module name
000007f: 03                                        ; string length
0000080: 6164 64                                  add  ; import field name
0000083: 00                                        ; import kind
0000084: 02                                        ; import signature index
; import header 5
0000085: 06                                        ; string length
0000086: 7374 7269 6e67                           string  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 00                                        ; import signature index
; import header 6
0000095: 06                                        ; string length
0000096: 7374 7269 6e67                           string  ; import module name
000009c: 07                                        ; string length
000009d: 696e 6465 784f 66                        indexOf  ; import field name
00000a4: 00                                        ; import kind
00000a5: 02                                        ; import signature index
; import header 7
00000a6: 06                                        ; string length
00000a7: 7374 7269 6e67                           string  ; import module name
00000ad: 08                                        ; string length
00000ae: 746f 5374 7269 6e67                      toString  ; import field name
00000b6: 00                                        ; import kind
00000b7: 00                                        ; import signature index
; import header 8
00000b8: 03                                        ; string length
00000b9: 656e 76                                  env  ; import module name
00000bc: 0a                                        ; string length
00000bd: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c7: 02                                        ; import kind
00000c8: 00                                        ; limits: flags
00000c9: 01                                        ; limits: initial
; move data: [26, ca) -> [27, cb)
0000025: a401                                      ; FIXUP section size
; section "Function" (3)
00000cb: 03                                        ; section code
00000cc: 00                                        ; section size (guess)
00000cd: 03                                        ; num functions
00000ce: 03                                        ; function 0 signature index
00000cf: 03                                        ; function 1 signature index
00000d0: 04                                        ; function 2 signature index
00000cc: 04                                        ; FIXUP section size
; section "Global" (6)
00000d1: 06                                        ; section code
00000d2: 00                                        ; section size (guess)
00000d3: 01                                        ; num globals
00000d4: 7f                                        ; i32
00000d5: 01                                        ; global mutability
00000d6: 41                                        ; i32.const
00000d7: 00                                        ; i32 literal
00000d8: 0b                                        ; end
00000d2: 06                                        ; FIXUP section size
; section "Export" (7)
00000d9: 07                                        ; section code
00000da: 00                                        ; section size (guess)
00000db: 03                                        ; num exports
00000dc: 1b                                        ; string length
00000dd: 6e75 6c6c 7265 6665 7265 6e63 6554 6573  nullreferenceTes
00000ed: 742e 6973 4e6f 7468 696e 67              t.isNothing  ; export name
00000f8: 00                                        ; export kind
00000f9: 08                                        ; export func index
00000fa: 1b                                        ; string length
00000fb: 6e75 6c6c 7265 6665 7265 6e63 6554 6573  nullreferenceTes
000010b: 742e 6e6f 5265 7475 726e 73              t.noReturns  ; export name
0000116: 00                                        ; export kind
0000117: 09                                        ; export func index
0000118: 16                                        ; string length
0000119: 6e75 6c6c 7265 6665 7265 6e63 6554 6573  nullreferenceTes
0000129: 742e 7465 7374                           t.test  ; export name
000012f: 00                                        ; export kind
0000130: 0a                                        ; export func index
00000da: 56                                        ; FIXUP section size
; section "Code" (10)
0000131: 0a                                        ; section code
0000132: 00                                        ; section size (guess)
0000133: 03                                        ; num functions
; function body 0
0000134: 00                                        ; func body size (guess)
0000135: 00                                        ; local decl count
0000136: 23                                        ; global.get
0000137: 00                                        ; global index
0000138: 41                                        ; i32.const
0000139: 00                                        ; i32 literal
000013a: 46                                        ; i32.eq
000013b: 04                                        ; if
000013c: 40                                        ; void
000013d: 41                                        ; i32.const
000013e: 01                                        ; i32 literal
000013f: 10                                        ; call
0000140: 02                                        ; function index
0000141: 1a                                        ; drop
0000142: 05                                        ; else
0000143: 41                                        ; i32.const
0000144: 0b                                        ; i32 literal
0000145: 10                                        ; call
0000146: 02                                        ; function index
0000147: 1a                                        ; drop
0000148: 23                                        ; global.get
0000149: 00                                        ; global index
000014a: 10                                        ; call
000014b: 02                                        ; function index
000014c: 1a                                        ; drop
000014d: 0b                                        ; end
000014e: 41                                        ; i32.const
000014f: 00                                        ; i32 literal
0000150: 23                                        ; global.get
0000151: 00                                        ; global index
0000152: 46                                        ; i32.eq
0000153: 04                                        ; if
0000154: 40                                        ; void
0000155: 41                                        ; i32.const
0000156: 3d                                        ; i32 literal
0000157: 10                                        ; call
0000158: 02                                        ; function index
0000159: 1a                                        ; drop
000015a: 05                                        ; else
000015b: 41                                        ; i32.const
000015c: c700                                      ; i32 literal
000015e: 10                                        ; call
000015f: 02                                        ; function index
0000160: 1a                                        ; drop
0000161: 23                                        ; global.get
0000162: 00                                        ; global index
0000163: 10                                        ; call
0000164: 02                                        ; function index
0000165: 1a                                        ; drop
0000166: 0b                                        ; end
0000167: 0b                                        ; end
0000134: 33                                        ; FIXUP func body size
; function body 1
0000168: 00                                        ; func body size (guess)
0000169: 00                                        ; local decl count
000016a: 41                                        ; i32.const
000016b: 8101                                      ; i32 literal
000016d: 10                                        ; call
000016e: 02                                        ; function index
000016f: 1a                                        ; drop
0000170: 41                                        ; i32.const
0000171: 00                                        ; i32 literal
0000172: 10                                        ; call
0000173: 02                                        ; function index
0000174: 1a                                        ; drop
0000175: 0b                                        ; end
0000168: 0d                                        ; FIXUP func body size
; function body 2
0000176: 00                                        ; func body size (guess)
0000177: 01                                        ; local decl count
0000178: 01                                        ; local type count
0000179: 7f                                        ; i32
000017a: 41                                        ; i32.const
000017b: 8901                                      ; i32 literal
000017d: 10                                        ; call
000017e: 00                                        ; function index
000017f: 21                                        ; local.set
0000180: 00                                        ; local index
0000181: 20                                        ; local.get
0000182: 00                                        ; local index
0000183: 41                                        ; i32.const
0000184: 8e01                                      ; i32 literal
0000186: 20                                        ; local.get
0000187: 00                                        ; local index
0000188: 10                                        ; call
0000189: 07                                        ; function index
000018a: 41                                        ; i32.const
000018b: 9001                                      ; i32 literal
000018d: 10                                        ; call
000018e: 04                                        ; function index
000018f: 10                                        ; call
0000190: 01                                        ; function index
0000191: 1a                                        ; drop
0000192: 41                                        ; i32.const
0000193: 00                                        ; i32 literal
0000194: 41                                        ; i32.const
0000195: a001                                      ; i32 literal
0000197: 41                                        ; i32.const
0000198: a201                                      ; i32 literal
000019a: 10                                        ; call
000019b: 01                                        ; function index
000019c: 1a                                        ; drop
000019d: 41                                        ; i32.const
000019e: 00                                        ; i32 literal
000019f: 0f                                        ; return
00001a0: 0b                                        ; end
0000176: 2a                                        ; FIXUP func body size
0000132: 6e                                        ; FIXUP section size
; section "Data" (11)
00001a1: 0b                                        ; section code
00001a2: 00                                        ; section size (guess)
00001a3: 0a                                        ; num data segments
; data segment header 0
00001a4: 00                                      
00001a5: 41                                        ; i32.const
00001a6: 01                                        ; i32 literal
00001a7: 0b                                        ; end
00001a8: 0a                                        ; data segment size
; data segment data 0
00001a9: 4e6f 7468 696e 6720 3100                  ; data segment data
; data segment header 1
00001b3: 00                                      
00001b4: 41                                        ; i32.const
00001b5: 0b                                        ; i32 literal
00001b6: 0b                                        ; end
00001b7: 32                                        ; data segment size
; data segment data 1
00001b8: 5468 6973 206d 6573 7361 6765 2073 686f 
00001c8: 756c 6420 6e65 7665 7220 6469 7370 6c61 
00001d8: 7920 6f6e 2074 6865 2063 6f6e 736f 6c65 
00001e8: 2100                                      ; data segment data
; data segment header 2
00001ea: 00                                      
00001eb: 41                                        ; i32.const
00001ec: 3d                                        ; i32 literal
00001ed: 0b                                        ; end
00001ee: 0a                                        ; data segment size
; data segment data 2
00001ef: 4e6f 7468 696e 6720 3200                  ; data segment data
; data segment header 3
00001f9: 00                                      
00001fa: 41                                        ; i32.const
00001fb: c700                                      ; i32 literal
00001fd: 0b                                        ; end
00001fe: 3a                                        ; data segment size
; data segment data 3
00001ff: 5468 6973 206d 6573 7361 6765 2069 7320 
000020f: 616c 736f 2073 686f 756c 6420 6e65 7665 
000021f: 7220 6469 7370 6c61 7920 6f6e 2074 6865 
000022f: 2063 6f6e 736f 6c65 2100                  ; data segment data
; data segment header 4
0000239: 00                                      
000023a: 41                                        ; i32.const
000023b: 8101                                      ; i32 literal
000023d: 0b                                        ; end
000023e: 08                                        ; data segment size
; data segment data 4
000023f: 4e6f 7468 696e 6700                       ; data segment data
; data segment header 5
0000247: 00                                      
0000248: 41                                        ; i32.const
0000249: 8901                                      ; i32 literal
000024b: 0b                                        ; end
000024c: 05                                        ; data segment size
; data segment data 5
000024d: 7465 7374 00                              ; data segment data
; data segment header 6
0000252: 00                                      
0000253: 41                                        ; i32.const
0000254: 8e01                                      ; i32 literal
0000256: 0b                                        ; end
0000257: 02                                        ; data segment size
; data segment data 6
0000258: 6100                                      ; data segment data
; data segment header 7
000025a: 00                                      
000025b: 41                                        ; i32.const
000025c: 9001                                      ; i32 literal
000025e: 0b                                        ; end
000025f: 10                                        ; data segment size
; data segment data 7
0000260: 2069 7320 6e6f 7420 6e6f 7468 696e 6700   ; data segment data
; data segment header 8
0000270: 00                                      
0000271: 41                                        ; i32.const
0000272: a001                                      ; i32 literal
0000274: 0b                                        ; end
0000275: 02                                        ; data segment size
; data segment data 8
0000276: 6100                                      ; data segment data
; data segment header 9
0000278: 00                                      
0000279: 41                                        ; i32.const
000027a: a201                                      ; i32 literal
000027c: 0b                                        ; end
000027d: 02                                        ; data segment size
; data segment data 9
000027e: 6200                                      ; data segment data
; move data: [1a3, 280) -> [1a4, 281)
00001a2: dd01                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011a 0560 017f 017f 
0000010: 6003 7f7f 7f01 7f60 027f 7f01 7f60 0000 
0000020: 6000 017f 02a4 0109 0864 6f63 756d 656e 
0000030: 740e 6765 7445 6c65 6d65 6e74 4279 4964 
0000040: 0000 0864 6f63 756d 656e 740c 7365 7441 
0000050: 7474 7269 6275 7465 0001 0763 6f6e 736f 
0000060: 6c65 036c 6f67 0000 0673 7472 696e 6707 
0000070: 7265 706c 6163 6500 0106 7374 7269 6e67 
0000080: 0361 6464 0002 0673 7472 696e 6706 6c65 
0000090: 6e67 7468 0000 0673 7472 696e 6707 696e 
00000a0: 6465 784f 6600 0206 7374 7269 6e67 0874 
00000b0: 6f53 7472 696e 6700 0003 656e 760a 6279 
00000c0: 7465 6368 756e 6b73 0200 0103 0403 0303 
00000d0: 0406 0601 7f01 4100 0b07 5603 1b6e 756c 
00000e0: 6c72 6566 6572 656e 6365 5465 7374 2e69 
00000f0: 734e 6f74 6869 6e67 0008 1b6e 756c 6c72 
0000100: 6566 6572 656e 6365 5465 7374 2e6e 6f52 
0000110: 6574 7572 6e73 0009 166e 756c 6c72 6566 
0000120: 6572 656e 6365 5465 7374 2e74 6573 7400 
0000130: 0a0a 6e03 3300 2300 4100 4604 4041 0110 
0000140: 021a 0541 0b10 021a 2300 1002 1a0b 4100 
0000150: 2300 4604 4041 3d10 021a 0541 c700 1002 
0000160: 1a23 0010 021a 0b0b 0d00 4181 0110 021a 
0000170: 4100 1002 1a0b 2a01 017f 4189 0110 0021 
0000180: 0020 0041 8e01 2000 1007 4190 0110 0410 
0000190: 011a 4100 41a0 0141 a201 1001 1a41 000f 
00001a0: 0b0b dd01 0a00 4101 0b0a 4e6f 7468 696e 
00001b0: 6720 3100 0041 0b0b 3254 6869 7320 6d65 
00001c0: 7373 6167 6520 7368 6f75 6c64 206e 6576 
00001d0: 6572 2064 6973 706c 6179 206f 6e20 7468 
00001e0: 6520 636f 6e73 6f6c 6521 0000 413d 0b0a 
00001f0: 4e6f 7468 696e 6720 3200 0041 c700 0b3a 
0000200: 5468 6973 206d 6573 7361 6765 2069 7320 
0000210: 616c 736f 2073 686f 756c 6420 6e65 7665 
0000220: 7220 6469 7370 6c61 7920 6f6e 2074 6865 
0000230: 2063 6f6e 736f 6c65 2100 0041 8101 0b08 
0000240: 4e6f 7468 696e 6700 0041 8901 0b05 7465 
0000250: 7374 0000 418e 010b 0261 0000 4190 010b 
0000260: 1020 6973 206e 6f74 206e 6f74 6869 6e67 
0000270: 0000 41a0 010b 0261 0000 41a2 010b 0262 
0000280: 00                                      
