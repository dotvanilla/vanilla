0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 03                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 7f                                        ; i32
0000015: 01                                        ; num results
0000016: 7f                                        ; i32
; type 2
0000017: 60                                        ; func
0000018: 02                                        ; num params
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 00                                        ; num results
; type 4
0000020: 60                                        ; func
0000021: 00                                        ; num params
0000022: 01                                        ; num results
0000023: 7f                                        ; i32
0000009: 1a                                        ; FIXUP section size
; section "Import" (2)
0000024: 02                                        ; section code
0000025: 00                                        ; section size (guess)
0000026: 09                                        ; num imports
; import header 0
0000027: 08                                        ; string length
0000028: 646f 6375 6d65 6e74                      document  ; import module name
0000030: 0e                                        ; string length
0000031: 6765 7445 6c65 6d65 6e74 4279 4964       getElementById  ; import field name
000003f: 00                                        ; import kind
0000040: 00                                        ; import signature index
; import header 1
0000041: 08                                        ; string length
0000042: 646f 6375 6d65 6e74                      document  ; import module name
000004a: 0c                                        ; string length
000004b: 7365 7441 7474 7269 6275 7465            setAttribute  ; import field name
0000057: 00                                        ; import kind
0000058: 01                                        ; import signature index
; import header 2
0000059: 07                                        ; string length
000005a: 636f 6e73 6f6c 65                        console  ; import module name
0000061: 03                                        ; string length
0000062: 6c6f 67                                  log  ; import field name
0000065: 00                                        ; import kind
0000066: 00                                        ; import signature index
; import header 3
0000067: 06                                        ; string length
0000068: 7374 7269 6e67                           string  ; import module name
000006e: 07                                        ; string length
000006f: 7265 706c 6163 65                        replace  ; import field name
0000076: 00                                        ; import kind
0000077: 01                                        ; import signature index
; import header 4
0000078: 06                                        ; string length
0000079: 7374 7269 6e67                           string  ; import module name
000007f: 03                                        ; string length
0000080: 6164 64                                  add  ; import field name
0000083: 00                                        ; import kind
0000084: 02                                        ; import signature index
; import header 5
0000085: 06                                        ; string length
0000086: 7374 7269 6e67                           string  ; import module name
000008c: 06                                        ; string length
000008d: 6c65 6e67 7468                           length  ; import field name
0000093: 00                                        ; import kind
0000094: 00                                        ; import signature index
; import header 6
0000095: 06                                        ; string length
0000096: 7374 7269 6e67                           string  ; import module name
000009c: 07                                        ; string length
000009d: 696e 6465 784f 66                        indexOf  ; import field name
00000a4: 00                                        ; import kind
00000a5: 02                                        ; import signature index
; import header 7
00000a6: 06                                        ; string length
00000a7: 7374 7269 6e67                           string  ; import module name
00000ad: 08                                        ; string length
00000ae: 746f 5374 7269 6e67                      toString  ; import field name
00000b6: 00                                        ; import kind
00000b7: 00                                        ; import signature index
; import header 8
00000b8: 03                                        ; string length
00000b9: 656e 76                                  env  ; import module name
00000bc: 0a                                        ; string length
00000bd: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000c7: 02                                        ; import kind
00000c8: 00                                        ; limits: flags
00000c9: 01                                        ; limits: initial
; move data: [26, ca) -> [27, cb)
0000025: a401                                      ; FIXUP section size
; section "Function" (3)
00000cb: 03                                        ; section code
00000cc: 00                                        ; section size (guess)
00000cd: 03                                        ; num functions
00000ce: 03                                        ; function 0 signature index
00000cf: 03                                        ; function 1 signature index
00000d0: 04                                        ; function 2 signature index
00000cc: 04                                        ; FIXUP section size
; section "Global" (6)
00000d1: 06                                        ; section code
00000d2: 00                                        ; section size (guess)
00000d3: 01                                        ; num globals
00000d4: 7f                                        ; i32
00000d5: 01                                        ; global mutability
00000d6: 41                                        ; i32.const
00000d7: 00                                        ; i32 literal
00000d8: 0b                                        ; end
00000d2: 06                                        ; FIXUP section size
; section "Export" (7)
00000d9: 07                                        ; section code
00000da: 00                                        ; section size (guess)
00000db: 03                                        ; num exports
00000dc: 09                                        ; string length
00000dd: 6973 4e6f 7468 696e 67                   isNothing  ; export name
00000e6: 00                                        ; export kind
00000e7: 08                                        ; export func index
00000e8: 09                                        ; string length
00000e9: 6e6f 5265 7475 726e 73                   noReturns  ; export name
00000f2: 00                                        ; export kind
00000f3: 09                                        ; export func index
00000f4: 04                                        ; string length
00000f5: 7465 7374                                test  ; export name
00000f9: 00                                        ; export kind
00000fa: 0a                                        ; export func index
00000da: 20                                        ; FIXUP section size
; section "Code" (10)
00000fb: 0a                                        ; section code
00000fc: 00                                        ; section size (guess)
00000fd: 03                                        ; num functions
; function body 0
00000fe: 00                                        ; func body size (guess)
00000ff: 00                                        ; local decl count
0000100: 23                                        ; global.get
0000101: 00                                        ; global index
0000102: 41                                        ; i32.const
0000103: 00                                        ; i32 literal
0000104: 46                                        ; i32.eq
0000105: 04                                        ; if
0000106: 40                                        ; void
0000107: 41                                        ; i32.const
0000108: 01                                        ; i32 literal
0000109: 10                                        ; call
000010a: 07                                        ; function index
000010b: 10                                        ; call
000010c: 02                                        ; function index
000010d: 1a                                        ; drop
000010e: 05                                        ; else
000010f: 41                                        ; i32.const
0000110: 0b                                        ; i32 literal
0000111: 10                                        ; call
0000112: 07                                        ; function index
0000113: 10                                        ; call
0000114: 02                                        ; function index
0000115: 1a                                        ; drop
0000116: 23                                        ; global.get
0000117: 00                                        ; global index
0000118: 10                                        ; call
0000119: 07                                        ; function index
000011a: 10                                        ; call
000011b: 02                                        ; function index
000011c: 1a                                        ; drop
000011d: 0b                                        ; end
000011e: 41                                        ; i32.const
000011f: 00                                        ; i32 literal
0000120: 23                                        ; global.get
0000121: 00                                        ; global index
0000122: 46                                        ; i32.eq
0000123: 04                                        ; if
0000124: 40                                        ; void
0000125: 41                                        ; i32.const
0000126: 3d                                        ; i32 literal
0000127: 10                                        ; call
0000128: 07                                        ; function index
0000129: 10                                        ; call
000012a: 02                                        ; function index
000012b: 1a                                        ; drop
000012c: 05                                        ; else
000012d: 41                                        ; i32.const
000012e: c700                                      ; i32 literal
0000130: 10                                        ; call
0000131: 07                                        ; function index
0000132: 10                                        ; call
0000133: 02                                        ; function index
0000134: 1a                                        ; drop
0000135: 23                                        ; global.get
0000136: 00                                        ; global index
0000137: 10                                        ; call
0000138: 07                                        ; function index
0000139: 10                                        ; call
000013a: 02                                        ; function index
000013b: 1a                                        ; drop
000013c: 0b                                        ; end
000013d: 0b                                        ; end
00000fe: 3f                                        ; FIXUP func body size
; function body 1
000013e: 00                                        ; func body size (guess)
000013f: 00                                        ; local decl count
0000140: 41                                        ; i32.const
0000141: 8101                                      ; i32 literal
0000143: 10                                        ; call
0000144: 07                                        ; function index
0000145: 10                                        ; call
0000146: 02                                        ; function index
0000147: 1a                                        ; drop
0000148: 41                                        ; i32.const
0000149: 00                                        ; i32 literal
000014a: 10                                        ; call
000014b: 02                                        ; function index
000014c: 1a                                        ; drop
000014d: 0b                                        ; end
000013e: 0f                                        ; FIXUP func body size
; function body 2
000014e: 00                                        ; func body size (guess)
000014f: 01                                        ; local decl count
0000150: 01                                        ; local type count
0000151: 7f                                        ; i32
0000152: 41                                        ; i32.const
0000153: 8901                                      ; i32 literal
0000155: 10                                        ; call
0000156: 07                                        ; function index
0000157: 10                                        ; call
0000158: 00                                        ; function index
0000159: 21                                        ; local.set
000015a: 00                                        ; local index
000015b: 20                                        ; local.get
000015c: 00                                        ; local index
000015d: 41                                        ; i32.const
000015e: 8e01                                      ; i32 literal
0000160: 10                                        ; call
0000161: 07                                        ; function index
0000162: 20                                        ; local.get
0000163: 00                                        ; local index
0000164: 10                                        ; call
0000165: 07                                        ; function index
0000166: 41                                        ; i32.const
0000167: 9001                                      ; i32 literal
0000169: 10                                        ; call
000016a: 04                                        ; function index
000016b: 10                                        ; call
000016c: 07                                        ; function index
000016d: 10                                        ; call
000016e: 01                                        ; function index
000016f: 1a                                        ; drop
0000170: 41                                        ; i32.const
0000171: 00                                        ; i32 literal
0000172: 41                                        ; i32.const
0000173: a001                                      ; i32 literal
0000175: 10                                        ; call
0000176: 07                                        ; function index
0000177: 41                                        ; i32.const
0000178: a201                                      ; i32 literal
000017a: 10                                        ; call
000017b: 07                                        ; function index
000017c: 10                                        ; call
000017d: 01                                        ; function index
000017e: 1a                                        ; drop
000017f: 41                                        ; i32.const
0000180: 00                                        ; i32 literal
0000181: 0f                                        ; return
0000182: 0b                                        ; end
000014e: 34                                        ; FIXUP func body size
; move data: [fd, 183) -> [fe, 184)
00000fc: 8601                                      ; FIXUP section size
; section "Data" (11)
0000184: 0b                                        ; section code
0000185: 00                                        ; section size (guess)
0000186: 0a                                        ; num data segments
; data segment header 0
0000187: 00                                      
0000188: 41                                        ; i32.const
0000189: 01                                        ; i32 literal
000018a: 0b                                        ; end
000018b: 0a                                        ; data segment size
; data segment data 0
000018c: 4e6f 7468 696e 6720 3100                  ; data segment data
; data segment header 1
0000196: 00                                      
0000197: 41                                        ; i32.const
0000198: 0b                                        ; i32 literal
0000199: 0b                                        ; end
000019a: 32                                        ; data segment size
; data segment data 1
000019b: 5468 6973 206d 6573 7361 6765 2073 686f 
00001ab: 756c 6420 6e65 7665 7220 6469 7370 6c61 
00001bb: 7920 6f6e 2074 6865 2063 6f6e 736f 6c65 
00001cb: 2100                                      ; data segment data
; data segment header 2
00001cd: 00                                      
00001ce: 41                                        ; i32.const
00001cf: 3d                                        ; i32 literal
00001d0: 0b                                        ; end
00001d1: 0a                                        ; data segment size
; data segment data 2
00001d2: 4e6f 7468 696e 6720 3200                  ; data segment data
; data segment header 3
00001dc: 00                                      
00001dd: 41                                        ; i32.const
00001de: c700                                      ; i32 literal
00001e0: 0b                                        ; end
00001e1: 3a                                        ; data segment size
; data segment data 3
00001e2: 5468 6973 206d 6573 7361 6765 2069 7320 
00001f2: 616c 736f 2073 686f 756c 6420 6e65 7665 
0000202: 7220 6469 7370 6c61 7920 6f6e 2074 6865 
0000212: 2063 6f6e 736f 6c65 2100                  ; data segment data
; data segment header 4
000021c: 00                                      
000021d: 41                                        ; i32.const
000021e: 8101                                      ; i32 literal
0000220: 0b                                        ; end
0000221: 08                                        ; data segment size
; data segment data 4
0000222: 4e6f 7468 696e 6700                       ; data segment data
; data segment header 5
000022a: 00                                      
000022b: 41                                        ; i32.const
000022c: 8901                                      ; i32 literal
000022e: 0b                                        ; end
000022f: 05                                        ; data segment size
; data segment data 5
0000230: 7465 7374 00                              ; data segment data
; data segment header 6
0000235: 00                                      
0000236: 41                                        ; i32.const
0000237: 8e01                                      ; i32 literal
0000239: 0b                                        ; end
000023a: 02                                        ; data segment size
; data segment data 6
000023b: 6100                                      ; data segment data
; data segment header 7
000023d: 00                                      
000023e: 41                                        ; i32.const
000023f: 9001                                      ; i32 literal
0000241: 0b                                        ; end
0000242: 10                                        ; data segment size
; data segment data 7
0000243: 2069 7320 6e6f 7420 6e6f 7468 696e 6700   ; data segment data
; data segment header 8
0000253: 00                                      
0000254: 41                                        ; i32.const
0000255: a001                                      ; i32 literal
0000257: 0b                                        ; end
0000258: 02                                        ; data segment size
; data segment data 8
0000259: 6100                                      ; data segment data
; data segment header 9
000025b: 00                                      
000025c: 41                                        ; i32.const
000025d: a201                                      ; i32 literal
000025f: 0b                                        ; end
0000260: 02                                        ; data segment size
; data segment data 9
0000261: 6200                                      ; data segment data
; move data: [186, 263) -> [187, 264)
0000185: dd01                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011a 0560 017f 017f 
0000010: 6003 7f7f 7f01 7f60 027f 7f01 7f60 0000 
0000020: 6000 017f 02a4 0109 0864 6f63 756d 656e 
0000030: 740e 6765 7445 6c65 6d65 6e74 4279 4964 
0000040: 0000 0864 6f63 756d 656e 740c 7365 7441 
0000050: 7474 7269 6275 7465 0001 0763 6f6e 736f 
0000060: 6c65 036c 6f67 0000 0673 7472 696e 6707 
0000070: 7265 706c 6163 6500 0106 7374 7269 6e67 
0000080: 0361 6464 0002 0673 7472 696e 6706 6c65 
0000090: 6e67 7468 0000 0673 7472 696e 6707 696e 
00000a0: 6465 784f 6600 0206 7374 7269 6e67 0874 
00000b0: 6f53 7472 696e 6700 0003 656e 760a 6279 
00000c0: 7465 6368 756e 6b73 0200 0103 0403 0303 
00000d0: 0406 0601 7f01 4100 0b07 2003 0969 734e 
00000e0: 6f74 6869 6e67 0008 096e 6f52 6574 7572 
00000f0: 6e73 0009 0474 6573 7400 0a0a 8601 033f 
0000100: 0023 0041 0046 0440 4101 1007 1002 1a05 
0000110: 410b 1007 1002 1a23 0010 0710 021a 0b41 
0000120: 0023 0046 0440 413d 1007 1002 1a05 41c7 
0000130: 0010 0710 021a 2300 1007 1002 1a0b 0b0f 
0000140: 0041 8101 1007 1002 1a41 0010 021a 0b34 
0000150: 0101 7f41 8901 1007 1000 2100 2000 418e 
0000160: 0110 0720 0010 0741 9001 1004 1007 1001 
0000170: 1a41 0041 a001 1007 41a2 0110 0710 011a 
0000180: 4100 0f0b 0bdd 010a 0041 010b 0a4e 6f74 
0000190: 6869 6e67 2031 0000 410b 0b32 5468 6973 
00001a0: 206d 6573 7361 6765 2073 686f 756c 6420 
00001b0: 6e65 7665 7220 6469 7370 6c61 7920 6f6e 
00001c0: 2074 6865 2063 6f6e 736f 6c65 2100 0041 
00001d0: 3d0b 0a4e 6f74 6869 6e67 2032 0000 41c7 
00001e0: 000b 3a54 6869 7320 6d65 7373 6167 6520 
00001f0: 6973 2061 6c73 6f20 7368 6f75 6c64 206e 
0000200: 6576 6572 2064 6973 706c 6179 206f 6e20 
0000210: 7468 6520 636f 6e73 6f6c 6521 0000 4181 
0000220: 010b 084e 6f74 6869 6e67 0000 4189 010b 
0000230: 0574 6573 7400 0041 8e01 0b02 6100 0041 
0000240: 9001 0b10 2069 7320 6e6f 7420 6e6f 7468 
0000250: 696e 6700 0041 a001 0b02 6100 0041 a201 
0000260: 0b02 6200                               
