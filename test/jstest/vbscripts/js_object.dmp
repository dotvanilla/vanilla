0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0a                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 01                                        ; num params
0000033: 7f                                        ; i32
0000034: 00                                        ; num results
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 00                                        ; num params
000003b: 00                                        ; num results
0000009: 32                                        ; FIXUP section size
; section "Import" (2)
000003c: 02                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 0e                                        ; num imports
; import header 0
000003f: 04                                        ; string length
0000040: 4d61 7468                                Math  ; import module name
0000044: 03                                        ; string length
0000045: 706f 77                                  pow  ; import field name
0000048: 00                                        ; import kind
0000049: 00                                        ; import signature index
; import header 1
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 04                                        ; string length
0000050: 7371 7274                                sqrt  ; import field name
0000054: 00                                        ; import kind
0000055: 01                                        ; import signature index
; import header 2
0000056: 04                                        ; string length
0000057: 4d61 7468                                Math  ; import module name
000005b: 03                                        ; string length
000005c: 6578 70                                  exp  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 3
0000061: 04                                        ; string length
0000062: 4d61 7468                                Math  ; import module name
0000066: 03                                        ; string length
0000067: 636f 73                                  cos  ; import field name
000006a: 00                                        ; import kind
000006b: 01                                        ; import signature index
; import header 4
000006c: 04                                        ; string length
000006d: 4d61 7468                                Math  ; import module name
0000071: 06                                        ; string length
0000072: 7261 6e64 6f6d                           random  ; import field name
0000078: 00                                        ; import kind
0000079: 02                                        ; import signature index
; import header 5
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 04                                        ; string length
0000080: 6365 696c                                ceil  ; import field name
0000084: 00                                        ; import kind
0000085: 01                                        ; import signature index
; import header 6
0000086: 04                                        ; string length
0000087: 4d61 7468                                Math  ; import module name
000008b: 05                                        ; string length
000008c: 666c 6f6f 72                             floor  ; import field name
0000091: 00                                        ; import kind
0000092: 01                                        ; import signature index
; import header 7
0000093: 02                                        ; string length
0000094: 4743                                     GC  ; import module name
0000096: 09                                        ; string length
0000097: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a0: 00                                        ; import kind
00000a1: 03                                        ; import signature index
; import header 8
00000a2: 06                                        ; string length
00000a3: 7374 7269 6e67                           string  ; import module name
00000a9: 07                                        ; string length
00000aa: 7265 706c 6163 65                        replace  ; import field name
00000b1: 00                                        ; import kind
00000b2: 04                                        ; import signature index
; import header 9
00000b3: 06                                        ; string length
00000b4: 7374 7269 6e67                           string  ; import module name
00000ba: 03                                        ; string length
00000bb: 6164 64                                  add  ; import field name
00000be: 00                                        ; import kind
00000bf: 05                                        ; import signature index
; import header 10
00000c0: 06                                        ; string length
00000c1: 7374 7269 6e67                           string  ; import module name
00000c7: 06                                        ; string length
00000c8: 6c65 6e67 7468                           length  ; import field name
00000ce: 00                                        ; import kind
00000cf: 06                                        ; import signature index
; import header 11
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 07                                        ; string length
00000d8: 696e 6465 784f 66                        indexOf  ; import field name
00000df: 00                                        ; import kind
00000e0: 05                                        ; import signature index
; import header 12
00000e1: 07                                        ; string length
00000e2: 636f 6e73 6f6c 65                        console  ; import module name
00000e9: 03                                        ; string length
00000ea: 6c6f 67                                  log  ; import field name
00000ed: 00                                        ; import kind
00000ee: 07                                        ; import signature index
; import header 13
00000ef: 03                                        ; string length
00000f0: 656e 76                                  env  ; import module name
00000f3: 0a                                        ; string length
00000f4: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000fe: 02                                        ; import kind
00000ff: 00                                        ; limits: flags
0000100: 01                                        ; limits: initial
; move data: [3e, 101) -> [3f, 102)
000003d: c301                                      ; FIXUP section size
; section "Function" (3)
0000102: 03                                        ; section code
0000103: 00                                        ; section size (guess)
0000104: 16                                        ; num functions
0000105: 05                                        ; function 0 signature index
0000106: 08                                        ; function 1 signature index
0000107: 08                                        ; function 2 signature index
0000108: 08                                        ; function 3 signature index
0000109: 08                                        ; function 4 signature index
000010a: 08                                        ; function 5 signature index
000010b: 08                                        ; function 6 signature index
000010c: 08                                        ; function 7 signature index
000010d: 08                                        ; function 8 signature index
000010e: 08                                        ; function 9 signature index
000010f: 08                                        ; function 10 signature index
0000110: 08                                        ; function 11 signature index
0000111: 08                                        ; function 12 signature index
0000112: 08                                        ; function 13 signature index
0000113: 08                                        ; function 14 signature index
0000114: 08                                        ; function 15 signature index
0000115: 08                                        ; function 16 signature index
0000116: 09                                        ; function 17 signature index
0000117: 09                                        ; function 18 signature index
0000118: 09                                        ; function 19 signature index
0000119: 09                                        ; function 20 signature index
000011a: 09                                        ; function 21 signature index
0000103: 17                                        ; FIXUP section size
; section "Global" (6)
000011b: 06                                        ; section code
000011c: 00                                        ; section size (guess)
000011d: 0f                                        ; num globals
000011e: 7f                                        ; i32
000011f: 01                                        ; global mutability
0000120: 41                                        ; i32.const
0000121: a80e                                      ; i32 literal
0000123: 0b                                        ; end
0000124: 7c                                        ; f64
0000125: 01                                        ; global mutability
0000126: 44                                        ; f64.const
0000127: 6957 148b 0abf 0540                       ; f64 literal
000012f: 0b                                        ; end
0000130: 7c                                        ; f64
0000131: 01                                        ; global mutability
0000132: 44                                        ; f64.const
0000133: 182d 4454 fb21 0940                       ; f64 literal
000013b: 0b                                        ; end
000013c: 7f                                        ; i32
000013d: 01                                        ; global mutability
000013e: 41                                        ; i32.const
000013f: ffff ffff 07                              ; i32 literal
0000144: 0b                                        ; end
0000145: 7e                                        ; i64
0000146: 01                                        ; global mutability
0000147: 42                                        ; i64.const
0000148: ffff ffff ffff ffff ff00                  ; i64 literal
0000152: 0b                                        ; end
0000153: 7d                                        ; f32
0000154: 01                                        ; global mutability
0000155: 43                                        ; f32.const
0000156: ffff 7f7f                                 ; f32 literal
000015a: 0b                                        ; end
000015b: 7c                                        ; f64
000015c: 01                                        ; global mutability
000015d: 44                                        ; f64.const
000015e: ffff ffff ffff ef7f                       ; f64 literal
0000166: 0b                                        ; end
0000167: 7f                                        ; i32
0000168: 01                                        ; global mutability
0000169: 41                                        ; i32.const
000016a: 8080 8080 78                              ; i32 literal
000016f: 0b                                        ; end
0000170: 7e                                        ; i64
0000171: 01                                        ; global mutability
0000172: 42                                        ; i64.const
0000173: 8080 8080 8080 8080 807f                  ; i64 literal
000017d: 0b                                        ; end
000017e: 7d                                        ; f32
000017f: 01                                        ; global mutability
0000180: 43                                        ; f32.const
0000181: ffff 7fff                                 ; f32 literal
0000185: 0b                                        ; end
0000186: 7c                                        ; f64
0000187: 01                                        ; global mutability
0000188: 44                                        ; f64.const
0000189: ffff ffff ffff efff                       ; f64 literal
0000191: 0b                                        ; end
0000192: 7c                                        ; f64
0000193: 01                                        ; global mutability
0000194: 44                                        ; f64.const
0000195: 0000 0000 0040 8f40                       ; f64 literal
000019d: 0b                                        ; end
000019e: 7f                                        ; i32
000019f: 01                                        ; global mutability
00001a0: 41                                        ; i32.const
00001a1: 00                                        ; i32 literal
00001a2: 0b                                        ; end
00001a3: 7f                                        ; i32
00001a4: 01                                        ; global mutability
00001a5: 41                                        ; i32.const
00001a6: 00                                        ; i32 literal
00001a7: 0b                                        ; end
00001a8: 7f                                        ; i32
00001a9: 01                                        ; global mutability
00001aa: 41                                        ; i32.const
00001ab: f808                                      ; i32 literal
00001ad: 0b                                        ; end
; move data: [11d, 1ae) -> [11e, 1af)
000011c: 9101                                      ; FIXUP section size
; section "Export" (7)
00001af: 07                                        ; section code
00001b0: 00                                        ; section size (guess)
00001b1: 0f                                        ; num exports
00001b2: 14                                        ; string length
00001b3: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001c3: 5369 7a65                                Size  ; export name
00001c7: 00                                        ; export kind
00001c8: 0e                                        ; export func index
00001c9: 12                                        ; string length
00001ca: 6f62 6a65 6374 4743 2e6e 6577 4369 7263  objectGC.newCirc
00001da: 6c65                                     le  ; export name
00001dc: 00                                        ; export kind
00001dd: 0f                                        ; export func index
00001de: 12                                        ; string length
00001df: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65  objectGC.getObje
00001ef: 6374                                     ct  ; export name
00001f1: 00                                        ; export kind
00001f2: 11                                        ; export func index
00001f3: 18                                        ; string length
00001f4: 6e75 6d62 6572 4172 7261 792e 6372 6561  numberArray.crea
0000204: 7465 5665 6374 6f72                      teVector  ; export name
000020c: 00                                        ; export kind
000020d: 12                                        ; export func index
000020e: 17                                        ; string length
000020f: 6e75 6d62 6572 4172 7261 792e 6e61 6d65  numberArray.name
000021f: 7356 6563 746f 72                        sVector  ; export name
0000226: 00                                        ; export kind
0000227: 13                                        ; export func index
0000228: 16                                        ; string length
0000229: 6e75 6d62 6572 4172 7261 792e 7374 7275  numberArray.stru
0000239: 6374 7572 6573                           ctures  ; export name
000023f: 00                                        ; export kind
0000240: 14                                        ; export func index
0000241: 1a                                        ; string length
0000242: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000252: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
000025c: 00                                        ; export kind
000025d: 15                                        ; export func index
000025e: 20                                        ; string length
000025f: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000026f: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
000027f: 00                                        ; export kind
0000280: 16                                        ; export func index
0000281: 1c                                        ; string length
0000282: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000292: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
000029e: 00                                        ; export kind
000029f: 17                                        ; export func index
00002a0: 1c                                        ; string length
00002a1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b1: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002bd: 00                                        ; export kind
00002be: 18                                        ; export func index
00002bf: 1e                                        ; string length
00002c0: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d0: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002de: 00                                        ; export kind
00002df: 19                                        ; export func index
00002e0: 1e                                        ; string length
00002e1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002f1: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002ff: 00                                        ; export kind
0000300: 1a                                        ; export func index
0000301: 11                                        ; string length
0000302: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000312: 64                                       d  ; export name
0000313: 00                                        ; export kind
0000314: 1b                                        ; export func index
0000315: 1c                                        ; string length
0000316: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000326: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000332: 00                                        ; export kind
0000333: 1c                                        ; export func index
0000334: 20                                        ; string length
0000335: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000345: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000355: 00                                        ; export kind
0000356: 1d                                        ; export func index
; move data: [1b1, 357) -> [1b2, 358)
00001b0: a603                                      ; FIXUP section size
; section "Start" (8)
0000358: 08                                        ; section code
0000359: 00                                        ; section size (guess)
000035a: 1e                                        ; start func index
0000359: 01                                        ; FIXUP section size
; section "Code" (10)
000035b: 0a                                        ; section code
000035c: 00                                        ; section size (guess)
000035d: 16                                        ; num functions
; function body 0
000035e: 00                                        ; func body size (guess)
000035f: 01                                        ; local decl count
0000360: 01                                        ; local type count
0000361: 7f                                        ; i32
0000362: 23                                        ; global.get
0000363: 00                                        ; global index
0000364: 21                                        ; local.set
0000365: 02                                        ; local index
0000366: 20                                        ; local.get
0000367: 02                                        ; local index
0000368: 20                                        ; local.get
0000369: 00                                        ; local index
000036a: 6a                                        ; i32.add
000036b: 24                                        ; global.set
000036c: 00                                        ; global index
000036d: 20                                        ; local.get
000036e: 02                                        ; local index
000036f: 20                                        ; local.get
0000370: 01                                        ; local index
0000371: 10                                        ; call
0000372: 07                                        ; function index
0000373: 20                                        ; local.get
0000374: 02                                        ; local index
0000375: 0f                                        ; return
0000376: 0b                                        ; end
000035e: 18                                        ; FIXUP func body size
; function body 1
0000377: 00                                        ; func body size (guess)
0000378: 00                                        ; local decl count
0000379: 23                                        ; global.get
000037a: 00                                        ; global index
000037b: 0f                                        ; return
000037c: 0b                                        ; end
0000377: 05                                        ; FIXUP func body size
; function body 2
000037d: 00                                        ; func body size (guess)
000037e: 01                                        ; local decl count
000037f: 16                                        ; local type count
0000380: 7f                                        ; i32
0000381: 23                                        ; global.get
0000382: 0b                                        ; global index
0000383: 41                                        ; i32.const
0000384: 02                                        ; i32 literal
0000385: b7                                        ; f64.convert_i32_s
0000386: a2                                        ; f64.mul
0000387: 24                                        ; global.set
0000388: 0b                                        ; global index
0000389: 41                                        ; i32.const
000038a: 1c                                        ; i32 literal
000038b: 41                                        ; i32.const
000038c: 0d                                        ; i32 literal
000038d: 10                                        ; call
000038e: 0d                                        ; function index
000038f: 21                                        ; local.set
0000390: 10                                        ; local index
0000391: 20                                        ; local.get
0000392: 10                                        ; local index
0000393: 41                                        ; i32.const
0000394: 00                                        ; i32 literal
0000395: 6a                                        ; i32.add
0000396: 23                                        ; global.get
0000397: 0b                                        ; global index
0000398: b6                                        ; f32.demote_f64
0000399: 38                                        ; f32.store
000039a: 02                                        ; alignment
000039b: 00                                        ; store offset
000039c: 20                                        ; local.get
000039d: 10                                        ; local index
000039e: 41                                        ; i32.const
000039f: 04                                        ; i32 literal
00003a0: 6a                                        ; i32.add
00003a1: 41                                        ; i32.const
00003a2: 8fce 00                                   ; i32 literal
00003a5: b2                                        ; f32.convert_i32_s
00003a6: 38                                        ; f32.store
00003a7: 02                                        ; alignment
00003a8: 00                                        ; store offset
00003a9: 10                                        ; call
00003aa: 10                                        ; function index
00003ab: 21                                        ; local.set
00003ac: 13                                        ; local index
00003ad: 20                                        ; local.get
00003ae: 10                                        ; local index
00003af: 41                                        ; i32.const
00003b0: 0c                                        ; i32 literal
00003b1: 6a                                        ; i32.add
00003b2: 21                                        ; local.set
00003b3: 12                                        ; local index
00003b4: 20                                        ; local.get
00003b5: 12                                        ; local index
00003b6: 41                                        ; i32.const
00003b7: 00                                        ; i32 literal
00003b8: 6a                                        ; i32.add
00003b9: 20                                        ; local.get
00003ba: 13                                        ; local index
00003bb: 41                                        ; i32.const
00003bc: 00                                        ; i32 literal
00003bd: 6a                                        ; i32.add
00003be: 28                                        ; i32.load
00003bf: 02                                        ; alignment
00003c0: 00                                        ; load offset
00003c1: 36                                        ; i32.store
00003c2: 02                                        ; alignment
00003c3: 00                                        ; store offset
00003c4: 20                                        ; local.get
00003c5: 12                                        ; local index
00003c6: 41                                        ; i32.const
00003c7: 04                                        ; i32 literal
00003c8: 6a                                        ; i32.add
00003c9: 20                                        ; local.get
00003ca: 13                                        ; local index
00003cb: 41                                        ; i32.const
00003cc: 04                                        ; i32 literal
00003cd: 6a                                        ; i32.add
00003ce: 28                                        ; i32.load
00003cf: 02                                        ; alignment
00003d0: 00                                        ; load offset
00003d1: 36                                        ; i32.store
00003d2: 02                                        ; alignment
00003d3: 00                                        ; store offset
00003d4: 41                                        ; i32.const
00003d5: 08                                        ; i32 literal
00003d6: 41                                        ; i32.const
00003d7: 8809                                      ; i32 literal
00003d9: 10                                        ; call
00003da: 0d                                        ; function index
00003db: 21                                        ; local.set
00003dc: 11                                        ; local index
00003dd: 20                                        ; local.get
00003de: 11                                        ; local index
00003df: 41                                        ; i32.const
00003e0: 04                                        ; i32 literal
00003e1: 6a                                        ; i32.add
00003e2: 41                                        ; i32.const
00003e3: a80b                                      ; i32 literal
00003e5: 36                                        ; i32.store
00003e6: 02                                        ; alignment
00003e7: 00                                        ; store offset
00003e8: 20                                        ; local.get
00003e9: 11                                        ; local index
00003ea: 41                                        ; i32.const
00003eb: 00                                        ; i32 literal
00003ec: 6a                                        ; i32.add
00003ed: 41                                        ; i32.const
00003ee: 00                                        ; i32 literal
00003ef: 36                                        ; i32.store
00003f0: 02                                        ; alignment
00003f1: 00                                        ; store offset
00003f2: 20                                        ; local.get
00003f3: 11                                        ; local index
00003f4: 21                                        ; local.set
00003f5: 15                                        ; local index
00003f6: 20                                        ; local.get
00003f7: 10                                        ; local index
00003f8: 41                                        ; i32.const
00003f9: 14                                        ; i32 literal
00003fa: 6a                                        ; i32.add
00003fb: 21                                        ; local.set
00003fc: 14                                        ; local index
00003fd: 20                                        ; local.get
00003fe: 14                                        ; local index
00003ff: 41                                        ; i32.const
0000400: 00                                        ; i32 literal
0000401: 6a                                        ; i32.add
0000402: 20                                        ; local.get
0000403: 15                                        ; local index
0000404: 41                                        ; i32.const
0000405: 00                                        ; i32 literal
0000406: 6a                                        ; i32.add
0000407: 28                                        ; i32.load
0000408: 02                                        ; alignment
0000409: 00                                        ; load offset
000040a: 36                                        ; i32.store
000040b: 02                                        ; alignment
000040c: 00                                        ; store offset
000040d: 20                                        ; local.get
000040e: 14                                        ; local index
000040f: 41                                        ; i32.const
0000410: 04                                        ; i32 literal
0000411: 6a                                        ; i32.add
0000412: 20                                        ; local.get
0000413: 15                                        ; local index
0000414: 41                                        ; i32.const
0000415: 04                                        ; i32 literal
0000416: 6a                                        ; i32.add
0000417: 28                                        ; i32.load
0000418: 02                                        ; alignment
0000419: 00                                        ; load offset
000041a: 36                                        ; i32.store
000041b: 02                                        ; alignment
000041c: 00                                        ; store offset
000041d: 20                                        ; local.get
000041e: 10                                        ; local index
000041f: 41                                        ; i32.const
0000420: 08                                        ; i32 literal
0000421: 6a                                        ; i32.add
0000422: 41                                        ; i32.const
0000423: e400                                      ; i32 literal
0000425: 36                                        ; i32.store
0000426: 02                                        ; alignment
0000427: 00                                        ; store offset
0000428: 20                                        ; local.get
0000429: 10                                        ; local index
000042a: 0f                                        ; return
000042b: 0b                                        ; end
; move data: [37e, 42c) -> [37f, 42d)
000037d: ae01                                      ; FIXUP func body size
; function body 3
000042d: 00                                        ; func body size (guess)
000042e: 01                                        ; local decl count
000042f: 01                                        ; local type count
0000430: 7f                                        ; i32
0000431: 41                                        ; i32.const
0000432: 08                                        ; i32 literal
0000433: 41                                        ; i32.const
0000434: 8809                                      ; i32 literal
0000436: 10                                        ; call
0000437: 0d                                        ; function index
0000438: 21                                        ; local.set
0000439: 00                                        ; local index
000043a: 20                                        ; local.get
000043b: 00                                        ; local index
000043c: 41                                        ; i32.const
000043d: 04                                        ; i32 literal
000043e: 6a                                        ; i32.add
000043f: 41                                        ; i32.const
0000440: c80b                                      ; i32 literal
0000442: 36                                        ; i32.store
0000443: 02                                        ; alignment
0000444: 00                                        ; store offset
0000445: 20                                        ; local.get
0000446: 00                                        ; local index
0000447: 41                                        ; i32.const
0000448: 00                                        ; i32 literal
0000449: 6a                                        ; i32.add
000044a: 41                                        ; i32.const
000044b: 87e4 06                                   ; i32 literal
000044e: 36                                        ; i32.store
000044f: 02                                        ; alignment
0000450: 00                                        ; store offset
0000451: 20                                        ; local.get
0000452: 00                                        ; local index
0000453: 0f                                        ; return
0000454: 0b                                        ; end
000042d: 27                                        ; FIXUP func body size
; function body 4
0000455: 00                                        ; func body size (guess)
0000456: 00                                        ; local decl count
0000457: 23                                        ; global.get
0000458: 0d                                        ; global index
0000459: 0f                                        ; return
000045a: 0b                                        ; end
0000455: 05                                        ; FIXUP func body size
; function body 5
000045b: 00                                        ; func body size (guess)
000045c: 01                                        ; local decl count
000045d: 03                                        ; local type count
000045e: 7f                                        ; i32
000045f: 41                                        ; i32.const
0000460: 08                                        ; i32 literal
0000461: 41                                        ; i32.const
0000462: 0a                                        ; i32 literal
0000463: 41                                        ; i32.const
0000464: 04                                        ; i32 literal
0000465: 6c                                        ; i32.mul
0000466: 6a                                        ; i32.add
0000467: 41                                        ; i32.const
0000468: 07                                        ; i32 literal
0000469: 10                                        ; call
000046a: 0d                                        ; function index
000046b: 21                                        ; local.set
000046c: 01                                        ; local index
000046d: 20                                        ; local.get
000046e: 01                                        ; local index
000046f: 41                                        ; i32.const
0000470: 01                                        ; i32 literal
0000471: 36                                        ; i32.store
0000472: 02                                        ; alignment
0000473: 00                                        ; store offset
0000474: 20                                        ; local.get
0000475: 01                                        ; local index
0000476: 41                                        ; i32.const
0000477: 04                                        ; i32 literal
0000478: 6a                                        ; i32.add
0000479: 41                                        ; i32.const
000047a: 0a                                        ; i32 literal
000047b: 36                                        ; i32.store
000047c: 02                                        ; alignment
000047d: 00                                        ; store offset
000047e: 20                                        ; local.get
000047f: 01                                        ; local index
0000480: 41                                        ; i32.const
0000481: 08                                        ; i32 literal
0000482: 6a                                        ; i32.add
0000483: 21                                        ; local.set
0000484: 02                                        ; local index
0000485: 20                                        ; local.get
0000486: 02                                        ; local index
0000487: 41                                        ; i32.const
0000488: 00                                        ; i32 literal
0000489: 6a                                        ; i32.add
000048a: 41                                        ; i32.const
000048b: 01                                        ; i32 literal
000048c: 36                                        ; i32.store
000048d: 02                                        ; alignment
000048e: 00                                        ; store offset
000048f: 20                                        ; local.get
0000490: 02                                        ; local index
0000491: 41                                        ; i32.const
0000492: 04                                        ; i32 literal
0000493: 6a                                        ; i32.add
0000494: 41                                        ; i32.const
0000495: 02                                        ; i32 literal
0000496: 36                                        ; i32.store
0000497: 02                                        ; alignment
0000498: 00                                        ; store offset
0000499: 20                                        ; local.get
000049a: 02                                        ; local index
000049b: 41                                        ; i32.const
000049c: 08                                        ; i32 literal
000049d: 6a                                        ; i32.add
000049e: 41                                        ; i32.const
000049f: 03                                        ; i32 literal
00004a0: 36                                        ; i32.store
00004a1: 02                                        ; alignment
00004a2: 00                                        ; store offset
00004a3: 20                                        ; local.get
00004a4: 02                                        ; local index
00004a5: 41                                        ; i32.const
00004a6: 0c                                        ; i32 literal
00004a7: 6a                                        ; i32.add
00004a8: 41                                        ; i32.const
00004a9: 04                                        ; i32 literal
00004aa: 36                                        ; i32.store
00004ab: 02                                        ; alignment
00004ac: 00                                        ; store offset
00004ad: 20                                        ; local.get
00004ae: 02                                        ; local index
00004af: 41                                        ; i32.const
00004b0: 10                                        ; i32 literal
00004b1: 6a                                        ; i32.add
00004b2: 41                                        ; i32.const
00004b3: 05                                        ; i32 literal
00004b4: 36                                        ; i32.store
00004b5: 02                                        ; alignment
00004b6: 00                                        ; store offset
00004b7: 20                                        ; local.get
00004b8: 02                                        ; local index
00004b9: 41                                        ; i32.const
00004ba: 14                                        ; i32 literal
00004bb: 6a                                        ; i32.add
00004bc: 41                                        ; i32.const
00004bd: 06                                        ; i32 literal
00004be: 36                                        ; i32.store
00004bf: 02                                        ; alignment
00004c0: 00                                        ; store offset
00004c1: 20                                        ; local.get
00004c2: 02                                        ; local index
00004c3: 41                                        ; i32.const
00004c4: 18                                        ; i32 literal
00004c5: 6a                                        ; i32.add
00004c6: 41                                        ; i32.const
00004c7: 07                                        ; i32 literal
00004c8: 36                                        ; i32.store
00004c9: 02                                        ; alignment
00004ca: 00                                        ; store offset
00004cb: 20                                        ; local.get
00004cc: 02                                        ; local index
00004cd: 41                                        ; i32.const
00004ce: 1c                                        ; i32 literal
00004cf: 6a                                        ; i32.add
00004d0: 41                                        ; i32.const
00004d1: 08                                        ; i32 literal
00004d2: 36                                        ; i32.store
00004d3: 02                                        ; alignment
00004d4: 00                                        ; store offset
00004d5: 20                                        ; local.get
00004d6: 02                                        ; local index
00004d7: 41                                        ; i32.const
00004d8: 20                                        ; i32 literal
00004d9: 6a                                        ; i32.add
00004da: 41                                        ; i32.const
00004db: 09                                        ; i32 literal
00004dc: 36                                        ; i32.store
00004dd: 02                                        ; alignment
00004de: 00                                        ; store offset
00004df: 20                                        ; local.get
00004e0: 02                                        ; local index
00004e1: 41                                        ; i32.const
00004e2: 24                                        ; i32 literal
00004e3: 6a                                        ; i32.add
00004e4: 41                                        ; i32.const
00004e5: 00                                        ; i32 literal
00004e6: 36                                        ; i32.store
00004e7: 02                                        ; alignment
00004e8: 00                                        ; store offset
00004e9: 20                                        ; local.get
00004ea: 01                                        ; local index
00004eb: 0f                                        ; return
00004ec: 0b                                        ; end
; move data: [45c, 4ed) -> [45d, 4ee)
000045b: 9101                                      ; FIXUP func body size
; function body 6
00004ee: 00                                        ; func body size (guess)
00004ef: 01                                        ; local decl count
00004f0: 02                                        ; local type count
00004f1: 7f                                        ; i32
00004f2: 41                                        ; i32.const
00004f3: 08                                        ; i32 literal
00004f4: 41                                        ; i32.const
00004f5: 07                                        ; i32 literal
00004f6: 41                                        ; i32.const
00004f7: 04                                        ; i32 literal
00004f8: 6c                                        ; i32.mul
00004f9: 6a                                        ; i32.add
00004fa: 41                                        ; i32.const
00004fb: 07                                        ; i32 literal
00004fc: 10                                        ; call
00004fd: 0d                                        ; function index
00004fe: 21                                        ; local.set
00004ff: 00                                        ; local index
0000500: 20                                        ; local.get
0000501: 00                                        ; local index
0000502: 41                                        ; i32.const
0000503: 05                                        ; i32 literal
0000504: 36                                        ; i32.store
0000505: 02                                        ; alignment
0000506: 00                                        ; store offset
0000507: 20                                        ; local.get
0000508: 00                                        ; local index
0000509: 41                                        ; i32.const
000050a: 04                                        ; i32 literal
000050b: 6a                                        ; i32.add
000050c: 41                                        ; i32.const
000050d: 07                                        ; i32 literal
000050e: 36                                        ; i32.store
000050f: 02                                        ; alignment
0000510: 00                                        ; store offset
0000511: 20                                        ; local.get
0000512: 00                                        ; local index
0000513: 41                                        ; i32.const
0000514: 08                                        ; i32 literal
0000515: 6a                                        ; i32.add
0000516: 21                                        ; local.set
0000517: 01                                        ; local index
0000518: 20                                        ; local.get
0000519: 01                                        ; local index
000051a: 41                                        ; i32.const
000051b: 00                                        ; i32 literal
000051c: 6a                                        ; i32.add
000051d: 41                                        ; i32.const
000051e: f00b                                      ; i32 literal
0000520: 36                                        ; i32.store
0000521: 02                                        ; alignment
0000522: 00                                        ; store offset
0000523: 20                                        ; local.get
0000524: 01                                        ; local index
0000525: 41                                        ; i32.const
0000526: 04                                        ; i32 literal
0000527: 6a                                        ; i32.add
0000528: 41                                        ; i32.const
0000529: 800c                                      ; i32 literal
000052b: 36                                        ; i32.store
000052c: 02                                        ; alignment
000052d: 00                                        ; store offset
000052e: 20                                        ; local.get
000052f: 01                                        ; local index
0000530: 41                                        ; i32.const
0000531: 08                                        ; i32 literal
0000532: 6a                                        ; i32.add
0000533: 41                                        ; i32.const
0000534: 900c                                      ; i32 literal
0000536: 36                                        ; i32.store
0000537: 02                                        ; alignment
0000538: 00                                        ; store offset
0000539: 20                                        ; local.get
000053a: 01                                        ; local index
000053b: 41                                        ; i32.const
000053c: 0c                                        ; i32 literal
000053d: 6a                                        ; i32.add
000053e: 41                                        ; i32.const
000053f: a00c                                      ; i32 literal
0000541: 36                                        ; i32.store
0000542: 02                                        ; alignment
0000543: 00                                        ; store offset
0000544: 20                                        ; local.get
0000545: 01                                        ; local index
0000546: 41                                        ; i32.const
0000547: 10                                        ; i32 literal
0000548: 6a                                        ; i32.add
0000549: 41                                        ; i32.const
000054a: b00c                                      ; i32 literal
000054c: 36                                        ; i32.store
000054d: 02                                        ; alignment
000054e: 00                                        ; store offset
000054f: 20                                        ; local.get
0000550: 01                                        ; local index
0000551: 41                                        ; i32.const
0000552: 14                                        ; i32 literal
0000553: 6a                                        ; i32.add
0000554: 41                                        ; i32.const
0000555: b80c                                      ; i32 literal
0000557: 36                                        ; i32.store
0000558: 02                                        ; alignment
0000559: 00                                        ; store offset
000055a: 20                                        ; local.get
000055b: 01                                        ; local index
000055c: 41                                        ; i32.const
000055d: 18                                        ; i32 literal
000055e: 6a                                        ; i32.add
000055f: 41                                        ; i32.const
0000560: c00c                                      ; i32 literal
0000562: 36                                        ; i32.store
0000563: 02                                        ; alignment
0000564: 00                                        ; store offset
0000565: 20                                        ; local.get
0000566: 00                                        ; local index
0000567: 0f                                        ; return
0000568: 0b                                        ; end
00004ee: 7a                                        ; FIXUP func body size
; function body 7
0000569: 00                                        ; func body size (guess)
000056a: 01                                        ; local decl count
000056b: 09                                        ; local type count
000056c: 7f                                        ; i32
000056d: 10                                        ; call
000056e: 13                                        ; function index
000056f: 21                                        ; local.set
0000570: 00                                        ; local index
0000571: 41                                        ; i32.const
0000572: 08                                        ; i32 literal
0000573: 41                                        ; i32.const
0000574: 03                                        ; i32 literal
0000575: 41                                        ; i32.const
0000576: 08                                        ; i32 literal
0000577: 6c                                        ; i32.mul
0000578: 6a                                        ; i32.add
0000579: 41                                        ; i32.const
000057a: 07                                        ; i32 literal
000057b: 10                                        ; call
000057c: 0d                                        ; function index
000057d: 21                                        ; local.set
000057e: 04                                        ; local index
000057f: 20                                        ; local.get
0000580: 04                                        ; local index
0000581: 41                                        ; i32.const
0000582: 8809                                      ; i32 literal
0000584: 36                                        ; i32.store
0000585: 02                                        ; alignment
0000586: 00                                        ; store offset
0000587: 20                                        ; local.get
0000588: 04                                        ; local index
0000589: 41                                        ; i32.const
000058a: 04                                        ; i32 literal
000058b: 6a                                        ; i32.add
000058c: 41                                        ; i32.const
000058d: 03                                        ; i32 literal
000058e: 36                                        ; i32.store
000058f: 02                                        ; alignment
0000590: 00                                        ; store offset
0000591: 20                                        ; local.get
0000592: 04                                        ; local index
0000593: 41                                        ; i32.const
0000594: 08                                        ; i32 literal
0000595: 6a                                        ; i32.add
0000596: 21                                        ; local.set
0000597: 05                                        ; local index
0000598: 20                                        ; local.get
0000599: 05                                        ; local index
000059a: 41                                        ; i32.const
000059b: 00                                        ; i32 literal
000059c: 6a                                        ; i32.add
000059d: 21                                        ; local.set
000059e: 06                                        ; local index
000059f: 20                                        ; local.get
00005a0: 06                                        ; local index
00005a1: 41                                        ; i32.const
00005a2: 8809                                      ; i32 literal
00005a4: 10                                        ; call
00005a5: 07                                        ; function index
00005a6: 20                                        ; local.get
00005a7: 06                                        ; local index
00005a8: 21                                        ; local.set
00005a9: 01                                        ; local index
00005aa: 20                                        ; local.get
00005ab: 01                                        ; local index
00005ac: 41                                        ; i32.const
00005ad: 04                                        ; i32 literal
00005ae: 6a                                        ; i32.add
00005af: 20                                        ; local.get
00005b0: 00                                        ; local index
00005b1: 41                                        ; i32.const
00005b2: 08                                        ; i32 literal
00005b3: 6a                                        ; i32.add
00005b4: 41                                        ; i32.const
00005b5: 00                                        ; i32 literal
00005b6: 41                                        ; i32.const
00005b7: 04                                        ; i32 literal
00005b8: 6c                                        ; i32.mul
00005b9: 6a                                        ; i32.add
00005ba: 28                                        ; i32.load
00005bb: 02                                        ; alignment
00005bc: 00                                        ; load offset
00005bd: 36                                        ; i32.store
00005be: 02                                        ; alignment
00005bf: 00                                        ; store offset
00005c0: 20                                        ; local.get
00005c1: 01                                        ; local index
00005c2: 41                                        ; i32.const
00005c3: 00                                        ; i32 literal
00005c4: 6a                                        ; i32.add
00005c5: 41                                        ; i32.const
00005c6: 00                                        ; i32 literal
00005c7: 36                                        ; i32.store
00005c8: 02                                        ; alignment
00005c9: 00                                        ; store offset
00005ca: 20                                        ; local.get
00005cb: 05                                        ; local index
00005cc: 41                                        ; i32.const
00005cd: 08                                        ; i32 literal
00005ce: 6a                                        ; i32.add
00005cf: 21                                        ; local.set
00005d0: 07                                        ; local index
00005d1: 20                                        ; local.get
00005d2: 07                                        ; local index
00005d3: 41                                        ; i32.const
00005d4: 8809                                      ; i32 literal
00005d6: 10                                        ; call
00005d7: 07                                        ; function index
00005d8: 20                                        ; local.get
00005d9: 07                                        ; local index
00005da: 21                                        ; local.set
00005db: 02                                        ; local index
00005dc: 20                                        ; local.get
00005dd: 02                                        ; local index
00005de: 41                                        ; i32.const
00005df: 04                                        ; i32 literal
00005e0: 6a                                        ; i32.add
00005e1: 20                                        ; local.get
00005e2: 00                                        ; local index
00005e3: 41                                        ; i32.const
00005e4: 08                                        ; i32 literal
00005e5: 6a                                        ; i32.add
00005e6: 41                                        ; i32.const
00005e7: 01                                        ; i32 literal
00005e8: 41                                        ; i32.const
00005e9: 04                                        ; i32 literal
00005ea: 6c                                        ; i32.mul
00005eb: 6a                                        ; i32.add
00005ec: 28                                        ; i32.load
00005ed: 02                                        ; alignment
00005ee: 00                                        ; load offset
00005ef: 36                                        ; i32.store
00005f0: 02                                        ; alignment
00005f1: 00                                        ; store offset
00005f2: 20                                        ; local.get
00005f3: 02                                        ; local index
00005f4: 41                                        ; i32.const
00005f5: 00                                        ; i32 literal
00005f6: 6a                                        ; i32.add
00005f7: 41                                        ; i32.const
00005f8: 01                                        ; i32 literal
00005f9: 36                                        ; i32.store
00005fa: 02                                        ; alignment
00005fb: 00                                        ; store offset
00005fc: 20                                        ; local.get
00005fd: 05                                        ; local index
00005fe: 41                                        ; i32.const
00005ff: 10                                        ; i32 literal
0000600: 6a                                        ; i32.add
0000601: 21                                        ; local.set
0000602: 08                                        ; local index
0000603: 20                                        ; local.get
0000604: 08                                        ; local index
0000605: 41                                        ; i32.const
0000606: 8809                                      ; i32 literal
0000608: 10                                        ; call
0000609: 07                                        ; function index
000060a: 20                                        ; local.get
000060b: 08                                        ; local index
000060c: 21                                        ; local.set
000060d: 03                                        ; local index
000060e: 20                                        ; local.get
000060f: 03                                        ; local index
0000610: 41                                        ; i32.const
0000611: 04                                        ; i32 literal
0000612: 6a                                        ; i32.add
0000613: 20                                        ; local.get
0000614: 00                                        ; local index
0000615: 41                                        ; i32.const
0000616: 08                                        ; i32 literal
0000617: 6a                                        ; i32.add
0000618: 41                                        ; i32.const
0000619: 02                                        ; i32 literal
000061a: 41                                        ; i32.const
000061b: 04                                        ; i32 literal
000061c: 6c                                        ; i32.mul
000061d: 6a                                        ; i32.add
000061e: 28                                        ; i32.load
000061f: 02                                        ; alignment
0000620: 00                                        ; load offset
0000621: 36                                        ; i32.store
0000622: 02                                        ; alignment
0000623: 00                                        ; store offset
0000624: 20                                        ; local.get
0000625: 03                                        ; local index
0000626: 41                                        ; i32.const
0000627: 00                                        ; i32 literal
0000628: 6a                                        ; i32.add
0000629: 41                                        ; i32.const
000062a: 02                                        ; i32 literal
000062b: 36                                        ; i32.store
000062c: 02                                        ; alignment
000062d: 00                                        ; store offset
000062e: 20                                        ; local.get
000062f: 04                                        ; local index
0000630: 0f                                        ; return
0000631: 0b                                        ; end
; move data: [56a, 632) -> [56b, 633)
0000569: c801                                      ; FIXUP func body size
; function body 8
0000633: 00                                        ; func body size (guess)
0000634: 00                                        ; local decl count
0000635: 41                                        ; i32.const
0000636: d00c                                      ; i32 literal
0000638: 0f                                        ; return
0000639: 0b                                        ; end
0000633: 06                                        ; FIXUP func body size
; function body 9
000063a: 00                                        ; func body size (guess)
000063b: 00                                        ; local decl count
000063c: 41                                        ; i32.const
000063d: e00c                                      ; i32 literal
000063f: 0f                                        ; return
0000640: 0b                                        ; end
000063a: 06                                        ; FIXUP func body size
; function body 10
0000641: 00                                        ; func body size (guess)
0000642: 00                                        ; local decl count
0000643: 41                                        ; i32.const
0000644: 980d                                      ; i32 literal
0000646: 0f                                        ; return
0000647: 0b                                        ; end
0000641: 06                                        ; FIXUP func body size
; function body 11
0000648: 00                                        ; func body size (guess)
0000649: 00                                        ; local decl count
000064a: 41                                        ; i32.const
000064b: a80d                                      ; i32 literal
000064d: 0f                                        ; return
000064e: 0b                                        ; end
0000648: 06                                        ; FIXUP func body size
; function body 12
000064f: 00                                        ; func body size (guess)
0000650: 00                                        ; local decl count
0000651: 41                                        ; i32.const
0000652: b80d                                      ; i32 literal
0000654: 0f                                        ; return
0000655: 0b                                        ; end
000064f: 06                                        ; FIXUP func body size
; function body 13
0000656: 00                                        ; func body size (guess)
0000657: 00                                        ; local decl count
0000658: 41                                        ; i32.const
0000659: e00d                                      ; i32 literal
000065b: 0f                                        ; return
000065c: 0b                                        ; end
0000656: 06                                        ; FIXUP func body size
; function body 14
000065d: 00                                        ; func body size (guess)
000065e: 00                                        ; local decl count
000065f: 41                                        ; i32.const
0000660: f00d                                      ; i32 literal
0000662: 0f                                        ; return
0000663: 0b                                        ; end
000065d: 06                                        ; FIXUP func body size
; function body 15
0000664: 00                                        ; func body size (guess)
0000665: 00                                        ; local decl count
0000666: 41                                        ; i32.const
0000667: 980e                                      ; i32 literal
0000669: 0f                                        ; return
000066a: 0b                                        ; end
0000664: 06                                        ; FIXUP func body size
; function body 16
000066b: 00                                        ; func body size (guess)
000066c: 00                                        ; local decl count
000066d: 41                                        ; i32.const
000066e: a00e                                      ; i32 literal
0000670: 0f                                        ; return
0000671: 0b                                        ; end
000066b: 06                                        ; FIXUP func body size
; function body 17
0000672: 00                                        ; func body size (guess)
0000673: 00                                        ; local decl count
0000674: 10                                        ; call
0000675: 1f                                        ; function index
0000676: 10                                        ; call
0000677: 20                                        ; function index
0000678: 10                                        ; call
0000679: 21                                        ; function index
000067a: 10                                        ; call
000067b: 22                                        ; function index
000067c: 0b                                        ; end
0000672: 0a                                        ; FIXUP func body size
; function body 18
000067d: 00                                        ; func body size (guess)
000067e: 01                                        ; local decl count
000067f: 0f                                        ; local type count
0000680: 7f                                        ; i32
0000681: 41                                        ; i32.const
0000682: 08                                        ; i32 literal
0000683: 41                                        ; i32.const
0000684: 02                                        ; i32 literal
0000685: 41                                        ; i32.const
0000686: 04                                        ; i32 literal
0000687: 6c                                        ; i32.mul
0000688: 6a                                        ; i32.add
0000689: 41                                        ; i32.const
000068a: 07                                        ; i32 literal
000068b: 10                                        ; call
000068c: 0d                                        ; function index
000068d: 21                                        ; local.set
000068e: 00                                        ; local index
000068f: 20                                        ; local.get
0000690: 00                                        ; local index
0000691: 41                                        ; i32.const
0000692: 8804                                      ; i32 literal
0000694: 36                                        ; i32.store
0000695: 02                                        ; alignment
0000696: 00                                        ; store offset
0000697: 20                                        ; local.get
0000698: 00                                        ; local index
0000699: 41                                        ; i32.const
000069a: 04                                        ; i32 literal
000069b: 6a                                        ; i32.add
000069c: 41                                        ; i32.const
000069d: 02                                        ; i32 literal
000069e: 36                                        ; i32.store
000069f: 02                                        ; alignment
00006a0: 00                                        ; store offset
00006a1: 20                                        ; local.get
00006a2: 00                                        ; local index
00006a3: 41                                        ; i32.const
00006a4: 08                                        ; i32 literal
00006a5: 6a                                        ; i32.add
00006a6: 21                                        ; local.set
00006a7: 01                                        ; local index
00006a8: 41                                        ; i32.const
00006a9: 28                                        ; i32 literal
00006aa: 41                                        ; i32.const
00006ab: 8804                                      ; i32 literal
00006ad: 10                                        ; call
00006ae: 0d                                        ; function index
00006af: 21                                        ; local.set
00006b0: 02                                        ; local index
00006b1: 20                                        ; local.get
00006b2: 02                                        ; local index
00006b3: 41                                        ; i32.const
00006b4: 08                                        ; i32 literal
00006b5: 6a                                        ; i32.add
00006b6: 41                                        ; i32.const
00006b7: e400                                      ; i32 literal
00006b9: 36                                        ; i32.store
00006ba: 02                                        ; alignment
00006bb: 00                                        ; store offset
00006bc: 41                                        ; i32.const
00006bd: 1c                                        ; i32 literal
00006be: 41                                        ; i32.const
00006bf: 0d                                        ; i32 literal
00006c0: 10                                        ; call
00006c1: 0d                                        ; function index
00006c2: 21                                        ; local.set
00006c3: 03                                        ; local index
00006c4: 41                                        ; i32.const
00006c5: 08                                        ; i32 literal
00006c6: 41                                        ; i32.const
00006c7: 8809                                      ; i32 literal
00006c9: 10                                        ; call
00006ca: 0d                                        ; function index
00006cb: 21                                        ; local.set
00006cc: 04                                        ; local index
00006cd: 20                                        ; local.get
00006ce: 04                                        ; local index
00006cf: 41                                        ; i32.const
00006d0: 04                                        ; i32 literal
00006d1: 6a                                        ; i32.add
00006d2: 41                                        ; i32.const
00006d3: 900b                                      ; i32 literal
00006d5: 36                                        ; i32.store
00006d6: 02                                        ; alignment
00006d7: 00                                        ; store offset
00006d8: 20                                        ; local.get
00006d9: 04                                        ; local index
00006da: 41                                        ; i32.const
00006db: 00                                        ; i32 literal
00006dc: 6a                                        ; i32.add
00006dd: 41                                        ; i32.const
00006de: 00                                        ; i32 literal
00006df: 36                                        ; i32.store
00006e0: 02                                        ; alignment
00006e1: 00                                        ; store offset
00006e2: 20                                        ; local.get
00006e3: 04                                        ; local index
00006e4: 21                                        ; local.set
00006e5: 05                                        ; local index
00006e6: 20                                        ; local.get
00006e7: 03                                        ; local index
00006e8: 41                                        ; i32.const
00006e9: 0c                                        ; i32 literal
00006ea: 6a                                        ; i32.add
00006eb: 21                                        ; local.set
00006ec: 06                                        ; local index
00006ed: 20                                        ; local.get
00006ee: 06                                        ; local index
00006ef: 41                                        ; i32.const
00006f0: 00                                        ; i32 literal
00006f1: 6a                                        ; i32.add
00006f2: 20                                        ; local.get
00006f3: 05                                        ; local index
00006f4: 41                                        ; i32.const
00006f5: 00                                        ; i32 literal
00006f6: 6a                                        ; i32.add
00006f7: 28                                        ; i32.load
00006f8: 02                                        ; alignment
00006f9: 00                                        ; load offset
00006fa: 36                                        ; i32.store
00006fb: 02                                        ; alignment
00006fc: 00                                        ; store offset
00006fd: 20                                        ; local.get
00006fe: 06                                        ; local index
00006ff: 41                                        ; i32.const
0000700: 04                                        ; i32 literal
0000701: 6a                                        ; i32.add
0000702: 20                                        ; local.get
0000703: 05                                        ; local index
0000704: 41                                        ; i32.const
0000705: 04                                        ; i32 literal
0000706: 6a                                        ; i32.add
0000707: 28                                        ; i32.load
0000708: 02                                        ; alignment
0000709: 00                                        ; load offset
000070a: 36                                        ; i32.store
000070b: 02                                        ; alignment
000070c: 00                                        ; store offset
000070d: 20                                        ; local.get
000070e: 03                                        ; local index
000070f: 41                                        ; i32.const
0000710: 00                                        ; i32 literal
0000711: 6a                                        ; i32.add
0000712: 43                                        ; f32.const
0000713: 0000 0000                                 ; f32 literal
0000717: 38                                        ; f32.store
0000718: 02                                        ; alignment
0000719: 00                                        ; store offset
000071a: 20                                        ; local.get
000071b: 03                                        ; local index
000071c: 41                                        ; i32.const
000071d: 04                                        ; i32 literal
000071e: 6a                                        ; i32.add
000071f: 43                                        ; f32.const
0000720: 0000 0000                                 ; f32 literal
0000724: 38                                        ; f32.store
0000725: 02                                        ; alignment
0000726: 00                                        ; store offset
0000727: 20                                        ; local.get
0000728: 03                                        ; local index
0000729: 41                                        ; i32.const
000072a: 08                                        ; i32 literal
000072b: 6a                                        ; i32.add
000072c: 41                                        ; i32.const
000072d: e400                                      ; i32 literal
000072f: 36                                        ; i32.store
0000730: 02                                        ; alignment
0000731: 00                                        ; store offset
0000732: 20                                        ; local.get
0000733: 02                                        ; local index
0000734: 41                                        ; i32.const
0000735: 24                                        ; i32 literal
0000736: 6a                                        ; i32.add
0000737: 20                                        ; local.get
0000738: 03                                        ; local index
0000739: 36                                        ; i32.store
000073a: 02                                        ; alignment
000073b: 00                                        ; store offset
000073c: 20                                        ; local.get
000073d: 02                                        ; local index
000073e: 41                                        ; i32.const
000073f: 20                                        ; i32 literal
0000740: 6a                                        ; i32.add
0000741: 41                                        ; i32.const
0000742: e707                                      ; i32 literal
0000744: b2                                        ; f32.convert_i32_s
0000745: 38                                        ; f32.store
0000746: 02                                        ; alignment
0000747: 00                                        ; store offset
0000748: 41                                        ; i32.const
0000749: 08                                        ; i32 literal
000074a: 41                                        ; i32.const
000074b: 8809                                      ; i32 literal
000074d: 10                                        ; call
000074e: 0d                                        ; function index
000074f: 21                                        ; local.set
0000750: 07                                        ; local index
0000751: 20                                        ; local.get
0000752: 07                                        ; local index
0000753: 41                                        ; i32.const
0000754: 04                                        ; i32 literal
0000755: 6a                                        ; i32.add
0000756: 41                                        ; i32.const
0000757: 980b                                      ; i32 literal
0000759: 36                                        ; i32.store
000075a: 02                                        ; alignment
000075b: 00                                        ; store offset
000075c: 20                                        ; local.get
000075d: 07                                        ; local index
000075e: 41                                        ; i32.const
000075f: 00                                        ; i32 literal
0000760: 6a                                        ; i32.add
0000761: 41                                        ; i32.const
0000762: 00                                        ; i32 literal
0000763: 36                                        ; i32.store
0000764: 02                                        ; alignment
0000765: 00                                        ; store offset
0000766: 20                                        ; local.get
0000767: 07                                        ; local index
0000768: 21                                        ; local.set
0000769: 08                                        ; local index
000076a: 20                                        ; local.get
000076b: 02                                        ; local index
000076c: 41                                        ; i32.const
000076d: 00                                        ; i32 literal
000076e: 6a                                        ; i32.add
000076f: 21                                        ; local.set
0000770: 09                                        ; local index
0000771: 20                                        ; local.get
0000772: 09                                        ; local index
0000773: 41                                        ; i32.const
0000774: 00                                        ; i32 literal
0000775: 6a                                        ; i32.add
0000776: 20                                        ; local.get
0000777: 08                                        ; local index
0000778: 41                                        ; i32.const
0000779: 00                                        ; i32 literal
000077a: 6a                                        ; i32.add
000077b: 28                                        ; i32.load
000077c: 02                                        ; alignment
000077d: 00                                        ; load offset
000077e: 36                                        ; i32.store
000077f: 02                                        ; alignment
0000780: 00                                        ; store offset
0000781: 20                                        ; local.get
0000782: 09                                        ; local index
0000783: 41                                        ; i32.const
0000784: 04                                        ; i32 literal
0000785: 6a                                        ; i32.add
0000786: 20                                        ; local.get
0000787: 08                                        ; local index
0000788: 41                                        ; i32.const
0000789: 04                                        ; i32 literal
000078a: 6a                                        ; i32.add
000078b: 28                                        ; i32.load
000078c: 02                                        ; alignment
000078d: 00                                        ; load offset
000078e: 36                                        ; i32.store
000078f: 02                                        ; alignment
0000790: 00                                        ; store offset
0000791: 20                                        ; local.get
0000792: 02                                        ; local index
0000793: 41                                        ; i32.const
0000794: 0c                                        ; i32 literal
0000795: 6a                                        ; i32.add
0000796: 41                                        ; i32.const
0000797: e807                                      ; i32 literal
0000799: 36                                        ; i32.store
000079a: 02                                        ; alignment
000079b: 00                                        ; store offset
000079c: 20                                        ; local.get
000079d: 02                                        ; local index
000079e: 41                                        ; i32.const
000079f: 10                                        ; i32 literal
00007a0: 6a                                        ; i32.add
00007a1: 44                                        ; f64.const
00007a2: 0000 0000 0000 0000                       ; f64 literal
00007aa: 39                                        ; f64.store
00007ab: 03                                        ; alignment
00007ac: 00                                        ; store offset
00007ad: 20                                        ; local.get
00007ae: 02                                        ; local index
00007af: 41                                        ; i32.const
00007b0: 18                                        ; i32 literal
00007b1: 6a                                        ; i32.add
00007b2: 44                                        ; f64.const
00007b3: 0000 0000 0000 0000                       ; f64 literal
00007bb: 39                                        ; f64.store
00007bc: 03                                        ; alignment
00007bd: 00                                        ; store offset
00007be: 20                                        ; local.get
00007bf: 01                                        ; local index
00007c0: 41                                        ; i32.const
00007c1: 00                                        ; i32 literal
00007c2: 6a                                        ; i32.add
00007c3: 20                                        ; local.get
00007c4: 02                                        ; local index
00007c5: 36                                        ; i32.store
00007c6: 02                                        ; alignment
00007c7: 00                                        ; store offset
00007c8: 41                                        ; i32.const
00007c9: 28                                        ; i32 literal
00007ca: 41                                        ; i32.const
00007cb: 8804                                      ; i32 literal
00007cd: 10                                        ; call
00007ce: 0d                                        ; function index
00007cf: 21                                        ; local.set
00007d0: 0a                                        ; local index
00007d1: 41                                        ; i32.const
00007d2: 08                                        ; i32 literal
00007d3: 41                                        ; i32.const
00007d4: 8809                                      ; i32 literal
00007d6: 10                                        ; call
00007d7: 0d                                        ; function index
00007d8: 21                                        ; local.set
00007d9: 0b                                        ; local index
00007da: 20                                        ; local.get
00007db: 0b                                        ; local index
00007dc: 41                                        ; i32.const
00007dd: 04                                        ; i32 literal
00007de: 6a                                        ; i32.add
00007df: 41                                        ; i32.const
00007e0: a00b                                      ; i32 literal
00007e2: 36                                        ; i32.store
00007e3: 02                                        ; alignment
00007e4: 00                                        ; store offset
00007e5: 20                                        ; local.get
00007e6: 0b                                        ; local index
00007e7: 41                                        ; i32.const
00007e8: 00                                        ; i32 literal
00007e9: 6a                                        ; i32.add
00007ea: 41                                        ; i32.const
00007eb: 00                                        ; i32 literal
00007ec: 36                                        ; i32.store
00007ed: 02                                        ; alignment
00007ee: 00                                        ; store offset
00007ef: 20                                        ; local.get
00007f0: 0b                                        ; local index
00007f1: 21                                        ; local.set
00007f2: 0c                                        ; local index
00007f3: 20                                        ; local.get
00007f4: 0a                                        ; local index
00007f5: 41                                        ; i32.const
00007f6: 00                                        ; i32 literal
00007f7: 6a                                        ; i32.add
00007f8: 21                                        ; local.set
00007f9: 0d                                        ; local index
00007fa: 20                                        ; local.get
00007fb: 0d                                        ; local index
00007fc: 41                                        ; i32.const
00007fd: 00                                        ; i32 literal
00007fe: 6a                                        ; i32.add
00007ff: 20                                        ; local.get
0000800: 0c                                        ; local index
0000801: 41                                        ; i32.const
0000802: 00                                        ; i32 literal
0000803: 6a                                        ; i32.add
0000804: 28                                        ; i32.load
0000805: 02                                        ; alignment
0000806: 00                                        ; load offset
0000807: 36                                        ; i32.store
0000808: 02                                        ; alignment
0000809: 00                                        ; store offset
000080a: 20                                        ; local.get
000080b: 0d                                        ; local index
000080c: 41                                        ; i32.const
000080d: 04                                        ; i32 literal
000080e: 6a                                        ; i32.add
000080f: 20                                        ; local.get
0000810: 0c                                        ; local index
0000811: 41                                        ; i32.const
0000812: 04                                        ; i32 literal
0000813: 6a                                        ; i32.add
0000814: 28                                        ; i32.load
0000815: 02                                        ; alignment
0000816: 00                                        ; load offset
0000817: 36                                        ; i32.store
0000818: 02                                        ; alignment
0000819: 00                                        ; store offset
000081a: 20                                        ; local.get
000081b: 0a                                        ; local index
000081c: 41                                        ; i32.const
000081d: 08                                        ; i32 literal
000081e: 6a                                        ; i32.add
000081f: 41                                        ; i32.const
0000820: e807                                      ; i32 literal
0000822: 36                                        ; i32.store
0000823: 02                                        ; alignment
0000824: 00                                        ; store offset
0000825: 20                                        ; local.get
0000826: 0a                                        ; local index
0000827: 41                                        ; i32.const
0000828: 0c                                        ; i32 literal
0000829: 6a                                        ; i32.add
000082a: 41                                        ; i32.const
000082b: e807                                      ; i32 literal
000082d: 36                                        ; i32.store
000082e: 02                                        ; alignment
000082f: 00                                        ; store offset
0000830: 20                                        ; local.get
0000831: 0a                                        ; local index
0000832: 41                                        ; i32.const
0000833: 10                                        ; i32 literal
0000834: 6a                                        ; i32.add
0000835: 44                                        ; f64.const
0000836: 0000 0000 0000 0000                       ; f64 literal
000083e: 39                                        ; f64.store
000083f: 03                                        ; alignment
0000840: 00                                        ; store offset
0000841: 20                                        ; local.get
0000842: 0a                                        ; local index
0000843: 41                                        ; i32.const
0000844: 18                                        ; i32 literal
0000845: 6a                                        ; i32.add
0000846: 44                                        ; f64.const
0000847: 0000 0000 0000 0000                       ; f64 literal
000084f: 39                                        ; f64.store
0000850: 03                                        ; alignment
0000851: 00                                        ; store offset
0000852: 20                                        ; local.get
0000853: 0a                                        ; local index
0000854: 41                                        ; i32.const
0000855: 20                                        ; i32 literal
0000856: 6a                                        ; i32.add
0000857: 43                                        ; f32.const
0000858: 0000 c6c2                                 ; f32 literal
000085c: 38                                        ; f32.store
000085d: 02                                        ; alignment
000085e: 00                                        ; store offset
000085f: 20                                        ; local.get
0000860: 0a                                        ; local index
0000861: 41                                        ; i32.const
0000862: 24                                        ; i32 literal
0000863: 6a                                        ; i32.add
0000864: 41                                        ; i32.const
0000865: 00                                        ; i32 literal
0000866: 36                                        ; i32.store
0000867: 02                                        ; alignment
0000868: 00                                        ; store offset
0000869: 20                                        ; local.get
000086a: 01                                        ; local index
000086b: 41                                        ; i32.const
000086c: 04                                        ; i32 literal
000086d: 6a                                        ; i32.add
000086e: 20                                        ; local.get
000086f: 0a                                        ; local index
0000870: 36                                        ; i32.store
0000871: 02                                        ; alignment
0000872: 00                                        ; store offset
0000873: 20                                        ; local.get
0000874: 00                                        ; local index
0000875: 24                                        ; global.set
0000876: 0c                                        ; global index
0000877: 41                                        ; i32.const
0000878: 28                                        ; i32 literal
0000879: 41                                        ; i32.const
000087a: 8804                                      ; i32 literal
000087c: 10                                        ; call
000087d: 0d                                        ; function index
000087e: 21                                        ; local.set
000087f: 0e                                        ; local index
0000880: 20                                        ; local.get
0000881: 0e                                        ; local index
0000882: 41                                        ; i32.const
0000883: 18                                        ; i32 literal
0000884: 6a                                        ; i32.add
0000885: 41                                        ; i32.const
0000886: ffff ffff 07                              ; i32 literal
000088b: b7                                        ; f64.convert_i32_s
000088c: 39                                        ; f64.store
000088d: 03                                        ; alignment
000088e: 00                                        ; store offset
000088f: 20                                        ; local.get
0000890: 0e                                        ; local index
0000891: 41                                        ; i32.const
0000892: 10                                        ; i32 literal
0000893: 6a                                        ; i32.add
0000894: 41                                        ; i32.const
0000895: 0a                                        ; i32 literal
0000896: b7                                        ; f64.convert_i32_s
0000897: 39                                        ; f64.store
0000898: 03                                        ; alignment
0000899: 00                                        ; store offset
000089a: 20                                        ; local.get
000089b: 0e                                        ; local index
000089c: 41                                        ; i32.const
000089d: 08                                        ; i32 literal
000089e: 6a                                        ; i32.add
000089f: 41                                        ; i32.const
00008a0: e807                                      ; i32 literal
00008a2: 36                                        ; i32.store
00008a3: 02                                        ; alignment
00008a4: 00                                        ; store offset
00008a5: 20                                        ; local.get
00008a6: 0e                                        ; local index
00008a7: 41                                        ; i32.const
00008a8: 0c                                        ; i32 literal
00008a9: 6a                                        ; i32.add
00008aa: 41                                        ; i32.const
00008ab: e807                                      ; i32 literal
00008ad: 36                                        ; i32.store
00008ae: 02                                        ; alignment
00008af: 00                                        ; store offset
00008b0: 20                                        ; local.get
00008b1: 0e                                        ; local index
00008b2: 41                                        ; i32.const
00008b3: 20                                        ; i32 literal
00008b4: 6a                                        ; i32.add
00008b5: 43                                        ; f32.const
00008b6: 0000 c6c2                                 ; f32 literal
00008ba: 38                                        ; f32.store
00008bb: 02                                        ; alignment
00008bc: 00                                        ; store offset
00008bd: 20                                        ; local.get
00008be: 0e                                        ; local index
00008bf: 41                                        ; i32.const
00008c0: 24                                        ; i32 literal
00008c1: 6a                                        ; i32.add
00008c2: 41                                        ; i32.const
00008c3: 00                                        ; i32 literal
00008c4: 36                                        ; i32.store
00008c5: 02                                        ; alignment
00008c6: 00                                        ; store offset
00008c7: 20                                        ; local.get
00008c8: 0e                                        ; local index
00008c9: 24                                        ; global.set
00008ca: 0d                                        ; global index
00008cb: 0b                                        ; end
; move data: [67e, 8cc) -> [67f, 8cd)
000067d: ce04                                      ; FIXUP func body size
; function body 19
00008cd: 00                                        ; func body size (guess)
00008ce: 01                                        ; local decl count
00008cf: 10                                        ; local type count
00008d0: 7f                                        ; i32
00008d1: 41                                        ; i32.const
00008d2: 00                                        ; i32 literal
00008d3: 21                                        ; local.set
00008d4: 0f                                        ; local index
00008d5: 02                                        ; block
00008d6: 40                                        ; void
00008d7: 03                                        ; loop
00008d8: 40                                        ; void
00008d9: 20                                        ; local.get
00008da: 0f                                        ; local index
00008db: 23                                        ; global.get
00008dc: 0c                                        ; global index
00008dd: 41                                        ; i32.const
00008de: 04                                        ; i32 literal
00008df: 6a                                        ; i32.add
00008e0: 28                                        ; i32.load
00008e1: 02                                        ; alignment
00008e2: 00                                        ; load offset
00008e3: 41                                        ; i32.const
00008e4: 01                                        ; i32 literal
00008e5: 6b                                        ; i32.sub
00008e6: 4a                                        ; i32.gt_s
00008e7: 0d                                        ; br_if
00008e8: 01                                        ; break depth
00008e9: 23                                        ; global.get
00008ea: 0c                                        ; global index
00008eb: 41                                        ; i32.const
00008ec: 08                                        ; i32 literal
00008ed: 6a                                        ; i32.add
00008ee: 20                                        ; local.get
00008ef: 0f                                        ; local index
00008f0: 41                                        ; i32.const
00008f1: 04                                        ; i32 literal
00008f2: 6c                                        ; i32.mul
00008f3: 6a                                        ; i32.add
00008f4: 28                                        ; i32.load
00008f5: 02                                        ; alignment
00008f6: 00                                        ; load offset
00008f7: 10                                        ; call
00008f8: 0c                                        ; function index
00008f9: 20                                        ; local.get
00008fa: 0f                                        ; local index
00008fb: 41                                        ; i32.const
00008fc: 01                                        ; i32 literal
00008fd: 6a                                        ; i32.add
00008fe: 21                                        ; local.set
00008ff: 0f                                        ; local index
0000900: 0c                                        ; br
0000901: 00                                        ; break depth
0000902: 0b                                        ; end
0000903: 0b                                        ; end
0000904: 0b                                        ; end
00008cd: 37                                        ; FIXUP func body size
; function body 20
0000905: 00                                        ; func body size (guess)
0000906: 01                                        ; local decl count
0000907: 01                                        ; local type count
0000908: 7f                                        ; i32
0000909: 41                                        ; i32.const
000090a: 08                                        ; i32 literal
000090b: 41                                        ; i32.const
000090c: 8809                                      ; i32 literal
000090e: 10                                        ; call
000090f: 0d                                        ; function index
0000910: 21                                        ; local.set
0000911: 00                                        ; local index
0000912: 20                                        ; local.get
0000913: 00                                        ; local index
0000914: 41                                        ; i32.const
0000915: 04                                        ; i32 literal
0000916: 6a                                        ; i32.add
0000917: 41                                        ; i32.const
0000918: e00b                                      ; i32 literal
000091a: 36                                        ; i32.store
000091b: 02                                        ; alignment
000091c: 00                                        ; store offset
000091d: 20                                        ; local.get
000091e: 00                                        ; local index
000091f: 41                                        ; i32.const
0000920: 00                                        ; i32 literal
0000921: 6a                                        ; i32.add
0000922: 41                                        ; i32.const
0000923: b8bc eda7 03                              ; i32 literal
0000928: 36                                        ; i32.store
0000929: 02                                        ; alignment
000092a: 00                                        ; store offset
000092b: 23                                        ; global.get
000092c: 0d                                        ; global index
000092d: 41                                        ; i32.const
000092e: 00                                        ; i32 literal
000092f: 6a                                        ; i32.add
0000930: 20                                        ; local.get
0000931: 00                                        ; local index
0000932: 36                                        ; i32.store
0000933: 02                                        ; alignment
0000934: 00                                        ; store offset
0000935: 23                                        ; global.get
0000936: 0d                                        ; global index
0000937: 41                                        ; i32.const
0000938: 24                                        ; i32 literal
0000939: 6a                                        ; i32.add
000093a: 10                                        ; call
000093b: 0f                                        ; function index
000093c: 36                                        ; i32.store
000093d: 02                                        ; alignment
000093e: 00                                        ; store offset
000093f: 0b                                        ; end
0000905: 3a                                        ; FIXUP func body size
; function body 21
0000940: 00                                        ; func body size (guess)
0000941: 00                                        ; local decl count
0000942: 0b                                        ; end
0000940: 02                                        ; FIXUP func body size
; move data: [35d, 943) -> [35e, 944)
000035c: e60b                                      ; FIXUP section size
; section "Data" (11)
0000944: 0b                                        ; section code
0000945: 00                                        ; section size (guess)
0000946: 1a                                        ; num data segments
; data segment header 0
0000947: 00                                      
0000948: 41                                        ; i32.const
0000949: f808                                      ; i32 literal
000094b: 0b                                        ; end
000094c: 09                                        ; data segment size
; data segment data 0
000094d: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
0000956: 00                                      
0000957: 41                                        ; i32.const
0000958: 900b                                      ; i32 literal
000095a: 0b                                        ; end
000095b: 04                                        ; data segment size
; data segment data 1
000095c: 3132 3300                                 ; data segment data
; data segment header 2
0000960: 00                                      
0000961: 41                                        ; i32.const
0000962: 980b                                      ; i32 literal
0000964: 0b                                        ; end
0000965: 06                                        ; data segment size
; data segment data 2
0000966: 6669 7273 7400                            ; data segment data
; data segment header 3
000096c: 00                                      
000096d: 41                                        ; i32.const
000096e: a00b                                      ; i32 literal
0000970: 0b                                        ; end
0000971: 07                                        ; data segment size
; data segment data 3
0000972: 7365 636f 6e64 00                         ; data segment data
; data segment header 4
0000979: 00                                      
000097a: 41                                        ; i32.const
000097b: a80b                                      ; i32 literal
000097d: 0b                                        ; end
000097e: 1d                                        ; data segment size
; data segment data 4
000097f: 6469 7265 6374 6c79 2063 7265 6174 6520 
000098f: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 5
000099c: 00                                      
000099d: 41                                        ; i32.const
000099e: c80b                                      ; i32 literal
00009a0: 0b                                        ; end
00009a1: 15                                        ; data segment size
; data segment data 5
00009a2: 7468 6973 2069 7320 6120 7374 7275 6374 
00009b2: 7572 6521 00                              ; data segment data
; data segment header 6
00009b7: 00                                      
00009b8: 41                                        ; i32.const
00009b9: e00b                                      ; i32 literal
00009bb: 0b                                        ; end
00009bc: 0c                                        ; data segment size
; data segment data 6
00009bd: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 7
00009c9: 00                                      
00009ca: 41                                        ; i32.const
00009cb: f00b                                      ; i32 literal
00009cd: 0b                                        ; end
00009ce: 09                                        ; data segment size
; data segment data 7
00009cf: 4141 4141 4141 4141 00                    ; data segment data
; data segment header 8
00009d8: 00                                      
00009d9: 41                                        ; i32.const
00009da: 800c                                      ; i32 literal
00009dc: 0b                                        ; end
00009dd: 09                                        ; data segment size
; data segment data 8
00009de: 4242 4242 4242 4242 00                    ; data segment data
; data segment header 9
00009e7: 00                                      
00009e8: 41                                        ; i32.const
00009e9: 900c                                      ; i32 literal
00009eb: 0b                                        ; end
00009ec: 0b                                        ; data segment size
; data segment data 9
00009ed: 4343 4343 4343 4343 4343 00               ; data segment data
; data segment header 10
00009f8: 00                                      
00009f9: 41                                        ; i32.const
00009fa: a00c                                      ; i32 literal
00009fc: 0b                                        ; end
00009fd: 0b                                        ; data segment size
; data segment data 10
00009fe: 4444 4444 4444 4444 4444 00               ; data segment data
; data segment header 11
0000a09: 00                                      
0000a0a: 41                                        ; i32.const
0000a0b: b00c                                      ; i32 literal
0000a0d: 0b                                        ; end
0000a0e: 03                                        ; data segment size
; data segment data 11
0000a0f: 4545 00                                   ; data segment data
; data segment header 12
0000a12: 00                                      
0000a13: 41                                        ; i32.const
0000a14: b80c                                      ; i32 literal
0000a16: 0b                                        ; end
0000a17: 08                                        ; data segment size
; data segment data 12
0000a18: 4646 4646 4646 4600                       ; data segment data
; data segment header 13
0000a20: 00                                      
0000a21: 41                                        ; i32.const
0000a22: c00c                                      ; i32 literal
0000a24: 0b                                        ; end
0000a25: 09                                        ; data segment size
; data segment data 13
0000a26: 4747 4747 4747 4747 00                    ; data segment data
; data segment header 14
0000a2f: 00                                      
0000a30: 41                                        ; i32.const
0000a31: d00c                                      ; i32 literal
0000a33: 0b                                        ; end
0000a34: 0f                                        ; data segment size
; data segment data 14
0000a35: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 15
0000a44: 00                                      
0000a45: 41                                        ; i32.const
0000a46: e00c                                      ; i32 literal
0000a48: 0b                                        ; end
0000a49: 38                                        ; data segment size
; data segment data 15
0000a4a: 4a61 7661 7363 7269 7074 206f 626a 6563 
0000a5a: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000a6a: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000a7a: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 16
0000a82: 00                                      
0000a83: 41                                        ; i32.const
0000a84: 980d                                      ; i32 literal
0000a86: 0b                                        ; end
0000a87: 0e                                        ; data segment size
; data segment data 16
0000a88: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 17
0000a96: 00                                      
0000a97: 41                                        ; i32.const
0000a98: a80d                                      ; i32 literal
0000a9a: 0b                                        ; end
0000a9b: 0a                                        ; data segment size
; data segment data 17
0000a9c: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 18
0000aa6: 00                                      
0000aa7: 41                                        ; i32.const
0000aa8: b80d                                      ; i32 literal
0000aaa: 0b                                        ; end
0000aab: 21                                        ; data segment size
; data segment data 18
0000aac: 436f 7079 7269 6768 7420 2863 2920 7661 
0000abc: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
0000acc: 00                                        ; data segment data
; data segment header 19
0000acd: 00                                      
0000ace: 41                                        ; i32.const
0000acf: e00d                                      ; i32 literal
0000ad1: 0b                                        ; end
0000ad2: 0b                                        ; data segment size
; data segment data 19
0000ad3: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 20
0000ade: 00                                      
0000adf: 41                                        ; i32.const
0000ae0: f00d                                      ; i32 literal
0000ae2: 0b                                        ; end
0000ae3: 25                                        ; data segment size
; data segment data 20
0000ae4: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000af4: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000b04: 3535 6239 00                              ; data segment data
; data segment header 21
0000b09: 00                                      
0000b0a: 41                                        ; i32.const
0000b0b: 980e                                      ; i32 literal
0000b0d: 0b                                        ; end
0000b0e: 08                                        ; data segment size
; data segment data 21
0000b0f: 312e 302e 302e 3000                       ; data segment data
; data segment header 22
0000b17: 00                                      
0000b18: 41                                        ; i32.const
0000b19: a00e                                      ; i32 literal
0000b1b: 0b                                        ; end
0000b1c: 08                                        ; data segment size
; data segment data 22
0000b1d: 312e 302e 302e 3000                       ; data segment data
; data segment header 23
0000b25: 00                                      
0000b26: 41                                        ; i32.const
0000b27: 0d                                        ; i32 literal
0000b28: 0b                                        ; end
0000b29: bd03                                      ; data segment size
; data segment data 23
0000b2b: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000b3b: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000b4b: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
0000b5b: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
0000b6b: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
0000b7b: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000b8b: 5731 3073 496e 4a68 6479 4936 496d 597a 
0000b9b: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
0000bab: 4c43 4a35 496a 7037 496d 646c 626d 5679 
0000bbb: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000bcb: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000bdb: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
0000beb: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000bfb: 636d 4633 496a 6f69 6154 4d79 4969 7769 
0000c0b: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
0000c1b: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
0000c2b: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000c3b: 6479 4936 496c 7378 4d54 5977 5857 3568 
0000c4b: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
0000c5b: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
0000c6b: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000c7b: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000c8b: 4d54 5977 5857 3568 6257 5569 4c43 4a30 
0000c9b: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000cab: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000cbb: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000ccb: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000cdb: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 24
0000ce8: 00                                      
0000ce9: 41                                        ; i32.const
0000cea: 8804                                      ; i32 literal
0000cec: 0b                                        ; end
0000ced: ad04                                      ; data segment size
; data segment data 24
0000cef: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000cff: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000d0f: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
0000d1f: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
0000d2f: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
0000d3f: 6579 4a75 5957 316c 496a 7037 496d 646c 
0000d4f: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000d5f: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000d6f: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000d7f: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000d8f: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000d9f: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000daf: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000dbf: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000dcf: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000ddf: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000def: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000dff: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000e0f: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000e1f: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
0000e2f: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000e3f: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000e4f: 6558 426c 496a 6f30 6653 7769 636d 466b 
0000e5f: 6158 567a 496a 7037 496d 646c 626d 5679 
0000e6f: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000e7f: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000e8f: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000e9f: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000eaf: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000ebf: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000ecf: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000edf: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000eef: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000eff: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000f0f: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 25
0000f1c: 00                                      
0000f1d: 41                                        ; i32.const
0000f1e: 8809                                      ; i32 literal
0000f20: 0b                                        ; end
0000f21: 8502                                      ; data segment size
; data segment data 25
0000f23: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000f33: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000f43: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000f53: 6331 3970 5a43 4936 4d54 4532 4d43 7769 
0000f63: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000f73: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000f83: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000f93: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000fa3: 5a53 4936 4d58 3073 496d 3568 6257 5569 
0000fb3: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000fc3: 5731 3073 496e 4a68 6479 4936 496e 4e30 
0000fd3: 636d 6c75 5a79 4973 496e 5235 6347 5569 
0000fe3: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
0000ff3: 5933 5169 4f6e 5279 6457 5573 496d 316c 
0001003: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0001013: 5957 316c 6333 4268 5932 5569 4f6d 3531 
0001023: 6247 7839 00                              ; data segment data
; move data: [946, 1028) -> [947, 1029)
0000945: e20d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0132 0a60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 017f 0060 0001 7f60 0000 02c3 010e 
0000040: 044d 6174 6803 706f 7700 0004 4d61 7468 
0000050: 0473 7172 7400 0104 4d61 7468 0365 7870 
0000060: 0001 044d 6174 6803 636f 7300 0104 4d61 
0000070: 7468 0672 616e 646f 6d00 0204 4d61 7468 
0000080: 0463 6569 6c00 0104 4d61 7468 0566 6c6f 
0000090: 6f72 0001 0247 4309 6164 644f 626a 6563 
00000a0: 7400 0306 7374 7269 6e67 0772 6570 6c61 
00000b0: 6365 0004 0673 7472 696e 6703 6164 6400 
00000c0: 0506 7374 7269 6e67 066c 656e 6774 6800 
00000d0: 0606 7374 7269 6e67 0769 6e64 6578 4f66 
00000e0: 0005 0763 6f6e 736f 6c65 036c 6f67 0007 
00000f0: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
0000100: 0001 0317 1605 0808 0808 0808 0808 0808 
0000110: 0808 0808 0808 0909 0909 0906 9101 0f7f 
0000120: 0141 a80e 0b7c 0144 6957 148b 0abf 0540 
0000130: 0b7c 0144 182d 4454 fb21 0940 0b7f 0141 
0000140: ffff ffff 070b 7e01 42ff ffff ffff ffff 
0000150: ffff 000b 7d01 43ff ff7f 7f0b 7c01 44ff 
0000160: ffff ffff ffef 7f0b 7f01 4180 8080 8078 
0000170: 0b7e 0142 8080 8080 8080 8080 807f 0b7d 
0000180: 0143 ffff 7fff 0b7c 0144 ffff ffff ffff 
0000190: efff 0b7c 0144 0000 0000 0040 8f40 0b7f 
00001a0: 0141 000b 7f01 4100 0b7f 0141 f808 0b07 
00001b0: a603 0f14 676c 6f62 616c 2e47 6574 4d65 
00001c0: 6d6f 7279 5369 7a65 000e 126f 626a 6563 
00001d0: 7447 432e 6e65 7743 6972 636c 6500 0f12 
00001e0: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65 
00001f0: 6374 0011 186e 756d 6265 7241 7272 6179 
0000200: 2e63 7265 6174 6556 6563 746f 7200 1217 
0000210: 6e75 6d62 6572 4172 7261 792e 6e61 6d65 
0000220: 7356 6563 746f 7200 1316 6e75 6d62 6572 
0000230: 4172 7261 792e 7374 7275 6374 7572 6573 
0000240: 0014 1a41 7373 656d 626c 7949 6e66 6f2e 
0000250: 4173 7365 6d62 6c79 5469 746c 6500 1520 
0000260: 4173 7365 6d62 6c79 496e 666f 2e41 7373 
0000270: 656d 626c 7944 6573 6372 6970 7469 6f6e 
0000280: 0016 1c41 7373 656d 626c 7949 6e66 6f2e 
0000290: 4173 7365 6d62 6c79 436f 6d70 616e 7900 
00002a0: 171c 4173 7365 6d62 6c79 496e 666f 2e41 
00002b0: 7373 656d 626c 7950 726f 6475 6374 0018 
00002c0: 1e41 7373 656d 626c 7949 6e66 6f2e 4173 
00002d0: 7365 6d62 6c79 436f 7079 7269 6768 7400 
00002e0: 191e 4173 7365 6d62 6c79 496e 666f 2e41 
00002f0: 7373 656d 626c 7954 7261 6465 6d61 726b 
0000300: 001a 1141 7373 656d 626c 7949 6e66 6f2e 
0000310: 4775 6964 001b 1c41 7373 656d 626c 7949 
0000320: 6e66 6f2e 4173 7365 6d62 6c79 5665 7273 
0000330: 696f 6e00 1c20 4173 7365 6d62 6c79 496e 
0000340: 666f 2e41 7373 656d 626c 7946 696c 6556 
0000350: 6572 7369 6f6e 001d 0801 1e0a e60b 1618 
0000360: 0101 7f23 0021 0220 0220 006a 2400 2002 
0000370: 2001 1007 2002 0f0b 0500 2300 0f0b ae01 
0000380: 0116 7f23 0b41 02b7 a224 0b41 1c41 0d10 
0000390: 0d21 1020 1041 006a 230b b638 0200 2010 
00003a0: 4104 6a41 8fce 00b2 3802 0010 1021 1320 
00003b0: 1041 0c6a 2112 2012 4100 6a20 1341 006a 
00003c0: 2802 0036 0200 2012 4104 6a20 1341 046a 
00003d0: 2802 0036 0200 4108 4188 0910 0d21 1120 
00003e0: 1141 046a 41a8 0b36 0200 2011 4100 6a41 
00003f0: 0036 0200 2011 2115 2010 4114 6a21 1420 
0000400: 1441 006a 2015 4100 6a28 0200 3602 0020 
0000410: 1441 046a 2015 4104 6a28 0200 3602 0020 
0000420: 1041 086a 41e4 0036 0200 2010 0f0b 2701 
0000430: 017f 4108 4188 0910 0d21 0020 0041 046a 
0000440: 41c8 0b36 0200 2000 4100 6a41 87e4 0636 
0000450: 0200 2000 0f0b 0500 230d 0f0b 9101 0103 
0000460: 7f41 0841 0a41 046c 6a41 0710 0d21 0120 
0000470: 0141 0136 0200 2001 4104 6a41 0a36 0200 
0000480: 2001 4108 6a21 0220 0241 006a 4101 3602 
0000490: 0020 0241 046a 4102 3602 0020 0241 086a 
00004a0: 4103 3602 0020 0241 0c6a 4104 3602 0020 
00004b0: 0241 106a 4105 3602 0020 0241 146a 4106 
00004c0: 3602 0020 0241 186a 4107 3602 0020 0241 
00004d0: 1c6a 4108 3602 0020 0241 206a 4109 3602 
00004e0: 0020 0241 246a 4100 3602 0020 010f 0b7a 
00004f0: 0102 7f41 0841 0741 046c 6a41 0710 0d21 
0000500: 0020 0041 0536 0200 2000 4104 6a41 0736 
0000510: 0200 2000 4108 6a21 0120 0141 006a 41f0 
0000520: 0b36 0200 2001 4104 6a41 800c 3602 0020 
0000530: 0141 086a 4190 0c36 0200 2001 410c 6a41 
0000540: a00c 3602 0020 0141 106a 41b0 0c36 0200 
0000550: 2001 4114 6a41 b80c 3602 0020 0141 186a 
0000560: 41c0 0c36 0200 2000 0f0b c801 0109 7f10 
0000570: 1321 0041 0841 0341 086c 6a41 0710 0d21 
0000580: 0420 0441 8809 3602 0020 0441 046a 4103 
0000590: 3602 0020 0441 086a 2105 2005 4100 6a21 
00005a0: 0620 0641 8809 1007 2006 2101 2001 4104 
00005b0: 6a20 0041 086a 4100 4104 6c6a 2802 0036 
00005c0: 0200 2001 4100 6a41 0036 0200 2005 4108 
00005d0: 6a21 0720 0741 8809 1007 2007 2102 2002 
00005e0: 4104 6a20 0041 086a 4101 4104 6c6a 2802 
00005f0: 0036 0200 2002 4100 6a41 0136 0200 2005 
0000600: 4110 6a21 0820 0841 8809 1007 2008 2103 
0000610: 2003 4104 6a20 0041 086a 4102 4104 6c6a 
0000620: 2802 0036 0200 2003 4100 6a41 0236 0200 
0000630: 2004 0f0b 0600 41d0 0c0f 0b06 0041 e00c 
0000640: 0f0b 0600 4198 0d0f 0b06 0041 a80d 0f0b 
0000650: 0600 41b8 0d0f 0b06 0041 e00d 0f0b 0600 
0000660: 41f0 0d0f 0b06 0041 980e 0f0b 0600 41a0 
0000670: 0e0f 0b0a 0010 1f10 2010 2110 220b ce04 
0000680: 010f 7f41 0841 0241 046c 6a41 0710 0d21 
0000690: 0020 0041 8804 3602 0020 0041 046a 4102 
00006a0: 3602 0020 0041 086a 2101 4128 4188 0410 
00006b0: 0d21 0220 0241 086a 41e4 0036 0200 411c 
00006c0: 410d 100d 2103 4108 4188 0910 0d21 0420 
00006d0: 0441 046a 4190 0b36 0200 2004 4100 6a41 
00006e0: 0036 0200 2004 2105 2003 410c 6a21 0620 
00006f0: 0641 006a 2005 4100 6a28 0200 3602 0020 
0000700: 0641 046a 2005 4104 6a28 0200 3602 0020 
0000710: 0341 006a 4300 0000 0038 0200 2003 4104 
0000720: 6a43 0000 0000 3802 0020 0341 086a 41e4 
0000730: 0036 0200 2002 4124 6a20 0336 0200 2002 
0000740: 4120 6a41 e707 b238 0200 4108 4188 0910 
0000750: 0d21 0720 0741 046a 4198 0b36 0200 2007 
0000760: 4100 6a41 0036 0200 2007 2108 2002 4100 
0000770: 6a21 0920 0941 006a 2008 4100 6a28 0200 
0000780: 3602 0020 0941 046a 2008 4104 6a28 0200 
0000790: 3602 0020 0241 0c6a 41e8 0736 0200 2002 
00007a0: 4110 6a44 0000 0000 0000 0000 3903 0020 
00007b0: 0241 186a 4400 0000 0000 0000 0039 0300 
00007c0: 2001 4100 6a20 0236 0200 4128 4188 0410 
00007d0: 0d21 0a41 0841 8809 100d 210b 200b 4104 
00007e0: 6a41 a00b 3602 0020 0b41 006a 4100 3602 
00007f0: 0020 0b21 0c20 0a41 006a 210d 200d 4100 
0000800: 6a20 0c41 006a 2802 0036 0200 200d 4104 
0000810: 6a20 0c41 046a 2802 0036 0200 200a 4108 
0000820: 6a41 e807 3602 0020 0a41 0c6a 41e8 0736 
0000830: 0200 200a 4110 6a44 0000 0000 0000 0000 
0000840: 3903 0020 0a41 186a 4400 0000 0000 0000 
0000850: 0039 0300 200a 4120 6a43 0000 c6c2 3802 
0000860: 0020 0a41 246a 4100 3602 0020 0141 046a 
0000870: 200a 3602 0020 0024 0c41 2841 8804 100d 
0000880: 210e 200e 4118 6a41 ffff ffff 07b7 3903 
0000890: 0020 0e41 106a 410a b739 0300 200e 4108 
00008a0: 6a41 e807 3602 0020 0e41 0c6a 41e8 0736 
00008b0: 0200 200e 4120 6a43 0000 c6c2 3802 0020 
00008c0: 0e41 246a 4100 3602 0020 0e24 0d0b 3701 
00008d0: 107f 4100 210f 0240 0340 200f 230c 4104 
00008e0: 6a28 0200 4101 6b4a 0d01 230c 4108 6a20 
00008f0: 0f41 046c 6a28 0200 100c 200f 4101 6a21 
0000900: 0f0c 000b 0b0b 3a01 017f 4108 4188 0910 
0000910: 0d21 0020 0041 046a 41e0 0b36 0200 2000 
0000920: 4100 6a41 b8bc eda7 0336 0200 230d 4100 
0000930: 6a20 0036 0200 230d 4124 6a10 0f36 0200 
0000940: 0b02 000b 0be2 0d1a 0041 f808 0b09 3939 
0000950: 3939 3939 3939 0000 4190 0b0b 0431 3233 
0000960: 0000 4198 0b0b 0666 6972 7374 0000 41a0 
0000970: 0b0b 0773 6563 6f6e 6400 0041 a80b 0b1d 
0000980: 6469 7265 6374 6c79 2063 7265 6174 6520 
0000990: 6120 7374 7275 6374 7572 7465 0000 41c8 
00009a0: 0b0b 1574 6869 7320 6973 2061 2073 7472 
00009b0: 7563 7475 7265 2100 0041 e00b 0b0c 7465 
00009c0: 7374 206f 626a 6563 7400 0041 f00b 0b09 
00009d0: 4141 4141 4141 4141 0000 4180 0c0b 0942 
00009e0: 4242 4242 4242 4200 0041 900c 0b0b 4343 
00009f0: 4343 4343 4343 4343 0000 41a0 0c0b 0b44 
0000a00: 4444 4444 4444 4444 4400 0041 b00c 0b03 
0000a10: 4545 0000 41b8 0c0b 0846 4646 4646 4646 
0000a20: 0000 41c0 0c0b 0947 4747 4747 4747 4700 
0000a30: 0041 d00c 0b0f 6a73 5f6f 626a 6563 7420 
0000a40: 6465 6d6f 0000 41e0 0c0b 384a 6176 6173 
0000a50: 6372 6970 7420 6f62 6a65 6374 2067 656e 
0000a60: 6572 6174 6520 6672 6f6d 2056 422e 4e45 
0000a70: 5420 5765 6241 7373 656d 626c 7920 6465 
0000a80: 6d6f 0000 4198 0d0b 0e76 616e 696c 6c61 
0000a90: 7662 2e61 7070 0000 41a8 0d0b 0a6a 735f 
0000aa0: 6f62 6a65 6374 0000 41b8 0d0b 2143 6f70 
0000ab0: 7972 6967 6874 2028 6329 2076 616e 696c 
0000ac0: 6c61 7662 2e61 7070 2032 3031 3900 0041 
0000ad0: e00d 0b0b 646f 7476 616e 696c 6c61 0000 
0000ae0: 41f0 0d0b 2536 3262 3333 3839 642d 3531 
0000af0: 3039 2d34 3734 302d 3963 3661 2d33 3562 
0000b00: 6230 3232 3335 3562 3900 0041 980e 0b08 
0000b10: 312e 302e 302e 3000 0041 a00e 0b08 312e 
0000b20: 302e 302e 3000 0041 0d0b bd03 6579 4a6a 
0000b30: 6232 3174 5a57 3530 496a 7075 6457 7873 
0000b40: 4c43 4a6a 6247 467a 6379 4936 496d 4e70 
0000b50: 636d 4e73 5a53 4973 496d 4e73 5958 4e7a 
0000b60: 5832 6c6b 496a 6f78 4d79 7769 5a6d 6c6c 
0000b70: 6247 527a 496a 7037 496e 6769 4f6e 7369 
0000b80: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000b90: 496e 4a68 6479 4936 496d 597a 4d69 4973 
0000ba0: 496e 5235 6347 5569 4f6a 4e39 4c43 4a35 
0000bb0: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000bc0: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000bd0: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000be0: 6653 7769 6369 4936 6579 4a6e 5a57 356c 
0000bf0: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000c00: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000c10: 5a53 4936 4d58 3073 496d 3568 6257 5650 
0000c20: 5a6c 6769 4f6e 7369 5a32 5675 5a58 4a70 
0000c30: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000c40: 496c 7378 4d54 5977 5857 3568 6257 5569 
0000c50: 4c43 4a30 6558 426c 496a 6f78 4d48 3073 
0000c60: 496d 3568 6257 5650 5a6c 6b69 4f6e 7369 
0000c70: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000c80: 496e 4a68 6479 4936 496c 7378 4d54 5977 
0000c90: 5857 3568 6257 5569 4c43 4a30 6558 426c 
0000ca0: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
0000cb0: 636e 566a 6443 4936 5a6d 4673 6332 5573 
0000cc0: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
0000cd0: 4c43 4a75 5957 316c 6333 4268 5932 5569 
0000ce0: 4f6d 3531 6247 7839 0000 4188 040b ad04 
0000cf0: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d00: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000d10: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
0000d20: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
0000d30: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
0000d40: 6579 4a75 5957 316c 496a 7037 496d 646c 
0000d50: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000d60: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000d70: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000d80: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000d90: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000da0: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000db0: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000dc0: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000dd0: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000de0: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000df0: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000e00: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000e10: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000e20: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
0000e30: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000e40: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000e50: 6558 426c 496a 6f30 6653 7769 636d 466b 
0000e60: 6158 567a 496a 7037 496d 646c 626d 5679 
0000e70: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000e80: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000e90: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000ea0: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000eb0: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000ec0: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000ed0: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000ee0: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000ef0: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000f00: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000f10: 5932 5569 4f6d 3531 6247 7839 0000 4188 
0000f20: 090b 8502 6579 4a6a 6232 3174 5a57 3530 
0000f30: 496a 7075 6457 7873 4c43 4a6a 6247 467a 
0000f40: 6379 4936 496d 3568 6257 5569 4c43 4a6a 
0000f50: 6247 467a 6331 3970 5a43 4936 4d54 4532 
0000f60: 4d43 7769 5a6d 6c6c 6247 527a 496a 7037 
0000f70: 496e 4e76 6458 4a6a 5a53 4936 6579 4a6e 
0000f80: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000f90: 636d 4633 496a 6f69 6154 4d79 4969 7769 
0000fa0: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
0000fb0: 6257 5569 4f6e 7369 5a32 5675 5a58 4a70 
0000fc0: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000fd0: 496e 4e30 636d 6c75 5a79 4973 496e 5235 
0000fe0: 6347 5569 4f6a 5639 6653 7769 6158 4e54 
0000ff0: 6448 4a31 5933 5169 4f6e 5279 6457 5573 
0001000: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
0001010: 4c43 4a75 5957 316c 6333 4268 5932 5569 
0001020: 4f6d 3531 6247 7839 00                  
