0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 0f                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 08                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
00000f1: 10                                        ; FIXUP section size
; section "Global" (6)
0000102: 06                                        ; section code
0000103: 00                                        ; section size (guess)
0000104: 0c                                        ; num globals
0000105: 7f                                        ; i32
0000106: 01                                        ; global mutability
0000107: 41                                        ; i32.const
0000108: 9108                                      ; i32 literal
000010a: 0b                                        ; end
000010b: 7c                                        ; f64
000010c: 01                                        ; global mutability
000010d: 44                                        ; f64.const
000010e: 6957 148b 0abf 0540                       ; f64 literal
0000116: 0b                                        ; end
0000117: 7c                                        ; f64
0000118: 01                                        ; global mutability
0000119: 44                                        ; f64.const
000011a: 182d 4454 fb21 0940                       ; f64 literal
0000122: 0b                                        ; end
0000123: 7f                                        ; i32
0000124: 01                                        ; global mutability
0000125: 41                                        ; i32.const
0000126: ffff ffff 07                              ; i32 literal
000012b: 0b                                        ; end
000012c: 7e                                        ; i64
000012d: 01                                        ; global mutability
000012e: 42                                        ; i64.const
000012f: ffff ffff ffff ffff ff00                  ; i64 literal
0000139: 0b                                        ; end
000013a: 7d                                        ; f32
000013b: 01                                        ; global mutability
000013c: 43                                        ; f32.const
000013d: ffff 7f7f                                 ; f32 literal
0000141: 0b                                        ; end
0000142: 7c                                        ; f64
0000143: 01                                        ; global mutability
0000144: 44                                        ; f64.const
0000145: ffff ffff ffff ef7f                       ; f64 literal
000014d: 0b                                        ; end
000014e: 7f                                        ; i32
000014f: 01                                        ; global mutability
0000150: 41                                        ; i32.const
0000151: 8080 8080 78                              ; i32 literal
0000156: 0b                                        ; end
0000157: 7e                                        ; i64
0000158: 01                                        ; global mutability
0000159: 42                                        ; i64.const
000015a: 8080 8080 8080 8080 807f                  ; i64 literal
0000164: 0b                                        ; end
0000165: 7d                                        ; f32
0000166: 01                                        ; global mutability
0000167: 43                                        ; f32.const
0000168: ffff 7fff                                 ; f32 literal
000016c: 0b                                        ; end
000016d: 7c                                        ; f64
000016e: 01                                        ; global mutability
000016f: 44                                        ; f64.const
0000170: ffff ffff ffff efff                       ; f64 literal
0000178: 0b                                        ; end
0000179: 7f                                        ; i32
000017a: 01                                        ; global mutability
000017b: 41                                        ; i32.const
000017c: 00                                        ; i32 literal
000017d: 0b                                        ; end
0000103: 7a                                        ; FIXUP section size
; section "Export" (7)
000017e: 07                                        ; section code
000017f: 00                                        ; section size (guess)
0000180: 0a                                        ; num exports
0000181: 11                                        ; string length
0000182: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
0000192: 74                                       t  ; export name
0000193: 00                                        ; export kind
0000194: 0e                                        ; export func index
0000195: 1a                                        ; string length
0000196: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001a6: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001b0: 00                                        ; export kind
00001b1: 0f                                        ; export func index
00001b2: 20                                        ; string length
00001b3: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c3: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001d3: 00                                        ; export kind
00001d4: 10                                        ; export func index
00001d5: 1c                                        ; string length
00001d6: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e6: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00001f2: 00                                        ; export kind
00001f3: 11                                        ; export func index
00001f4: 1c                                        ; string length
00001f5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000205: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000211: 00                                        ; export kind
0000212: 12                                        ; export func index
0000213: 1e                                        ; string length
0000214: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000224: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000232: 00                                        ; export kind
0000233: 13                                        ; export func index
0000234: 1e                                        ; string length
0000235: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000245: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000253: 00                                        ; export kind
0000254: 14                                        ; export func index
0000255: 11                                        ; string length
0000256: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000266: 64                                       d  ; export name
0000267: 00                                        ; export kind
0000268: 15                                        ; export func index
0000269: 1c                                        ; string length
000026a: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000027a: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000286: 00                                        ; export kind
0000287: 16                                        ; export func index
0000288: 20                                        ; string length
0000289: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000299: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002a9: 00                                        ; export kind
00002aa: 17                                        ; export func index
; move data: [180, 2ab) -> [181, 2ac)
000017f: ab02                                      ; FIXUP section size
; section "Start" (8)
00002ac: 08                                        ; section code
00002ad: 00                                        ; section size (guess)
00002ae: 18                                        ; start func index
00002ad: 01                                        ; FIXUP section size
; section "Code" (10)
00002af: 0a                                        ; section code
00002b0: 00                                        ; section size (guess)
00002b1: 0f                                        ; num functions
; function body 0
00002b2: 00                                        ; func body size (guess)
00002b3: 01                                        ; local decl count
00002b4: 01                                        ; local type count
00002b5: 7f                                        ; i32
00002b6: 23                                        ; global.get
00002b7: 00                                        ; global index
00002b8: 21                                        ; local.set
00002b9: 02                                        ; local index
00002ba: 20                                        ; local.get
00002bb: 02                                        ; local index
00002bc: 20                                        ; local.get
00002bd: 00                                        ; local index
00002be: 6a                                        ; i32.add
00002bf: 24                                        ; global.set
00002c0: 00                                        ; global index
00002c1: 20                                        ; local.get
00002c2: 02                                        ; local index
00002c3: 20                                        ; local.get
00002c4: 01                                        ; local index
00002c5: 10                                        ; call
00002c6: 07                                        ; function index
00002c7: 20                                        ; local.get
00002c8: 02                                        ; local index
00002c9: 0f                                        ; return
00002ca: 0b                                        ; end
00002b2: 18                                        ; FIXUP func body size
; function body 1
00002cb: 00                                        ; func body size (guess)
00002cc: 01                                        ; local decl count
00002cd: 02                                        ; local type count
00002ce: 7f                                        ; i32
00002cf: 23                                        ; global.get
00002d0: 00                                        ; global index
00002d1: 21                                        ; local.set
00002d2: 01                                        ; local index
00002d3: 20                                        ; local.get
00002d4: 01                                        ; local index
00002d5: 41                                        ; i32.const
00002d6: 0c                                        ; i32 literal
00002d7: 6a                                        ; i32.add
00002d8: 24                                        ; global.set
00002d9: 00                                        ; global index
00002da: 20                                        ; local.get
00002db: 01                                        ; local index
00002dc: 41                                        ; i32.const
00002dd: 00                                        ; i32 literal
00002de: 6a                                        ; i32.add
00002df: 41                                        ; i32.const
00002e0: e400                                      ; i32 literal
00002e2: b2                                        ; f32.convert_i32_s
00002e3: 38                                        ; f32.store
00002e4: 02                                        ; alignment
00002e5: 00                                        ; store offset
00002e6: 20                                        ; local.get
00002e7: 01                                        ; local index
00002e8: 41                                        ; i32.const
00002e9: 04                                        ; i32 literal
00002ea: 6a                                        ; i32.add
00002eb: 41                                        ; i32.const
00002ec: 8fce 00                                   ; i32 literal
00002ef: b2                                        ; f32.convert_i32_s
00002f0: 38                                        ; f32.store
00002f1: 02                                        ; alignment
00002f2: 00                                        ; store offset
00002f3: 20                                        ; local.get
00002f4: 01                                        ; local index
00002f5: 41                                        ; i32.const
00002f6: 08                                        ; i32 literal
00002f7: 6a                                        ; i32.add
00002f8: 41                                        ; i32.const
00002f9: e400                                      ; i32 literal
00002fb: 36                                        ; i32.store
00002fc: 02                                        ; alignment
00002fd: 00                                        ; store offset
00002fe: 20                                        ; local.get
00002ff: 01                                        ; local index
0000300: 0f                                        ; return
0000301: 0b                                        ; end
00002cb: 36                                        ; FIXUP func body size
; function body 2
0000302: 00                                        ; func body size (guess)
0000303: 00                                        ; local decl count
0000304: 23                                        ; global.get
0000305: 0b                                        ; global index
0000306: 0f                                        ; return
0000307: 0b                                        ; end
0000302: 05                                        ; FIXUP func body size
; function body 3
0000308: 00                                        ; func body size (guess)
0000309: 00                                        ; local decl count
000030a: 41                                        ; i32.const
000030b: b307                                      ; i32 literal
000030d: 0f                                        ; return
000030e: 0b                                        ; end
0000308: 06                                        ; FIXUP func body size
; function body 4
000030f: 00                                        ; func body size (guess)
0000310: 00                                        ; local decl count
0000311: 41                                        ; i32.const
0000312: bd07                                      ; i32 literal
0000314: 0f                                        ; return
0000315: 0b                                        ; end
000030f: 06                                        ; FIXUP func body size
; function body 5
0000316: 00                                        ; func body size (guess)
0000317: 00                                        ; local decl count
0000318: 41                                        ; i32.const
0000319: be07                                      ; i32 literal
000031b: 0f                                        ; return
000031c: 0b                                        ; end
0000316: 06                                        ; FIXUP func body size
; function body 6
000031d: 00                                        ; func body size (guess)
000031e: 00                                        ; local decl count
000031f: 41                                        ; i32.const
0000320: bf07                                      ; i32 literal
0000322: 0f                                        ; return
0000323: 0b                                        ; end
000031d: 06                                        ; FIXUP func body size
; function body 7
0000324: 00                                        ; func body size (guess)
0000325: 00                                        ; local decl count
0000326: 41                                        ; i32.const
0000327: c907                                      ; i32 literal
0000329: 0f                                        ; return
000032a: 0b                                        ; end
0000324: 06                                        ; FIXUP func body size
; function body 8
000032b: 00                                        ; func body size (guess)
000032c: 00                                        ; local decl count
000032d: 41                                        ; i32.const
000032e: db07                                      ; i32 literal
0000330: 0f                                        ; return
0000331: 0b                                        ; end
000032b: 06                                        ; FIXUP func body size
; function body 9
0000332: 00                                        ; func body size (guess)
0000333: 00                                        ; local decl count
0000334: 41                                        ; i32.const
0000335: dc07                                      ; i32 literal
0000337: 0f                                        ; return
0000338: 0b                                        ; end
0000332: 06                                        ; FIXUP func body size
; function body 10
0000339: 00                                        ; func body size (guess)
000033a: 00                                        ; local decl count
000033b: 41                                        ; i32.const
000033c: 8108                                      ; i32 literal
000033e: 0f                                        ; return
000033f: 0b                                        ; end
0000339: 06                                        ; FIXUP func body size
; function body 11
0000340: 00                                        ; func body size (guess)
0000341: 00                                        ; local decl count
0000342: 41                                        ; i32.const
0000343: 8908                                      ; i32 literal
0000345: 0f                                        ; return
0000346: 0b                                        ; end
0000340: 06                                        ; FIXUP func body size
; function body 12
0000347: 00                                        ; func body size (guess)
0000348: 00                                        ; local decl count
0000349: 10                                        ; call
000034a: 19                                        ; function index
000034b: 10                                        ; call
000034c: 1a                                        ; function index
000034d: 0b                                        ; end
0000347: 06                                        ; FIXUP func body size
; function body 13
000034e: 00                                        ; func body size (guess)
000034f: 01                                        ; local decl count
0000350: 01                                        ; local type count
0000351: 7f                                        ; i32
0000352: 23                                        ; global.get
0000353: 00                                        ; global index
0000354: 21                                        ; local.set
0000355: 00                                        ; local index
0000356: 20                                        ; local.get
0000357: 00                                        ; local index
0000358: 41                                        ; i32.const
0000359: 24                                        ; i32 literal
000035a: 6a                                        ; i32.add
000035b: 24                                        ; global.set
000035c: 00                                        ; global index
000035d: 20                                        ; local.get
000035e: 00                                        ; local index
000035f: 41                                        ; i32.const
0000360: 0c                                        ; i32 literal
0000361: 6a                                        ; i32.add
0000362: 41                                        ; i32.const
0000363: ffff ffff 07                              ; i32 literal
0000368: b7                                        ; f64.convert_i32_s
0000369: 39                                        ; f64.store
000036a: 03                                        ; alignment
000036b: 00                                        ; store offset
000036c: 20                                        ; local.get
000036d: 00                                        ; local index
000036e: 41                                        ; i32.const
000036f: 04                                        ; i32 literal
0000370: 6a                                        ; i32.add
0000371: 41                                        ; i32.const
0000372: 0a                                        ; i32 literal
0000373: b7                                        ; f64.convert_i32_s
0000374: 39                                        ; f64.store
0000375: 03                                        ; alignment
0000376: 00                                        ; store offset
0000377: 20                                        ; local.get
0000378: 00                                        ; local index
0000379: 41                                        ; i32.const
000037a: 00                                        ; i32 literal
000037b: 6a                                        ; i32.add
000037c: 41                                        ; i32.const
000037d: e807                                      ; i32 literal
000037f: 36                                        ; i32.store
0000380: 02                                        ; alignment
0000381: 00                                        ; store offset
0000382: 20                                        ; local.get
0000383: 00                                        ; local index
0000384: 41                                        ; i32.const
0000385: 14                                        ; i32 literal
0000386: 6a                                        ; i32.add
0000387: 41                                        ; i32.const
0000388: e807                                      ; i32 literal
000038a: 36                                        ; i32.store
000038b: 02                                        ; alignment
000038c: 00                                        ; store offset
000038d: 20                                        ; local.get
000038e: 00                                        ; local index
000038f: 41                                        ; i32.const
0000390: 18                                        ; i32 literal
0000391: 6a                                        ; i32.add
0000392: 41                                        ; i32.const
0000393: 00                                        ; i32 literal
0000394: 36                                        ; i32.store
0000395: 02                                        ; alignment
0000396: 00                                        ; store offset
0000397: 20                                        ; local.get
0000398: 00                                        ; local index
0000399: 41                                        ; i32.const
000039a: 1c                                        ; i32 literal
000039b: 6a                                        ; i32.add
000039c: 43                                        ; f32.const
000039d: 0000 c6c2                                 ; f32 literal
00003a1: 38                                        ; f32.store
00003a2: 02                                        ; alignment
00003a3: 00                                        ; store offset
00003a4: 20                                        ; local.get
00003a5: 00                                        ; local index
00003a6: 41                                        ; i32.const
00003a7: 20                                        ; i32 literal
00003a8: 6a                                        ; i32.add
00003a9: 41                                        ; i32.const
00003aa: 00                                        ; i32 literal
00003ab: 36                                        ; i32.store
00003ac: 02                                        ; alignment
00003ad: 00                                        ; store offset
00003ae: 20                                        ; local.get
00003af: 00                                        ; local index
00003b0: 24                                        ; global.set
00003b1: 0b                                        ; global index
00003b2: 0b                                        ; end
000034e: 64                                        ; FIXUP func body size
; function body 14
00003b3: 00                                        ; func body size (guess)
00003b4: 00                                        ; local decl count
00003b5: 23                                        ; global.get
00003b6: 0b                                        ; global index
00003b7: 41                                        ; i32.const
00003b8: 18                                        ; i32 literal
00003b9: 6a                                        ; i32.add
00003ba: 41                                        ; i32.const
00003bb: a707                                      ; i32 literal
00003bd: 36                                        ; i32.store
00003be: 02                                        ; alignment
00003bf: 00                                        ; store offset
00003c0: 23                                        ; global.get
00003c1: 0b                                        ; global index
00003c2: 41                                        ; i32.const
00003c3: 20                                        ; i32 literal
00003c4: 6a                                        ; i32.add
00003c5: 10                                        ; call
00003c6: 0d                                        ; function index
00003c7: 36                                        ; i32.store
00003c8: 02                                        ; alignment
00003c9: 00                                        ; store offset
00003ca: 0b                                        ; end
00003b3: 17                                        ; FIXUP func body size
; move data: [2b1, 3cb) -> [2b2, 3cc)
00002b0: 9a02                                      ; FIXUP section size
; section "Data" (11)
00003cc: 0b                                        ; section code
00003cd: 00                                        ; section size (guess)
00003ce: 0c                                        ; num data segments
; data segment header 0
00003cf: 00                                      
00003d0: 41                                        ; i32.const
00003d1: a707                                      ; i32 literal
00003d3: 0b                                        ; end
00003d4: 0c                                        ; data segment size
; data segment data 0
00003d5: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 1
00003e1: 00                                      
00003e2: 41                                        ; i32.const
00003e3: b307                                      ; i32 literal
00003e5: 0b                                        ; end
00003e6: 0a                                        ; data segment size
; data segment data 1
00003e7: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 2
00003f1: 00                                      
00003f2: 41                                        ; i32.const
00003f3: bd07                                      ; i32 literal
00003f5: 0b                                        ; end
00003f6: 01                                        ; data segment size
; data segment data 2
00003f7: 00                                        ; data segment data
; data segment header 3
00003f8: 00                                      
00003f9: 41                                        ; i32.const
00003fa: be07                                      ; i32 literal
00003fc: 0b                                        ; end
00003fd: 01                                        ; data segment size
; data segment data 3
00003fe: 00                                        ; data segment data
; data segment header 4
00003ff: 00                                      
0000400: 41                                        ; i32.const
0000401: bf07                                      ; i32 literal
0000403: 0b                                        ; end
0000404: 0a                                        ; data segment size
; data segment data 4
0000405: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 5
000040f: 00                                      
0000410: 41                                        ; i32.const
0000411: c907                                      ; i32 literal
0000413: 0b                                        ; end
0000414: 13                                        ; data segment size
; data segment data 5
0000415: 436f 7079 7269 6768 7420 c2a9 2020 3230 
0000425: 3139 00                                   ; data segment data
; data segment header 6
0000428: 00                                      
0000429: 41                                        ; i32.const
000042a: db07                                      ; i32 literal
000042c: 0b                                        ; end
000042d: 01                                        ; data segment size
; data segment data 6
000042e: 00                                        ; data segment data
; data segment header 7
000042f: 00                                      
0000430: 41                                        ; i32.const
0000431: dc07                                      ; i32 literal
0000433: 0b                                        ; end
0000434: 25                                        ; data segment size
; data segment data 7
0000435: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000445: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000455: 3535 6239 00                              ; data segment data
; data segment header 8
000045a: 00                                      
000045b: 41                                        ; i32.const
000045c: 8108                                      ; i32 literal
000045e: 0b                                        ; end
000045f: 08                                        ; data segment size
; data segment data 8
0000460: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000468: 00                                      
0000469: 41                                        ; i32.const
000046a: 8908                                      ; i32 literal
000046c: 0b                                        ; end
000046d: 08                                        ; data segment size
; data segment data 9
000046e: 312e 302e 302e 3000                       ; data segment data
; data segment header 10
0000476: 00                                      
0000477: 41                                        ; i32.const
0000478: 0d                                        ; i32 literal
0000479: 0b                                        ; end
000047a: d102                                      ; data segment size
; data segment data 10
000047c: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000048c: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000049c: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00004ac: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
00004bc: 4f69 4a6a 6158 4a6a 6247 5569 4c43 4a6a 
00004cc: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
00004dc: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
00004ec: 496a 7037 496d 646c 626d 5679 6157 4d69 
00004fc: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
000050c: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
000051c: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
000052c: 636d 6c6a 496a 7062 5853 7769 636d 4633 
000053c: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
000054c: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
000055c: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
000056c: 496e 4a68 6479 4936 496d 6b7a 4d69 4973 
000057c: 496e 5235 6347 5569 4f6a 4639 6653 7769 
000058c: 6158 4e54 6448 4a31 5933 5169 4f6d 5a68 
000059c: 6248 4e6c 4c43 4a74 5a58 526f 6232 527a 
00005ac: 496a 7037 6653 7769 626d 4674 5a58 4e77 
00005bc: 5957 4e6c 496a 7075 6457 7873 6651 3d3d 
00005cc: 00                                        ; data segment data
; data segment header 11
00005cd: 00                                      
00005ce: 41                                        ; i32.const
00005cf: de02                                      ; i32 literal
00005d1: 0b                                        ; end
00005d2: c904                                      ; data segment size
; data segment data 11
00005d4: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00005e4: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00005f4: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000604: 4f6a 4d31 4d48 3073 496d 4e73 5958 4e7a 
0000614: 496a 6f69 636d 566a 6447 4675 5a32 786c 
0000624: 4969 7769 5932 7868 6333 4e66 6157 5169 
0000634: 4f6a 4d31 4d43 7769 5a6d 6c6c 6247 527a 
0000644: 496a 7037 496e 6369 4f6e 7369 5a32 5675 
0000654: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000664: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
0000674: 6347 5569 4f6a 4639 4c43 4a35 496a 7037 
0000684: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000694: 4c43 4a79 5958 6369 4f69 4a6d 4e6a 5169 
00006a4: 4c43 4a30 6558 426c 496a 6f30 6653 7769 
00006b4: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
00006c4: 496a 7062 5853 7769 636d 4633 496a 6f69 
00006d4: 5a6a 5930 4969 7769 6448 6c77 5a53 4936 
00006e4: 4e48 3073 496d 6769 4f6e 7369 5a32 5675 
00006f4: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000704: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
0000714: 6347 5569 4f6a 4639 4c43 4a75 5957 316c 
0000724: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000734: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a7a 
0000744: 6448 4a70 626d 6369 4c43 4a30 6558 426c 
0000754: 496a 6f31 6653 7769 636d 466b 6158 567a 
0000764: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000774: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000784: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000794: 6653 7769 6157 3575 5a58 4969 4f6e 7369 
00007a4: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00007b4: 496e 4a68 6479 4936 496c 7378 4d31 316a 
00007c4: 6158 4a6a 6247 5569 4c43 4a30 6558 426c 
00007d4: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
00007e4: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00007f4: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
0000804: 4c43 4a75 5957 316c 6333 4268 5932 5569 
0000814: 4f6d 3531 6247 7839 00                    ; data segment data
; move data: [3ce, 81d) -> [3cf, 81e)
00003cd: cf08                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0310 0f05 0707 0707 0707 0707 0707 0708 
0000100: 0808 067a 0c7f 0141 9108 0b7c 0144 6957 
0000110: 148b 0abf 0540 0b7c 0144 182d 4454 fb21 
0000120: 0940 0b7f 0141 ffff ffff 070b 7e01 42ff 
0000130: ffff ffff ffff ffff 000b 7d01 43ff ff7f 
0000140: 7f0b 7c01 44ff ffff ffff ffef 7f0b 7f01 
0000150: 4180 8080 8078 0b7e 0142 8080 8080 8080 
0000160: 8080 807f 0b7d 0143 ffff 7fff 0b7c 0144 
0000170: ffff ffff ffff efff 0b7f 0141 000b 07ab 
0000180: 020a 114d 6f64 756c 6531 2e67 6574 4f62 
0000190: 6a65 6374 000e 1a41 7373 656d 626c 7949 
00001a0: 6e66 6f2e 4173 7365 6d62 6c79 5469 746c 
00001b0: 6500 0f20 4173 7365 6d62 6c79 496e 666f 
00001c0: 2e41 7373 656d 626c 7944 6573 6372 6970 
00001d0: 7469 6f6e 0010 1c41 7373 656d 626c 7949 
00001e0: 6e66 6f2e 4173 7365 6d62 6c79 436f 6d70 
00001f0: 616e 7900 111c 4173 7365 6d62 6c79 496e 
0000200: 666f 2e41 7373 656d 626c 7950 726f 6475 
0000210: 6374 0012 1e41 7373 656d 626c 7949 6e66 
0000220: 6f2e 4173 7365 6d62 6c79 436f 7079 7269 
0000230: 6768 7400 131e 4173 7365 6d62 6c79 496e 
0000240: 666f 2e41 7373 656d 626c 7954 7261 6465 
0000250: 6d61 726b 0014 1141 7373 656d 626c 7949 
0000260: 6e66 6f2e 4775 6964 0015 1c41 7373 656d 
0000270: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
0000280: 5665 7273 696f 6e00 1620 4173 7365 6d62 
0000290: 6c79 496e 666f 2e41 7373 656d 626c 7946 
00002a0: 696c 6556 6572 7369 6f6e 0017 0801 180a 
00002b0: 9a02 0f18 0101 7f23 0021 0220 0220 006a 
00002c0: 2400 2002 2001 1007 2002 0f0b 3601 027f 
00002d0: 2300 2101 2001 410c 6a24 0020 0141 006a 
00002e0: 41e4 00b2 3802 0020 0141 046a 418f ce00 
00002f0: b238 0200 2001 4108 6a41 e400 3602 0020 
0000300: 010f 0b05 0023 0b0f 0b06 0041 b307 0f0b 
0000310: 0600 41bd 070f 0b06 0041 be07 0f0b 0600 
0000320: 41bf 070f 0b06 0041 c907 0f0b 0600 41db 
0000330: 070f 0b06 0041 dc07 0f0b 0600 4181 080f 
0000340: 0b06 0041 8908 0f0b 0600 1019 101a 0b64 
0000350: 0101 7f23 0021 0020 0041 246a 2400 2000 
0000360: 410c 6a41 ffff ffff 07b7 3903 0020 0041 
0000370: 046a 410a b739 0300 2000 4100 6a41 e807 
0000380: 3602 0020 0041 146a 41e8 0736 0200 2000 
0000390: 4118 6a41 0036 0200 2000 411c 6a43 0000 
00003a0: c6c2 3802 0020 0041 206a 4100 3602 0020 
00003b0: 0024 0b0b 1700 230b 4118 6a41 a707 3602 
00003c0: 0023 0b41 206a 100d 3602 000b 0bcf 080c 
00003d0: 0041 a707 0b0c 7465 7374 206f 626a 6563 
00003e0: 7400 0041 b307 0b0a 6a73 5f6f 626a 6563 
00003f0: 7400 0041 bd07 0b01 0000 41be 070b 0100 
0000400: 0041 bf07 0b0a 6a73 5f6f 626a 6563 7400 
0000410: 0041 c907 0b13 436f 7079 7269 6768 7420 
0000420: c2a9 2020 3230 3139 0000 41db 070b 0100 
0000430: 0041 dc07 0b25 3632 6233 3338 3964 2d35 
0000440: 3130 392d 3437 3430 2d39 6336 612d 3335 
0000450: 6262 3032 3233 3535 6239 0000 4181 080b 
0000460: 0831 2e30 2e30 2e30 0000 4189 080b 0831 
0000470: 2e30 2e30 2e30 0000 410d 0bd1 0265 794a 
0000480: 6a62 3231 745a 5735 3049 6a70 7564 5778 
0000490: 734c 434a 745a 5731 7663 6e6c 5164 4849 
00004a0: 694f 6e73 6956 6d46 7364 5755 694f 6a45 
00004b0: 7a66 5377 6959 3278 6863 334d 694f 694a 
00004c0: 6a61 584a 6a62 4755 694c 434a 6a62 4746 
00004d0: 7a63 3139 705a 4349 364d 544d 7349 6d5a 
00004e0: 705a 5778 6b63 7949 3665 794a 3449 6a70 
00004f0: 3749 6d64 6c62 6d56 7961 574d 694f 6c74 
0000500: 644c 434a 7959 5863 694f 694a 6d4d 7a49 
0000510: 694c 434a 3065 5842 6c49 6a6f 7a66 5377 
0000520: 6965 5349 3665 794a 6e5a 5735 6c63 6d6c 
0000530: 6a49 6a70 6258 5377 6963 6d46 3349 6a6f 
0000540: 695a 6a4d 7949 6977 6964 486c 775a 5349 
0000550: 364d 3330 7349 6e49 694f 6e73 695a 3256 
0000560: 755a 584a 7059 7949 3657 3130 7349 6e4a 
0000570: 6864 7949 3649 6d6b 7a4d 6949 7349 6e52 
0000580: 3563 4755 694f 6a46 3966 5377 6961 584e 
0000590: 5464 484a 3159 3351 694f 6d5a 6862 484e 
00005a0: 6c4c 434a 745a 5852 6f62 3252 7a49 6a70 
00005b0: 3766 5377 6962 6d46 745a 584e 7759 574e 
00005c0: 6c49 6a70 7564 5778 7366 513d 3d00 0041 
00005d0: de02 0bc9 0465 794a 6a62 3231 745a 5735 
00005e0: 3049 6a70 7564 5778 734c 434a 745a 5731 
00005f0: 7663 6e6c 5164 4849 694f 6e73 6956 6d46 
0000600: 7364 5755 694f 6a4d 314d 4830 7349 6d4e 
0000610: 7359 584e 7a49 6a6f 6963 6d56 6a64 4746 
0000620: 755a 3278 6c49 6977 6959 3278 6863 334e 
0000630: 6661 5751 694f 6a4d 314d 4377 695a 6d6c 
0000640: 6c62 4752 7a49 6a70 3749 6e63 694f 6e73 
0000650: 695a 3256 755a 584a 7059 7949 3657 3130 
0000660: 7349 6e4a 6864 7949 3649 6d6b 7a4d 6949 
0000670: 7349 6e52 3563 4755 694f 6a46 394c 434a 
0000680: 3549 6a70 3749 6d64 6c62 6d56 7961 574d 
0000690: 694f 6c74 644c 434a 7959 5863 694f 694a 
00006a0: 6d4e 6a51 694c 434a 3065 5842 6c49 6a6f 
00006b0: 3066 5377 6965 4349 3665 794a 6e5a 5735 
00006c0: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
00006d0: 3349 6a6f 695a 6a59 3049 6977 6964 486c 
00006e0: 775a 5349 364e 4830 7349 6d67 694f 6e73 
00006f0: 695a 3256 755a 584a 7059 7949 3657 3130 
0000700: 7349 6e4a 6864 7949 3649 6d6b 7a4d 6949 
0000710: 7349 6e52 3563 4755 694f 6a46 394c 434a 
0000720: 7559 5731 6c49 6a70 3749 6d64 6c62 6d56 
0000730: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000740: 694f 694a 7a64 484a 7062 6d63 694c 434a 
0000750: 3065 5842 6c49 6a6f 3166 5377 6963 6d46 
0000760: 6b61 5856 7a49 6a70 3749 6d64 6c62 6d56 
0000770: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000780: 694f 694a 6d4d 7a49 694c 434a 3065 5842 
0000790: 6c49 6a6f 7a66 5377 6961 5735 755a 5849 
00007a0: 694f 6e73 695a 3256 755a 584a 7059 7949 
00007b0: 3657 3130 7349 6e4a 6864 7949 3649 6c73 
00007c0: 784d 3131 6a61 584a 6a62 4755 694c 434a 
00007d0: 3065 5842 6c49 6a6f 784d 4831 394c 434a 
00007e0: 7063 314e 3063 6e56 6a64 4349 365a 6d46 
00007f0: 7363 3255 7349 6d31 6c64 4768 765a 484d 
0000800: 694f 6e74 394c 434a 7559 5731 6c63 3342 
0000810: 6859 3255 694f 6d35 3162 4778 3900      
