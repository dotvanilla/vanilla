0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 10                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
00000f1: 11                                        ; FIXUP section size
; section "Global" (6)
0000103: 06                                        ; section code
0000104: 00                                        ; section size (guess)
0000105: 0e                                        ; num globals
0000106: 7f                                        ; i32
0000107: 01                                        ; global mutability
0000108: 41                                        ; i32.const
0000109: 900d                                      ; i32 literal
000010b: 0b                                        ; end
000010c: 7c                                        ; f64
000010d: 01                                        ; global mutability
000010e: 44                                        ; f64.const
000010f: 6957 148b 0abf 0540                       ; f64 literal
0000117: 0b                                        ; end
0000118: 7c                                        ; f64
0000119: 01                                        ; global mutability
000011a: 44                                        ; f64.const
000011b: 182d 4454 fb21 0940                       ; f64 literal
0000123: 0b                                        ; end
0000124: 7f                                        ; i32
0000125: 01                                        ; global mutability
0000126: 41                                        ; i32.const
0000127: ffff ffff 07                              ; i32 literal
000012c: 0b                                        ; end
000012d: 7e                                        ; i64
000012e: 01                                        ; global mutability
000012f: 42                                        ; i64.const
0000130: ffff ffff ffff ffff ff00                  ; i64 literal
000013a: 0b                                        ; end
000013b: 7d                                        ; f32
000013c: 01                                        ; global mutability
000013d: 43                                        ; f32.const
000013e: ffff 7f7f                                 ; f32 literal
0000142: 0b                                        ; end
0000143: 7c                                        ; f64
0000144: 01                                        ; global mutability
0000145: 44                                        ; f64.const
0000146: ffff ffff ffff ef7f                       ; f64 literal
000014e: 0b                                        ; end
000014f: 7f                                        ; i32
0000150: 01                                        ; global mutability
0000151: 41                                        ; i32.const
0000152: 8080 8080 78                              ; i32 literal
0000157: 0b                                        ; end
0000158: 7e                                        ; i64
0000159: 01                                        ; global mutability
000015a: 42                                        ; i64.const
000015b: 8080 8080 8080 8080 807f                  ; i64 literal
0000165: 0b                                        ; end
0000166: 7d                                        ; f32
0000167: 01                                        ; global mutability
0000168: 43                                        ; f32.const
0000169: ffff 7fff                                 ; f32 literal
000016d: 0b                                        ; end
000016e: 7c                                        ; f64
000016f: 01                                        ; global mutability
0000170: 44                                        ; f64.const
0000171: ffff ffff ffff efff                       ; f64 literal
0000179: 0b                                        ; end
000017a: 7c                                        ; f64
000017b: 01                                        ; global mutability
000017c: 44                                        ; f64.const
000017d: 0000 0000 0040 8f40                       ; f64 literal
0000185: 0b                                        ; end
0000186: 7f                                        ; i32
0000187: 01                                        ; global mutability
0000188: 41                                        ; i32.const
0000189: 00                                        ; i32 literal
000018a: 0b                                        ; end
000018b: 7f                                        ; i32
000018c: 01                                        ; global mutability
000018d: 41                                        ; i32.const
000018e: d808                                      ; i32 literal
0000190: 0b                                        ; end
; move data: [105, 191) -> [106, 192)
0000104: 8c01                                      ; FIXUP section size
; section "Export" (7)
0000192: 07                                        ; section code
0000193: 00                                        ; section size (guess)
0000194: 0b                                        ; num exports
0000195: 11                                        ; string length
0000196: 4d6f 6475 6c65 312e 6e65 7743 6972 636c  Module1.newCircl
00001a6: 65                                       e  ; export name
00001a7: 00                                        ; export kind
00001a8: 0d                                        ; export func index
00001a9: 11                                        ; string length
00001aa: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
00001ba: 74                                       t  ; export name
00001bb: 00                                        ; export kind
00001bc: 0f                                        ; export func index
00001bd: 1a                                        ; string length
00001be: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001ce: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001d8: 00                                        ; export kind
00001d9: 10                                        ; export func index
00001da: 20                                        ; string length
00001db: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001eb: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001fb: 00                                        ; export kind
00001fc: 11                                        ; export func index
00001fd: 1c                                        ; string length
00001fe: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000020e: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
000021a: 00                                        ; export kind
000021b: 12                                        ; export func index
000021c: 1c                                        ; string length
000021d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000022d: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000239: 00                                        ; export kind
000023a: 13                                        ; export func index
000023b: 1e                                        ; string length
000023c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000024c: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
000025a: 00                                        ; export kind
000025b: 14                                        ; export func index
000025c: 1e                                        ; string length
000025d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000026d: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
000027b: 00                                        ; export kind
000027c: 15                                        ; export func index
000027d: 11                                        ; string length
000027e: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
000028e: 64                                       d  ; export name
000028f: 00                                        ; export kind
0000290: 16                                        ; export func index
0000291: 1c                                        ; string length
0000292: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a2: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002ae: 00                                        ; export kind
00002af: 17                                        ; export func index
00002b0: 20                                        ; string length
00002b1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002c1: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002d1: 00                                        ; export kind
00002d2: 18                                        ; export func index
; move data: [194, 2d3) -> [195, 2d4)
0000193: bf02                                      ; FIXUP section size
; section "Start" (8)
00002d4: 08                                        ; section code
00002d5: 00                                        ; section size (guess)
00002d6: 19                                        ; start func index
00002d5: 01                                        ; FIXUP section size
; section "Code" (10)
00002d7: 0a                                        ; section code
00002d8: 00                                        ; section size (guess)
00002d9: 10                                        ; num functions
; function body 0
00002da: 00                                        ; func body size (guess)
00002db: 01                                        ; local decl count
00002dc: 01                                        ; local type count
00002dd: 7f                                        ; i32
00002de: 23                                        ; global.get
00002df: 00                                        ; global index
00002e0: 21                                        ; local.set
00002e1: 02                                        ; local index
00002e2: 20                                        ; local.get
00002e3: 02                                        ; local index
00002e4: 20                                        ; local.get
00002e5: 00                                        ; local index
00002e6: 6a                                        ; i32.add
00002e7: 24                                        ; global.set
00002e8: 00                                        ; global index
00002e9: 20                                        ; local.get
00002ea: 02                                        ; local index
00002eb: 20                                        ; local.get
00002ec: 01                                        ; local index
00002ed: 10                                        ; call
00002ee: 07                                        ; function index
00002ef: 20                                        ; local.get
00002f0: 02                                        ; local index
00002f1: 0f                                        ; return
00002f2: 0b                                        ; end
00002da: 18                                        ; FIXUP func body size
; function body 1
00002f3: 00                                        ; func body size (guess)
00002f4: 01                                        ; local decl count
00002f5: 07                                        ; local type count
00002f6: 7f                                        ; i32
00002f7: 23                                        ; global.get
00002f8: 0b                                        ; global index
00002f9: 41                                        ; i32.const
00002fa: 02                                        ; i32 literal
00002fb: b7                                        ; f64.convert_i32_s
00002fc: a2                                        ; f64.mul
00002fd: 24                                        ; global.set
00002fe: 0b                                        ; global index
00002ff: 41                                        ; i32.const
0000300: 1c                                        ; i32 literal
0000301: 41                                        ; i32.const
0000302: 0d                                        ; i32 literal
0000303: 10                                        ; call
0000304: 0c                                        ; function index
0000305: 21                                        ; local.set
0000306: 01                                        ; local index
0000307: 20                                        ; local.get
0000308: 01                                        ; local index
0000309: 41                                        ; i32.const
000030a: 00                                        ; i32 literal
000030b: 6a                                        ; i32.add
000030c: 23                                        ; global.get
000030d: 0b                                        ; global index
000030e: b6                                        ; f32.demote_f64
000030f: 38                                        ; f32.store
0000310: 02                                        ; alignment
0000311: 00                                        ; store offset
0000312: 20                                        ; local.get
0000313: 01                                        ; local index
0000314: 41                                        ; i32.const
0000315: 04                                        ; i32 literal
0000316: 6a                                        ; i32.add
0000317: 41                                        ; i32.const
0000318: 8fce 00                                   ; i32 literal
000031b: b2                                        ; f32.convert_i32_s
000031c: 38                                        ; f32.store
000031d: 02                                        ; alignment
000031e: 00                                        ; store offset
000031f: 10                                        ; call
0000320: 0e                                        ; function index
0000321: 21                                        ; local.set
0000322: 04                                        ; local index
0000323: 20                                        ; local.get
0000324: 01                                        ; local index
0000325: 41                                        ; i32.const
0000326: 0c                                        ; i32 literal
0000327: 6a                                        ; i32.add
0000328: 21                                        ; local.set
0000329: 03                                        ; local index
000032a: 20                                        ; local.get
000032b: 03                                        ; local index
000032c: 41                                        ; i32.const
000032d: 00                                        ; i32 literal
000032e: 6a                                        ; i32.add
000032f: 20                                        ; local.get
0000330: 04                                        ; local index
0000331: 41                                        ; i32.const
0000332: 00                                        ; i32 literal
0000333: 6a                                        ; i32.add
0000334: 28                                        ; i32.load
0000335: 02                                        ; alignment
0000336: 00                                        ; load offset
0000337: 36                                        ; i32.store
0000338: 02                                        ; alignment
0000339: 00                                        ; store offset
000033a: 20                                        ; local.get
000033b: 03                                        ; local index
000033c: 41                                        ; i32.const
000033d: 04                                        ; i32 literal
000033e: 6a                                        ; i32.add
000033f: 20                                        ; local.get
0000340: 04                                        ; local index
0000341: 41                                        ; i32.const
0000342: 04                                        ; i32 literal
0000343: 6a                                        ; i32.add
0000344: 28                                        ; i32.load
0000345: 02                                        ; alignment
0000346: 00                                        ; load offset
0000347: 36                                        ; i32.store
0000348: 02                                        ; alignment
0000349: 00                                        ; store offset
000034a: 41                                        ; i32.const
000034b: 08                                        ; i32 literal
000034c: 41                                        ; i32.const
000034d: e808                                      ; i32 literal
000034f: 10                                        ; call
0000350: 0c                                        ; function index
0000351: 21                                        ; local.set
0000352: 02                                        ; local index
0000353: 20                                        ; local.get
0000354: 02                                        ; local index
0000355: 41                                        ; i32.const
0000356: 04                                        ; i32 literal
0000357: 6a                                        ; i32.add
0000358: 41                                        ; i32.const
0000359: f00a                                      ; i32 literal
000035b: 36                                        ; i32.store
000035c: 02                                        ; alignment
000035d: 00                                        ; store offset
000035e: 20                                        ; local.get
000035f: 02                                        ; local index
0000360: 41                                        ; i32.const
0000361: 00                                        ; i32 literal
0000362: 6a                                        ; i32.add
0000363: 41                                        ; i32.const
0000364: 00                                        ; i32 literal
0000365: 36                                        ; i32.store
0000366: 02                                        ; alignment
0000367: 00                                        ; store offset
0000368: 20                                        ; local.get
0000369: 02                                        ; local index
000036a: 21                                        ; local.set
000036b: 06                                        ; local index
000036c: 20                                        ; local.get
000036d: 01                                        ; local index
000036e: 41                                        ; i32.const
000036f: 14                                        ; i32 literal
0000370: 6a                                        ; i32.add
0000371: 21                                        ; local.set
0000372: 05                                        ; local index
0000373: 20                                        ; local.get
0000374: 05                                        ; local index
0000375: 41                                        ; i32.const
0000376: 00                                        ; i32 literal
0000377: 6a                                        ; i32.add
0000378: 20                                        ; local.get
0000379: 06                                        ; local index
000037a: 41                                        ; i32.const
000037b: 00                                        ; i32 literal
000037c: 6a                                        ; i32.add
000037d: 28                                        ; i32.load
000037e: 02                                        ; alignment
000037f: 00                                        ; load offset
0000380: 36                                        ; i32.store
0000381: 02                                        ; alignment
0000382: 00                                        ; store offset
0000383: 20                                        ; local.get
0000384: 05                                        ; local index
0000385: 41                                        ; i32.const
0000386: 04                                        ; i32 literal
0000387: 6a                                        ; i32.add
0000388: 20                                        ; local.get
0000389: 06                                        ; local index
000038a: 41                                        ; i32.const
000038b: 04                                        ; i32 literal
000038c: 6a                                        ; i32.add
000038d: 28                                        ; i32.load
000038e: 02                                        ; alignment
000038f: 00                                        ; load offset
0000390: 36                                        ; i32.store
0000391: 02                                        ; alignment
0000392: 00                                        ; store offset
0000393: 20                                        ; local.get
0000394: 01                                        ; local index
0000395: 41                                        ; i32.const
0000396: 08                                        ; i32 literal
0000397: 6a                                        ; i32.add
0000398: 41                                        ; i32.const
0000399: e400                                      ; i32 literal
000039b: 36                                        ; i32.store
000039c: 02                                        ; alignment
000039d: 00                                        ; store offset
000039e: 20                                        ; local.get
000039f: 01                                        ; local index
00003a0: 0f                                        ; return
00003a1: 0b                                        ; end
; move data: [2f4, 3a2) -> [2f5, 3a3)
00002f3: ae01                                      ; FIXUP func body size
; function body 2
00003a3: 00                                        ; func body size (guess)
00003a4: 01                                        ; local decl count
00003a5: 01                                        ; local type count
00003a6: 7f                                        ; i32
00003a7: 41                                        ; i32.const
00003a8: 08                                        ; i32 literal
00003a9: 41                                        ; i32.const
00003aa: e808                                      ; i32 literal
00003ac: 10                                        ; call
00003ad: 0c                                        ; function index
00003ae: 21                                        ; local.set
00003af: 00                                        ; local index
00003b0: 20                                        ; local.get
00003b1: 00                                        ; local index
00003b2: 41                                        ; i32.const
00003b3: 04                                        ; i32 literal
00003b4: 6a                                        ; i32.add
00003b5: 41                                        ; i32.const
00003b6: 900b                                      ; i32 literal
00003b8: 36                                        ; i32.store
00003b9: 02                                        ; alignment
00003ba: 00                                        ; store offset
00003bb: 20                                        ; local.get
00003bc: 00                                        ; local index
00003bd: 41                                        ; i32.const
00003be: 00                                        ; i32 literal
00003bf: 6a                                        ; i32.add
00003c0: 41                                        ; i32.const
00003c1: 87e4 06                                   ; i32 literal
00003c4: 36                                        ; i32.store
00003c5: 02                                        ; alignment
00003c6: 00                                        ; store offset
00003c7: 20                                        ; local.get
00003c8: 00                                        ; local index
00003c9: 0f                                        ; return
00003ca: 0b                                        ; end
00003a3: 27                                        ; FIXUP func body size
; function body 3
00003cb: 00                                        ; func body size (guess)
00003cc: 00                                        ; local decl count
00003cd: 23                                        ; global.get
00003ce: 0c                                        ; global index
00003cf: 0f                                        ; return
00003d0: 0b                                        ; end
00003cb: 05                                        ; FIXUP func body size
; function body 4
00003d1: 00                                        ; func body size (guess)
00003d2: 00                                        ; local decl count
00003d3: 41                                        ; i32.const
00003d4: b80b                                      ; i32 literal
00003d6: 0f                                        ; return
00003d7: 0b                                        ; end
00003d1: 06                                        ; FIXUP func body size
; function body 5
00003d8: 00                                        ; func body size (guess)
00003d9: 00                                        ; local decl count
00003da: 41                                        ; i32.const
00003db: c80b                                      ; i32 literal
00003dd: 0f                                        ; return
00003de: 0b                                        ; end
00003d8: 06                                        ; FIXUP func body size
; function body 6
00003df: 00                                        ; func body size (guess)
00003e0: 00                                        ; local decl count
00003e1: 41                                        ; i32.const
00003e2: 800c                                      ; i32 literal
00003e4: 0f                                        ; return
00003e5: 0b                                        ; end
00003df: 06                                        ; FIXUP func body size
; function body 7
00003e6: 00                                        ; func body size (guess)
00003e7: 00                                        ; local decl count
00003e8: 41                                        ; i32.const
00003e9: 900c                                      ; i32 literal
00003eb: 0f                                        ; return
00003ec: 0b                                        ; end
00003e6: 06                                        ; FIXUP func body size
; function body 8
00003ed: 00                                        ; func body size (guess)
00003ee: 00                                        ; local decl count
00003ef: 41                                        ; i32.const
00003f0: a00c                                      ; i32 literal
00003f2: 0f                                        ; return
00003f3: 0b                                        ; end
00003ed: 06                                        ; FIXUP func body size
; function body 9
00003f4: 00                                        ; func body size (guess)
00003f5: 00                                        ; local decl count
00003f6: 41                                        ; i32.const
00003f7: c80c                                      ; i32 literal
00003f9: 0f                                        ; return
00003fa: 0b                                        ; end
00003f4: 06                                        ; FIXUP func body size
; function body 10
00003fb: 00                                        ; func body size (guess)
00003fc: 00                                        ; local decl count
00003fd: 41                                        ; i32.const
00003fe: d80c                                      ; i32 literal
0000400: 0f                                        ; return
0000401: 0b                                        ; end
00003fb: 06                                        ; FIXUP func body size
; function body 11
0000402: 00                                        ; func body size (guess)
0000403: 00                                        ; local decl count
0000404: 41                                        ; i32.const
0000405: 800d                                      ; i32 literal
0000407: 0f                                        ; return
0000408: 0b                                        ; end
0000402: 06                                        ; FIXUP func body size
; function body 12
0000409: 00                                        ; func body size (guess)
000040a: 00                                        ; local decl count
000040b: 41                                        ; i32.const
000040c: 880d                                      ; i32 literal
000040e: 0f                                        ; return
000040f: 0b                                        ; end
0000409: 06                                        ; FIXUP func body size
; function body 13
0000410: 00                                        ; func body size (guess)
0000411: 00                                        ; local decl count
0000412: 10                                        ; call
0000413: 1a                                        ; function index
0000414: 10                                        ; call
0000415: 1b                                        ; function index
0000416: 0b                                        ; end
0000410: 06                                        ; FIXUP func body size
; function body 14
0000417: 00                                        ; func body size (guess)
0000418: 01                                        ; local decl count
0000419: 01                                        ; local type count
000041a: 7f                                        ; i32
000041b: 41                                        ; i32.const
000041c: 24                                        ; i32 literal
000041d: 41                                        ; i32.const
000041e: 8804                                      ; i32 literal
0000420: 10                                        ; call
0000421: 0c                                        ; function index
0000422: 21                                        ; local.set
0000423: 00                                        ; local index
0000424: 20                                        ; local.get
0000425: 00                                        ; local index
0000426: 41                                        ; i32.const
0000427: 14                                        ; i32 literal
0000428: 6a                                        ; i32.add
0000429: 41                                        ; i32.const
000042a: ffff ffff 07                              ; i32 literal
000042f: b7                                        ; f64.convert_i32_s
0000430: 39                                        ; f64.store
0000431: 03                                        ; alignment
0000432: 00                                        ; store offset
0000433: 20                                        ; local.get
0000434: 00                                        ; local index
0000435: 41                                        ; i32.const
0000436: 0c                                        ; i32 literal
0000437: 6a                                        ; i32.add
0000438: 41                                        ; i32.const
0000439: 0a                                        ; i32 literal
000043a: b7                                        ; f64.convert_i32_s
000043b: 39                                        ; f64.store
000043c: 03                                        ; alignment
000043d: 00                                        ; store offset
000043e: 20                                        ; local.get
000043f: 00                                        ; local index
0000440: 41                                        ; i32.const
0000441: 00                                        ; i32 literal
0000442: 6a                                        ; i32.add
0000443: 41                                        ; i32.const
0000444: 00                                        ; i32 literal
0000445: 36                                        ; i32.store
0000446: 02                                        ; alignment
0000447: 00                                        ; store offset
0000448: 20                                        ; local.get
0000449: 00                                        ; local index
000044a: 41                                        ; i32.const
000044b: 04                                        ; i32 literal
000044c: 6a                                        ; i32.add
000044d: 41                                        ; i32.const
000044e: e807                                      ; i32 literal
0000450: 36                                        ; i32.store
0000451: 02                                        ; alignment
0000452: 00                                        ; store offset
0000453: 20                                        ; local.get
0000454: 00                                        ; local index
0000455: 41                                        ; i32.const
0000456: 08                                        ; i32 literal
0000457: 6a                                        ; i32.add
0000458: 41                                        ; i32.const
0000459: e807                                      ; i32 literal
000045b: 36                                        ; i32.store
000045c: 02                                        ; alignment
000045d: 00                                        ; store offset
000045e: 20                                        ; local.get
000045f: 00                                        ; local index
0000460: 41                                        ; i32.const
0000461: 1c                                        ; i32 literal
0000462: 6a                                        ; i32.add
0000463: 43                                        ; f32.const
0000464: 0000 c6c2                                 ; f32 literal
0000468: 38                                        ; f32.store
0000469: 02                                        ; alignment
000046a: 00                                        ; store offset
000046b: 20                                        ; local.get
000046c: 00                                        ; local index
000046d: 41                                        ; i32.const
000046e: 20                                        ; i32 literal
000046f: 6a                                        ; i32.add
0000470: 41                                        ; i32.const
0000471: 00                                        ; i32 literal
0000472: 36                                        ; i32.store
0000473: 02                                        ; alignment
0000474: 00                                        ; store offset
0000475: 20                                        ; local.get
0000476: 00                                        ; local index
0000477: 24                                        ; global.set
0000478: 0c                                        ; global index
0000479: 0b                                        ; end
0000417: 62                                        ; FIXUP func body size
; function body 15
000047a: 00                                        ; func body size (guess)
000047b: 00                                        ; local decl count
000047c: 23                                        ; global.get
000047d: 0c                                        ; global index
000047e: 41                                        ; i32.const
000047f: 00                                        ; i32 literal
0000480: 6a                                        ; i32.add
0000481: 41                                        ; i32.const
0000482: a80b                                      ; i32 literal
0000484: 36                                        ; i32.store
0000485: 02                                        ; alignment
0000486: 00                                        ; store offset
0000487: 23                                        ; global.get
0000488: 0c                                        ; global index
0000489: 41                                        ; i32.const
000048a: 20                                        ; i32 literal
000048b: 6a                                        ; i32.add
000048c: 10                                        ; call
000048d: 0d                                        ; function index
000048e: 36                                        ; i32.store
000048f: 02                                        ; alignment
0000490: 00                                        ; store offset
0000491: 0b                                        ; end
000047a: 17                                        ; FIXUP func body size
; move data: [2d9, 492) -> [2da, 493)
00002d8: b903                                      ; FIXUP section size
; section "Data" (11)
0000493: 0b                                        ; section code
0000494: 00                                        ; section size (guess)
0000495: 10                                        ; num data segments
; data segment header 0
0000496: 00                                      
0000497: 41                                        ; i32.const
0000498: d808                                      ; i32 literal
000049a: 0b                                        ; end
000049b: 09                                        ; data segment size
; data segment data 0
000049c: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
00004a5: 00                                      
00004a6: 41                                        ; i32.const
00004a7: f00a                                      ; i32 literal
00004a9: 0b                                        ; end
00004aa: 1d                                        ; data segment size
; data segment data 1
00004ab: 6469 7265 6374 6c79 2063 7265 6174 6520 
00004bb: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 2
00004c8: 00                                      
00004c9: 41                                        ; i32.const
00004ca: 900b                                      ; i32 literal
00004cc: 0b                                        ; end
00004cd: 15                                        ; data segment size
; data segment data 2
00004ce: 7468 6973 2069 7320 6120 7374 7275 6374 
00004de: 7572 6521 00                              ; data segment data
; data segment header 3
00004e3: 00                                      
00004e4: 41                                        ; i32.const
00004e5: a80b                                      ; i32 literal
00004e7: 0b                                        ; end
00004e8: 0c                                        ; data segment size
; data segment data 3
00004e9: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 4
00004f5: 00                                      
00004f6: 41                                        ; i32.const
00004f7: b80b                                      ; i32 literal
00004f9: 0b                                        ; end
00004fa: 0f                                        ; data segment size
; data segment data 4
00004fb: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 5
000050a: 00                                      
000050b: 41                                        ; i32.const
000050c: c80b                                      ; i32 literal
000050e: 0b                                        ; end
000050f: 38                                        ; data segment size
; data segment data 5
0000510: 4a61 7661 7363 7269 7074 206f 626a 6563 
0000520: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000530: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000540: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 6
0000548: 00                                      
0000549: 41                                        ; i32.const
000054a: 800c                                      ; i32 literal
000054c: 0b                                        ; end
000054d: 0e                                        ; data segment size
; data segment data 6
000054e: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 7
000055c: 00                                      
000055d: 41                                        ; i32.const
000055e: 900c                                      ; i32 literal
0000560: 0b                                        ; end
0000561: 0a                                        ; data segment size
; data segment data 7
0000562: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 8
000056c: 00                                      
000056d: 41                                        ; i32.const
000056e: a00c                                      ; i32 literal
0000570: 0b                                        ; end
0000571: 21                                        ; data segment size
; data segment data 8
0000572: 436f 7079 7269 6768 7420 2863 2920 7661 
0000582: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
0000592: 00                                        ; data segment data
; data segment header 9
0000593: 00                                      
0000594: 41                                        ; i32.const
0000595: c80c                                      ; i32 literal
0000597: 0b                                        ; end
0000598: 0b                                        ; data segment size
; data segment data 9
0000599: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 10
00005a4: 00                                      
00005a5: 41                                        ; i32.const
00005a6: d80c                                      ; i32 literal
00005a8: 0b                                        ; end
00005a9: 25                                        ; data segment size
; data segment data 10
00005aa: 3632 6233 3338 3964 2d35 3130 392d 3437 
00005ba: 3430 2d39 6336 612d 3335 6262 3032 3233 
00005ca: 3535 6239 00                              ; data segment data
; data segment header 11
00005cf: 00                                      
00005d0: 41                                        ; i32.const
00005d1: 800d                                      ; i32 literal
00005d3: 0b                                        ; end
00005d4: 08                                        ; data segment size
; data segment data 11
00005d5: 312e 302e 302e 3000                       ; data segment data
; data segment header 12
00005dd: 00                                      
00005de: 41                                        ; i32.const
00005df: 880d                                      ; i32 literal
00005e1: 0b                                        ; end
00005e2: 08                                        ; data segment size
; data segment data 12
00005e3: 312e 302e 302e 3000                       ; data segment data
; data segment header 13
00005eb: 00                                      
00005ec: 41                                        ; i32.const
00005ed: 0d                                        ; i32 literal
00005ee: 0b                                        ; end
00005ef: bd03                                      ; data segment size
; data segment data 13
00005f1: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000601: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000611: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
0000621: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
0000631: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
0000641: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000651: 5731 3073 496e 4a68 6479 4936 496d 597a 
0000661: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
0000671: 4c43 4a35 496a 7037 496d 646c 626d 5679 
0000681: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000691: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
00006a1: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
00006b1: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
00006c1: 636d 4633 496a 6f69 6154 4d79 4969 7769 
00006d1: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
00006e1: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
00006f1: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000701: 6479 4936 496c 7378 4d54 4934 5857 3568 
0000711: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
0000721: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
0000731: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000741: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000751: 4d54 4934 5857 3568 6257 5569 4c43 4a30 
0000761: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000771: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000781: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000791: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00007a1: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 14
00007ae: 00                                      
00007af: 41                                        ; i32.const
00007b0: 8804                                      ; i32 literal
00007b2: 0b                                        ; end
00007b3: a904                                      ; data segment size
; data segment data 14
00007b5: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00007c5: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00007d5: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
00007e5: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
00007f5: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
0000805: 6579 4a75 5957 316c 496a 7037 496d 646c 
0000815: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000825: 5958 6369 4f69 4a7a 6448 4a70 626d 6369 
0000835: 4c43 4a30 6558 426c 496a 6f31 6653 7769 
0000845: 6143 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000855: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000865: 6154 4d79 4969 7769 6448 6c77 5a53 4936 
0000875: 4d58 3073 496e 6369 4f6e 7369 5a32 5675 
0000885: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000895: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
00008a5: 6347 5569 4f6a 4639 4c43 4a35 496a 7037 
00008b5: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
00008c5: 4c43 4a79 5958 6369 4f69 4a6d 4e6a 5169 
00008d5: 4c43 4a30 6558 426c 496a 6f30 6653 7769 
00008e5: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
00008f5: 496a 7062 5853 7769 636d 4633 496a 6f69 
0000905: 5a6a 5930 4969 7769 6448 6c77 5a53 4936 
0000915: 4e48 3073 496e 4a68 5a47 6c31 6379 4936 
0000925: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000935: 5853 7769 636d 4633 496a 6f69 5a6a 4d79 
0000945: 4969 7769 6448 6c77 5a53 4936 4d33 3073 
0000955: 496d 6c75 626d 5679 496a 7037 496d 646c 
0000965: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000975: 5958 6369 4f69 4a62 4d54 4e64 5932 6c79 
0000985: 5932 786c 4969 7769 6448 6c77 5a53 4936 
0000995: 4d54 4239 6653 7769 6158 4e54 6448 4a31 
00009a5: 5933 5169 4f6d 5a68 6248 4e6c 4c43 4a74 
00009b5: 5a58 526f 6232 527a 496a 7037 6653 7769 
00009c5: 626d 4674 5a58 4e77 5957 4e6c 496a 7075 
00009d5: 6457 7873 6651 3d3d 00                    ; data segment data
; data segment header 15
00009de: 00                                      
00009df: 41                                        ; i32.const
00009e0: e808                                      ; i32 literal
00009e2: 0b                                        ; end
00009e3: 8502                                      ; data segment size
; data segment data 15
00009e5: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00009f5: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000a05: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000a15: 6331 3970 5a43 4936 4d54 4579 4f43 7769 
0000a25: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000a35: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000a45: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000a55: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000a65: 5a53 4936 4d58 3073 496d 3568 6257 5569 
0000a75: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000a85: 5731 3073 496e 4a68 6479 4936 496e 4e30 
0000a95: 636d 6c75 5a79 4973 496e 5235 6347 5569 
0000aa5: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
0000ab5: 5933 5169 4f6e 5279 6457 5573 496d 316c 
0000ac5: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0000ad5: 5957 316c 6333 4268 5932 5569 4f6d 3531 
0000ae5: 6247 7839 00                              ; data segment data
; move data: [495, aea) -> [496, aeb)
0000494: d50c                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0311 1005 0707 0707 0707 0707 0707 0707 
0000100: 0808 0806 8c01 0e7f 0141 900d 0b7c 0144 
0000110: 6957 148b 0abf 0540 0b7c 0144 182d 4454 
0000120: fb21 0940 0b7f 0141 ffff ffff 070b 7e01 
0000130: 42ff ffff ffff ffff ffff 000b 7d01 43ff 
0000140: ff7f 7f0b 7c01 44ff ffff ffff ffef 7f0b 
0000150: 7f01 4180 8080 8078 0b7e 0142 8080 8080 
0000160: 8080 8080 807f 0b7d 0143 ffff 7fff 0b7c 
0000170: 0144 ffff ffff ffff efff 0b7c 0144 0000 
0000180: 0000 0040 8f40 0b7f 0141 000b 7f01 41d8 
0000190: 080b 07bf 020b 114d 6f64 756c 6531 2e6e 
00001a0: 6577 4369 7263 6c65 000d 114d 6f64 756c 
00001b0: 6531 2e67 6574 4f62 6a65 6374 000f 1a41 
00001c0: 7373 656d 626c 7949 6e66 6f2e 4173 7365 
00001d0: 6d62 6c79 5469 746c 6500 1020 4173 7365 
00001e0: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
00001f0: 7944 6573 6372 6970 7469 6f6e 0011 1c41 
0000200: 7373 656d 626c 7949 6e66 6f2e 4173 7365 
0000210: 6d62 6c79 436f 6d70 616e 7900 121c 4173 
0000220: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000230: 626c 7950 726f 6475 6374 0013 1e41 7373 
0000240: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
0000250: 6c79 436f 7079 7269 6768 7400 141e 4173 
0000260: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000270: 626c 7954 7261 6465 6d61 726b 0015 1141 
0000280: 7373 656d 626c 7949 6e66 6f2e 4775 6964 
0000290: 0016 1c41 7373 656d 626c 7949 6e66 6f2e 
00002a0: 4173 7365 6d62 6c79 5665 7273 696f 6e00 
00002b0: 1720 4173 7365 6d62 6c79 496e 666f 2e41 
00002c0: 7373 656d 626c 7946 696c 6556 6572 7369 
00002d0: 6f6e 0018 0801 190a b903 1018 0101 7f23 
00002e0: 0021 0220 0220 006a 2400 2002 2001 1007 
00002f0: 2002 0f0b ae01 0107 7f23 0b41 02b7 a224 
0000300: 0b41 1c41 0d10 0c21 0120 0141 006a 230b 
0000310: b638 0200 2001 4104 6a41 8fce 00b2 3802 
0000320: 0010 0e21 0420 0141 0c6a 2103 2003 4100 
0000330: 6a20 0441 006a 2802 0036 0200 2003 4104 
0000340: 6a20 0441 046a 2802 0036 0200 4108 41e8 
0000350: 0810 0c21 0220 0241 046a 41f0 0a36 0200 
0000360: 2002 4100 6a41 0036 0200 2002 2106 2001 
0000370: 4114 6a21 0520 0541 006a 2006 4100 6a28 
0000380: 0200 3602 0020 0541 046a 2006 4104 6a28 
0000390: 0200 3602 0020 0141 086a 41e4 0036 0200 
00003a0: 2001 0f0b 2701 017f 4108 41e8 0810 0c21 
00003b0: 0020 0041 046a 4190 0b36 0200 2000 4100 
00003c0: 6a41 87e4 0636 0200 2000 0f0b 0500 230c 
00003d0: 0f0b 0600 41b8 0b0f 0b06 0041 c80b 0f0b 
00003e0: 0600 4180 0c0f 0b06 0041 900c 0f0b 0600 
00003f0: 41a0 0c0f 0b06 0041 c80c 0f0b 0600 41d8 
0000400: 0c0f 0b06 0041 800d 0f0b 0600 4188 0d0f 
0000410: 0b06 0010 1a10 1b0b 6201 017f 4124 4188 
0000420: 0410 0c21 0020 0041 146a 41ff ffff ff07 
0000430: b739 0300 2000 410c 6a41 0ab7 3903 0020 
0000440: 0041 006a 4100 3602 0020 0041 046a 41e8 
0000450: 0736 0200 2000 4108 6a41 e807 3602 0020 
0000460: 0041 1c6a 4300 00c6 c238 0200 2000 4120 
0000470: 6a41 0036 0200 2000 240c 0b17 0023 0c41 
0000480: 006a 41a8 0b36 0200 230c 4120 6a10 0d36 
0000490: 0200 0b0b d50c 1000 41d8 080b 0939 3939 
00004a0: 3939 3939 3900 0041 f00a 0b1d 6469 7265 
00004b0: 6374 6c79 2063 7265 6174 6520 6120 7374 
00004c0: 7275 6374 7572 7465 0000 4190 0b0b 1574 
00004d0: 6869 7320 6973 2061 2073 7472 7563 7475 
00004e0: 7265 2100 0041 a80b 0b0c 7465 7374 206f 
00004f0: 626a 6563 7400 0041 b80b 0b0f 6a73 5f6f 
0000500: 626a 6563 7420 6465 6d6f 0000 41c8 0b0b 
0000510: 384a 6176 6173 6372 6970 7420 6f62 6a65 
0000520: 6374 2067 656e 6572 6174 6520 6672 6f6d 
0000530: 2056 422e 4e45 5420 5765 6241 7373 656d 
0000540: 626c 7920 6465 6d6f 0000 4180 0c0b 0e76 
0000550: 616e 696c 6c61 7662 2e61 7070 0000 4190 
0000560: 0c0b 0a6a 735f 6f62 6a65 6374 0000 41a0 
0000570: 0c0b 2143 6f70 7972 6967 6874 2028 6329 
0000580: 2076 616e 696c 6c61 7662 2e61 7070 2032 
0000590: 3031 3900 0041 c80c 0b0b 646f 7476 616e 
00005a0: 696c 6c61 0000 41d8 0c0b 2536 3262 3333 
00005b0: 3839 642d 3531 3039 2d34 3734 302d 3963 
00005c0: 3661 2d33 3562 6230 3232 3335 3562 3900 
00005d0: 0041 800d 0b08 312e 302e 302e 3000 0041 
00005e0: 880d 0b08 312e 302e 302e 3000 0041 0d0b 
00005f0: bd03 6579 4a6a 6232 3174 5a57 3530 496a 
0000600: 7075 6457 7873 4c43 4a6a 6247 467a 6379 
0000610: 4936 496d 4e70 636d 4e73 5a53 4973 496d 
0000620: 4e73 5958 4e7a 5832 6c6b 496a 6f78 4d79 
0000630: 7769 5a6d 6c6c 6247 527a 496a 7037 496e 
0000640: 6769 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000650: 4936 5731 3073 496e 4a68 6479 4936 496d 
0000660: 597a 4d69 4973 496e 5235 6347 5569 4f6a 
0000670: 4e39 4c43 4a35 496a 7037 496d 646c 626d 
0000680: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000690: 6369 4f69 4a6d 4d7a 4969 4c43 4a30 6558 
00006a0: 426c 496a 6f7a 6653 7769 6369 4936 6579 
00006b0: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
00006c0: 7769 636d 4633 496a 6f69 6154 4d79 4969 
00006d0: 7769 6448 6c77 5a53 4936 4d58 3073 496d 
00006e0: 3568 6257 5650 5a6c 6769 4f6e 7369 5a32 
00006f0: 5675 5a58 4a70 5979 4936 5731 3073 496e 
0000700: 4a68 6479 4936 496c 7378 4d54 4934 5857 
0000710: 3568 6257 5569 4c43 4a30 6558 426c 496a 
0000720: 6f78 4d48 3073 496d 3568 6257 5650 5a6c 
0000730: 6b69 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000740: 4936 5731 3073 496e 4a68 6479 4936 496c 
0000750: 7378 4d54 4934 5857 3568 6257 5569 4c43 
0000760: 4a30 6558 426c 496a 6f78 4d48 3139 4c43 
0000770: 4a70 6331 4e30 636e 566a 6443 4936 5a6d 
0000780: 4673 6332 5573 496d 316c 6447 6876 5a48 
0000790: 4d69 4f6e 7439 4c43 4a75 5957 316c 6333 
00007a0: 4268 5932 5569 4f6d 3531 6247 7839 0000 
00007b0: 4188 040b a904 6579 4a6a 6232 3174 5a57 
00007c0: 3530 496a 7075 6457 7873 4c43 4a6a 6247 
00007d0: 467a 6379 4936 496e 4a6c 5933 5268 626d 
00007e0: 6473 5a53 4973 496d 4e73 5958 4e7a 5832 
00007f0: 6c6b 496a 6f31 4d6a 4173 496d 5a70 5a57 
0000800: 786b 6379 4936 6579 4a75 5957 316c 496a 
0000810: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
0000820: 7464 4c43 4a79 5958 6369 4f69 4a7a 6448 
0000830: 4a70 626d 6369 4c43 4a30 6558 426c 496a 
0000840: 6f31 6653 7769 6143 4936 6579 4a6e 5a57 
0000850: 356c 636d 6c6a 496a 7062 5853 7769 636d 
0000860: 4633 496a 6f69 6154 4d79 4969 7769 6448 
0000870: 6c77 5a53 4936 4d58 3073 496e 6369 4f6e 
0000880: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
0000890: 3073 496e 4a68 6479 4936 496d 6b7a 4d69 
00008a0: 4973 496e 5235 6347 5569 4f6a 4639 4c43 
00008b0: 4a35 496a 7037 496d 646c 626d 5679 6157 
00008c0: 4d69 4f6c 7464 4c43 4a79 5958 6369 4f69 
00008d0: 4a6d 4e6a 5169 4c43 4a30 6558 426c 496a 
00008e0: 6f30 6653 7769 6543 4936 6579 4a6e 5a57 
00008f0: 356c 636d 6c6a 496a 7062 5853 7769 636d 
0000900: 4633 496a 6f69 5a6a 5930 4969 7769 6448 
0000910: 6c77 5a53 4936 4e48 3073 496e 4a68 5a47 
0000920: 6c31 6379 4936 6579 4a6e 5a57 356c 636d 
0000930: 6c6a 496a 7062 5853 7769 636d 4633 496a 
0000940: 6f69 5a6a 4d79 4969 7769 6448 6c77 5a53 
0000950: 4936 4d33 3073 496d 6c75 626d 5679 496a 
0000960: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
0000970: 7464 4c43 4a79 5958 6369 4f69 4a62 4d54 
0000980: 4e64 5932 6c79 5932 786c 4969 7769 6448 
0000990: 6c77 5a53 4936 4d54 4239 6653 7769 6158 
00009a0: 4e54 6448 4a31 5933 5169 4f6d 5a68 6248 
00009b0: 4e6c 4c43 4a74 5a58 526f 6232 527a 496a 
00009c0: 7037 6653 7769 626d 4674 5a58 4e77 5957 
00009d0: 4e6c 496a 7075 6457 7873 6651 3d3d 0000 
00009e0: 41e8 080b 8502 6579 4a6a 6232 3174 5a57 
00009f0: 3530 496a 7075 6457 7873 4c43 4a6a 6247 
0000a00: 467a 6379 4936 496d 3568 6257 5569 4c43 
0000a10: 4a6a 6247 467a 6331 3970 5a43 4936 4d54 
0000a20: 4579 4f43 7769 5a6d 6c6c 6247 527a 496a 
0000a30: 7037 496e 4e76 6458 4a6a 5a53 4936 6579 
0000a40: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
0000a50: 7769 636d 4633 496a 6f69 6154 4d79 4969 
0000a60: 7769 6448 6c77 5a53 4936 4d58 3073 496d 
0000a70: 3568 6257 5569 4f6e 7369 5a32 5675 5a58 
0000a80: 4a70 5979 4936 5731 3073 496e 4a68 6479 
0000a90: 4936 496e 4e30 636d 6c75 5a79 4973 496e 
0000aa0: 5235 6347 5569 4f6a 5639 6653 7769 6158 
0000ab0: 4e54 6448 4a31 5933 5169 4f6e 5279 6457 
0000ac0: 5573 496d 316c 6447 6876 5a48 4d69 4f6e 
0000ad0: 7439 4c43 4a75 5957 316c 6333 4268 5932 
0000ae0: 5569 4f6d 3531 6247 7839 00             
