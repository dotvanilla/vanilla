0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 10                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
00000f1: 11                                        ; FIXUP section size
; section "Global" (6)
0000103: 06                                        ; section code
0000104: 00                                        ; section size (guess)
0000105: 0d                                        ; num globals
0000106: 7f                                        ; i32
0000107: 01                                        ; global mutability
0000108: 41                                        ; i32.const
0000109: ae0c                                      ; i32 literal
000010b: 0b                                        ; end
000010c: 7c                                        ; f64
000010d: 01                                        ; global mutability
000010e: 44                                        ; f64.const
000010f: 6957 148b 0abf 0540                       ; f64 literal
0000117: 0b                                        ; end
0000118: 7c                                        ; f64
0000119: 01                                        ; global mutability
000011a: 44                                        ; f64.const
000011b: 182d 4454 fb21 0940                       ; f64 literal
0000123: 0b                                        ; end
0000124: 7f                                        ; i32
0000125: 01                                        ; global mutability
0000126: 41                                        ; i32.const
0000127: ffff ffff 07                              ; i32 literal
000012c: 0b                                        ; end
000012d: 7e                                        ; i64
000012e: 01                                        ; global mutability
000012f: 42                                        ; i64.const
0000130: ffff ffff ffff ffff ff00                  ; i64 literal
000013a: 0b                                        ; end
000013b: 7d                                        ; f32
000013c: 01                                        ; global mutability
000013d: 43                                        ; f32.const
000013e: ffff 7f7f                                 ; f32 literal
0000142: 0b                                        ; end
0000143: 7c                                        ; f64
0000144: 01                                        ; global mutability
0000145: 44                                        ; f64.const
0000146: ffff ffff ffff ef7f                       ; f64 literal
000014e: 0b                                        ; end
000014f: 7f                                        ; i32
0000150: 01                                        ; global mutability
0000151: 41                                        ; i32.const
0000152: 8080 8080 78                              ; i32 literal
0000157: 0b                                        ; end
0000158: 7e                                        ; i64
0000159: 01                                        ; global mutability
000015a: 42                                        ; i64.const
000015b: 8080 8080 8080 8080 807f                  ; i64 literal
0000165: 0b                                        ; end
0000166: 7d                                        ; f32
0000167: 01                                        ; global mutability
0000168: 43                                        ; f32.const
0000169: ffff 7fff                                 ; f32 literal
000016d: 0b                                        ; end
000016e: 7c                                        ; f64
000016f: 01                                        ; global mutability
0000170: 44                                        ; f64.const
0000171: ffff ffff ffff efff                       ; f64 literal
0000179: 0b                                        ; end
000017a: 7c                                        ; f64
000017b: 01                                        ; global mutability
000017c: 44                                        ; f64.const
000017d: 0000 0000 0040 8f40                       ; f64 literal
0000185: 0b                                        ; end
0000186: 7f                                        ; i32
0000187: 01                                        ; global mutability
0000188: 41                                        ; i32.const
0000189: 00                                        ; i32 literal
000018a: 0b                                        ; end
; move data: [105, 18b) -> [106, 18c)
0000104: 8601                                      ; FIXUP section size
; section "Export" (7)
000018c: 07                                        ; section code
000018d: 00                                        ; section size (guess)
000018e: 0b                                        ; num exports
000018f: 11                                        ; string length
0000190: 4d6f 6475 6c65 312e 6e65 7743 6972 636c  Module1.newCircl
00001a0: 65                                       e  ; export name
00001a1: 00                                        ; export kind
00001a2: 0d                                        ; export func index
00001a3: 11                                        ; string length
00001a4: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
00001b4: 74                                       t  ; export name
00001b5: 00                                        ; export kind
00001b6: 0f                                        ; export func index
00001b7: 1a                                        ; string length
00001b8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c8: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001d2: 00                                        ; export kind
00001d3: 10                                        ; export func index
00001d4: 20                                        ; string length
00001d5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e5: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001f5: 00                                        ; export kind
00001f6: 11                                        ; export func index
00001f7: 1c                                        ; string length
00001f8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000208: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000214: 00                                        ; export kind
0000215: 12                                        ; export func index
0000216: 1c                                        ; string length
0000217: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000227: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000233: 00                                        ; export kind
0000234: 13                                        ; export func index
0000235: 1e                                        ; string length
0000236: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000246: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000254: 00                                        ; export kind
0000255: 14                                        ; export func index
0000256: 1e                                        ; string length
0000257: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000267: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000275: 00                                        ; export kind
0000276: 15                                        ; export func index
0000277: 11                                        ; string length
0000278: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000288: 64                                       d  ; export name
0000289: 00                                        ; export kind
000028a: 16                                        ; export func index
000028b: 1c                                        ; string length
000028c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000029c: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002a8: 00                                        ; export kind
00002a9: 17                                        ; export func index
00002aa: 20                                        ; string length
00002ab: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002bb: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002cb: 00                                        ; export kind
00002cc: 18                                        ; export func index
; move data: [18e, 2cd) -> [18f, 2ce)
000018d: bf02                                      ; FIXUP section size
; section "Start" (8)
00002ce: 08                                        ; section code
00002cf: 00                                        ; section size (guess)
00002d0: 19                                        ; start func index
00002cf: 01                                        ; FIXUP section size
; section "Code" (10)
00002d1: 0a                                        ; section code
00002d2: 00                                        ; section size (guess)
00002d3: 10                                        ; num functions
; function body 0
00002d4: 00                                        ; func body size (guess)
00002d5: 01                                        ; local decl count
00002d6: 01                                        ; local type count
00002d7: 7f                                        ; i32
00002d8: 23                                        ; global.get
00002d9: 00                                        ; global index
00002da: 21                                        ; local.set
00002db: 02                                        ; local index
00002dc: 20                                        ; local.get
00002dd: 02                                        ; local index
00002de: 20                                        ; local.get
00002df: 00                                        ; local index
00002e0: 6a                                        ; i32.add
00002e1: 24                                        ; global.set
00002e2: 00                                        ; global index
00002e3: 20                                        ; local.get
00002e4: 02                                        ; local index
00002e5: 20                                        ; local.get
00002e6: 01                                        ; local index
00002e7: 10                                        ; call
00002e8: 07                                        ; function index
00002e9: 20                                        ; local.get
00002ea: 02                                        ; local index
00002eb: 0f                                        ; return
00002ec: 0b                                        ; end
00002d4: 18                                        ; FIXUP func body size
; function body 1
00002ed: 00                                        ; func body size (guess)
00002ee: 01                                        ; local decl count
00002ef: 05                                        ; local type count
00002f0: 7f                                        ; i32
00002f1: 23                                        ; global.get
00002f2: 0b                                        ; global index
00002f3: 41                                        ; i32.const
00002f4: 02                                        ; i32 literal
00002f5: b7                                        ; f64.convert_i32_s
00002f6: a2                                        ; f64.mul
00002f7: 24                                        ; global.set
00002f8: 0b                                        ; global index
00002f9: 41                                        ; i32.const
00002fa: 14                                        ; i32 literal
00002fb: 41                                        ; i32.const
00002fc: 0d                                        ; i32 literal
00002fd: 10                                        ; call
00002fe: 0c                                        ; function index
00002ff: 21                                        ; local.set
0000300: 01                                        ; local index
0000301: 20                                        ; local.get
0000302: 01                                        ; local index
0000303: 41                                        ; i32.const
0000304: 00                                        ; i32 literal
0000305: 6a                                        ; i32.add
0000306: 23                                        ; global.get
0000307: 0b                                        ; global index
0000308: b6                                        ; f32.demote_f64
0000309: 38                                        ; f32.store
000030a: 02                                        ; alignment
000030b: 00                                        ; store offset
000030c: 20                                        ; local.get
000030d: 01                                        ; local index
000030e: 41                                        ; i32.const
000030f: 04                                        ; i32 literal
0000310: 6a                                        ; i32.add
0000311: 41                                        ; i32.const
0000312: 8fce 00                                   ; i32 literal
0000315: b2                                        ; f32.convert_i32_s
0000316: 38                                        ; f32.store
0000317: 02                                        ; alignment
0000318: 00                                        ; store offset
0000319: 20                                        ; local.get
000031a: 01                                        ; local index
000031b: 41                                        ; i32.const
000031c: 0c                                        ; i32 literal
000031d: 6a                                        ; i32.add
000031e: 21                                        ; local.set
000031f: 03                                        ; local index
0000320: 20                                        ; local.get
0000321: 03                                        ; local index
0000322: 41                                        ; i32.const
0000323: 00                                        ; i32 literal
0000324: 6a                                        ; i32.add
0000325: 10                                        ; call
0000326: 0e                                        ; function index
0000327: 41                                        ; i32.const
0000328: 00                                        ; i32 literal
0000329: 6a                                        ; i32.add
000032a: 28                                        ; i32.load
000032b: 02                                        ; alignment
000032c: 00                                        ; load offset
000032d: 36                                        ; i32.store
000032e: 02                                        ; alignment
000032f: 00                                        ; store offset
0000330: 41                                        ; i32.const
0000331: 04                                        ; i32 literal
0000332: 41                                        ; i32.const
0000333: bb08                                      ; i32 literal
0000335: 10                                        ; call
0000336: 0c                                        ; function index
0000337: 21                                        ; local.set
0000338: 02                                        ; local index
0000339: 20                                        ; local.get
000033a: 02                                        ; local index
000033b: 41                                        ; i32.const
000033c: 00                                        ; i32 literal
000033d: 6a                                        ; i32.add
000033e: 41                                        ; i32.const
000033f: b00a                                      ; i32 literal
0000341: 36                                        ; i32.store
0000342: 02                                        ; alignment
0000343: 00                                        ; store offset
0000344: 20                                        ; local.get
0000345: 01                                        ; local index
0000346: 41                                        ; i32.const
0000347: 10                                        ; i32 literal
0000348: 6a                                        ; i32.add
0000349: 21                                        ; local.set
000034a: 04                                        ; local index
000034b: 20                                        ; local.get
000034c: 04                                        ; local index
000034d: 41                                        ; i32.const
000034e: 00                                        ; i32 literal
000034f: 6a                                        ; i32.add
0000350: 20                                        ; local.get
0000351: 02                                        ; local index
0000352: 41                                        ; i32.const
0000353: 00                                        ; i32 literal
0000354: 6a                                        ; i32.add
0000355: 28                                        ; i32.load
0000356: 02                                        ; alignment
0000357: 00                                        ; load offset
0000358: 36                                        ; i32.store
0000359: 02                                        ; alignment
000035a: 00                                        ; store offset
000035b: 20                                        ; local.get
000035c: 01                                        ; local index
000035d: 41                                        ; i32.const
000035e: 08                                        ; i32 literal
000035f: 6a                                        ; i32.add
0000360: 41                                        ; i32.const
0000361: e400                                      ; i32 literal
0000363: 36                                        ; i32.store
0000364: 02                                        ; alignment
0000365: 00                                        ; store offset
0000366: 20                                        ; local.get
0000367: 01                                        ; local index
0000368: 0f                                        ; return
0000369: 0b                                        ; end
00002ed: 7c                                        ; FIXUP func body size
; function body 2
000036a: 00                                        ; func body size (guess)
000036b: 01                                        ; local decl count
000036c: 01                                        ; local type count
000036d: 7f                                        ; i32
000036e: 41                                        ; i32.const
000036f: 04                                        ; i32 literal
0000370: 41                                        ; i32.const
0000371: bb08                                      ; i32 literal
0000373: 10                                        ; call
0000374: 0c                                        ; function index
0000375: 21                                        ; local.set
0000376: 00                                        ; local index
0000377: 20                                        ; local.get
0000378: 00                                        ; local index
0000379: 41                                        ; i32.const
000037a: 00                                        ; i32 literal
000037b: 6a                                        ; i32.add
000037c: 41                                        ; i32.const
000037d: cd0a                                      ; i32 literal
000037f: 36                                        ; i32.store
0000380: 02                                        ; alignment
0000381: 00                                        ; store offset
0000382: 20                                        ; local.get
0000383: 00                                        ; local index
0000384: 0f                                        ; return
0000385: 0b                                        ; end
000036a: 1b                                        ; FIXUP func body size
; function body 3
0000386: 00                                        ; func body size (guess)
0000387: 00                                        ; local decl count
0000388: 23                                        ; global.get
0000389: 0c                                        ; global index
000038a: 0f                                        ; return
000038b: 0b                                        ; end
0000386: 05                                        ; FIXUP func body size
; function body 4
000038c: 00                                        ; func body size (guess)
000038d: 00                                        ; local decl count
000038e: 41                                        ; i32.const
000038f: ee0a                                      ; i32 literal
0000391: 0f                                        ; return
0000392: 0b                                        ; end
000038c: 06                                        ; FIXUP func body size
; function body 5
0000393: 00                                        ; func body size (guess)
0000394: 00                                        ; local decl count
0000395: 41                                        ; i32.const
0000396: fd0a                                      ; i32 literal
0000398: 0f                                        ; return
0000399: 0b                                        ; end
0000393: 06                                        ; FIXUP func body size
; function body 6
000039a: 00                                        ; func body size (guess)
000039b: 00                                        ; local decl count
000039c: 41                                        ; i32.const
000039d: b50b                                      ; i32 literal
000039f: 0f                                        ; return
00003a0: 0b                                        ; end
000039a: 06                                        ; FIXUP func body size
; function body 7
00003a1: 00                                        ; func body size (guess)
00003a2: 00                                        ; local decl count
00003a3: 41                                        ; i32.const
00003a4: c30b                                      ; i32 literal
00003a6: 0f                                        ; return
00003a7: 0b                                        ; end
00003a1: 06                                        ; FIXUP func body size
; function body 8
00003a8: 00                                        ; func body size (guess)
00003a9: 00                                        ; local decl count
00003aa: 41                                        ; i32.const
00003ab: cd0b                                      ; i32 literal
00003ad: 0f                                        ; return
00003ae: 0b                                        ; end
00003a8: 06                                        ; FIXUP func body size
; function body 9
00003af: 00                                        ; func body size (guess)
00003b0: 00                                        ; local decl count
00003b1: 41                                        ; i32.const
00003b2: ee0b                                      ; i32 literal
00003b4: 0f                                        ; return
00003b5: 0b                                        ; end
00003af: 06                                        ; FIXUP func body size
; function body 10
00003b6: 00                                        ; func body size (guess)
00003b7: 00                                        ; local decl count
00003b8: 41                                        ; i32.const
00003b9: f90b                                      ; i32 literal
00003bb: 0f                                        ; return
00003bc: 0b                                        ; end
00003b6: 06                                        ; FIXUP func body size
; function body 11
00003bd: 00                                        ; func body size (guess)
00003be: 00                                        ; local decl count
00003bf: 41                                        ; i32.const
00003c0: 9e0c                                      ; i32 literal
00003c2: 0f                                        ; return
00003c3: 0b                                        ; end
00003bd: 06                                        ; FIXUP func body size
; function body 12
00003c4: 00                                        ; func body size (guess)
00003c5: 00                                        ; local decl count
00003c6: 41                                        ; i32.const
00003c7: a60c                                      ; i32 literal
00003c9: 0f                                        ; return
00003ca: 0b                                        ; end
00003c4: 06                                        ; FIXUP func body size
; function body 13
00003cb: 00                                        ; func body size (guess)
00003cc: 00                                        ; local decl count
00003cd: 10                                        ; call
00003ce: 1a                                        ; function index
00003cf: 10                                        ; call
00003d0: 1b                                        ; function index
00003d1: 0b                                        ; end
00003cb: 06                                        ; FIXUP func body size
; function body 14
00003d2: 00                                        ; func body size (guess)
00003d3: 01                                        ; local decl count
00003d4: 01                                        ; local type count
00003d5: 7f                                        ; i32
00003d6: 41                                        ; i32.const
00003d7: 24                                        ; i32 literal
00003d8: 41                                        ; i32.const
00003d9: f203                                      ; i32 literal
00003db: 10                                        ; call
00003dc: 0c                                        ; function index
00003dd: 21                                        ; local.set
00003de: 00                                        ; local index
00003df: 20                                        ; local.get
00003e0: 00                                        ; local index
00003e1: 41                                        ; i32.const
00003e2: 14                                        ; i32 literal
00003e3: 6a                                        ; i32.add
00003e4: 41                                        ; i32.const
00003e5: ffff ffff 07                              ; i32 literal
00003ea: b7                                        ; f64.convert_i32_s
00003eb: 39                                        ; f64.store
00003ec: 03                                        ; alignment
00003ed: 00                                        ; store offset
00003ee: 20                                        ; local.get
00003ef: 00                                        ; local index
00003f0: 41                                        ; i32.const
00003f1: 0c                                        ; i32 literal
00003f2: 6a                                        ; i32.add
00003f3: 41                                        ; i32.const
00003f4: 0a                                        ; i32 literal
00003f5: b7                                        ; f64.convert_i32_s
00003f6: 39                                        ; f64.store
00003f7: 03                                        ; alignment
00003f8: 00                                        ; store offset
00003f9: 20                                        ; local.get
00003fa: 00                                        ; local index
00003fb: 41                                        ; i32.const
00003fc: 00                                        ; i32 literal
00003fd: 6a                                        ; i32.add
00003fe: 41                                        ; i32.const
00003ff: 00                                        ; i32 literal
0000400: 36                                        ; i32.store
0000401: 02                                        ; alignment
0000402: 00                                        ; store offset
0000403: 20                                        ; local.get
0000404: 00                                        ; local index
0000405: 41                                        ; i32.const
0000406: 04                                        ; i32 literal
0000407: 6a                                        ; i32.add
0000408: 41                                        ; i32.const
0000409: e807                                      ; i32 literal
000040b: 36                                        ; i32.store
000040c: 02                                        ; alignment
000040d: 00                                        ; store offset
000040e: 20                                        ; local.get
000040f: 00                                        ; local index
0000410: 41                                        ; i32.const
0000411: 08                                        ; i32 literal
0000412: 6a                                        ; i32.add
0000413: 41                                        ; i32.const
0000414: e807                                      ; i32 literal
0000416: 36                                        ; i32.store
0000417: 02                                        ; alignment
0000418: 00                                        ; store offset
0000419: 20                                        ; local.get
000041a: 00                                        ; local index
000041b: 41                                        ; i32.const
000041c: 1c                                        ; i32 literal
000041d: 6a                                        ; i32.add
000041e: 43                                        ; f32.const
000041f: 0000 c6c2                                 ; f32 literal
0000423: 38                                        ; f32.store
0000424: 02                                        ; alignment
0000425: 00                                        ; store offset
0000426: 20                                        ; local.get
0000427: 00                                        ; local index
0000428: 41                                        ; i32.const
0000429: 20                                        ; i32 literal
000042a: 6a                                        ; i32.add
000042b: 41                                        ; i32.const
000042c: 00                                        ; i32 literal
000042d: 36                                        ; i32.store
000042e: 02                                        ; alignment
000042f: 00                                        ; store offset
0000430: 20                                        ; local.get
0000431: 00                                        ; local index
0000432: 24                                        ; global.set
0000433: 0c                                        ; global index
0000434: 0b                                        ; end
00003d2: 62                                        ; FIXUP func body size
; function body 15
0000435: 00                                        ; func body size (guess)
0000436: 00                                        ; local decl count
0000437: 23                                        ; global.get
0000438: 0c                                        ; global index
0000439: 41                                        ; i32.const
000043a: 00                                        ; i32 literal
000043b: 6a                                        ; i32.add
000043c: 41                                        ; i32.const
000043d: e20a                                      ; i32 literal
000043f: 36                                        ; i32.store
0000440: 02                                        ; alignment
0000441: 00                                        ; store offset
0000442: 23                                        ; global.get
0000443: 0c                                        ; global index
0000444: 41                                        ; i32.const
0000445: 20                                        ; i32 literal
0000446: 6a                                        ; i32.add
0000447: 10                                        ; call
0000448: 0d                                        ; function index
0000449: 36                                        ; i32.store
000044a: 02                                        ; alignment
000044b: 00                                        ; store offset
000044c: 0b                                        ; end
0000435: 17                                        ; FIXUP func body size
; move data: [2d3, 44d) -> [2d4, 44e)
00002d2: fa02                                      ; FIXUP section size
; section "Data" (11)
000044e: 0b                                        ; section code
000044f: 00                                        ; section size (guess)
0000450: 0f                                        ; num data segments
; data segment header 0
0000451: 00                                      
0000452: 41                                        ; i32.const
0000453: b00a                                      ; i32 literal
0000455: 0b                                        ; end
0000456: 1d                                        ; data segment size
; data segment data 0
0000457: 6469 7265 6374 6c79 2063 7265 6174 6520 
0000467: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 1
0000474: 00                                      
0000475: 41                                        ; i32.const
0000476: cd0a                                      ; i32 literal
0000478: 0b                                        ; end
0000479: 15                                        ; data segment size
; data segment data 1
000047a: 7468 6973 2069 7320 6120 7374 7275 6374 
000048a: 7572 6521 00                              ; data segment data
; data segment header 2
000048f: 00                                      
0000490: 41                                        ; i32.const
0000491: e20a                                      ; i32 literal
0000493: 0b                                        ; end
0000494: 0c                                        ; data segment size
; data segment data 2
0000495: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 3
00004a1: 00                                      
00004a2: 41                                        ; i32.const
00004a3: ee0a                                      ; i32 literal
00004a5: 0b                                        ; end
00004a6: 0f                                        ; data segment size
; data segment data 3
00004a7: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 4
00004b6: 00                                      
00004b7: 41                                        ; i32.const
00004b8: fd0a                                      ; i32 literal
00004ba: 0b                                        ; end
00004bb: 38                                        ; data segment size
; data segment data 4
00004bc: 4a61 7661 7363 7269 7074 206f 626a 6563 
00004cc: 7420 6765 6e65 7261 7465 2066 726f 6d20 
00004dc: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
00004ec: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 5
00004f4: 00                                      
00004f5: 41                                        ; i32.const
00004f6: b50b                                      ; i32 literal
00004f8: 0b                                        ; end
00004f9: 0e                                        ; data segment size
; data segment data 5
00004fa: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000508: 00                                      
0000509: 41                                        ; i32.const
000050a: c30b                                      ; i32 literal
000050c: 0b                                        ; end
000050d: 0a                                        ; data segment size
; data segment data 6
000050e: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 7
0000518: 00                                      
0000519: 41                                        ; i32.const
000051a: cd0b                                      ; i32 literal
000051c: 0b                                        ; end
000051d: 21                                        ; data segment size
; data segment data 7
000051e: 436f 7079 7269 6768 7420 2863 2920 7661 
000052e: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
000053e: 00                                        ; data segment data
; data segment header 8
000053f: 00                                      
0000540: 41                                        ; i32.const
0000541: ee0b                                      ; i32 literal
0000543: 0b                                        ; end
0000544: 0b                                        ; data segment size
; data segment data 8
0000545: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 9
0000550: 00                                      
0000551: 41                                        ; i32.const
0000552: f90b                                      ; i32 literal
0000554: 0b                                        ; end
0000555: 25                                        ; data segment size
; data segment data 9
0000556: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000566: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000576: 3535 6239 00                              ; data segment data
; data segment header 10
000057b: 00                                      
000057c: 41                                        ; i32.const
000057d: 9e0c                                      ; i32 literal
000057f: 0b                                        ; end
0000580: 08                                        ; data segment size
; data segment data 10
0000581: 312e 302e 302e 3000                       ; data segment data
; data segment header 11
0000589: 00                                      
000058a: 41                                        ; i32.const
000058b: a60c                                      ; i32 literal
000058d: 0b                                        ; end
000058e: 08                                        ; data segment size
; data segment data 11
000058f: 312e 302e 302e 3000                       ; data segment data
; data segment header 12
0000597: 00                                      
0000598: 41                                        ; i32.const
0000599: 0d                                        ; i32 literal
000059a: 0b                                        ; end
000059b: ed03                                      ; data segment size
; data segment data 12
000059d: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00005ad: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00005bd: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00005cd: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
00005dd: 4f69 4a6a 6158 4a6a 6247 5569 4c43 4a6a 
00005ed: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
00005fd: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
000060d: 496a 7037 496d 646c 626d 5679 6157 4d69 
000061d: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
000062d: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
000063d: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
000064d: 636d 6c6a 496a 7062 5853 7769 636d 4633 
000065d: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
000066d: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
000067d: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
000068d: 496e 4a68 6479 4936 496d 6b7a 4d69 4973 
000069d: 496e 5235 6347 5569 4f6a 4639 4c43 4a7a 
00006ad: 6448 4a31 5933 5169 4f6e 7369 5a32 5675 
00006bd: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
00006cd: 6479 4936 496c 7378 4d44 677a 5858 4e30 
00006dd: 636e 566a 6446 526c 6333 5169 4c43 4a30 
00006ed: 6558 426c 496a 6f78 4d48 3073 496e 4e30 
00006fd: 636e 566a 6444 4969 4f6e 7369 5a32 5675 
000070d: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
000071d: 6479 4936 496c 7378 4d44 677a 5858 4e30 
000072d: 636e 566a 6446 526c 6333 5169 4c43 4a30 
000073d: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
000074d: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
000075d: 6332 5573 496d 316c 6447 6876 5a48 4d69 
000076d: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
000077d: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 13
000078a: 00                                      
000078b: 41                                        ; i32.const
000078c: f203                                      ; i32 literal
000078e: 0b                                        ; end
000078f: c904                                      ; data segment size
; data segment data 13
0000791: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00007a1: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00007b1: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00007c1: 4f6a 5135 4f48 3073 496d 4e73 5958 4e7a 
00007d1: 496a 6f69 636d 566a 6447 4675 5a32 786c 
00007e1: 4969 7769 5932 7868 6333 4e66 6157 5169 
00007f1: 4f6a 5135 4f43 7769 5a6d 6c6c 6247 527a 
0000801: 496a 7037 496d 3568 6257 5569 4f6e 7369 
0000811: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000821: 496e 4a68 6479 4936 496e 4e30 636d 6c75 
0000831: 5a79 4973 496e 5235 6347 5569 4f6a 5639 
0000841: 4c43 4a6f 496a 7037 496d 646c 626d 5679 
0000851: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000861: 4f69 4a70 4d7a 4969 4c43 4a30 6558 426c 
0000871: 496a 6f78 6653 7769 6479 4936 6579 4a6e 
0000881: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000891: 636d 4633 496a 6f69 6154 4d79 4969 7769 
00008a1: 6448 6c77 5a53 4936 4d58 3073 496e 6b69 
00008b1: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
00008c1: 5731 3073 496e 4a68 6479 4936 496d 5932 
00008d1: 4e43 4973 496e 5235 6347 5569 4f6a 5239 
00008e1: 4c43 4a34 496a 7037 496d 646c 626d 5679 
00008f1: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000901: 4f69 4a6d 4e6a 5169 4c43 4a30 6558 426c 
0000911: 496a 6f30 6653 7769 636d 466b 6158 567a 
0000921: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000931: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000941: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000951: 6653 7769 6157 3575 5a58 4969 4f6e 7369 
0000961: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000971: 496e 4a68 6479 4936 496c 7378 4d31 316a 
0000981: 6158 4a6a 6247 5569 4c43 4a30 6558 426c 
0000991: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
00009a1: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00009b1: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00009c1: 4c43 4a75 5957 316c 6333 4268 5932 5569 
00009d1: 4f6d 3531 6247 7839 00                    ; data segment data
; data segment header 14
00009da: 00                                      
00009db: 41                                        ; i32.const
00009dc: bb08                                      ; i32 literal
00009de: 0b                                        ; end
00009df: f501                                      ; data segment size
; data segment data 14
00009e1: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00009f1: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000a01: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000a11: 4f6a 4577 4f44 4e39 4c43 4a6a 6247 467a 
0000a21: 6379 4936 496e 4e30 636e 566a 6446 526c 
0000a31: 6333 5169 4c43 4a6a 6247 467a 6331 3970 
0000a41: 5a43 4936 4d54 4134 4d79 7769 5a6d 6c6c 
0000a51: 6247 527a 496a 7037 496d 3568 6257 5569 
0000a61: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000a71: 5731 3073 496e 4a68 6479 4936 496e 4e30 
0000a81: 636d 6c75 5a79 4973 496e 5235 6347 5569 
0000a91: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
0000aa1: 5933 5169 4f6e 5279 6457 5573 496d 316c 
0000ab1: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0000ac1: 5957 316c 6333 4268 5932 5569 4f6d 3531 
0000ad1: 6247 7839 00                              ; data segment data
; move data: [450, ad6) -> [451, ad7)
000044f: 860d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0311 1005 0707 0707 0707 0707 0707 0707 
0000100: 0808 0806 8601 0d7f 0141 ae0c 0b7c 0144 
0000110: 6957 148b 0abf 0540 0b7c 0144 182d 4454 
0000120: fb21 0940 0b7f 0141 ffff ffff 070b 7e01 
0000130: 42ff ffff ffff ffff ffff 000b 7d01 43ff 
0000140: ff7f 7f0b 7c01 44ff ffff ffff ffef 7f0b 
0000150: 7f01 4180 8080 8078 0b7e 0142 8080 8080 
0000160: 8080 8080 807f 0b7d 0143 ffff 7fff 0b7c 
0000170: 0144 ffff ffff ffff efff 0b7c 0144 0000 
0000180: 0000 0040 8f40 0b7f 0141 000b 07bf 020b 
0000190: 114d 6f64 756c 6531 2e6e 6577 4369 7263 
00001a0: 6c65 000d 114d 6f64 756c 6531 2e67 6574 
00001b0: 4f62 6a65 6374 000f 1a41 7373 656d 626c 
00001c0: 7949 6e66 6f2e 4173 7365 6d62 6c79 5469 
00001d0: 746c 6500 1020 4173 7365 6d62 6c79 496e 
00001e0: 666f 2e41 7373 656d 626c 7944 6573 6372 
00001f0: 6970 7469 6f6e 0011 1c41 7373 656d 626c 
0000200: 7949 6e66 6f2e 4173 7365 6d62 6c79 436f 
0000210: 6d70 616e 7900 121c 4173 7365 6d62 6c79 
0000220: 496e 666f 2e41 7373 656d 626c 7950 726f 
0000230: 6475 6374 0013 1e41 7373 656d 626c 7949 
0000240: 6e66 6f2e 4173 7365 6d62 6c79 436f 7079 
0000250: 7269 6768 7400 141e 4173 7365 6d62 6c79 
0000260: 496e 666f 2e41 7373 656d 626c 7954 7261 
0000270: 6465 6d61 726b 0015 1141 7373 656d 626c 
0000280: 7949 6e66 6f2e 4775 6964 0016 1c41 7373 
0000290: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
00002a0: 6c79 5665 7273 696f 6e00 1720 4173 7365 
00002b0: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
00002c0: 7946 696c 6556 6572 7369 6f6e 0018 0801 
00002d0: 190a fa02 1018 0101 7f23 0021 0220 0220 
00002e0: 006a 2400 2002 2001 1007 2002 0f0b 7c01 
00002f0: 057f 230b 4102 b7a2 240b 4114 410d 100c 
0000300: 2101 2001 4100 6a23 0bb6 3802 0020 0141 
0000310: 046a 418f ce00 b238 0200 2001 410c 6a21 
0000320: 0320 0341 006a 100e 4100 6a28 0200 3602 
0000330: 0041 0441 bb08 100c 2102 2002 4100 6a41 
0000340: b00a 3602 0020 0141 106a 2104 2004 4100 
0000350: 6a20 0241 006a 2802 0036 0200 2001 4108 
0000360: 6a41 e400 3602 0020 010f 0b1b 0101 7f41 
0000370: 0441 bb08 100c 2100 2000 4100 6a41 cd0a 
0000380: 3602 0020 000f 0b05 0023 0c0f 0b06 0041 
0000390: ee0a 0f0b 0600 41fd 0a0f 0b06 0041 b50b 
00003a0: 0f0b 0600 41c3 0b0f 0b06 0041 cd0b 0f0b 
00003b0: 0600 41ee 0b0f 0b06 0041 f90b 0f0b 0600 
00003c0: 419e 0c0f 0b06 0041 a60c 0f0b 0600 101a 
00003d0: 101b 0b62 0101 7f41 2441 f203 100c 2100 
00003e0: 2000 4114 6a41 ffff ffff 07b7 3903 0020 
00003f0: 0041 0c6a 410a b739 0300 2000 4100 6a41 
0000400: 0036 0200 2000 4104 6a41 e807 3602 0020 
0000410: 0041 086a 41e8 0736 0200 2000 411c 6a43 
0000420: 0000 c6c2 3802 0020 0041 206a 4100 3602 
0000430: 0020 0024 0c0b 1700 230c 4100 6a41 e20a 
0000440: 3602 0023 0c41 206a 100d 3602 000b 0b86 
0000450: 0d0f 0041 b00a 0b1d 6469 7265 6374 6c79 
0000460: 2063 7265 6174 6520 6120 7374 7275 6374 
0000470: 7572 7465 0000 41cd 0a0b 1574 6869 7320 
0000480: 6973 2061 2073 7472 7563 7475 7265 2100 
0000490: 0041 e20a 0b0c 7465 7374 206f 626a 6563 
00004a0: 7400 0041 ee0a 0b0f 6a73 5f6f 626a 6563 
00004b0: 7420 6465 6d6f 0000 41fd 0a0b 384a 6176 
00004c0: 6173 6372 6970 7420 6f62 6a65 6374 2067 
00004d0: 656e 6572 6174 6520 6672 6f6d 2056 422e 
00004e0: 4e45 5420 5765 6241 7373 656d 626c 7920 
00004f0: 6465 6d6f 0000 41b5 0b0b 0e76 616e 696c 
0000500: 6c61 7662 2e61 7070 0000 41c3 0b0b 0a6a 
0000510: 735f 6f62 6a65 6374 0000 41cd 0b0b 2143 
0000520: 6f70 7972 6967 6874 2028 6329 2076 616e 
0000530: 696c 6c61 7662 2e61 7070 2032 3031 3900 
0000540: 0041 ee0b 0b0b 646f 7476 616e 696c 6c61 
0000550: 0000 41f9 0b0b 2536 3262 3333 3839 642d 
0000560: 3531 3039 2d34 3734 302d 3963 3661 2d33 
0000570: 3562 6230 3232 3335 3562 3900 0041 9e0c 
0000580: 0b08 312e 302e 302e 3000 0041 a60c 0b08 
0000590: 312e 302e 302e 3000 0041 0d0b ed03 6579 
00005a0: 4a6a 6232 3174 5a57 3530 496a 7075 6457 
00005b0: 7873 4c43 4a74 5a57 3176 636e 6c51 6448 
00005c0: 4969 4f6e 7369 566d 4673 6457 5569 4f6a 
00005d0: 457a 6653 7769 5932 7868 6333 4d69 4f69 
00005e0: 4a6a 6158 4a6a 6247 5569 4c43 4a6a 6247 
00005f0: 467a 6331 3970 5a43 4936 4d54 4d73 496d 
0000600: 5a70 5a57 786b 6379 4936 6579 4a34 496a 
0000610: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
0000620: 7464 4c43 4a79 5958 6369 4f69 4a6d 4d7a 
0000630: 4969 4c43 4a30 6558 426c 496a 6f7a 6653 
0000640: 7769 6553 4936 6579 4a6e 5a57 356c 636d 
0000650: 6c6a 496a 7062 5853 7769 636d 4633 496a 
0000660: 6f69 5a6a 4d79 4969 7769 6448 6c77 5a53 
0000670: 4936 4d33 3073 496e 4969 4f6e 7369 5a32 
0000680: 5675 5a58 4a70 5979 4936 5731 3073 496e 
0000690: 4a68 6479 4936 496d 6b7a 4d69 4973 496e 
00006a0: 5235 6347 5569 4f6a 4639 4c43 4a7a 6448 
00006b0: 4a31 5933 5169 4f6e 7369 5a32 5675 5a58 
00006c0: 4a70 5979 4936 5731 3073 496e 4a68 6479 
00006d0: 4936 496c 7378 4d44 677a 5858 4e30 636e 
00006e0: 566a 6446 526c 6333 5169 4c43 4a30 6558 
00006f0: 426c 496a 6f78 4d48 3073 496e 4e30 636e 
0000700: 566a 6444 4969 4f6e 7369 5a32 5675 5a58 
0000710: 4a70 5979 4936 5731 3073 496e 4a68 6479 
0000720: 4936 496c 7378 4d44 677a 5858 4e30 636e 
0000730: 566a 6446 526c 6333 5169 4c43 4a30 6558 
0000740: 426c 496a 6f78 4d48 3139 4c43 4a70 6331 
0000750: 4e30 636e 566a 6443 4936 5a6d 4673 6332 
0000760: 5573 496d 316c 6447 6876 5a48 4d69 4f6e 
0000770: 7439 4c43 4a75 5957 316c 6333 4268 5932 
0000780: 5569 4f6d 3531 6247 7839 0000 41f2 030b 
0000790: c904 6579 4a6a 6232 3174 5a57 3530 496a 
00007a0: 7075 6457 7873 4c43 4a74 5a57 3176 636e 
00007b0: 6c51 6448 4969 4f6e 7369 566d 4673 6457 
00007c0: 5569 4f6a 5135 4f48 3073 496d 4e73 5958 
00007d0: 4e7a 496a 6f69 636d 566a 6447 4675 5a32 
00007e0: 786c 4969 7769 5932 7868 6333 4e66 6157 
00007f0: 5169 4f6a 5135 4f43 7769 5a6d 6c6c 6247 
0000800: 527a 496a 7037 496d 3568 6257 5569 4f6e 
0000810: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
0000820: 3073 496e 4a68 6479 4936 496e 4e30 636d 
0000830: 6c75 5a79 4973 496e 5235 6347 5569 4f6a 
0000840: 5639 4c43 4a6f 496a 7037 496d 646c 626d 
0000850: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000860: 6369 4f69 4a70 4d7a 4969 4c43 4a30 6558 
0000870: 426c 496a 6f78 6653 7769 6479 4936 6579 
0000880: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
0000890: 7769 636d 4633 496a 6f69 6154 4d79 4969 
00008a0: 7769 6448 6c77 5a53 4936 4d58 3073 496e 
00008b0: 6b69 4f6e 7369 5a32 5675 5a58 4a70 5979 
00008c0: 4936 5731 3073 496e 4a68 6479 4936 496d 
00008d0: 5932 4e43 4973 496e 5235 6347 5569 4f6a 
00008e0: 5239 4c43 4a34 496a 7037 496d 646c 626d 
00008f0: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000900: 6369 4f69 4a6d 4e6a 5169 4c43 4a30 6558 
0000910: 426c 496a 6f30 6653 7769 636d 466b 6158 
0000920: 567a 496a 7037 496d 646c 626d 5679 6157 
0000930: 4d69 4f6c 7464 4c43 4a79 5958 6369 4f69 
0000940: 4a6d 4d7a 4969 4c43 4a30 6558 426c 496a 
0000950: 6f7a 6653 7769 6157 3575 5a58 4969 4f6e 
0000960: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
0000970: 3073 496e 4a68 6479 4936 496c 7378 4d31 
0000980: 316a 6158 4a6a 6247 5569 4c43 4a30 6558 
0000990: 426c 496a 6f78 4d48 3139 4c43 4a70 6331 
00009a0: 4e30 636e 566a 6443 4936 5a6d 4673 6332 
00009b0: 5573 496d 316c 6447 6876 5a48 4d69 4f6e 
00009c0: 7439 4c43 4a75 5957 316c 6333 4268 5932 
00009d0: 5569 4f6d 3531 6247 7839 0000 41bb 080b 
00009e0: f501 6579 4a6a 6232 3174 5a57 3530 496a 
00009f0: 7075 6457 7873 4c43 4a74 5a57 3176 636e 
0000a00: 6c51 6448 4969 4f6e 7369 566d 4673 6457 
0000a10: 5569 4f6a 4577 4f44 4e39 4c43 4a6a 6247 
0000a20: 467a 6379 4936 496e 4e30 636e 566a 6446 
0000a30: 526c 6333 5169 4c43 4a6a 6247 467a 6331 
0000a40: 3970 5a43 4936 4d54 4134 4d79 7769 5a6d 
0000a50: 6c6c 6247 527a 496a 7037 496d 3568 6257 
0000a60: 5569 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000a70: 4936 5731 3073 496e 4a68 6479 4936 496e 
0000a80: 4e30 636d 6c75 5a79 4973 496e 5235 6347 
0000a90: 5569 4f6a 5639 6653 7769 6158 4e54 6448 
0000aa0: 4a31 5933 5169 4f6e 5279 6457 5573 496d 
0000ab0: 316c 6447 6876 5a48 4d69 4f6e 7439 4c43 
0000ac0: 4a75 5957 316c 6333 4268 5932 5569 4f6d 
0000ad0: 3531 6247 7839 00                       
