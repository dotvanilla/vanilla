0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 10                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
00000f1: 11                                        ; FIXUP section size
; section "Global" (6)
0000103: 06                                        ; section code
0000104: 00                                        ; section size (guess)
0000105: 0c                                        ; num globals
0000106: 7f                                        ; i32
0000107: 01                                        ; global mutability
0000108: 41                                        ; i32.const
0000109: c50b                                      ; i32 literal
000010b: 0b                                        ; end
000010c: 7c                                        ; f64
000010d: 01                                        ; global mutability
000010e: 44                                        ; f64.const
000010f: 6957 148b 0abf 0540                       ; f64 literal
0000117: 0b                                        ; end
0000118: 7c                                        ; f64
0000119: 01                                        ; global mutability
000011a: 44                                        ; f64.const
000011b: 182d 4454 fb21 0940                       ; f64 literal
0000123: 0b                                        ; end
0000124: 7f                                        ; i32
0000125: 01                                        ; global mutability
0000126: 41                                        ; i32.const
0000127: ffff ffff 07                              ; i32 literal
000012c: 0b                                        ; end
000012d: 7e                                        ; i64
000012e: 01                                        ; global mutability
000012f: 42                                        ; i64.const
0000130: ffff ffff ffff ffff ff00                  ; i64 literal
000013a: 0b                                        ; end
000013b: 7d                                        ; f32
000013c: 01                                        ; global mutability
000013d: 43                                        ; f32.const
000013e: ffff 7f7f                                 ; f32 literal
0000142: 0b                                        ; end
0000143: 7c                                        ; f64
0000144: 01                                        ; global mutability
0000145: 44                                        ; f64.const
0000146: ffff ffff ffff ef7f                       ; f64 literal
000014e: 0b                                        ; end
000014f: 7f                                        ; i32
0000150: 01                                        ; global mutability
0000151: 41                                        ; i32.const
0000152: 8080 8080 78                              ; i32 literal
0000157: 0b                                        ; end
0000158: 7e                                        ; i64
0000159: 01                                        ; global mutability
000015a: 42                                        ; i64.const
000015b: 8080 8080 8080 8080 807f                  ; i64 literal
0000165: 0b                                        ; end
0000166: 7d                                        ; f32
0000167: 01                                        ; global mutability
0000168: 43                                        ; f32.const
0000169: ffff 7fff                                 ; f32 literal
000016d: 0b                                        ; end
000016e: 7c                                        ; f64
000016f: 01                                        ; global mutability
0000170: 44                                        ; f64.const
0000171: ffff ffff ffff efff                       ; f64 literal
0000179: 0b                                        ; end
000017a: 7f                                        ; i32
000017b: 01                                        ; global mutability
000017c: 41                                        ; i32.const
000017d: 00                                        ; i32 literal
000017e: 0b                                        ; end
0000104: 7a                                        ; FIXUP section size
; section "Export" (7)
000017f: 07                                        ; section code
0000180: 00                                        ; section size (guess)
0000181: 0a                                        ; num exports
0000182: 11                                        ; string length
0000183: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
0000193: 74                                       t  ; export name
0000194: 00                                        ; export kind
0000195: 0f                                        ; export func index
0000196: 1a                                        ; string length
0000197: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001a7: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001b1: 00                                        ; export kind
00001b2: 10                                        ; export func index
00001b3: 20                                        ; string length
00001b4: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c4: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001d4: 00                                        ; export kind
00001d5: 11                                        ; export func index
00001d6: 1c                                        ; string length
00001d7: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e7: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00001f3: 00                                        ; export kind
00001f4: 12                                        ; export func index
00001f5: 1c                                        ; string length
00001f6: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000206: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000212: 00                                        ; export kind
0000213: 13                                        ; export func index
0000214: 1e                                        ; string length
0000215: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000225: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000233: 00                                        ; export kind
0000234: 14                                        ; export func index
0000235: 1e                                        ; string length
0000236: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000246: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000254: 00                                        ; export kind
0000255: 15                                        ; export func index
0000256: 11                                        ; string length
0000257: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000267: 64                                       d  ; export name
0000268: 00                                        ; export kind
0000269: 16                                        ; export func index
000026a: 1c                                        ; string length
000026b: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000027b: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000287: 00                                        ; export kind
0000288: 17                                        ; export func index
0000289: 20                                        ; string length
000028a: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000029a: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002aa: 00                                        ; export kind
00002ab: 18                                        ; export func index
; move data: [181, 2ac) -> [182, 2ad)
0000180: ab02                                      ; FIXUP section size
; section "Start" (8)
00002ad: 08                                        ; section code
00002ae: 00                                        ; section size (guess)
00002af: 19                                        ; start func index
00002ae: 01                                        ; FIXUP section size
; section "Code" (10)
00002b0: 0a                                        ; section code
00002b1: 00                                        ; section size (guess)
00002b2: 10                                        ; num functions
; function body 0
00002b3: 00                                        ; func body size (guess)
00002b4: 01                                        ; local decl count
00002b5: 01                                        ; local type count
00002b6: 7f                                        ; i32
00002b7: 23                                        ; global.get
00002b8: 00                                        ; global index
00002b9: 21                                        ; local.set
00002ba: 02                                        ; local index
00002bb: 20                                        ; local.get
00002bc: 02                                        ; local index
00002bd: 20                                        ; local.get
00002be: 00                                        ; local index
00002bf: 6a                                        ; i32.add
00002c0: 24                                        ; global.set
00002c1: 00                                        ; global index
00002c2: 20                                        ; local.get
00002c3: 02                                        ; local index
00002c4: 20                                        ; local.get
00002c5: 01                                        ; local index
00002c6: 10                                        ; call
00002c7: 07                                        ; function index
00002c8: 20                                        ; local.get
00002c9: 02                                        ; local index
00002ca: 0f                                        ; return
00002cb: 0b                                        ; end
00002b3: 18                                        ; FIXUP func body size
; function body 1
00002cc: 00                                        ; func body size (guess)
00002cd: 01                                        ; local decl count
00002ce: 02                                        ; local type count
00002cf: 7f                                        ; i32
00002d0: 41                                        ; i32.const
00002d1: 10                                        ; i32 literal
00002d2: 41                                        ; i32.const
00002d3: 0d                                        ; i32 literal
00002d4: 10                                        ; call
00002d5: 0c                                        ; function index
00002d6: 21                                        ; local.set
00002d7: 01                                        ; local index
00002d8: 20                                        ; local.get
00002d9: 01                                        ; local index
00002da: 41                                        ; i32.const
00002db: 00                                        ; i32 literal
00002dc: 6a                                        ; i32.add
00002dd: 41                                        ; i32.const
00002de: e400                                      ; i32 literal
00002e0: b2                                        ; f32.convert_i32_s
00002e1: 38                                        ; f32.store
00002e2: 02                                        ; alignment
00002e3: 00                                        ; store offset
00002e4: 20                                        ; local.get
00002e5: 01                                        ; local index
00002e6: 41                                        ; i32.const
00002e7: 04                                        ; i32 literal
00002e8: 6a                                        ; i32.add
00002e9: 41                                        ; i32.const
00002ea: 8fce 00                                   ; i32 literal
00002ed: b2                                        ; f32.convert_i32_s
00002ee: 38                                        ; f32.store
00002ef: 02                                        ; alignment
00002f0: 00                                        ; store offset
00002f1: 20                                        ; local.get
00002f2: 01                                        ; local index
00002f3: 41                                        ; i32.const
00002f4: 0c                                        ; i32 literal
00002f5: 6a                                        ; i32.add
00002f6: 10                                        ; call
00002f7: 0e                                        ; function index
00002f8: 36                                        ; i32.store
00002f9: 02                                        ; alignment
00002fa: 00                                        ; store offset
00002fb: 20                                        ; local.get
00002fc: 01                                        ; local index
00002fd: 41                                        ; i32.const
00002fe: 08                                        ; i32 literal
00002ff: 6a                                        ; i32.add
0000300: 41                                        ; i32.const
0000301: e400                                      ; i32 literal
0000303: 36                                        ; i32.store
0000304: 02                                        ; alignment
0000305: 00                                        ; store offset
0000306: 20                                        ; local.get
0000307: 01                                        ; local index
0000308: 0f                                        ; return
0000309: 0b                                        ; end
00002cc: 3d                                        ; FIXUP func body size
; function body 2
000030a: 00                                        ; func body size (guess)
000030b: 01                                        ; local decl count
000030c: 01                                        ; local type count
000030d: 7f                                        ; i32
000030e: 41                                        ; i32.const
000030f: 04                                        ; i32 literal
0000310: 41                                        ; i32.const
0000311: ef07                                      ; i32 literal
0000313: 10                                        ; call
0000314: 0c                                        ; function index
0000315: 21                                        ; local.set
0000316: 00                                        ; local index
0000317: 20                                        ; local.get
0000318: 00                                        ; local index
0000319: 41                                        ; i32.const
000031a: 00                                        ; i32 literal
000031b: 6a                                        ; i32.add
000031c: 41                                        ; i32.const
000031d: e409                                      ; i32 literal
000031f: 36                                        ; i32.store
0000320: 02                                        ; alignment
0000321: 00                                        ; store offset
0000322: 20                                        ; local.get
0000323: 00                                        ; local index
0000324: 0f                                        ; return
0000325: 0b                                        ; end
000030a: 1b                                        ; FIXUP func body size
; function body 3
0000326: 00                                        ; func body size (guess)
0000327: 00                                        ; local decl count
0000328: 23                                        ; global.get
0000329: 0b                                        ; global index
000032a: 0f                                        ; return
000032b: 0b                                        ; end
0000326: 05                                        ; FIXUP func body size
; function body 4
000032c: 00                                        ; func body size (guess)
000032d: 00                                        ; local decl count
000032e: 41                                        ; i32.const
000032f: 850a                                      ; i32 literal
0000331: 0f                                        ; return
0000332: 0b                                        ; end
000032c: 06                                        ; FIXUP func body size
; function body 5
0000333: 00                                        ; func body size (guess)
0000334: 00                                        ; local decl count
0000335: 41                                        ; i32.const
0000336: 940a                                      ; i32 literal
0000338: 0f                                        ; return
0000339: 0b                                        ; end
0000333: 06                                        ; FIXUP func body size
; function body 6
000033a: 00                                        ; func body size (guess)
000033b: 00                                        ; local decl count
000033c: 41                                        ; i32.const
000033d: cc0a                                      ; i32 literal
000033f: 0f                                        ; return
0000340: 0b                                        ; end
000033a: 06                                        ; FIXUP func body size
; function body 7
0000341: 00                                        ; func body size (guess)
0000342: 00                                        ; local decl count
0000343: 41                                        ; i32.const
0000344: da0a                                      ; i32 literal
0000346: 0f                                        ; return
0000347: 0b                                        ; end
0000341: 06                                        ; FIXUP func body size
; function body 8
0000348: 00                                        ; func body size (guess)
0000349: 00                                        ; local decl count
000034a: 41                                        ; i32.const
000034b: e40a                                      ; i32 literal
000034d: 0f                                        ; return
000034e: 0b                                        ; end
0000348: 06                                        ; FIXUP func body size
; function body 9
000034f: 00                                        ; func body size (guess)
0000350: 00                                        ; local decl count
0000351: 41                                        ; i32.const
0000352: 850b                                      ; i32 literal
0000354: 0f                                        ; return
0000355: 0b                                        ; end
000034f: 06                                        ; FIXUP func body size
; function body 10
0000356: 00                                        ; func body size (guess)
0000357: 00                                        ; local decl count
0000358: 41                                        ; i32.const
0000359: 900b                                      ; i32 literal
000035b: 0f                                        ; return
000035c: 0b                                        ; end
0000356: 06                                        ; FIXUP func body size
; function body 11
000035d: 00                                        ; func body size (guess)
000035e: 00                                        ; local decl count
000035f: 41                                        ; i32.const
0000360: b50b                                      ; i32 literal
0000362: 0f                                        ; return
0000363: 0b                                        ; end
000035d: 06                                        ; FIXUP func body size
; function body 12
0000364: 00                                        ; func body size (guess)
0000365: 00                                        ; local decl count
0000366: 41                                        ; i32.const
0000367: bd0b                                      ; i32 literal
0000369: 0f                                        ; return
000036a: 0b                                        ; end
0000364: 06                                        ; FIXUP func body size
; function body 13
000036b: 00                                        ; func body size (guess)
000036c: 00                                        ; local decl count
000036d: 10                                        ; call
000036e: 1a                                        ; function index
000036f: 10                                        ; call
0000370: 1b                                        ; function index
0000371: 0b                                        ; end
000036b: 06                                        ; FIXUP func body size
; function body 14
0000372: 00                                        ; func body size (guess)
0000373: 01                                        ; local decl count
0000374: 01                                        ; local type count
0000375: 7f                                        ; i32
0000376: 41                                        ; i32.const
0000377: 24                                        ; i32 literal
0000378: 41                                        ; i32.const
0000379: a603                                      ; i32 literal
000037b: 10                                        ; call
000037c: 0c                                        ; function index
000037d: 21                                        ; local.set
000037e: 00                                        ; local index
000037f: 20                                        ; local.get
0000380: 00                                        ; local index
0000381: 41                                        ; i32.const
0000382: 10                                        ; i32 literal
0000383: 6a                                        ; i32.add
0000384: 41                                        ; i32.const
0000385: ffff ffff 07                              ; i32 literal
000038a: b7                                        ; f64.convert_i32_s
000038b: 39                                        ; f64.store
000038c: 03                                        ; alignment
000038d: 00                                        ; store offset
000038e: 20                                        ; local.get
000038f: 00                                        ; local index
0000390: 41                                        ; i32.const
0000391: 08                                        ; i32 literal
0000392: 6a                                        ; i32.add
0000393: 41                                        ; i32.const
0000394: 0a                                        ; i32 literal
0000395: b7                                        ; f64.convert_i32_s
0000396: 39                                        ; f64.store
0000397: 03                                        ; alignment
0000398: 00                                        ; store offset
0000399: 20                                        ; local.get
000039a: 00                                        ; local index
000039b: 41                                        ; i32.const
000039c: 00                                        ; i32 literal
000039d: 6a                                        ; i32.add
000039e: 41                                        ; i32.const
000039f: e807                                      ; i32 literal
00003a1: 36                                        ; i32.store
00003a2: 02                                        ; alignment
00003a3: 00                                        ; store offset
00003a4: 20                                        ; local.get
00003a5: 00                                        ; local index
00003a6: 41                                        ; i32.const
00003a7: 04                                        ; i32 literal
00003a8: 6a                                        ; i32.add
00003a9: 41                                        ; i32.const
00003aa: e807                                      ; i32 literal
00003ac: 36                                        ; i32.store
00003ad: 02                                        ; alignment
00003ae: 00                                        ; store offset
00003af: 20                                        ; local.get
00003b0: 00                                        ; local index
00003b1: 41                                        ; i32.const
00003b2: 18                                        ; i32 literal
00003b3: 6a                                        ; i32.add
00003b4: 41                                        ; i32.const
00003b5: 00                                        ; i32 literal
00003b6: 36                                        ; i32.store
00003b7: 02                                        ; alignment
00003b8: 00                                        ; store offset
00003b9: 20                                        ; local.get
00003ba: 00                                        ; local index
00003bb: 41                                        ; i32.const
00003bc: 1c                                        ; i32 literal
00003bd: 6a                                        ; i32.add
00003be: 43                                        ; f32.const
00003bf: 0000 c6c2                                 ; f32 literal
00003c3: 38                                        ; f32.store
00003c4: 02                                        ; alignment
00003c5: 00                                        ; store offset
00003c6: 20                                        ; local.get
00003c7: 00                                        ; local index
00003c8: 41                                        ; i32.const
00003c9: 20                                        ; i32 literal
00003ca: 6a                                        ; i32.add
00003cb: 41                                        ; i32.const
00003cc: 00                                        ; i32 literal
00003cd: 36                                        ; i32.store
00003ce: 02                                        ; alignment
00003cf: 00                                        ; store offset
00003d0: 20                                        ; local.get
00003d1: 00                                        ; local index
00003d2: 24                                        ; global.set
00003d3: 0b                                        ; global index
00003d4: 0b                                        ; end
0000372: 62                                        ; FIXUP func body size
; function body 15
00003d5: 00                                        ; func body size (guess)
00003d6: 00                                        ; local decl count
00003d7: 23                                        ; global.get
00003d8: 0b                                        ; global index
00003d9: 41                                        ; i32.const
00003da: 18                                        ; i32 literal
00003db: 6a                                        ; i32.add
00003dc: 41                                        ; i32.const
00003dd: f909                                      ; i32 literal
00003df: 36                                        ; i32.store
00003e0: 02                                        ; alignment
00003e1: 00                                        ; store offset
00003e2: 23                                        ; global.get
00003e3: 0b                                        ; global index
00003e4: 41                                        ; i32.const
00003e5: 20                                        ; i32 literal
00003e6: 6a                                        ; i32.add
00003e7: 10                                        ; call
00003e8: 0d                                        ; function index
00003e9: 36                                        ; i32.store
00003ea: 02                                        ; alignment
00003eb: 00                                        ; store offset
00003ec: 0b                                        ; end
00003d5: 17                                        ; FIXUP func body size
; move data: [2b2, 3ed) -> [2b3, 3ee)
00002b1: bb02                                      ; FIXUP section size
; section "Data" (11)
00003ee: 0b                                        ; section code
00003ef: 00                                        ; section size (guess)
00003f0: 0e                                        ; num data segments
; data segment header 0
00003f1: 00                                      
00003f2: 41                                        ; i32.const
00003f3: e409                                      ; i32 literal
00003f5: 0b                                        ; end
00003f6: 15                                        ; data segment size
; data segment data 0
00003f7: 7468 6973 2069 7320 6120 7374 7275 6374 
0000407: 7572 6521 00                              ; data segment data
; data segment header 1
000040c: 00                                      
000040d: 41                                        ; i32.const
000040e: f909                                      ; i32 literal
0000410: 0b                                        ; end
0000411: 0c                                        ; data segment size
; data segment data 1
0000412: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 2
000041e: 00                                      
000041f: 41                                        ; i32.const
0000420: 850a                                      ; i32 literal
0000422: 0b                                        ; end
0000423: 0f                                        ; data segment size
; data segment data 2
0000424: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 3
0000433: 00                                      
0000434: 41                                        ; i32.const
0000435: 940a                                      ; i32 literal
0000437: 0b                                        ; end
0000438: 38                                        ; data segment size
; data segment data 3
0000439: 4a61 7661 7363 7269 7074 206f 626a 6563 
0000449: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000459: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000469: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 4
0000471: 00                                      
0000472: 41                                        ; i32.const
0000473: cc0a                                      ; i32 literal
0000475: 0b                                        ; end
0000476: 0e                                        ; data segment size
; data segment data 4
0000477: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 5
0000485: 00                                      
0000486: 41                                        ; i32.const
0000487: da0a                                      ; i32 literal
0000489: 0b                                        ; end
000048a: 0a                                        ; data segment size
; data segment data 5
000048b: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 6
0000495: 00                                      
0000496: 41                                        ; i32.const
0000497: e40a                                      ; i32 literal
0000499: 0b                                        ; end
000049a: 21                                        ; data segment size
; data segment data 6
000049b: 436f 7079 7269 6768 7420 2863 2920 7661 
00004ab: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
00004bb: 00                                        ; data segment data
; data segment header 7
00004bc: 00                                      
00004bd: 41                                        ; i32.const
00004be: 850b                                      ; i32 literal
00004c0: 0b                                        ; end
00004c1: 0b                                        ; data segment size
; data segment data 7
00004c2: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 8
00004cd: 00                                      
00004ce: 41                                        ; i32.const
00004cf: 900b                                      ; i32 literal
00004d1: 0b                                        ; end
00004d2: 25                                        ; data segment size
; data segment data 8
00004d3: 3632 6233 3338 3964 2d35 3130 392d 3437 
00004e3: 3430 2d39 6336 612d 3335 6262 3032 3233 
00004f3: 3535 6239 00                              ; data segment data
; data segment header 9
00004f8: 00                                      
00004f9: 41                                        ; i32.const
00004fa: b50b                                      ; i32 literal
00004fc: 0b                                        ; end
00004fd: 08                                        ; data segment size
; data segment data 9
00004fe: 312e 302e 302e 3000                       ; data segment data
; data segment header 10
0000506: 00                                      
0000507: 41                                        ; i32.const
0000508: bd0b                                      ; i32 literal
000050a: 0b                                        ; end
000050b: 08                                        ; data segment size
; data segment data 10
000050c: 312e 302e 302e 3000                       ; data segment data
; data segment header 11
0000514: 00                                      
0000515: 41                                        ; i32.const
0000516: 0d                                        ; i32 literal
0000517: 0b                                        ; end
0000518: 9d03                                      ; data segment size
; data segment data 11
000051a: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000052a: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000053a: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000054a: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
000055a: 4f69 4a6a 6158 4a6a 6247 5569 4c43 4a6a 
000056a: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
000057a: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
000058a: 496a 7037 496d 646c 626d 5679 6157 4d69 
000059a: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
00005aa: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
00005ba: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
00005ca: 636d 6c6a 496a 7062 5853 7769 636d 4633 
00005da: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
00005ea: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
00005fa: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
000060a: 496e 4a68 6479 4936 496d 6b7a 4d69 4973 
000061a: 496e 5235 6347 5569 4f6a 4639 4c43 4a7a 
000062a: 6448 4a31 5933 5169 4f6e 7369 5a32 5675 
000063a: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
000064a: 6479 4936 496c 7378 4d44 4133 5858 4e30 
000065a: 636e 566a 6446 526c 6333 5169 4c43 4a30 
000066a: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
000067a: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
000068a: 6332 5573 496d 316c 6447 6876 5a48 4d69 
000069a: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00006aa: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 12
00006b7: 00                                      
00006b8: 41                                        ; i32.const
00006b9: a603                                      ; i32 literal
00006bb: 0b                                        ; end
00006bc: c904                                      ; data segment size
; data segment data 12
00006be: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00006ce: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00006de: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00006ee: 4f6a 5179 4d6e 3073 496d 4e73 5958 4e7a 
00006fe: 496a 6f69 636d 566a 6447 4675 5a32 786c 
000070e: 4969 7769 5932 7868 6333 4e66 6157 5169 
000071e: 4f6a 5179 4d69 7769 5a6d 6c6c 6247 527a 
000072e: 496a 7037 496d 6769 4f6e 7369 5a32 5675 
000073e: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
000074e: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
000075e: 6347 5569 4f6a 4639 4c43 4a33 496a 7037 
000076e: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
000077e: 4c43 4a79 5958 6369 4f69 4a70 4d7a 4969 
000078e: 4c43 4a30 6558 426c 496a 6f78 6653 7769 
000079e: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
00007ae: 496a 7062 5853 7769 636d 4633 496a 6f69 
00007be: 5a6a 5930 4969 7769 6448 6c77 5a53 4936 
00007ce: 4e48 3073 496e 6769 4f6e 7369 5a32 5675 
00007de: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
00007ee: 6479 4936 496d 5932 4e43 4973 496e 5235 
00007fe: 6347 5569 4f6a 5239 4c43 4a75 5957 316c 
000080e: 496a 7037 496d 646c 626d 5679 6157 4d69 
000081e: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a7a 
000082e: 6448 4a70 626d 6369 4c43 4a30 6558 426c 
000083e: 496a 6f31 6653 7769 636d 466b 6158 567a 
000084e: 496a 7037 496d 646c 626d 5679 6157 4d69 
000085e: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
000086e: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
000087e: 6653 7769 6157 3575 5a58 4969 4f6e 7369 
000088e: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
000089e: 496e 4a68 6479 4936 496c 7378 4d31 316a 
00008ae: 6158 4a6a 6247 5569 4c43 4a30 6558 426c 
00008be: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
00008ce: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00008de: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00008ee: 4c43 4a75 5957 316c 6333 4268 5932 5569 
00008fe: 4f6d 3531 6247 7839 00                    ; data segment data
; data segment header 13
0000907: 00                                      
0000908: 41                                        ; i32.const
0000909: ef07                                      ; i32 literal
000090b: 0b                                        ; end
000090c: f501                                      ; data segment size
; data segment data 13
000090e: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000091e: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000092e: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000093e: 4f6a 4577 4d44 6439 4c43 4a6a 6247 467a 
000094e: 6379 4936 496e 4e30 636e 566a 6446 526c 
000095e: 6333 5169 4c43 4a6a 6247 467a 6331 3970 
000096e: 5a43 4936 4d54 4177 4e79 7769 5a6d 6c6c 
000097e: 6247 527a 496a 7037 496d 3568 6257 5569 
000098e: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
000099e: 5731 3073 496e 4a68 6479 4936 496e 4e30 
00009ae: 636d 6c75 5a79 4973 496e 5235 6347 5569 
00009be: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
00009ce: 5933 5169 4f6e 5279 6457 5573 496d 316c 
00009de: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
00009ee: 5957 316c 6333 4268 5932 5569 4f6d 3531 
00009fe: 6247 7839 00                              ; data segment data
; move data: [3f0, a03) -> [3f1, a04)
00003ef: 930c                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0311 1005 0707 0707 0707 0707 0707 0707 
0000100: 0808 0806 7a0c 7f01 41c5 0b0b 7c01 4469 
0000110: 5714 8b0a bf05 400b 7c01 4418 2d44 54fb 
0000120: 2109 400b 7f01 41ff ffff ff07 0b7e 0142 
0000130: ffff ffff ffff ffff ff00 0b7d 0143 ffff 
0000140: 7f7f 0b7c 0144 ffff ffff ffff ef7f 0b7f 
0000150: 0141 8080 8080 780b 7e01 4280 8080 8080 
0000160: 8080 8080 7f0b 7d01 43ff ff7f ff0b 7c01 
0000170: 44ff ffff ffff ffef ff0b 7f01 4100 0b07 
0000180: ab02 0a11 4d6f 6475 6c65 312e 6765 744f 
0000190: 626a 6563 7400 0f1a 4173 7365 6d62 6c79 
00001a0: 496e 666f 2e41 7373 656d 626c 7954 6974 
00001b0: 6c65 0010 2041 7373 656d 626c 7949 6e66 
00001c0: 6f2e 4173 7365 6d62 6c79 4465 7363 7269 
00001d0: 7074 696f 6e00 111c 4173 7365 6d62 6c79 
00001e0: 496e 666f 2e41 7373 656d 626c 7943 6f6d 
00001f0: 7061 6e79 0012 1c41 7373 656d 626c 7949 
0000200: 6e66 6f2e 4173 7365 6d62 6c79 5072 6f64 
0000210: 7563 7400 131e 4173 7365 6d62 6c79 496e 
0000220: 666f 2e41 7373 656d 626c 7943 6f70 7972 
0000230: 6967 6874 0014 1e41 7373 656d 626c 7949 
0000240: 6e66 6f2e 4173 7365 6d62 6c79 5472 6164 
0000250: 656d 6172 6b00 1511 4173 7365 6d62 6c79 
0000260: 496e 666f 2e47 7569 6400 161c 4173 7365 
0000270: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
0000280: 7956 6572 7369 6f6e 0017 2041 7373 656d 
0000290: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
00002a0: 4669 6c65 5665 7273 696f 6e00 1808 0119 
00002b0: 0abb 0210 1801 017f 2300 2102 2002 2000 
00002c0: 6a24 0020 0220 0110 0720 020f 0b3d 0102 
00002d0: 7f41 1041 0d10 0c21 0120 0141 006a 41e4 
00002e0: 00b2 3802 0020 0141 046a 418f ce00 b238 
00002f0: 0200 2001 410c 6a10 0e36 0200 2001 4108 
0000300: 6a41 e400 3602 0020 010f 0b1b 0101 7f41 
0000310: 0441 ef07 100c 2100 2000 4100 6a41 e409 
0000320: 3602 0020 000f 0b05 0023 0b0f 0b06 0041 
0000330: 850a 0f0b 0600 4194 0a0f 0b06 0041 cc0a 
0000340: 0f0b 0600 41da 0a0f 0b06 0041 e40a 0f0b 
0000350: 0600 4185 0b0f 0b06 0041 900b 0f0b 0600 
0000360: 41b5 0b0f 0b06 0041 bd0b 0f0b 0600 101a 
0000370: 101b 0b62 0101 7f41 2441 a603 100c 2100 
0000380: 2000 4110 6a41 ffff ffff 07b7 3903 0020 
0000390: 0041 086a 410a b739 0300 2000 4100 6a41 
00003a0: e807 3602 0020 0041 046a 41e8 0736 0200 
00003b0: 2000 4118 6a41 0036 0200 2000 411c 6a43 
00003c0: 0000 c6c2 3802 0020 0041 206a 4100 3602 
00003d0: 0020 0024 0b0b 1700 230b 4118 6a41 f909 
00003e0: 3602 0023 0b41 206a 100d 3602 000b 0b93 
00003f0: 0c0e 0041 e409 0b15 7468 6973 2069 7320 
0000400: 6120 7374 7275 6374 7572 6521 0000 41f9 
0000410: 090b 0c74 6573 7420 6f62 6a65 6374 0000 
0000420: 4185 0a0b 0f6a 735f 6f62 6a65 6374 2064 
0000430: 656d 6f00 0041 940a 0b38 4a61 7661 7363 
0000440: 7269 7074 206f 626a 6563 7420 6765 6e65 
0000450: 7261 7465 2066 726f 6d20 5642 2e4e 4554 
0000460: 2057 6562 4173 7365 6d62 6c79 2064 656d 
0000470: 6f00 0041 cc0a 0b0e 7661 6e69 6c6c 6176 
0000480: 622e 6170 7000 0041 da0a 0b0a 6a73 5f6f 
0000490: 626a 6563 7400 0041 e40a 0b21 436f 7079 
00004a0: 7269 6768 7420 2863 2920 7661 6e69 6c6c 
00004b0: 6176 622e 6170 7020 3230 3139 0000 4185 
00004c0: 0b0b 0b64 6f74 7661 6e69 6c6c 6100 0041 
00004d0: 900b 0b25 3632 6233 3338 3964 2d35 3130 
00004e0: 392d 3437 3430 2d39 6336 612d 3335 6262 
00004f0: 3032 3233 3535 6239 0000 41b5 0b0b 0831 
0000500: 2e30 2e30 2e30 0000 41bd 0b0b 0831 2e30 
0000510: 2e30 2e30 0000 410d 0b9d 0365 794a 6a62 
0000520: 3231 745a 5735 3049 6a70 7564 5778 734c 
0000530: 434a 745a 5731 7663 6e6c 5164 4849 694f 
0000540: 6e73 6956 6d46 7364 5755 694f 6a45 7a66 
0000550: 5377 6959 3278 6863 334d 694f 694a 6a61 
0000560: 584a 6a62 4755 694c 434a 6a62 4746 7a63 
0000570: 3139 705a 4349 364d 544d 7349 6d5a 705a 
0000580: 5778 6b63 7949 3665 794a 3449 6a70 3749 
0000590: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
00005a0: 434a 7959 5863 694f 694a 6d4d 7a49 694c 
00005b0: 434a 3065 5842 6c49 6a6f 7a66 5377 6965 
00005c0: 5349 3665 794a 6e5a 5735 6c63 6d6c 6a49 
00005d0: 6a70 6258 5377 6963 6d46 3349 6a6f 695a 
00005e0: 6a4d 7949 6977 6964 486c 775a 5349 364d 
00005f0: 3330 7349 6e49 694f 6e73 695a 3256 755a 
0000600: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000610: 7949 3649 6d6b 7a4d 6949 7349 6e52 3563 
0000620: 4755 694f 6a46 394c 434a 7a64 484a 3159 
0000630: 3351 694f 6e73 695a 3256 755a 584a 7059 
0000640: 7949 3657 3130 7349 6e4a 6864 7949 3649 
0000650: 6c73 784d 4441 3358 584e 3063 6e56 6a64 
0000660: 4652 6c63 3351 694c 434a 3065 5842 6c49 
0000670: 6a6f 784d 4831 394c 434a 7063 314e 3063 
0000680: 6e56 6a64 4349 365a 6d46 7363 3255 7349 
0000690: 6d31 6c64 4768 765a 484d 694f 6e74 394c 
00006a0: 434a 7559 5731 6c63 3342 6859 3255 694f 
00006b0: 6d35 3162 4778 3900 0041 a603 0bc9 0465 
00006c0: 794a 6a62 3231 745a 5735 3049 6a70 7564 
00006d0: 5778 734c 434a 745a 5731 7663 6e6c 5164 
00006e0: 4849 694f 6e73 6956 6d46 7364 5755 694f 
00006f0: 6a51 794d 6e30 7349 6d4e 7359 584e 7a49 
0000700: 6a6f 6963 6d56 6a64 4746 755a 3278 6c49 
0000710: 6977 6959 3278 6863 334e 6661 5751 694f 
0000720: 6a51 794d 6977 695a 6d6c 6c62 4752 7a49 
0000730: 6a70 3749 6d67 694f 6e73 695a 3256 755a 
0000740: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000750: 7949 3649 6d6b 7a4d 6949 7349 6e52 3563 
0000760: 4755 694f 6a46 394c 434a 3349 6a70 3749 
0000770: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
0000780: 434a 7959 5863 694f 694a 704d 7a49 694c 
0000790: 434a 3065 5842 6c49 6a6f 7866 5377 6965 
00007a0: 5349 3665 794a 6e5a 5735 6c63 6d6c 6a49 
00007b0: 6a70 6258 5377 6963 6d46 3349 6a6f 695a 
00007c0: 6a59 3049 6977 6964 486c 775a 5349 364e 
00007d0: 4830 7349 6e67 694f 6e73 695a 3256 755a 
00007e0: 584a 7059 7949 3657 3130 7349 6e4a 6864 
00007f0: 7949 3649 6d59 324e 4349 7349 6e52 3563 
0000800: 4755 694f 6a52 394c 434a 7559 5731 6c49 
0000810: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000820: 6c74 644c 434a 7959 5863 694f 694a 7a64 
0000830: 484a 7062 6d63 694c 434a 3065 5842 6c49 
0000840: 6a6f 3166 5377 6963 6d46 6b61 5856 7a49 
0000850: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000860: 6c74 644c 434a 7959 5863 694f 694a 6d4d 
0000870: 7a49 694c 434a 3065 5842 6c49 6a6f 7a66 
0000880: 5377 6961 5735 755a 5849 694f 6e73 695a 
0000890: 3256 755a 584a 7059 7949 3657 3130 7349 
00008a0: 6e4a 6864 7949 3649 6c73 784d 3131 6a61 
00008b0: 584a 6a62 4755 694c 434a 3065 5842 6c49 
00008c0: 6a6f 784d 4831 394c 434a 7063 314e 3063 
00008d0: 6e56 6a64 4349 365a 6d46 7363 3255 7349 
00008e0: 6d31 6c64 4768 765a 484d 694f 6e74 394c 
00008f0: 434a 7559 5731 6c63 3342 6859 3255 694f 
0000900: 6d35 3162 4778 3900 0041 ef07 0bf5 0165 
0000910: 794a 6a62 3231 745a 5735 3049 6a70 7564 
0000920: 5778 734c 434a 745a 5731 7663 6e6c 5164 
0000930: 4849 694f 6e73 6956 6d46 7364 5755 694f 
0000940: 6a45 774d 4464 394c 434a 6a62 4746 7a63 
0000950: 7949 3649 6e4e 3063 6e56 6a64 4652 6c63 
0000960: 3351 694c 434a 6a62 4746 7a63 3139 705a 
0000970: 4349 364d 5441 774e 7977 695a 6d6c 6c62 
0000980: 4752 7a49 6a70 3749 6d35 6862 5755 694f 
0000990: 6e73 695a 3256 755a 584a 7059 7949 3657 
00009a0: 3130 7349 6e4a 6864 7949 3649 6e4e 3063 
00009b0: 6d6c 755a 7949 7349 6e52 3563 4755 694f 
00009c0: 6a56 3966 5377 6961 584e 5464 484a 3159 
00009d0: 3351 694f 6e52 7964 5755 7349 6d31 6c64 
00009e0: 4768 765a 484d 694f 6e74 394c 434a 7559 
00009f0: 5731 6c63 3342 6859 3255 694f 6d35 3162 
0000a00: 4778 3900                               
