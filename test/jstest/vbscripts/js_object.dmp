0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0a                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 01                                        ; num params
0000033: 7f                                        ; i32
0000034: 00                                        ; num results
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 00                                        ; num params
000003b: 00                                        ; num results
0000009: 32                                        ; FIXUP section size
; section "Import" (2)
000003c: 02                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 10                                        ; num imports
; import header 0
000003f: 04                                        ; string length
0000040: 4d61 7468                                Math  ; import module name
0000044: 03                                        ; string length
0000045: 706f 77                                  pow  ; import field name
0000048: 00                                        ; import kind
0000049: 00                                        ; import signature index
; import header 1
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 04                                        ; string length
0000050: 7371 7274                                sqrt  ; import field name
0000054: 00                                        ; import kind
0000055: 01                                        ; import signature index
; import header 2
0000056: 04                                        ; string length
0000057: 4d61 7468                                Math  ; import module name
000005b: 03                                        ; string length
000005c: 6578 70                                  exp  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 3
0000061: 04                                        ; string length
0000062: 4d61 7468                                Math  ; import module name
0000066: 03                                        ; string length
0000067: 636f 73                                  cos  ; import field name
000006a: 00                                        ; import kind
000006b: 01                                        ; import signature index
; import header 4
000006c: 04                                        ; string length
000006d: 4d61 7468                                Math  ; import module name
0000071: 06                                        ; string length
0000072: 7261 6e64 6f6d                           random  ; import field name
0000078: 00                                        ; import kind
0000079: 02                                        ; import signature index
; import header 5
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 04                                        ; string length
0000080: 6365 696c                                ceil  ; import field name
0000084: 00                                        ; import kind
0000085: 01                                        ; import signature index
; import header 6
0000086: 04                                        ; string length
0000087: 4d61 7468                                Math  ; import module name
000008b: 05                                        ; string length
000008c: 666c 6f6f 72                             floor  ; import field name
0000091: 00                                        ; import kind
0000092: 01                                        ; import signature index
; import header 7
0000093: 02                                        ; string length
0000094: 4743                                     GC  ; import module name
0000096: 09                                        ; string length
0000097: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a0: 00                                        ; import kind
00000a1: 03                                        ; import signature index
; import header 8
00000a2: 06                                        ; string length
00000a3: 7374 7269 6e67                           string  ; import module name
00000a9: 07                                        ; string length
00000aa: 7265 706c 6163 65                        replace  ; import field name
00000b1: 00                                        ; import kind
00000b2: 04                                        ; import signature index
; import header 9
00000b3: 06                                        ; string length
00000b4: 7374 7269 6e67                           string  ; import module name
00000ba: 03                                        ; string length
00000bb: 6164 64                                  add  ; import field name
00000be: 00                                        ; import kind
00000bf: 05                                        ; import signature index
; import header 10
00000c0: 06                                        ; string length
00000c1: 7374 7269 6e67                           string  ; import module name
00000c7: 06                                        ; string length
00000c8: 6c65 6e67 7468                           length  ; import field name
00000ce: 00                                        ; import kind
00000cf: 06                                        ; import signature index
; import header 11
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 07                                        ; string length
00000d8: 696e 6465 784f 66                        indexOf  ; import field name
00000df: 00                                        ; import kind
00000e0: 05                                        ; import signature index
; import header 12
00000e1: 07                                        ; string length
00000e2: 636f 6e73 6f6c 65                        console  ; import module name
00000e9: 03                                        ; string length
00000ea: 6c6f 67                                  log  ; import field name
00000ed: 00                                        ; import kind
00000ee: 07                                        ; import signature index
; import header 13
00000ef: 07                                        ; string length
00000f0: 636f 6e73 6f6c 65                        console  ; import module name
00000f7: 03                                        ; string length
00000f8: 6c6f 67                                  log  ; import field name
00000fb: 00                                        ; import kind
00000fc: 07                                        ; import signature index
; import header 14
00000fd: 06                                        ; string length
00000fe: 7374 7269 6e67                           string  ; import module name
0000104: 08                                        ; string length
0000105: 746f 5374 7269 6e67                      toString  ; import field name
000010d: 00                                        ; import kind
000010e: 06                                        ; import signature index
; import header 15
000010f: 03                                        ; string length
0000110: 656e 76                                  env  ; import module name
0000113: 0a                                        ; string length
0000114: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011e: 02                                        ; import kind
000011f: 00                                        ; limits: flags
0000120: 01                                        ; limits: initial
; move data: [3e, 121) -> [3f, 122)
000003d: e301                                      ; FIXUP section size
; section "Function" (3)
0000122: 03                                        ; section code
0000123: 00                                        ; section size (guess)
0000124: 16                                        ; num functions
0000125: 05                                        ; function 0 signature index
0000126: 08                                        ; function 1 signature index
0000127: 08                                        ; function 2 signature index
0000128: 08                                        ; function 3 signature index
0000129: 08                                        ; function 4 signature index
000012a: 08                                        ; function 5 signature index
000012b: 08                                        ; function 6 signature index
000012c: 08                                        ; function 7 signature index
000012d: 08                                        ; function 8 signature index
000012e: 08                                        ; function 9 signature index
000012f: 08                                        ; function 10 signature index
0000130: 08                                        ; function 11 signature index
0000131: 08                                        ; function 12 signature index
0000132: 08                                        ; function 13 signature index
0000133: 08                                        ; function 14 signature index
0000134: 08                                        ; function 15 signature index
0000135: 08                                        ; function 16 signature index
0000136: 09                                        ; function 17 signature index
0000137: 09                                        ; function 18 signature index
0000138: 09                                        ; function 19 signature index
0000139: 09                                        ; function 20 signature index
000013a: 09                                        ; function 21 signature index
0000123: 17                                        ; FIXUP section size
; section "Global" (6)
000013b: 06                                        ; section code
000013c: 00                                        ; section size (guess)
000013d: 0f                                        ; num globals
000013e: 7f                                        ; i32
000013f: 01                                        ; global mutability
0000140: 41                                        ; i32.const
0000141: b00e                                      ; i32 literal
0000143: 0b                                        ; end
0000144: 7c                                        ; f64
0000145: 01                                        ; global mutability
0000146: 44                                        ; f64.const
0000147: 6957 148b 0abf 0540                       ; f64 literal
000014f: 0b                                        ; end
0000150: 7c                                        ; f64
0000151: 01                                        ; global mutability
0000152: 44                                        ; f64.const
0000153: 182d 4454 fb21 0940                       ; f64 literal
000015b: 0b                                        ; end
000015c: 7f                                        ; i32
000015d: 01                                        ; global mutability
000015e: 41                                        ; i32.const
000015f: ffff ffff 07                              ; i32 literal
0000164: 0b                                        ; end
0000165: 7e                                        ; i64
0000166: 01                                        ; global mutability
0000167: 42                                        ; i64.const
0000168: ffff ffff ffff ffff ff00                  ; i64 literal
0000172: 0b                                        ; end
0000173: 7d                                        ; f32
0000174: 01                                        ; global mutability
0000175: 43                                        ; f32.const
0000176: ffff 7f7f                                 ; f32 literal
000017a: 0b                                        ; end
000017b: 7c                                        ; f64
000017c: 01                                        ; global mutability
000017d: 44                                        ; f64.const
000017e: ffff ffff ffff ef7f                       ; f64 literal
0000186: 0b                                        ; end
0000187: 7f                                        ; i32
0000188: 01                                        ; global mutability
0000189: 41                                        ; i32.const
000018a: 8080 8080 78                              ; i32 literal
000018f: 0b                                        ; end
0000190: 7e                                        ; i64
0000191: 01                                        ; global mutability
0000192: 42                                        ; i64.const
0000193: 8080 8080 8080 8080 807f                  ; i64 literal
000019d: 0b                                        ; end
000019e: 7d                                        ; f32
000019f: 01                                        ; global mutability
00001a0: 43                                        ; f32.const
00001a1: ffff 7fff                                 ; f32 literal
00001a5: 0b                                        ; end
00001a6: 7c                                        ; f64
00001a7: 01                                        ; global mutability
00001a8: 44                                        ; f64.const
00001a9: ffff ffff ffff efff                       ; f64 literal
00001b1: 0b                                        ; end
00001b2: 7c                                        ; f64
00001b3: 01                                        ; global mutability
00001b4: 44                                        ; f64.const
00001b5: 0000 0000 0040 8f40                       ; f64 literal
00001bd: 0b                                        ; end
00001be: 7f                                        ; i32
00001bf: 01                                        ; global mutability
00001c0: 41                                        ; i32.const
00001c1: 00                                        ; i32 literal
00001c2: 0b                                        ; end
00001c3: 7f                                        ; i32
00001c4: 01                                        ; global mutability
00001c5: 41                                        ; i32.const
00001c6: 00                                        ; i32 literal
00001c7: 0b                                        ; end
00001c8: 7f                                        ; i32
00001c9: 01                                        ; global mutability
00001ca: 41                                        ; i32.const
00001cb: f808                                      ; i32 literal
00001cd: 0b                                        ; end
; move data: [13d, 1ce) -> [13e, 1cf)
000013c: 9101                                      ; FIXUP section size
; section "Export" (7)
00001cf: 07                                        ; section code
00001d0: 00                                        ; section size (guess)
00001d1: 0f                                        ; num exports
00001d2: 14                                        ; string length
00001d3: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001e3: 5369 7a65                                Size  ; export name
00001e7: 00                                        ; export kind
00001e8: 10                                        ; export func index
00001e9: 12                                        ; string length
00001ea: 6f62 6a65 6374 4743 2e6e 6577 4369 7263  objectGC.newCirc
00001fa: 6c65                                     le  ; export name
00001fc: 00                                        ; export kind
00001fd: 11                                        ; export func index
00001fe: 12                                        ; string length
00001ff: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65  objectGC.getObje
000020f: 6374                                     ct  ; export name
0000211: 00                                        ; export kind
0000212: 13                                        ; export func index
0000213: 18                                        ; string length
0000214: 6e75 6d62 6572 4172 7261 792e 6372 6561  numberArray.crea
0000224: 7465 5665 6374 6f72                      teVector  ; export name
000022c: 00                                        ; export kind
000022d: 14                                        ; export func index
000022e: 17                                        ; string length
000022f: 6e75 6d62 6572 4172 7261 792e 6e61 6d65  numberArray.name
000023f: 7356 6563 746f 72                        sVector  ; export name
0000246: 00                                        ; export kind
0000247: 15                                        ; export func index
0000248: 16                                        ; string length
0000249: 6e75 6d62 6572 4172 7261 792e 7374 7275  numberArray.stru
0000259: 6374 7572 6573                           ctures  ; export name
000025f: 00                                        ; export kind
0000260: 16                                        ; export func index
0000261: 1a                                        ; string length
0000262: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000272: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
000027c: 00                                        ; export kind
000027d: 17                                        ; export func index
000027e: 20                                        ; string length
000027f: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000028f: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
000029f: 00                                        ; export kind
00002a0: 18                                        ; export func index
00002a1: 1c                                        ; string length
00002a2: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b2: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00002be: 00                                        ; export kind
00002bf: 19                                        ; export func index
00002c0: 1c                                        ; string length
00002c1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d1: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002dd: 00                                        ; export kind
00002de: 1a                                        ; export func index
00002df: 1e                                        ; string length
00002e0: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002f0: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002fe: 00                                        ; export kind
00002ff: 1b                                        ; export func index
0000300: 1e                                        ; string length
0000301: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000311: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
000031f: 00                                        ; export kind
0000320: 1c                                        ; export func index
0000321: 11                                        ; string length
0000322: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000332: 64                                       d  ; export name
0000333: 00                                        ; export kind
0000334: 1d                                        ; export func index
0000335: 1c                                        ; string length
0000336: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000346: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000352: 00                                        ; export kind
0000353: 1e                                        ; export func index
0000354: 20                                        ; string length
0000355: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000365: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000375: 00                                        ; export kind
0000376: 1f                                        ; export func index
; move data: [1d1, 377) -> [1d2, 378)
00001d0: a603                                      ; FIXUP section size
; section "Start" (8)
0000378: 08                                        ; section code
0000379: 00                                        ; section size (guess)
000037a: 20                                        ; start func index
0000379: 01                                        ; FIXUP section size
; section "Code" (10)
000037b: 0a                                        ; section code
000037c: 00                                        ; section size (guess)
000037d: 16                                        ; num functions
; function body 0
000037e: 00                                        ; func body size (guess)
000037f: 01                                        ; local decl count
0000380: 02                                        ; local type count
0000381: 7f                                        ; i32
0000382: 23                                        ; global.get
0000383: 00                                        ; global index
0000384: 21                                        ; local.set
0000385: 02                                        ; local index
0000386: 20                                        ; local.get
0000387: 02                                        ; local index
0000388: 20                                        ; local.get
0000389: 00                                        ; local index
000038a: 6a                                        ; i32.add
000038b: 24                                        ; global.set
000038c: 00                                        ; global index
000038d: 23                                        ; global.get
000038e: 00                                        ; global index
000038f: 41                                        ; i32.const
0000390: 08                                        ; i32 literal
0000391: 6f                                        ; i32.rem_s
0000392: 21                                        ; local.set
0000393: 03                                        ; local index
0000394: 20                                        ; local.get
0000395: 03                                        ; local index
0000396: 04                                        ; if
0000397: 40                                        ; void
0000398: 41                                        ; i32.const
0000399: 08                                        ; i32 literal
000039a: 20                                        ; local.get
000039b: 03                                        ; local index
000039c: 6b                                        ; i32.sub
000039d: 21                                        ; local.set
000039e: 03                                        ; local index
000039f: 23                                        ; global.get
00003a0: 00                                        ; global index
00003a1: 20                                        ; local.get
00003a2: 03                                        ; local index
00003a3: 6a                                        ; i32.add
00003a4: 24                                        ; global.set
00003a5: 00                                        ; global index
00003a6: 05                                        ; else
00003a7: 23                                        ; global.get
00003a8: 00                                        ; global index
00003a9: 41                                        ; i32.const
00003aa: 08                                        ; i32 literal
00003ab: 6a                                        ; i32.add
00003ac: 24                                        ; global.set
00003ad: 00                                        ; global index
00003ae: 0b                                        ; end
00003af: 20                                        ; local.get
00003b0: 02                                        ; local index
00003b1: 20                                        ; local.get
00003b2: 01                                        ; local index
00003b3: 10                                        ; call
00003b4: 07                                        ; function index
00003b5: 20                                        ; local.get
00003b6: 02                                        ; local index
00003b7: 0f                                        ; return
00003b8: 0b                                        ; end
000037e: 3a                                        ; FIXUP func body size
; function body 1
00003b9: 00                                        ; func body size (guess)
00003ba: 00                                        ; local decl count
00003bb: 23                                        ; global.get
00003bc: 00                                        ; global index
00003bd: 0f                                        ; return
00003be: 0b                                        ; end
00003b9: 05                                        ; FIXUP func body size
; function body 2
00003bf: 00                                        ; func body size (guess)
00003c0: 01                                        ; local decl count
00003c1: 16                                        ; local type count
00003c2: 7f                                        ; i32
00003c3: 23                                        ; global.get
00003c4: 0b                                        ; global index
00003c5: 41                                        ; i32.const
00003c6: 02                                        ; i32 literal
00003c7: b7                                        ; f64.convert_i32_s
00003c8: a2                                        ; f64.mul
00003c9: 24                                        ; global.set
00003ca: 0b                                        ; global index
00003cb: 41                                        ; i32.const
00003cc: 1c                                        ; i32 literal
00003cd: 41                                        ; i32.const
00003ce: 0d                                        ; i32 literal
00003cf: 10                                        ; call
00003d0: 0f                                        ; function index
00003d1: 21                                        ; local.set
00003d2: 10                                        ; local index
00003d3: 20                                        ; local.get
00003d4: 10                                        ; local index
00003d5: 41                                        ; i32.const
00003d6: 00                                        ; i32 literal
00003d7: 6a                                        ; i32.add
00003d8: 23                                        ; global.get
00003d9: 0b                                        ; global index
00003da: b6                                        ; f32.demote_f64
00003db: 38                                        ; f32.store
00003dc: 02                                        ; alignment
00003dd: 00                                        ; store offset
00003de: 20                                        ; local.get
00003df: 10                                        ; local index
00003e0: 41                                        ; i32.const
00003e1: 04                                        ; i32 literal
00003e2: 6a                                        ; i32.add
00003e3: 41                                        ; i32.const
00003e4: 8fce 00                                   ; i32 literal
00003e7: b2                                        ; f32.convert_i32_s
00003e8: 38                                        ; f32.store
00003e9: 02                                        ; alignment
00003ea: 00                                        ; store offset
00003eb: 10                                        ; call
00003ec: 12                                        ; function index
00003ed: 21                                        ; local.set
00003ee: 13                                        ; local index
00003ef: 20                                        ; local.get
00003f0: 10                                        ; local index
00003f1: 41                                        ; i32.const
00003f2: 0c                                        ; i32 literal
00003f3: 6a                                        ; i32.add
00003f4: 21                                        ; local.set
00003f5: 12                                        ; local index
00003f6: 20                                        ; local.get
00003f7: 12                                        ; local index
00003f8: 41                                        ; i32.const
00003f9: 00                                        ; i32 literal
00003fa: 6a                                        ; i32.add
00003fb: 20                                        ; local.get
00003fc: 13                                        ; local index
00003fd: 41                                        ; i32.const
00003fe: 00                                        ; i32 literal
00003ff: 6a                                        ; i32.add
0000400: 28                                        ; i32.load
0000401: 02                                        ; alignment
0000402: 00                                        ; load offset
0000403: 36                                        ; i32.store
0000404: 02                                        ; alignment
0000405: 00                                        ; store offset
0000406: 20                                        ; local.get
0000407: 12                                        ; local index
0000408: 41                                        ; i32.const
0000409: 04                                        ; i32 literal
000040a: 6a                                        ; i32.add
000040b: 20                                        ; local.get
000040c: 13                                        ; local index
000040d: 41                                        ; i32.const
000040e: 04                                        ; i32 literal
000040f: 6a                                        ; i32.add
0000410: 28                                        ; i32.load
0000411: 02                                        ; alignment
0000412: 00                                        ; load offset
0000413: 36                                        ; i32.store
0000414: 02                                        ; alignment
0000415: 00                                        ; store offset
0000416: 41                                        ; i32.const
0000417: 08                                        ; i32 literal
0000418: 41                                        ; i32.const
0000419: 8809                                      ; i32 literal
000041b: 10                                        ; call
000041c: 0f                                        ; function index
000041d: 21                                        ; local.set
000041e: 11                                        ; local index
000041f: 20                                        ; local.get
0000420: 11                                        ; local index
0000421: 41                                        ; i32.const
0000422: 04                                        ; i32 literal
0000423: 6a                                        ; i32.add
0000424: 41                                        ; i32.const
0000425: b00b                                      ; i32 literal
0000427: 36                                        ; i32.store
0000428: 02                                        ; alignment
0000429: 00                                        ; store offset
000042a: 20                                        ; local.get
000042b: 11                                        ; local index
000042c: 41                                        ; i32.const
000042d: 00                                        ; i32 literal
000042e: 6a                                        ; i32.add
000042f: 41                                        ; i32.const
0000430: 00                                        ; i32 literal
0000431: 36                                        ; i32.store
0000432: 02                                        ; alignment
0000433: 00                                        ; store offset
0000434: 20                                        ; local.get
0000435: 11                                        ; local index
0000436: 21                                        ; local.set
0000437: 15                                        ; local index
0000438: 20                                        ; local.get
0000439: 10                                        ; local index
000043a: 41                                        ; i32.const
000043b: 14                                        ; i32 literal
000043c: 6a                                        ; i32.add
000043d: 21                                        ; local.set
000043e: 14                                        ; local index
000043f: 20                                        ; local.get
0000440: 14                                        ; local index
0000441: 41                                        ; i32.const
0000442: 00                                        ; i32 literal
0000443: 6a                                        ; i32.add
0000444: 20                                        ; local.get
0000445: 15                                        ; local index
0000446: 41                                        ; i32.const
0000447: 00                                        ; i32 literal
0000448: 6a                                        ; i32.add
0000449: 28                                        ; i32.load
000044a: 02                                        ; alignment
000044b: 00                                        ; load offset
000044c: 36                                        ; i32.store
000044d: 02                                        ; alignment
000044e: 00                                        ; store offset
000044f: 20                                        ; local.get
0000450: 14                                        ; local index
0000451: 41                                        ; i32.const
0000452: 04                                        ; i32 literal
0000453: 6a                                        ; i32.add
0000454: 20                                        ; local.get
0000455: 15                                        ; local index
0000456: 41                                        ; i32.const
0000457: 04                                        ; i32 literal
0000458: 6a                                        ; i32.add
0000459: 28                                        ; i32.load
000045a: 02                                        ; alignment
000045b: 00                                        ; load offset
000045c: 36                                        ; i32.store
000045d: 02                                        ; alignment
000045e: 00                                        ; store offset
000045f: 20                                        ; local.get
0000460: 10                                        ; local index
0000461: 41                                        ; i32.const
0000462: 08                                        ; i32 literal
0000463: 6a                                        ; i32.add
0000464: 41                                        ; i32.const
0000465: e400                                      ; i32 literal
0000467: 36                                        ; i32.store
0000468: 02                                        ; alignment
0000469: 00                                        ; store offset
000046a: 20                                        ; local.get
000046b: 10                                        ; local index
000046c: 0f                                        ; return
000046d: 0b                                        ; end
; move data: [3c0, 46e) -> [3c1, 46f)
00003bf: ae01                                      ; FIXUP func body size
; function body 3
000046f: 00                                        ; func body size (guess)
0000470: 01                                        ; local decl count
0000471: 01                                        ; local type count
0000472: 7f                                        ; i32
0000473: 41                                        ; i32.const
0000474: 08                                        ; i32 literal
0000475: 41                                        ; i32.const
0000476: 8809                                      ; i32 literal
0000478: 10                                        ; call
0000479: 0f                                        ; function index
000047a: 21                                        ; local.set
000047b: 00                                        ; local index
000047c: 20                                        ; local.get
000047d: 00                                        ; local index
000047e: 41                                        ; i32.const
000047f: 04                                        ; i32 literal
0000480: 6a                                        ; i32.add
0000481: 41                                        ; i32.const
0000482: d00b                                      ; i32 literal
0000484: 36                                        ; i32.store
0000485: 02                                        ; alignment
0000486: 00                                        ; store offset
0000487: 20                                        ; local.get
0000488: 00                                        ; local index
0000489: 41                                        ; i32.const
000048a: 00                                        ; i32 literal
000048b: 6a                                        ; i32.add
000048c: 41                                        ; i32.const
000048d: 87e4 06                                   ; i32 literal
0000490: 36                                        ; i32.store
0000491: 02                                        ; alignment
0000492: 00                                        ; store offset
0000493: 20                                        ; local.get
0000494: 00                                        ; local index
0000495: 0f                                        ; return
0000496: 0b                                        ; end
000046f: 27                                        ; FIXUP func body size
; function body 4
0000497: 00                                        ; func body size (guess)
0000498: 00                                        ; local decl count
0000499: 23                                        ; global.get
000049a: 0d                                        ; global index
000049b: 0f                                        ; return
000049c: 0b                                        ; end
0000497: 05                                        ; FIXUP func body size
; function body 5
000049d: 00                                        ; func body size (guess)
000049e: 01                                        ; local decl count
000049f: 03                                        ; local type count
00004a0: 7f                                        ; i32
00004a1: 41                                        ; i32.const
00004a2: 08                                        ; i32 literal
00004a3: 41                                        ; i32.const
00004a4: 0a                                        ; i32 literal
00004a5: 41                                        ; i32.const
00004a6: 04                                        ; i32 literal
00004a7: 6c                                        ; i32.mul
00004a8: 6a                                        ; i32.add
00004a9: 41                                        ; i32.const
00004aa: 07                                        ; i32 literal
00004ab: 10                                        ; call
00004ac: 0f                                        ; function index
00004ad: 21                                        ; local.set
00004ae: 01                                        ; local index
00004af: 20                                        ; local.get
00004b0: 01                                        ; local index
00004b1: 41                                        ; i32.const
00004b2: 01                                        ; i32 literal
00004b3: 36                                        ; i32.store
00004b4: 02                                        ; alignment
00004b5: 00                                        ; store offset
00004b6: 20                                        ; local.get
00004b7: 01                                        ; local index
00004b8: 41                                        ; i32.const
00004b9: 04                                        ; i32 literal
00004ba: 6a                                        ; i32.add
00004bb: 41                                        ; i32.const
00004bc: 0a                                        ; i32 literal
00004bd: 36                                        ; i32.store
00004be: 02                                        ; alignment
00004bf: 00                                        ; store offset
00004c0: 20                                        ; local.get
00004c1: 01                                        ; local index
00004c2: 41                                        ; i32.const
00004c3: 08                                        ; i32 literal
00004c4: 6a                                        ; i32.add
00004c5: 21                                        ; local.set
00004c6: 02                                        ; local index
00004c7: 20                                        ; local.get
00004c8: 02                                        ; local index
00004c9: 41                                        ; i32.const
00004ca: 00                                        ; i32 literal
00004cb: 6a                                        ; i32.add
00004cc: 41                                        ; i32.const
00004cd: 01                                        ; i32 literal
00004ce: 36                                        ; i32.store
00004cf: 02                                        ; alignment
00004d0: 00                                        ; store offset
00004d1: 20                                        ; local.get
00004d2: 02                                        ; local index
00004d3: 41                                        ; i32.const
00004d4: 04                                        ; i32 literal
00004d5: 6a                                        ; i32.add
00004d6: 41                                        ; i32.const
00004d7: 02                                        ; i32 literal
00004d8: 36                                        ; i32.store
00004d9: 02                                        ; alignment
00004da: 00                                        ; store offset
00004db: 20                                        ; local.get
00004dc: 02                                        ; local index
00004dd: 41                                        ; i32.const
00004de: 08                                        ; i32 literal
00004df: 6a                                        ; i32.add
00004e0: 41                                        ; i32.const
00004e1: 03                                        ; i32 literal
00004e2: 36                                        ; i32.store
00004e3: 02                                        ; alignment
00004e4: 00                                        ; store offset
00004e5: 20                                        ; local.get
00004e6: 02                                        ; local index
00004e7: 41                                        ; i32.const
00004e8: 0c                                        ; i32 literal
00004e9: 6a                                        ; i32.add
00004ea: 41                                        ; i32.const
00004eb: 04                                        ; i32 literal
00004ec: 36                                        ; i32.store
00004ed: 02                                        ; alignment
00004ee: 00                                        ; store offset
00004ef: 20                                        ; local.get
00004f0: 02                                        ; local index
00004f1: 41                                        ; i32.const
00004f2: 10                                        ; i32 literal
00004f3: 6a                                        ; i32.add
00004f4: 41                                        ; i32.const
00004f5: 05                                        ; i32 literal
00004f6: 36                                        ; i32.store
00004f7: 02                                        ; alignment
00004f8: 00                                        ; store offset
00004f9: 20                                        ; local.get
00004fa: 02                                        ; local index
00004fb: 41                                        ; i32.const
00004fc: 14                                        ; i32 literal
00004fd: 6a                                        ; i32.add
00004fe: 41                                        ; i32.const
00004ff: 06                                        ; i32 literal
0000500: 36                                        ; i32.store
0000501: 02                                        ; alignment
0000502: 00                                        ; store offset
0000503: 20                                        ; local.get
0000504: 02                                        ; local index
0000505: 41                                        ; i32.const
0000506: 18                                        ; i32 literal
0000507: 6a                                        ; i32.add
0000508: 41                                        ; i32.const
0000509: 07                                        ; i32 literal
000050a: 36                                        ; i32.store
000050b: 02                                        ; alignment
000050c: 00                                        ; store offset
000050d: 20                                        ; local.get
000050e: 02                                        ; local index
000050f: 41                                        ; i32.const
0000510: 1c                                        ; i32 literal
0000511: 6a                                        ; i32.add
0000512: 41                                        ; i32.const
0000513: 08                                        ; i32 literal
0000514: 36                                        ; i32.store
0000515: 02                                        ; alignment
0000516: 00                                        ; store offset
0000517: 20                                        ; local.get
0000518: 02                                        ; local index
0000519: 41                                        ; i32.const
000051a: 20                                        ; i32 literal
000051b: 6a                                        ; i32.add
000051c: 41                                        ; i32.const
000051d: 09                                        ; i32 literal
000051e: 36                                        ; i32.store
000051f: 02                                        ; alignment
0000520: 00                                        ; store offset
0000521: 20                                        ; local.get
0000522: 02                                        ; local index
0000523: 41                                        ; i32.const
0000524: 24                                        ; i32 literal
0000525: 6a                                        ; i32.add
0000526: 41                                        ; i32.const
0000527: 00                                        ; i32 literal
0000528: 36                                        ; i32.store
0000529: 02                                        ; alignment
000052a: 00                                        ; store offset
000052b: 20                                        ; local.get
000052c: 01                                        ; local index
000052d: 0f                                        ; return
000052e: 0b                                        ; end
; move data: [49e, 52f) -> [49f, 530)
000049d: 9101                                      ; FIXUP func body size
; function body 6
0000530: 00                                        ; func body size (guess)
0000531: 01                                        ; local decl count
0000532: 02                                        ; local type count
0000533: 7f                                        ; i32
0000534: 41                                        ; i32.const
0000535: 08                                        ; i32 literal
0000536: 41                                        ; i32.const
0000537: 07                                        ; i32 literal
0000538: 41                                        ; i32.const
0000539: 04                                        ; i32 literal
000053a: 6c                                        ; i32.mul
000053b: 6a                                        ; i32.add
000053c: 41                                        ; i32.const
000053d: 07                                        ; i32 literal
000053e: 10                                        ; call
000053f: 0f                                        ; function index
0000540: 21                                        ; local.set
0000541: 00                                        ; local index
0000542: 20                                        ; local.get
0000543: 00                                        ; local index
0000544: 41                                        ; i32.const
0000545: 05                                        ; i32 literal
0000546: 36                                        ; i32.store
0000547: 02                                        ; alignment
0000548: 00                                        ; store offset
0000549: 20                                        ; local.get
000054a: 00                                        ; local index
000054b: 41                                        ; i32.const
000054c: 04                                        ; i32 literal
000054d: 6a                                        ; i32.add
000054e: 41                                        ; i32.const
000054f: 07                                        ; i32 literal
0000550: 36                                        ; i32.store
0000551: 02                                        ; alignment
0000552: 00                                        ; store offset
0000553: 20                                        ; local.get
0000554: 00                                        ; local index
0000555: 41                                        ; i32.const
0000556: 08                                        ; i32 literal
0000557: 6a                                        ; i32.add
0000558: 21                                        ; local.set
0000559: 01                                        ; local index
000055a: 20                                        ; local.get
000055b: 01                                        ; local index
000055c: 41                                        ; i32.const
000055d: 00                                        ; i32 literal
000055e: 6a                                        ; i32.add
000055f: 41                                        ; i32.const
0000560: f80b                                      ; i32 literal
0000562: 36                                        ; i32.store
0000563: 02                                        ; alignment
0000564: 00                                        ; store offset
0000565: 20                                        ; local.get
0000566: 01                                        ; local index
0000567: 41                                        ; i32.const
0000568: 04                                        ; i32 literal
0000569: 6a                                        ; i32.add
000056a: 41                                        ; i32.const
000056b: 880c                                      ; i32 literal
000056d: 36                                        ; i32.store
000056e: 02                                        ; alignment
000056f: 00                                        ; store offset
0000570: 20                                        ; local.get
0000571: 01                                        ; local index
0000572: 41                                        ; i32.const
0000573: 08                                        ; i32 literal
0000574: 6a                                        ; i32.add
0000575: 41                                        ; i32.const
0000576: 980c                                      ; i32 literal
0000578: 36                                        ; i32.store
0000579: 02                                        ; alignment
000057a: 00                                        ; store offset
000057b: 20                                        ; local.get
000057c: 01                                        ; local index
000057d: 41                                        ; i32.const
000057e: 0c                                        ; i32 literal
000057f: 6a                                        ; i32.add
0000580: 41                                        ; i32.const
0000581: a80c                                      ; i32 literal
0000583: 36                                        ; i32.store
0000584: 02                                        ; alignment
0000585: 00                                        ; store offset
0000586: 20                                        ; local.get
0000587: 01                                        ; local index
0000588: 41                                        ; i32.const
0000589: 10                                        ; i32 literal
000058a: 6a                                        ; i32.add
000058b: 41                                        ; i32.const
000058c: b80c                                      ; i32 literal
000058e: 36                                        ; i32.store
000058f: 02                                        ; alignment
0000590: 00                                        ; store offset
0000591: 20                                        ; local.get
0000592: 01                                        ; local index
0000593: 41                                        ; i32.const
0000594: 14                                        ; i32 literal
0000595: 6a                                        ; i32.add
0000596: 41                                        ; i32.const
0000597: c00c                                      ; i32 literal
0000599: 36                                        ; i32.store
000059a: 02                                        ; alignment
000059b: 00                                        ; store offset
000059c: 20                                        ; local.get
000059d: 01                                        ; local index
000059e: 41                                        ; i32.const
000059f: 18                                        ; i32 literal
00005a0: 6a                                        ; i32.add
00005a1: 41                                        ; i32.const
00005a2: c80c                                      ; i32 literal
00005a4: 36                                        ; i32.store
00005a5: 02                                        ; alignment
00005a6: 00                                        ; store offset
00005a7: 20                                        ; local.get
00005a8: 00                                        ; local index
00005a9: 0f                                        ; return
00005aa: 0b                                        ; end
0000530: 7a                                        ; FIXUP func body size
; function body 7
00005ab: 00                                        ; func body size (guess)
00005ac: 01                                        ; local decl count
00005ad: 09                                        ; local type count
00005ae: 7f                                        ; i32
00005af: 10                                        ; call
00005b0: 15                                        ; function index
00005b1: 21                                        ; local.set
00005b2: 00                                        ; local index
00005b3: 41                                        ; i32.const
00005b4: 08                                        ; i32 literal
00005b5: 41                                        ; i32.const
00005b6: 03                                        ; i32 literal
00005b7: 41                                        ; i32.const
00005b8: 08                                        ; i32 literal
00005b9: 6c                                        ; i32.mul
00005ba: 6a                                        ; i32.add
00005bb: 41                                        ; i32.const
00005bc: 07                                        ; i32 literal
00005bd: 10                                        ; call
00005be: 0f                                        ; function index
00005bf: 21                                        ; local.set
00005c0: 04                                        ; local index
00005c1: 20                                        ; local.get
00005c2: 04                                        ; local index
00005c3: 41                                        ; i32.const
00005c4: 8809                                      ; i32 literal
00005c6: 36                                        ; i32.store
00005c7: 02                                        ; alignment
00005c8: 00                                        ; store offset
00005c9: 20                                        ; local.get
00005ca: 04                                        ; local index
00005cb: 41                                        ; i32.const
00005cc: 04                                        ; i32 literal
00005cd: 6a                                        ; i32.add
00005ce: 41                                        ; i32.const
00005cf: 03                                        ; i32 literal
00005d0: 36                                        ; i32.store
00005d1: 02                                        ; alignment
00005d2: 00                                        ; store offset
00005d3: 20                                        ; local.get
00005d4: 04                                        ; local index
00005d5: 41                                        ; i32.const
00005d6: 08                                        ; i32 literal
00005d7: 6a                                        ; i32.add
00005d8: 21                                        ; local.set
00005d9: 05                                        ; local index
00005da: 20                                        ; local.get
00005db: 05                                        ; local index
00005dc: 41                                        ; i32.const
00005dd: 00                                        ; i32 literal
00005de: 6a                                        ; i32.add
00005df: 21                                        ; local.set
00005e0: 06                                        ; local index
00005e1: 20                                        ; local.get
00005e2: 06                                        ; local index
00005e3: 41                                        ; i32.const
00005e4: 8809                                      ; i32 literal
00005e6: 10                                        ; call
00005e7: 07                                        ; function index
00005e8: 20                                        ; local.get
00005e9: 06                                        ; local index
00005ea: 21                                        ; local.set
00005eb: 01                                        ; local index
00005ec: 20                                        ; local.get
00005ed: 01                                        ; local index
00005ee: 41                                        ; i32.const
00005ef: 04                                        ; i32 literal
00005f0: 6a                                        ; i32.add
00005f1: 20                                        ; local.get
00005f2: 00                                        ; local index
00005f3: 41                                        ; i32.const
00005f4: 08                                        ; i32 literal
00005f5: 6a                                        ; i32.add
00005f6: 41                                        ; i32.const
00005f7: 00                                        ; i32 literal
00005f8: 41                                        ; i32.const
00005f9: 04                                        ; i32 literal
00005fa: 6c                                        ; i32.mul
00005fb: 6a                                        ; i32.add
00005fc: 28                                        ; i32.load
00005fd: 02                                        ; alignment
00005fe: 00                                        ; load offset
00005ff: 36                                        ; i32.store
0000600: 02                                        ; alignment
0000601: 00                                        ; store offset
0000602: 20                                        ; local.get
0000603: 01                                        ; local index
0000604: 41                                        ; i32.const
0000605: 00                                        ; i32 literal
0000606: 6a                                        ; i32.add
0000607: 41                                        ; i32.const
0000608: 00                                        ; i32 literal
0000609: 36                                        ; i32.store
000060a: 02                                        ; alignment
000060b: 00                                        ; store offset
000060c: 20                                        ; local.get
000060d: 05                                        ; local index
000060e: 41                                        ; i32.const
000060f: 08                                        ; i32 literal
0000610: 6a                                        ; i32.add
0000611: 21                                        ; local.set
0000612: 07                                        ; local index
0000613: 20                                        ; local.get
0000614: 07                                        ; local index
0000615: 41                                        ; i32.const
0000616: 8809                                      ; i32 literal
0000618: 10                                        ; call
0000619: 07                                        ; function index
000061a: 20                                        ; local.get
000061b: 07                                        ; local index
000061c: 21                                        ; local.set
000061d: 02                                        ; local index
000061e: 20                                        ; local.get
000061f: 02                                        ; local index
0000620: 41                                        ; i32.const
0000621: 04                                        ; i32 literal
0000622: 6a                                        ; i32.add
0000623: 20                                        ; local.get
0000624: 00                                        ; local index
0000625: 41                                        ; i32.const
0000626: 08                                        ; i32 literal
0000627: 6a                                        ; i32.add
0000628: 41                                        ; i32.const
0000629: 01                                        ; i32 literal
000062a: 41                                        ; i32.const
000062b: 04                                        ; i32 literal
000062c: 6c                                        ; i32.mul
000062d: 6a                                        ; i32.add
000062e: 28                                        ; i32.load
000062f: 02                                        ; alignment
0000630: 00                                        ; load offset
0000631: 36                                        ; i32.store
0000632: 02                                        ; alignment
0000633: 00                                        ; store offset
0000634: 20                                        ; local.get
0000635: 02                                        ; local index
0000636: 41                                        ; i32.const
0000637: 00                                        ; i32 literal
0000638: 6a                                        ; i32.add
0000639: 41                                        ; i32.const
000063a: 01                                        ; i32 literal
000063b: 36                                        ; i32.store
000063c: 02                                        ; alignment
000063d: 00                                        ; store offset
000063e: 20                                        ; local.get
000063f: 05                                        ; local index
0000640: 41                                        ; i32.const
0000641: 10                                        ; i32 literal
0000642: 6a                                        ; i32.add
0000643: 21                                        ; local.set
0000644: 08                                        ; local index
0000645: 20                                        ; local.get
0000646: 08                                        ; local index
0000647: 41                                        ; i32.const
0000648: 8809                                      ; i32 literal
000064a: 10                                        ; call
000064b: 07                                        ; function index
000064c: 20                                        ; local.get
000064d: 08                                        ; local index
000064e: 21                                        ; local.set
000064f: 03                                        ; local index
0000650: 20                                        ; local.get
0000651: 03                                        ; local index
0000652: 41                                        ; i32.const
0000653: 04                                        ; i32 literal
0000654: 6a                                        ; i32.add
0000655: 20                                        ; local.get
0000656: 00                                        ; local index
0000657: 41                                        ; i32.const
0000658: 08                                        ; i32 literal
0000659: 6a                                        ; i32.add
000065a: 41                                        ; i32.const
000065b: 02                                        ; i32 literal
000065c: 41                                        ; i32.const
000065d: 04                                        ; i32 literal
000065e: 6c                                        ; i32.mul
000065f: 6a                                        ; i32.add
0000660: 28                                        ; i32.load
0000661: 02                                        ; alignment
0000662: 00                                        ; load offset
0000663: 36                                        ; i32.store
0000664: 02                                        ; alignment
0000665: 00                                        ; store offset
0000666: 20                                        ; local.get
0000667: 03                                        ; local index
0000668: 41                                        ; i32.const
0000669: 00                                        ; i32 literal
000066a: 6a                                        ; i32.add
000066b: 41                                        ; i32.const
000066c: 02                                        ; i32 literal
000066d: 36                                        ; i32.store
000066e: 02                                        ; alignment
000066f: 00                                        ; store offset
0000670: 20                                        ; local.get
0000671: 04                                        ; local index
0000672: 0f                                        ; return
0000673: 0b                                        ; end
; move data: [5ac, 674) -> [5ad, 675)
00005ab: c801                                      ; FIXUP func body size
; function body 8
0000675: 00                                        ; func body size (guess)
0000676: 00                                        ; local decl count
0000677: 41                                        ; i32.const
0000678: d80c                                      ; i32 literal
000067a: 0f                                        ; return
000067b: 0b                                        ; end
0000675: 06                                        ; FIXUP func body size
; function body 9
000067c: 00                                        ; func body size (guess)
000067d: 00                                        ; local decl count
000067e: 41                                        ; i32.const
000067f: e80c                                      ; i32 literal
0000681: 0f                                        ; return
0000682: 0b                                        ; end
000067c: 06                                        ; FIXUP func body size
; function body 10
0000683: 00                                        ; func body size (guess)
0000684: 00                                        ; local decl count
0000685: 41                                        ; i32.const
0000686: a00d                                      ; i32 literal
0000688: 0f                                        ; return
0000689: 0b                                        ; end
0000683: 06                                        ; FIXUP func body size
; function body 11
000068a: 00                                        ; func body size (guess)
000068b: 00                                        ; local decl count
000068c: 41                                        ; i32.const
000068d: b00d                                      ; i32 literal
000068f: 0f                                        ; return
0000690: 0b                                        ; end
000068a: 06                                        ; FIXUP func body size
; function body 12
0000691: 00                                        ; func body size (guess)
0000692: 00                                        ; local decl count
0000693: 41                                        ; i32.const
0000694: c00d                                      ; i32 literal
0000696: 0f                                        ; return
0000697: 0b                                        ; end
0000691: 06                                        ; FIXUP func body size
; function body 13
0000698: 00                                        ; func body size (guess)
0000699: 00                                        ; local decl count
000069a: 41                                        ; i32.const
000069b: e80d                                      ; i32 literal
000069d: 0f                                        ; return
000069e: 0b                                        ; end
0000698: 06                                        ; FIXUP func body size
; function body 14
000069f: 00                                        ; func body size (guess)
00006a0: 00                                        ; local decl count
00006a1: 41                                        ; i32.const
00006a2: f80d                                      ; i32 literal
00006a4: 0f                                        ; return
00006a5: 0b                                        ; end
000069f: 06                                        ; FIXUP func body size
; function body 15
00006a6: 00                                        ; func body size (guess)
00006a7: 00                                        ; local decl count
00006a8: 41                                        ; i32.const
00006a9: a00e                                      ; i32 literal
00006ab: 0f                                        ; return
00006ac: 0b                                        ; end
00006a6: 06                                        ; FIXUP func body size
; function body 16
00006ad: 00                                        ; func body size (guess)
00006ae: 00                                        ; local decl count
00006af: 41                                        ; i32.const
00006b0: a80e                                      ; i32 literal
00006b2: 0f                                        ; return
00006b3: 0b                                        ; end
00006ad: 06                                        ; FIXUP func body size
; function body 17
00006b4: 00                                        ; func body size (guess)
00006b5: 00                                        ; local decl count
00006b6: 10                                        ; call
00006b7: 21                                        ; function index
00006b8: 10                                        ; call
00006b9: 22                                        ; function index
00006ba: 10                                        ; call
00006bb: 23                                        ; function index
00006bc: 10                                        ; call
00006bd: 24                                        ; function index
00006be: 0b                                        ; end
00006b4: 0a                                        ; FIXUP func body size
; function body 18
00006bf: 00                                        ; func body size (guess)
00006c0: 01                                        ; local decl count
00006c1: 0f                                        ; local type count
00006c2: 7f                                        ; i32
00006c3: 41                                        ; i32.const
00006c4: 08                                        ; i32 literal
00006c5: 41                                        ; i32.const
00006c6: 02                                        ; i32 literal
00006c7: 41                                        ; i32.const
00006c8: 04                                        ; i32 literal
00006c9: 6c                                        ; i32.mul
00006ca: 6a                                        ; i32.add
00006cb: 41                                        ; i32.const
00006cc: 07                                        ; i32 literal
00006cd: 10                                        ; call
00006ce: 0f                                        ; function index
00006cf: 21                                        ; local.set
00006d0: 00                                        ; local index
00006d1: 20                                        ; local.get
00006d2: 00                                        ; local index
00006d3: 41                                        ; i32.const
00006d4: 8804                                      ; i32 literal
00006d6: 36                                        ; i32.store
00006d7: 02                                        ; alignment
00006d8: 00                                        ; store offset
00006d9: 20                                        ; local.get
00006da: 00                                        ; local index
00006db: 41                                        ; i32.const
00006dc: 04                                        ; i32 literal
00006dd: 6a                                        ; i32.add
00006de: 41                                        ; i32.const
00006df: 02                                        ; i32 literal
00006e0: 36                                        ; i32.store
00006e1: 02                                        ; alignment
00006e2: 00                                        ; store offset
00006e3: 20                                        ; local.get
00006e4: 00                                        ; local index
00006e5: 41                                        ; i32.const
00006e6: 08                                        ; i32 literal
00006e7: 6a                                        ; i32.add
00006e8: 21                                        ; local.set
00006e9: 01                                        ; local index
00006ea: 41                                        ; i32.const
00006eb: 28                                        ; i32 literal
00006ec: 41                                        ; i32.const
00006ed: 8804                                      ; i32 literal
00006ef: 10                                        ; call
00006f0: 0f                                        ; function index
00006f1: 21                                        ; local.set
00006f2: 02                                        ; local index
00006f3: 20                                        ; local.get
00006f4: 02                                        ; local index
00006f5: 41                                        ; i32.const
00006f6: 08                                        ; i32 literal
00006f7: 6a                                        ; i32.add
00006f8: 41                                        ; i32.const
00006f9: e400                                      ; i32 literal
00006fb: 36                                        ; i32.store
00006fc: 02                                        ; alignment
00006fd: 00                                        ; store offset
00006fe: 41                                        ; i32.const
00006ff: 1c                                        ; i32 literal
0000700: 41                                        ; i32.const
0000701: 0d                                        ; i32 literal
0000702: 10                                        ; call
0000703: 0f                                        ; function index
0000704: 21                                        ; local.set
0000705: 03                                        ; local index
0000706: 41                                        ; i32.const
0000707: 08                                        ; i32 literal
0000708: 41                                        ; i32.const
0000709: 8809                                      ; i32 literal
000070b: 10                                        ; call
000070c: 0f                                        ; function index
000070d: 21                                        ; local.set
000070e: 04                                        ; local index
000070f: 20                                        ; local.get
0000710: 04                                        ; local index
0000711: 41                                        ; i32.const
0000712: 04                                        ; i32 literal
0000713: 6a                                        ; i32.add
0000714: 41                                        ; i32.const
0000715: 900b                                      ; i32 literal
0000717: 36                                        ; i32.store
0000718: 02                                        ; alignment
0000719: 00                                        ; store offset
000071a: 20                                        ; local.get
000071b: 04                                        ; local index
000071c: 41                                        ; i32.const
000071d: 00                                        ; i32 literal
000071e: 6a                                        ; i32.add
000071f: 41                                        ; i32.const
0000720: 00                                        ; i32 literal
0000721: 36                                        ; i32.store
0000722: 02                                        ; alignment
0000723: 00                                        ; store offset
0000724: 20                                        ; local.get
0000725: 04                                        ; local index
0000726: 21                                        ; local.set
0000727: 05                                        ; local index
0000728: 20                                        ; local.get
0000729: 03                                        ; local index
000072a: 41                                        ; i32.const
000072b: 0c                                        ; i32 literal
000072c: 6a                                        ; i32.add
000072d: 21                                        ; local.set
000072e: 06                                        ; local index
000072f: 20                                        ; local.get
0000730: 06                                        ; local index
0000731: 41                                        ; i32.const
0000732: 00                                        ; i32 literal
0000733: 6a                                        ; i32.add
0000734: 20                                        ; local.get
0000735: 05                                        ; local index
0000736: 41                                        ; i32.const
0000737: 00                                        ; i32 literal
0000738: 6a                                        ; i32.add
0000739: 28                                        ; i32.load
000073a: 02                                        ; alignment
000073b: 00                                        ; load offset
000073c: 36                                        ; i32.store
000073d: 02                                        ; alignment
000073e: 00                                        ; store offset
000073f: 20                                        ; local.get
0000740: 06                                        ; local index
0000741: 41                                        ; i32.const
0000742: 04                                        ; i32 literal
0000743: 6a                                        ; i32.add
0000744: 20                                        ; local.get
0000745: 05                                        ; local index
0000746: 41                                        ; i32.const
0000747: 04                                        ; i32 literal
0000748: 6a                                        ; i32.add
0000749: 28                                        ; i32.load
000074a: 02                                        ; alignment
000074b: 00                                        ; load offset
000074c: 36                                        ; i32.store
000074d: 02                                        ; alignment
000074e: 00                                        ; store offset
000074f: 20                                        ; local.get
0000750: 03                                        ; local index
0000751: 41                                        ; i32.const
0000752: 00                                        ; i32 literal
0000753: 6a                                        ; i32.add
0000754: 43                                        ; f32.const
0000755: 0000 0000                                 ; f32 literal
0000759: 38                                        ; f32.store
000075a: 02                                        ; alignment
000075b: 00                                        ; store offset
000075c: 20                                        ; local.get
000075d: 03                                        ; local index
000075e: 41                                        ; i32.const
000075f: 04                                        ; i32 literal
0000760: 6a                                        ; i32.add
0000761: 43                                        ; f32.const
0000762: 0000 0000                                 ; f32 literal
0000766: 38                                        ; f32.store
0000767: 02                                        ; alignment
0000768: 00                                        ; store offset
0000769: 20                                        ; local.get
000076a: 03                                        ; local index
000076b: 41                                        ; i32.const
000076c: 08                                        ; i32 literal
000076d: 6a                                        ; i32.add
000076e: 41                                        ; i32.const
000076f: e400                                      ; i32 literal
0000771: 36                                        ; i32.store
0000772: 02                                        ; alignment
0000773: 00                                        ; store offset
0000774: 20                                        ; local.get
0000775: 02                                        ; local index
0000776: 41                                        ; i32.const
0000777: 24                                        ; i32 literal
0000778: 6a                                        ; i32.add
0000779: 20                                        ; local.get
000077a: 03                                        ; local index
000077b: 36                                        ; i32.store
000077c: 02                                        ; alignment
000077d: 00                                        ; store offset
000077e: 20                                        ; local.get
000077f: 02                                        ; local index
0000780: 41                                        ; i32.const
0000781: 20                                        ; i32 literal
0000782: 6a                                        ; i32.add
0000783: 41                                        ; i32.const
0000784: e707                                      ; i32 literal
0000786: b2                                        ; f32.convert_i32_s
0000787: 38                                        ; f32.store
0000788: 02                                        ; alignment
0000789: 00                                        ; store offset
000078a: 41                                        ; i32.const
000078b: 08                                        ; i32 literal
000078c: 41                                        ; i32.const
000078d: 8809                                      ; i32 literal
000078f: 10                                        ; call
0000790: 0f                                        ; function index
0000791: 21                                        ; local.set
0000792: 07                                        ; local index
0000793: 20                                        ; local.get
0000794: 07                                        ; local index
0000795: 41                                        ; i32.const
0000796: 04                                        ; i32 literal
0000797: 6a                                        ; i32.add
0000798: 41                                        ; i32.const
0000799: 980b                                      ; i32 literal
000079b: 36                                        ; i32.store
000079c: 02                                        ; alignment
000079d: 00                                        ; store offset
000079e: 20                                        ; local.get
000079f: 07                                        ; local index
00007a0: 41                                        ; i32.const
00007a1: 00                                        ; i32 literal
00007a2: 6a                                        ; i32.add
00007a3: 41                                        ; i32.const
00007a4: 00                                        ; i32 literal
00007a5: 36                                        ; i32.store
00007a6: 02                                        ; alignment
00007a7: 00                                        ; store offset
00007a8: 20                                        ; local.get
00007a9: 07                                        ; local index
00007aa: 21                                        ; local.set
00007ab: 08                                        ; local index
00007ac: 20                                        ; local.get
00007ad: 02                                        ; local index
00007ae: 41                                        ; i32.const
00007af: 00                                        ; i32 literal
00007b0: 6a                                        ; i32.add
00007b1: 21                                        ; local.set
00007b2: 09                                        ; local index
00007b3: 20                                        ; local.get
00007b4: 09                                        ; local index
00007b5: 41                                        ; i32.const
00007b6: 00                                        ; i32 literal
00007b7: 6a                                        ; i32.add
00007b8: 20                                        ; local.get
00007b9: 08                                        ; local index
00007ba: 41                                        ; i32.const
00007bb: 00                                        ; i32 literal
00007bc: 6a                                        ; i32.add
00007bd: 28                                        ; i32.load
00007be: 02                                        ; alignment
00007bf: 00                                        ; load offset
00007c0: 36                                        ; i32.store
00007c1: 02                                        ; alignment
00007c2: 00                                        ; store offset
00007c3: 20                                        ; local.get
00007c4: 09                                        ; local index
00007c5: 41                                        ; i32.const
00007c6: 04                                        ; i32 literal
00007c7: 6a                                        ; i32.add
00007c8: 20                                        ; local.get
00007c9: 08                                        ; local index
00007ca: 41                                        ; i32.const
00007cb: 04                                        ; i32 literal
00007cc: 6a                                        ; i32.add
00007cd: 28                                        ; i32.load
00007ce: 02                                        ; alignment
00007cf: 00                                        ; load offset
00007d0: 36                                        ; i32.store
00007d1: 02                                        ; alignment
00007d2: 00                                        ; store offset
00007d3: 20                                        ; local.get
00007d4: 02                                        ; local index
00007d5: 41                                        ; i32.const
00007d6: 0c                                        ; i32 literal
00007d7: 6a                                        ; i32.add
00007d8: 41                                        ; i32.const
00007d9: e807                                      ; i32 literal
00007db: 36                                        ; i32.store
00007dc: 02                                        ; alignment
00007dd: 00                                        ; store offset
00007de: 20                                        ; local.get
00007df: 02                                        ; local index
00007e0: 41                                        ; i32.const
00007e1: 10                                        ; i32 literal
00007e2: 6a                                        ; i32.add
00007e3: 44                                        ; f64.const
00007e4: 0000 0000 0000 0000                       ; f64 literal
00007ec: 39                                        ; f64.store
00007ed: 03                                        ; alignment
00007ee: 00                                        ; store offset
00007ef: 20                                        ; local.get
00007f0: 02                                        ; local index
00007f1: 41                                        ; i32.const
00007f2: 18                                        ; i32 literal
00007f3: 6a                                        ; i32.add
00007f4: 44                                        ; f64.const
00007f5: 0000 0000 0000 0000                       ; f64 literal
00007fd: 39                                        ; f64.store
00007fe: 03                                        ; alignment
00007ff: 00                                        ; store offset
0000800: 20                                        ; local.get
0000801: 01                                        ; local index
0000802: 41                                        ; i32.const
0000803: 00                                        ; i32 literal
0000804: 6a                                        ; i32.add
0000805: 20                                        ; local.get
0000806: 02                                        ; local index
0000807: 36                                        ; i32.store
0000808: 02                                        ; alignment
0000809: 00                                        ; store offset
000080a: 41                                        ; i32.const
000080b: 28                                        ; i32 literal
000080c: 41                                        ; i32.const
000080d: 8804                                      ; i32 literal
000080f: 10                                        ; call
0000810: 0f                                        ; function index
0000811: 21                                        ; local.set
0000812: 0a                                        ; local index
0000813: 41                                        ; i32.const
0000814: 08                                        ; i32 literal
0000815: 41                                        ; i32.const
0000816: 8809                                      ; i32 literal
0000818: 10                                        ; call
0000819: 0f                                        ; function index
000081a: 21                                        ; local.set
000081b: 0b                                        ; local index
000081c: 20                                        ; local.get
000081d: 0b                                        ; local index
000081e: 41                                        ; i32.const
000081f: 04                                        ; i32 literal
0000820: 6a                                        ; i32.add
0000821: 41                                        ; i32.const
0000822: a00b                                      ; i32 literal
0000824: 36                                        ; i32.store
0000825: 02                                        ; alignment
0000826: 00                                        ; store offset
0000827: 20                                        ; local.get
0000828: 0b                                        ; local index
0000829: 41                                        ; i32.const
000082a: 00                                        ; i32 literal
000082b: 6a                                        ; i32.add
000082c: 41                                        ; i32.const
000082d: 00                                        ; i32 literal
000082e: 36                                        ; i32.store
000082f: 02                                        ; alignment
0000830: 00                                        ; store offset
0000831: 20                                        ; local.get
0000832: 0b                                        ; local index
0000833: 21                                        ; local.set
0000834: 0c                                        ; local index
0000835: 20                                        ; local.get
0000836: 0a                                        ; local index
0000837: 41                                        ; i32.const
0000838: 00                                        ; i32 literal
0000839: 6a                                        ; i32.add
000083a: 21                                        ; local.set
000083b: 0d                                        ; local index
000083c: 20                                        ; local.get
000083d: 0d                                        ; local index
000083e: 41                                        ; i32.const
000083f: 00                                        ; i32 literal
0000840: 6a                                        ; i32.add
0000841: 20                                        ; local.get
0000842: 0c                                        ; local index
0000843: 41                                        ; i32.const
0000844: 00                                        ; i32 literal
0000845: 6a                                        ; i32.add
0000846: 28                                        ; i32.load
0000847: 02                                        ; alignment
0000848: 00                                        ; load offset
0000849: 36                                        ; i32.store
000084a: 02                                        ; alignment
000084b: 00                                        ; store offset
000084c: 20                                        ; local.get
000084d: 0d                                        ; local index
000084e: 41                                        ; i32.const
000084f: 04                                        ; i32 literal
0000850: 6a                                        ; i32.add
0000851: 20                                        ; local.get
0000852: 0c                                        ; local index
0000853: 41                                        ; i32.const
0000854: 04                                        ; i32 literal
0000855: 6a                                        ; i32.add
0000856: 28                                        ; i32.load
0000857: 02                                        ; alignment
0000858: 00                                        ; load offset
0000859: 36                                        ; i32.store
000085a: 02                                        ; alignment
000085b: 00                                        ; store offset
000085c: 20                                        ; local.get
000085d: 0a                                        ; local index
000085e: 41                                        ; i32.const
000085f: 08                                        ; i32 literal
0000860: 6a                                        ; i32.add
0000861: 41                                        ; i32.const
0000862: e807                                      ; i32 literal
0000864: 36                                        ; i32.store
0000865: 02                                        ; alignment
0000866: 00                                        ; store offset
0000867: 20                                        ; local.get
0000868: 0a                                        ; local index
0000869: 41                                        ; i32.const
000086a: 0c                                        ; i32 literal
000086b: 6a                                        ; i32.add
000086c: 41                                        ; i32.const
000086d: e807                                      ; i32 literal
000086f: 36                                        ; i32.store
0000870: 02                                        ; alignment
0000871: 00                                        ; store offset
0000872: 20                                        ; local.get
0000873: 0a                                        ; local index
0000874: 41                                        ; i32.const
0000875: 10                                        ; i32 literal
0000876: 6a                                        ; i32.add
0000877: 44                                        ; f64.const
0000878: 0000 0000 0000 0000                       ; f64 literal
0000880: 39                                        ; f64.store
0000881: 03                                        ; alignment
0000882: 00                                        ; store offset
0000883: 20                                        ; local.get
0000884: 0a                                        ; local index
0000885: 41                                        ; i32.const
0000886: 18                                        ; i32 literal
0000887: 6a                                        ; i32.add
0000888: 44                                        ; f64.const
0000889: 0000 0000 0000 0000                       ; f64 literal
0000891: 39                                        ; f64.store
0000892: 03                                        ; alignment
0000893: 00                                        ; store offset
0000894: 20                                        ; local.get
0000895: 0a                                        ; local index
0000896: 41                                        ; i32.const
0000897: 20                                        ; i32 literal
0000898: 6a                                        ; i32.add
0000899: 43                                        ; f32.const
000089a: 0000 c6c2                                 ; f32 literal
000089e: 38                                        ; f32.store
000089f: 02                                        ; alignment
00008a0: 00                                        ; store offset
00008a1: 20                                        ; local.get
00008a2: 0a                                        ; local index
00008a3: 41                                        ; i32.const
00008a4: 24                                        ; i32 literal
00008a5: 6a                                        ; i32.add
00008a6: 41                                        ; i32.const
00008a7: 00                                        ; i32 literal
00008a8: 36                                        ; i32.store
00008a9: 02                                        ; alignment
00008aa: 00                                        ; store offset
00008ab: 20                                        ; local.get
00008ac: 01                                        ; local index
00008ad: 41                                        ; i32.const
00008ae: 04                                        ; i32 literal
00008af: 6a                                        ; i32.add
00008b0: 20                                        ; local.get
00008b1: 0a                                        ; local index
00008b2: 36                                        ; i32.store
00008b3: 02                                        ; alignment
00008b4: 00                                        ; store offset
00008b5: 20                                        ; local.get
00008b6: 00                                        ; local index
00008b7: 24                                        ; global.set
00008b8: 0c                                        ; global index
00008b9: 41                                        ; i32.const
00008ba: 28                                        ; i32 literal
00008bb: 41                                        ; i32.const
00008bc: 8804                                      ; i32 literal
00008be: 10                                        ; call
00008bf: 0f                                        ; function index
00008c0: 21                                        ; local.set
00008c1: 0e                                        ; local index
00008c2: 20                                        ; local.get
00008c3: 0e                                        ; local index
00008c4: 41                                        ; i32.const
00008c5: 18                                        ; i32 literal
00008c6: 6a                                        ; i32.add
00008c7: 41                                        ; i32.const
00008c8: ffff ffff 07                              ; i32 literal
00008cd: b7                                        ; f64.convert_i32_s
00008ce: 39                                        ; f64.store
00008cf: 03                                        ; alignment
00008d0: 00                                        ; store offset
00008d1: 20                                        ; local.get
00008d2: 0e                                        ; local index
00008d3: 41                                        ; i32.const
00008d4: 10                                        ; i32 literal
00008d5: 6a                                        ; i32.add
00008d6: 41                                        ; i32.const
00008d7: 0a                                        ; i32 literal
00008d8: b7                                        ; f64.convert_i32_s
00008d9: 39                                        ; f64.store
00008da: 03                                        ; alignment
00008db: 00                                        ; store offset
00008dc: 20                                        ; local.get
00008dd: 0e                                        ; local index
00008de: 41                                        ; i32.const
00008df: 08                                        ; i32 literal
00008e0: 6a                                        ; i32.add
00008e1: 41                                        ; i32.const
00008e2: e807                                      ; i32 literal
00008e4: 36                                        ; i32.store
00008e5: 02                                        ; alignment
00008e6: 00                                        ; store offset
00008e7: 20                                        ; local.get
00008e8: 0e                                        ; local index
00008e9: 41                                        ; i32.const
00008ea: 0c                                        ; i32 literal
00008eb: 6a                                        ; i32.add
00008ec: 41                                        ; i32.const
00008ed: e807                                      ; i32 literal
00008ef: 36                                        ; i32.store
00008f0: 02                                        ; alignment
00008f1: 00                                        ; store offset
00008f2: 20                                        ; local.get
00008f3: 0e                                        ; local index
00008f4: 41                                        ; i32.const
00008f5: 20                                        ; i32 literal
00008f6: 6a                                        ; i32.add
00008f7: 43                                        ; f32.const
00008f8: 0000 c6c2                                 ; f32 literal
00008fc: 38                                        ; f32.store
00008fd: 02                                        ; alignment
00008fe: 00                                        ; store offset
00008ff: 20                                        ; local.get
0000900: 0e                                        ; local index
0000901: 41                                        ; i32.const
0000902: 24                                        ; i32 literal
0000903: 6a                                        ; i32.add
0000904: 41                                        ; i32.const
0000905: 00                                        ; i32 literal
0000906: 36                                        ; i32.store
0000907: 02                                        ; alignment
0000908: 00                                        ; store offset
0000909: 20                                        ; local.get
000090a: 0e                                        ; local index
000090b: 24                                        ; global.set
000090c: 0d                                        ; global index
000090d: 0b                                        ; end
; move data: [6c0, 90e) -> [6c1, 90f)
00006bf: ce04                                      ; FIXUP func body size
; function body 19
000090f: 00                                        ; func body size (guess)
0000910: 01                                        ; local decl count
0000911: 10                                        ; local type count
0000912: 7f                                        ; i32
0000913: 41                                        ; i32.const
0000914: 00                                        ; i32 literal
0000915: 21                                        ; local.set
0000916: 0f                                        ; local index
0000917: 02                                        ; block
0000918: 40                                        ; void
0000919: 03                                        ; loop
000091a: 40                                        ; void
000091b: 20                                        ; local.get
000091c: 0f                                        ; local index
000091d: 23                                        ; global.get
000091e: 0c                                        ; global index
000091f: 41                                        ; i32.const
0000920: 04                                        ; i32 literal
0000921: 6a                                        ; i32.add
0000922: 28                                        ; i32.load
0000923: 02                                        ; alignment
0000924: 00                                        ; load offset
0000925: 41                                        ; i32.const
0000926: 01                                        ; i32 literal
0000927: 6b                                        ; i32.sub
0000928: 4a                                        ; i32.gt_s
0000929: 0d                                        ; br_if
000092a: 01                                        ; break depth
000092b: 41                                        ; i32.const
000092c: a80b                                      ; i32 literal
000092e: 20                                        ; local.get
000092f: 0f                                        ; local index
0000930: 10                                        ; call
0000931: 0e                                        ; function index
0000932: 10                                        ; call
0000933: 09                                        ; function index
0000934: 10                                        ; call
0000935: 0d                                        ; function index
0000936: 23                                        ; global.get
0000937: 0c                                        ; global index
0000938: 41                                        ; i32.const
0000939: 08                                        ; i32 literal
000093a: 6a                                        ; i32.add
000093b: 20                                        ; local.get
000093c: 0f                                        ; local index
000093d: 41                                        ; i32.const
000093e: 04                                        ; i32 literal
000093f: 6c                                        ; i32.mul
0000940: 6a                                        ; i32.add
0000941: 28                                        ; i32.load
0000942: 02                                        ; alignment
0000943: 00                                        ; load offset
0000944: 10                                        ; call
0000945: 0c                                        ; function index
0000946: 20                                        ; local.get
0000947: 0f                                        ; local index
0000948: 41                                        ; i32.const
0000949: 01                                        ; i32 literal
000094a: 6a                                        ; i32.add
000094b: 21                                        ; local.set
000094c: 0f                                        ; local index
000094d: 0c                                        ; br
000094e: 00                                        ; break depth
000094f: 0b                                        ; end
0000950: 0b                                        ; end
0000951: 0b                                        ; end
000090f: 42                                        ; FIXUP func body size
; function body 20
0000952: 00                                        ; func body size (guess)
0000953: 01                                        ; local decl count
0000954: 01                                        ; local type count
0000955: 7f                                        ; i32
0000956: 41                                        ; i32.const
0000957: 08                                        ; i32 literal
0000958: 41                                        ; i32.const
0000959: 8809                                      ; i32 literal
000095b: 10                                        ; call
000095c: 0f                                        ; function index
000095d: 21                                        ; local.set
000095e: 00                                        ; local index
000095f: 20                                        ; local.get
0000960: 00                                        ; local index
0000961: 41                                        ; i32.const
0000962: 04                                        ; i32 literal
0000963: 6a                                        ; i32.add
0000964: 41                                        ; i32.const
0000965: e80b                                      ; i32 literal
0000967: 36                                        ; i32.store
0000968: 02                                        ; alignment
0000969: 00                                        ; store offset
000096a: 20                                        ; local.get
000096b: 00                                        ; local index
000096c: 41                                        ; i32.const
000096d: 00                                        ; i32 literal
000096e: 6a                                        ; i32.add
000096f: 41                                        ; i32.const
0000970: b8bc eda7 03                              ; i32 literal
0000975: 36                                        ; i32.store
0000976: 02                                        ; alignment
0000977: 00                                        ; store offset
0000978: 23                                        ; global.get
0000979: 0d                                        ; global index
000097a: 41                                        ; i32.const
000097b: 00                                        ; i32 literal
000097c: 6a                                        ; i32.add
000097d: 20                                        ; local.get
000097e: 00                                        ; local index
000097f: 36                                        ; i32.store
0000980: 02                                        ; alignment
0000981: 00                                        ; store offset
0000982: 23                                        ; global.get
0000983: 0d                                        ; global index
0000984: 41                                        ; i32.const
0000985: 24                                        ; i32 literal
0000986: 6a                                        ; i32.add
0000987: 10                                        ; call
0000988: 11                                        ; function index
0000989: 36                                        ; i32.store
000098a: 02                                        ; alignment
000098b: 00                                        ; store offset
000098c: 0b                                        ; end
0000952: 3a                                        ; FIXUP func body size
; function body 21
000098d: 00                                        ; func body size (guess)
000098e: 00                                        ; local decl count
000098f: 0b                                        ; end
000098d: 02                                        ; FIXUP func body size
; move data: [37d, 990) -> [37e, 991)
000037c: 930c                                      ; FIXUP section size
; section "Data" (11)
0000991: 0b                                        ; section code
0000992: 00                                        ; section size (guess)
0000993: 1b                                        ; num data segments
; data segment header 0
0000994: 00                                      
0000995: 41                                        ; i32.const
0000996: f808                                      ; i32 literal
0000998: 0b                                        ; end
0000999: 09                                        ; data segment size
; data segment data 0
000099a: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
00009a3: 00                                      
00009a4: 41                                        ; i32.const
00009a5: 900b                                      ; i32 literal
00009a7: 0b                                        ; end
00009a8: 04                                        ; data segment size
; data segment data 1
00009a9: 3132 3300                                 ; data segment data
; data segment header 2
00009ad: 00                                      
00009ae: 41                                        ; i32.const
00009af: 980b                                      ; i32 literal
00009b1: 0b                                        ; end
00009b2: 06                                        ; data segment size
; data segment data 2
00009b3: 6669 7273 7400                            ; data segment data
; data segment header 3
00009b9: 00                                      
00009ba: 41                                        ; i32.const
00009bb: a00b                                      ; i32 literal
00009bd: 0b                                        ; end
00009be: 07                                        ; data segment size
; data segment data 3
00009bf: 7365 636f 6e64 00                         ; data segment data
; data segment header 4
00009c6: 00                                      
00009c7: 41                                        ; i32.const
00009c8: a80b                                      ; i32 literal
00009ca: 0b                                        ; end
00009cb: 08                                        ; data segment size
; data segment data 4
00009cc: 696e 6465 783d 2300                       ; data segment data
; data segment header 5
00009d4: 00                                      
00009d5: 41                                        ; i32.const
00009d6: b00b                                      ; i32 literal
00009d8: 0b                                        ; end
00009d9: 1d                                        ; data segment size
; data segment data 5
00009da: 6469 7265 6374 6c79 2063 7265 6174 6520 
00009ea: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 6
00009f7: 00                                      
00009f8: 41                                        ; i32.const
00009f9: d00b                                      ; i32 literal
00009fb: 0b                                        ; end
00009fc: 15                                        ; data segment size
; data segment data 6
00009fd: 7468 6973 2069 7320 6120 7374 7275 6374 
0000a0d: 7572 6521 00                              ; data segment data
; data segment header 7
0000a12: 00                                      
0000a13: 41                                        ; i32.const
0000a14: e80b                                      ; i32 literal
0000a16: 0b                                        ; end
0000a17: 0c                                        ; data segment size
; data segment data 7
0000a18: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 8
0000a24: 00                                      
0000a25: 41                                        ; i32.const
0000a26: f80b                                      ; i32 literal
0000a28: 0b                                        ; end
0000a29: 09                                        ; data segment size
; data segment data 8
0000a2a: 4141 4141 4141 4141 00                    ; data segment data
; data segment header 9
0000a33: 00                                      
0000a34: 41                                        ; i32.const
0000a35: 880c                                      ; i32 literal
0000a37: 0b                                        ; end
0000a38: 09                                        ; data segment size
; data segment data 9
0000a39: 4242 4242 4242 4242 00                    ; data segment data
; data segment header 10
0000a42: 00                                      
0000a43: 41                                        ; i32.const
0000a44: 980c                                      ; i32 literal
0000a46: 0b                                        ; end
0000a47: 0b                                        ; data segment size
; data segment data 10
0000a48: 4343 4343 4343 4343 4343 00               ; data segment data
; data segment header 11
0000a53: 00                                      
0000a54: 41                                        ; i32.const
0000a55: a80c                                      ; i32 literal
0000a57: 0b                                        ; end
0000a58: 0b                                        ; data segment size
; data segment data 11
0000a59: 4444 4444 4444 4444 4444 00               ; data segment data
; data segment header 12
0000a64: 00                                      
0000a65: 41                                        ; i32.const
0000a66: b80c                                      ; i32 literal
0000a68: 0b                                        ; end
0000a69: 03                                        ; data segment size
; data segment data 12
0000a6a: 4545 00                                   ; data segment data
; data segment header 13
0000a6d: 00                                      
0000a6e: 41                                        ; i32.const
0000a6f: c00c                                      ; i32 literal
0000a71: 0b                                        ; end
0000a72: 08                                        ; data segment size
; data segment data 13
0000a73: 4646 4646 4646 4600                       ; data segment data
; data segment header 14
0000a7b: 00                                      
0000a7c: 41                                        ; i32.const
0000a7d: c80c                                      ; i32 literal
0000a7f: 0b                                        ; end
0000a80: 09                                        ; data segment size
; data segment data 14
0000a81: 4747 4747 4747 4747 00                    ; data segment data
; data segment header 15
0000a8a: 00                                      
0000a8b: 41                                        ; i32.const
0000a8c: d80c                                      ; i32 literal
0000a8e: 0b                                        ; end
0000a8f: 0f                                        ; data segment size
; data segment data 15
0000a90: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 16
0000a9f: 00                                      
0000aa0: 41                                        ; i32.const
0000aa1: e80c                                      ; i32 literal
0000aa3: 0b                                        ; end
0000aa4: 38                                        ; data segment size
; data segment data 16
0000aa5: 4a61 7661 7363 7269 7074 206f 626a 6563 
0000ab5: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000ac5: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000ad5: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 17
0000add: 00                                      
0000ade: 41                                        ; i32.const
0000adf: a00d                                      ; i32 literal
0000ae1: 0b                                        ; end
0000ae2: 0e                                        ; data segment size
; data segment data 17
0000ae3: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 18
0000af1: 00                                      
0000af2: 41                                        ; i32.const
0000af3: b00d                                      ; i32 literal
0000af5: 0b                                        ; end
0000af6: 0a                                        ; data segment size
; data segment data 18
0000af7: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 19
0000b01: 00                                      
0000b02: 41                                        ; i32.const
0000b03: c00d                                      ; i32 literal
0000b05: 0b                                        ; end
0000b06: 21                                        ; data segment size
; data segment data 19
0000b07: 436f 7079 7269 6768 7420 2863 2920 7661 
0000b17: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
0000b27: 00                                        ; data segment data
; data segment header 20
0000b28: 00                                      
0000b29: 41                                        ; i32.const
0000b2a: e80d                                      ; i32 literal
0000b2c: 0b                                        ; end
0000b2d: 0b                                        ; data segment size
; data segment data 20
0000b2e: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 21
0000b39: 00                                      
0000b3a: 41                                        ; i32.const
0000b3b: f80d                                      ; i32 literal
0000b3d: 0b                                        ; end
0000b3e: 25                                        ; data segment size
; data segment data 21
0000b3f: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000b4f: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000b5f: 3535 6239 00                              ; data segment data
; data segment header 22
0000b64: 00                                      
0000b65: 41                                        ; i32.const
0000b66: a00e                                      ; i32 literal
0000b68: 0b                                        ; end
0000b69: 08                                        ; data segment size
; data segment data 22
0000b6a: 312e 302e 302e 3000                       ; data segment data
; data segment header 23
0000b72: 00                                      
0000b73: 41                                        ; i32.const
0000b74: a80e                                      ; i32 literal
0000b76: 0b                                        ; end
0000b77: 08                                        ; data segment size
; data segment data 23
0000b78: 312e 302e 302e 3000                       ; data segment data
; data segment header 24
0000b80: 00                                      
0000b81: 41                                        ; i32.const
0000b82: 0d                                        ; i32 literal
0000b83: 0b                                        ; end
0000b84: bd03                                      ; data segment size
; data segment data 24
0000b86: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000b96: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000ba6: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
0000bb6: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
0000bc6: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
0000bd6: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000be6: 5731 3073 496e 4a68 6479 4936 496d 597a 
0000bf6: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
0000c06: 4c43 4a35 496a 7037 496d 646c 626d 5679 
0000c16: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000c26: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000c36: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
0000c46: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000c56: 636d 4633 496a 6f69 6154 4d79 4969 7769 
0000c66: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
0000c76: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
0000c86: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000c96: 6479 4936 496c 7378 4d54 5977 5857 3568 
0000ca6: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
0000cb6: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
0000cc6: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000cd6: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000ce6: 4d54 5977 5857 3568 6257 5569 4c43 4a30 
0000cf6: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000d06: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000d16: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000d26: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000d36: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 25
0000d43: 00                                      
0000d44: 41                                        ; i32.const
0000d45: 8804                                      ; i32 literal
0000d47: 0b                                        ; end
0000d48: ad04                                      ; data segment size
; data segment data 25
0000d4a: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d5a: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000d6a: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
0000d7a: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
0000d8a: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
0000d9a: 6579 4a75 5957 316c 496a 7037 496d 646c 
0000daa: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000dba: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000dca: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000dda: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000dea: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000dfa: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000e0a: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000e1a: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000e2a: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000e3a: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000e4a: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000e5a: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000e6a: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000e7a: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
0000e8a: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000e9a: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000eaa: 6558 426c 496a 6f30 6653 7769 636d 466b 
0000eba: 6158 567a 496a 7037 496d 646c 626d 5679 
0000eca: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000eda: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000eea: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000efa: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000f0a: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000f1a: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000f2a: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000f3a: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000f4a: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000f5a: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000f6a: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 26
0000f77: 00                                      
0000f78: 41                                        ; i32.const
0000f79: 8809                                      ; i32 literal
0000f7b: 0b                                        ; end
0000f7c: 8502                                      ; data segment size
; data segment data 26
0000f7e: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000f8e: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000f9e: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000fae: 6331 3970 5a43 4936 4d54 4532 4d43 7769 
0000fbe: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000fce: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000fde: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000fee: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000ffe: 5a53 4936 4d58 3073 496d 3568 6257 5569 
000100e: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
000101e: 5731 3073 496e 4a68 6479 4936 496e 4e30 
000102e: 636d 6c75 5a79 4973 496e 5235 6347 5569 
000103e: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
000104e: 5933 5169 4f6e 5279 6457 5573 496d 316c 
000105e: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
000106e: 5957 316c 6333 4268 5932 5569 4f6d 3531 
000107e: 6247 7839 00                              ; data segment data
; move data: [993, 1083) -> [994, 1084)
0000992: f00d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0132 0a60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 017f 0060 0001 7f60 0000 02e3 0110 
0000040: 044d 6174 6803 706f 7700 0004 4d61 7468 
0000050: 0473 7172 7400 0104 4d61 7468 0365 7870 
0000060: 0001 044d 6174 6803 636f 7300 0104 4d61 
0000070: 7468 0672 616e 646f 6d00 0204 4d61 7468 
0000080: 0463 6569 6c00 0104 4d61 7468 0566 6c6f 
0000090: 6f72 0001 0247 4309 6164 644f 626a 6563 
00000a0: 7400 0306 7374 7269 6e67 0772 6570 6c61 
00000b0: 6365 0004 0673 7472 696e 6703 6164 6400 
00000c0: 0506 7374 7269 6e67 066c 656e 6774 6800 
00000d0: 0606 7374 7269 6e67 0769 6e64 6578 4f66 
00000e0: 0005 0763 6f6e 736f 6c65 036c 6f67 0007 
00000f0: 0763 6f6e 736f 6c65 036c 6f67 0007 0673 
0000100: 7472 696e 6708 746f 5374 7269 6e67 0006 
0000110: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
0000120: 0001 0317 1605 0808 0808 0808 0808 0808 
0000130: 0808 0808 0808 0909 0909 0906 9101 0f7f 
0000140: 0141 b00e 0b7c 0144 6957 148b 0abf 0540 
0000150: 0b7c 0144 182d 4454 fb21 0940 0b7f 0141 
0000160: ffff ffff 070b 7e01 42ff ffff ffff ffff 
0000170: ffff 000b 7d01 43ff ff7f 7f0b 7c01 44ff 
0000180: ffff ffff ffef 7f0b 7f01 4180 8080 8078 
0000190: 0b7e 0142 8080 8080 8080 8080 807f 0b7d 
00001a0: 0143 ffff 7fff 0b7c 0144 ffff ffff ffff 
00001b0: efff 0b7c 0144 0000 0000 0040 8f40 0b7f 
00001c0: 0141 000b 7f01 4100 0b7f 0141 f808 0b07 
00001d0: a603 0f14 676c 6f62 616c 2e47 6574 4d65 
00001e0: 6d6f 7279 5369 7a65 0010 126f 626a 6563 
00001f0: 7447 432e 6e65 7743 6972 636c 6500 1112 
0000200: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65 
0000210: 6374 0013 186e 756d 6265 7241 7272 6179 
0000220: 2e63 7265 6174 6556 6563 746f 7200 1417 
0000230: 6e75 6d62 6572 4172 7261 792e 6e61 6d65 
0000240: 7356 6563 746f 7200 1516 6e75 6d62 6572 
0000250: 4172 7261 792e 7374 7275 6374 7572 6573 
0000260: 0016 1a41 7373 656d 626c 7949 6e66 6f2e 
0000270: 4173 7365 6d62 6c79 5469 746c 6500 1720 
0000280: 4173 7365 6d62 6c79 496e 666f 2e41 7373 
0000290: 656d 626c 7944 6573 6372 6970 7469 6f6e 
00002a0: 0018 1c41 7373 656d 626c 7949 6e66 6f2e 
00002b0: 4173 7365 6d62 6c79 436f 6d70 616e 7900 
00002c0: 191c 4173 7365 6d62 6c79 496e 666f 2e41 
00002d0: 7373 656d 626c 7950 726f 6475 6374 001a 
00002e0: 1e41 7373 656d 626c 7949 6e66 6f2e 4173 
00002f0: 7365 6d62 6c79 436f 7079 7269 6768 7400 
0000300: 1b1e 4173 7365 6d62 6c79 496e 666f 2e41 
0000310: 7373 656d 626c 7954 7261 6465 6d61 726b 
0000320: 001c 1141 7373 656d 626c 7949 6e66 6f2e 
0000330: 4775 6964 001d 1c41 7373 656d 626c 7949 
0000340: 6e66 6f2e 4173 7365 6d62 6c79 5665 7273 
0000350: 696f 6e00 1e20 4173 7365 6d62 6c79 496e 
0000360: 666f 2e41 7373 656d 626c 7946 696c 6556 
0000370: 6572 7369 6f6e 001f 0801 200a 930c 163a 
0000380: 0102 7f23 0021 0220 0220 006a 2400 2300 
0000390: 4108 6f21 0320 0304 4041 0820 036b 2103 
00003a0: 2300 2003 6a24 0005 2300 4108 6a24 000b 
00003b0: 2002 2001 1007 2002 0f0b 0500 2300 0f0b 
00003c0: ae01 0116 7f23 0b41 02b7 a224 0b41 1c41 
00003d0: 0d10 0f21 1020 1041 006a 230b b638 0200 
00003e0: 2010 4104 6a41 8fce 00b2 3802 0010 1221 
00003f0: 1320 1041 0c6a 2112 2012 4100 6a20 1341 
0000400: 006a 2802 0036 0200 2012 4104 6a20 1341 
0000410: 046a 2802 0036 0200 4108 4188 0910 0f21 
0000420: 1120 1141 046a 41b0 0b36 0200 2011 4100 
0000430: 6a41 0036 0200 2011 2115 2010 4114 6a21 
0000440: 1420 1441 006a 2015 4100 6a28 0200 3602 
0000450: 0020 1441 046a 2015 4104 6a28 0200 3602 
0000460: 0020 1041 086a 41e4 0036 0200 2010 0f0b 
0000470: 2701 017f 4108 4188 0910 0f21 0020 0041 
0000480: 046a 41d0 0b36 0200 2000 4100 6a41 87e4 
0000490: 0636 0200 2000 0f0b 0500 230d 0f0b 9101 
00004a0: 0103 7f41 0841 0a41 046c 6a41 0710 0f21 
00004b0: 0120 0141 0136 0200 2001 4104 6a41 0a36 
00004c0: 0200 2001 4108 6a21 0220 0241 006a 4101 
00004d0: 3602 0020 0241 046a 4102 3602 0020 0241 
00004e0: 086a 4103 3602 0020 0241 0c6a 4104 3602 
00004f0: 0020 0241 106a 4105 3602 0020 0241 146a 
0000500: 4106 3602 0020 0241 186a 4107 3602 0020 
0000510: 0241 1c6a 4108 3602 0020 0241 206a 4109 
0000520: 3602 0020 0241 246a 4100 3602 0020 010f 
0000530: 0b7a 0102 7f41 0841 0741 046c 6a41 0710 
0000540: 0f21 0020 0041 0536 0200 2000 4104 6a41 
0000550: 0736 0200 2000 4108 6a21 0120 0141 006a 
0000560: 41f8 0b36 0200 2001 4104 6a41 880c 3602 
0000570: 0020 0141 086a 4198 0c36 0200 2001 410c 
0000580: 6a41 a80c 3602 0020 0141 106a 41b8 0c36 
0000590: 0200 2001 4114 6a41 c00c 3602 0020 0141 
00005a0: 186a 41c8 0c36 0200 2000 0f0b c801 0109 
00005b0: 7f10 1521 0041 0841 0341 086c 6a41 0710 
00005c0: 0f21 0420 0441 8809 3602 0020 0441 046a 
00005d0: 4103 3602 0020 0441 086a 2105 2005 4100 
00005e0: 6a21 0620 0641 8809 1007 2006 2101 2001 
00005f0: 4104 6a20 0041 086a 4100 4104 6c6a 2802 
0000600: 0036 0200 2001 4100 6a41 0036 0200 2005 
0000610: 4108 6a21 0720 0741 8809 1007 2007 2102 
0000620: 2002 4104 6a20 0041 086a 4101 4104 6c6a 
0000630: 2802 0036 0200 2002 4100 6a41 0136 0200 
0000640: 2005 4110 6a21 0820 0841 8809 1007 2008 
0000650: 2103 2003 4104 6a20 0041 086a 4102 4104 
0000660: 6c6a 2802 0036 0200 2003 4100 6a41 0236 
0000670: 0200 2004 0f0b 0600 41d8 0c0f 0b06 0041 
0000680: e80c 0f0b 0600 41a0 0d0f 0b06 0041 b00d 
0000690: 0f0b 0600 41c0 0d0f 0b06 0041 e80d 0f0b 
00006a0: 0600 41f8 0d0f 0b06 0041 a00e 0f0b 0600 
00006b0: 41a8 0e0f 0b0a 0010 2110 2210 2310 240b 
00006c0: ce04 010f 7f41 0841 0241 046c 6a41 0710 
00006d0: 0f21 0020 0041 8804 3602 0020 0041 046a 
00006e0: 4102 3602 0020 0041 086a 2101 4128 4188 
00006f0: 0410 0f21 0220 0241 086a 41e4 0036 0200 
0000700: 411c 410d 100f 2103 4108 4188 0910 0f21 
0000710: 0420 0441 046a 4190 0b36 0200 2004 4100 
0000720: 6a41 0036 0200 2004 2105 2003 410c 6a21 
0000730: 0620 0641 006a 2005 4100 6a28 0200 3602 
0000740: 0020 0641 046a 2005 4104 6a28 0200 3602 
0000750: 0020 0341 006a 4300 0000 0038 0200 2003 
0000760: 4104 6a43 0000 0000 3802 0020 0341 086a 
0000770: 41e4 0036 0200 2002 4124 6a20 0336 0200 
0000780: 2002 4120 6a41 e707 b238 0200 4108 4188 
0000790: 0910 0f21 0720 0741 046a 4198 0b36 0200 
00007a0: 2007 4100 6a41 0036 0200 2007 2108 2002 
00007b0: 4100 6a21 0920 0941 006a 2008 4100 6a28 
00007c0: 0200 3602 0020 0941 046a 2008 4104 6a28 
00007d0: 0200 3602 0020 0241 0c6a 41e8 0736 0200 
00007e0: 2002 4110 6a44 0000 0000 0000 0000 3903 
00007f0: 0020 0241 186a 4400 0000 0000 0000 0039 
0000800: 0300 2001 4100 6a20 0236 0200 4128 4188 
0000810: 0410 0f21 0a41 0841 8809 100f 210b 200b 
0000820: 4104 6a41 a00b 3602 0020 0b41 006a 4100 
0000830: 3602 0020 0b21 0c20 0a41 006a 210d 200d 
0000840: 4100 6a20 0c41 006a 2802 0036 0200 200d 
0000850: 4104 6a20 0c41 046a 2802 0036 0200 200a 
0000860: 4108 6a41 e807 3602 0020 0a41 0c6a 41e8 
0000870: 0736 0200 200a 4110 6a44 0000 0000 0000 
0000880: 0000 3903 0020 0a41 186a 4400 0000 0000 
0000890: 0000 0039 0300 200a 4120 6a43 0000 c6c2 
00008a0: 3802 0020 0a41 246a 4100 3602 0020 0141 
00008b0: 046a 200a 3602 0020 0024 0c41 2841 8804 
00008c0: 100f 210e 200e 4118 6a41 ffff ffff 07b7 
00008d0: 3903 0020 0e41 106a 410a b739 0300 200e 
00008e0: 4108 6a41 e807 3602 0020 0e41 0c6a 41e8 
00008f0: 0736 0200 200e 4120 6a43 0000 c6c2 3802 
0000900: 0020 0e41 246a 4100 3602 0020 0e24 0d0b 
0000910: 4201 107f 4100 210f 0240 0340 200f 230c 
0000920: 4104 6a28 0200 4101 6b4a 0d01 41a8 0b20 
0000930: 0f10 0e10 0910 0d23 0c41 086a 200f 4104 
0000940: 6c6a 2802 0010 0c20 0f41 016a 210f 0c00 
0000950: 0b0b 0b3a 0101 7f41 0841 8809 100f 2100 
0000960: 2000 4104 6a41 e80b 3602 0020 0041 006a 
0000970: 41b8 bced a703 3602 0023 0d41 006a 2000 
0000980: 3602 0023 0d41 246a 1011 3602 000b 0200 
0000990: 0b0b f00d 1b00 41f8 080b 0939 3939 3939 
00009a0: 3939 3900 0041 900b 0b04 3132 3300 0041 
00009b0: 980b 0b06 6669 7273 7400 0041 a00b 0b07 
00009c0: 7365 636f 6e64 0000 41a8 0b0b 0869 6e64 
00009d0: 6578 3d23 0000 41b0 0b0b 1d64 6972 6563 
00009e0: 746c 7920 6372 6561 7465 2061 2073 7472 
00009f0: 7563 7475 7274 6500 0041 d00b 0b15 7468 
0000a00: 6973 2069 7320 6120 7374 7275 6374 7572 
0000a10: 6521 0000 41e8 0b0b 0c74 6573 7420 6f62 
0000a20: 6a65 6374 0000 41f8 0b0b 0941 4141 4141 
0000a30: 4141 4100 0041 880c 0b09 4242 4242 4242 
0000a40: 4242 0000 4198 0c0b 0b43 4343 4343 4343 
0000a50: 4343 4300 0041 a80c 0b0b 4444 4444 4444 
0000a60: 4444 4444 0000 41b8 0c0b 0345 4500 0041 
0000a70: c00c 0b08 4646 4646 4646 4600 0041 c80c 
0000a80: 0b09 4747 4747 4747 4747 0000 41d8 0c0b 
0000a90: 0f6a 735f 6f62 6a65 6374 2064 656d 6f00 
0000aa0: 0041 e80c 0b38 4a61 7661 7363 7269 7074 
0000ab0: 206f 626a 6563 7420 6765 6e65 7261 7465 
0000ac0: 2066 726f 6d20 5642 2e4e 4554 2057 6562 
0000ad0: 4173 7365 6d62 6c79 2064 656d 6f00 0041 
0000ae0: a00d 0b0e 7661 6e69 6c6c 6176 622e 6170 
0000af0: 7000 0041 b00d 0b0a 6a73 5f6f 626a 6563 
0000b00: 7400 0041 c00d 0b21 436f 7079 7269 6768 
0000b10: 7420 2863 2920 7661 6e69 6c6c 6176 622e 
0000b20: 6170 7020 3230 3139 0000 41e8 0d0b 0b64 
0000b30: 6f74 7661 6e69 6c6c 6100 0041 f80d 0b25 
0000b40: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000b50: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000b60: 3535 6239 0000 41a0 0e0b 0831 2e30 2e30 
0000b70: 2e30 0000 41a8 0e0b 0831 2e30 2e30 2e30 
0000b80: 0000 410d 0bbd 0365 794a 6a62 3231 745a 
0000b90: 5735 3049 6a70 7564 5778 734c 434a 6a62 
0000ba0: 4746 7a63 7949 3649 6d4e 7063 6d4e 735a 
0000bb0: 5349 7349 6d4e 7359 584e 7a58 326c 6b49 
0000bc0: 6a6f 784d 7977 695a 6d6c 6c62 4752 7a49 
0000bd0: 6a70 3749 6e67 694f 6e73 695a 3256 755a 
0000be0: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000bf0: 7949 3649 6d59 7a4d 6949 7349 6e52 3563 
0000c00: 4755 694f 6a4e 394c 434a 3549 6a70 3749 
0000c10: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
0000c20: 434a 7959 5863 694f 694a 6d4d 7a49 694c 
0000c30: 434a 3065 5842 6c49 6a6f 7a66 5377 6963 
0000c40: 6949 3665 794a 6e5a 5735 6c63 6d6c 6a49 
0000c50: 6a70 6258 5377 6963 6d46 3349 6a6f 6961 
0000c60: 544d 7949 6977 6964 486c 775a 5349 364d 
0000c70: 5830 7349 6d35 6862 5756 505a 6c67 694f 
0000c80: 6e73 695a 3256 755a 584a 7059 7949 3657 
0000c90: 3130 7349 6e4a 6864 7949 3649 6c73 784d 
0000ca0: 5459 7758 5735 6862 5755 694c 434a 3065 
0000cb0: 5842 6c49 6a6f 784d 4830 7349 6d35 6862 
0000cc0: 5756 505a 6c6b 694f 6e73 695a 3256 755a 
0000cd0: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000ce0: 7949 3649 6c73 784d 5459 7758 5735 6862 
0000cf0: 5755 694c 434a 3065 5842 6c49 6a6f 784d 
0000d00: 4831 394c 434a 7063 314e 3063 6e56 6a64 
0000d10: 4349 365a 6d46 7363 3255 7349 6d31 6c64 
0000d20: 4768 765a 484d 694f 6e74 394c 434a 7559 
0000d30: 5731 6c63 3342 6859 3255 694f 6d35 3162 
0000d40: 4778 3900 0041 8804 0bad 0465 794a 6a62 
0000d50: 3231 745a 5735 3049 6a70 7564 5778 734c 
0000d60: 434a 6a62 4746 7a63 7949 3649 6e4a 6c59 
0000d70: 3352 6862 6d64 735a 5349 7349 6d4e 7359 
0000d80: 584e 7a58 326c 6b49 6a6f 314d 6a41 7349 
0000d90: 6d5a 705a 5778 6b63 7949 3665 794a 7559 
0000da0: 5731 6c49 6a70 3749 6d64 6c62 6d56 7961 
0000db0: 574d 694f 6c74 644c 434a 7959 5863 694f 
0000dc0: 694a 624d 5445 324d 4631 7559 5731 6c49 
0000dd0: 6977 6964 486c 775a 5349 364d 5442 394c 
0000de0: 434a 6f49 6a70 3749 6d64 6c62 6d56 7961 
0000df0: 574d 694f 6c74 644c 434a 7959 5863 694f 
0000e00: 694a 704d 7a49 694c 434a 3065 5842 6c49 
0000e10: 6a6f 7866 5377 6964 7949 3665 794a 6e5a 
0000e20: 5735 6c63 6d6c 6a49 6a70 6258 5377 6963 
0000e30: 6d46 3349 6a6f 6961 544d 7949 6977 6964 
0000e40: 486c 775a 5349 364d 5830 7349 6e6b 694f 
0000e50: 6e73 695a 3256 755a 584a 7059 7949 3657 
0000e60: 3130 7349 6e4a 6864 7949 3649 6d59 324e 
0000e70: 4349 7349 6e52 3563 4755 694f 6a52 394c 
0000e80: 434a 3449 6a70 3749 6d64 6c62 6d56 7961 
0000e90: 574d 694f 6c74 644c 434a 7959 5863 694f 
0000ea0: 694a 6d4e 6a51 694c 434a 3065 5842 6c49 
0000eb0: 6a6f 3066 5377 6963 6d46 6b61 5856 7a49 
0000ec0: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000ed0: 6c74 644c 434a 7959 5863 694f 694a 6d4d 
0000ee0: 7a49 694c 434a 3065 5842 6c49 6a6f 7a66 
0000ef0: 5377 6961 5735 755a 5849 694f 6e73 695a 
0000f00: 3256 755a 584a 7059 7949 3657 3130 7349 
0000f10: 6e4a 6864 7949 3649 6c73 784d 3131 6a61 
0000f20: 584a 6a62 4755 694c 434a 3065 5842 6c49 
0000f30: 6a6f 784d 4831 394c 434a 7063 314e 3063 
0000f40: 6e56 6a64 4349 365a 6d46 7363 3255 7349 
0000f50: 6d31 6c64 4768 765a 484d 694f 6e74 394c 
0000f60: 434a 7559 5731 6c63 3342 6859 3255 694f 
0000f70: 6d35 3162 4778 3900 0041 8809 0b85 0265 
0000f80: 794a 6a62 3231 745a 5735 3049 6a70 7564 
0000f90: 5778 734c 434a 6a62 4746 7a63 7949 3649 
0000fa0: 6d35 6862 5755 694c 434a 6a62 4746 7a63 
0000fb0: 3139 705a 4349 364d 5445 324d 4377 695a 
0000fc0: 6d6c 6c62 4752 7a49 6a70 3749 6e4e 7664 
0000fd0: 584a 6a5a 5349 3665 794a 6e5a 5735 6c63 
0000fe0: 6d6c 6a49 6a70 6258 5377 6963 6d46 3349 
0000ff0: 6a6f 6961 544d 7949 6977 6964 486c 775a 
0001000: 5349 364d 5830 7349 6d35 6862 5755 694f 
0001010: 6e73 695a 3256 755a 584a 7059 7949 3657 
0001020: 3130 7349 6e4a 6864 7949 3649 6e4e 3063 
0001030: 6d6c 755a 7949 7349 6e52 3563 4755 694f 
0001040: 6a56 3966 5377 6961 584e 5464 484a 3159 
0001050: 3351 694f 6e52 7964 5755 7349 6d31 6c64 
0001060: 4768 765a 484d 694f 6e74 394c 434a 7559 
0001070: 5731 6c63 3342 6859 3255 694f 6d35 3162 
0001080: 4778 3900                               
