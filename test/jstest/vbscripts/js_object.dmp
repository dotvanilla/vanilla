0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 10                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
00000f1: 11                                        ; FIXUP section size
; section "Global" (6)
0000103: 06                                        ; section code
0000104: 00                                        ; section size (guess)
0000105: 0d                                        ; num globals
0000106: 7f                                        ; i32
0000107: 01                                        ; global mutability
0000108: 41                                        ; i32.const
0000109: c90b                                      ; i32 literal
000010b: 0b                                        ; end
000010c: 7c                                        ; f64
000010d: 01                                        ; global mutability
000010e: 44                                        ; f64.const
000010f: 6957 148b 0abf 0540                       ; f64 literal
0000117: 0b                                        ; end
0000118: 7c                                        ; f64
0000119: 01                                        ; global mutability
000011a: 44                                        ; f64.const
000011b: 182d 4454 fb21 0940                       ; f64 literal
0000123: 0b                                        ; end
0000124: 7f                                        ; i32
0000125: 01                                        ; global mutability
0000126: 41                                        ; i32.const
0000127: ffff ffff 07                              ; i32 literal
000012c: 0b                                        ; end
000012d: 7e                                        ; i64
000012e: 01                                        ; global mutability
000012f: 42                                        ; i64.const
0000130: ffff ffff ffff ffff ff00                  ; i64 literal
000013a: 0b                                        ; end
000013b: 7d                                        ; f32
000013c: 01                                        ; global mutability
000013d: 43                                        ; f32.const
000013e: ffff 7f7f                                 ; f32 literal
0000142: 0b                                        ; end
0000143: 7c                                        ; f64
0000144: 01                                        ; global mutability
0000145: 44                                        ; f64.const
0000146: ffff ffff ffff ef7f                       ; f64 literal
000014e: 0b                                        ; end
000014f: 7f                                        ; i32
0000150: 01                                        ; global mutability
0000151: 41                                        ; i32.const
0000152: 8080 8080 78                              ; i32 literal
0000157: 0b                                        ; end
0000158: 7e                                        ; i64
0000159: 01                                        ; global mutability
000015a: 42                                        ; i64.const
000015b: 8080 8080 8080 8080 807f                  ; i64 literal
0000165: 0b                                        ; end
0000166: 7d                                        ; f32
0000167: 01                                        ; global mutability
0000168: 43                                        ; f32.const
0000169: ffff 7fff                                 ; f32 literal
000016d: 0b                                        ; end
000016e: 7c                                        ; f64
000016f: 01                                        ; global mutability
0000170: 44                                        ; f64.const
0000171: ffff ffff ffff efff                       ; f64 literal
0000179: 0b                                        ; end
000017a: 7c                                        ; f64
000017b: 01                                        ; global mutability
000017c: 44                                        ; f64.const
000017d: 0000 0000 0040 8f40                       ; f64 literal
0000185: 0b                                        ; end
0000186: 7f                                        ; i32
0000187: 01                                        ; global mutability
0000188: 41                                        ; i32.const
0000189: 00                                        ; i32 literal
000018a: 0b                                        ; end
; move data: [105, 18b) -> [106, 18c)
0000104: 8601                                      ; FIXUP section size
; section "Export" (7)
000018c: 07                                        ; section code
000018d: 00                                        ; section size (guess)
000018e: 0b                                        ; num exports
000018f: 11                                        ; string length
0000190: 4d6f 6475 6c65 312e 6e65 7743 6972 636c  Module1.newCircl
00001a0: 65                                       e  ; export name
00001a1: 00                                        ; export kind
00001a2: 0d                                        ; export func index
00001a3: 11                                        ; string length
00001a4: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
00001b4: 74                                       t  ; export name
00001b5: 00                                        ; export kind
00001b6: 0f                                        ; export func index
00001b7: 1a                                        ; string length
00001b8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c8: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001d2: 00                                        ; export kind
00001d3: 10                                        ; export func index
00001d4: 20                                        ; string length
00001d5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e5: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001f5: 00                                        ; export kind
00001f6: 11                                        ; export func index
00001f7: 1c                                        ; string length
00001f8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000208: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000214: 00                                        ; export kind
0000215: 12                                        ; export func index
0000216: 1c                                        ; string length
0000217: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000227: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000233: 00                                        ; export kind
0000234: 13                                        ; export func index
0000235: 1e                                        ; string length
0000236: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000246: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000254: 00                                        ; export kind
0000255: 14                                        ; export func index
0000256: 1e                                        ; string length
0000257: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000267: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000275: 00                                        ; export kind
0000276: 15                                        ; export func index
0000277: 11                                        ; string length
0000278: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000288: 64                                       d  ; export name
0000289: 00                                        ; export kind
000028a: 16                                        ; export func index
000028b: 1c                                        ; string length
000028c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000029c: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002a8: 00                                        ; export kind
00002a9: 17                                        ; export func index
00002aa: 20                                        ; string length
00002ab: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002bb: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002cb: 00                                        ; export kind
00002cc: 18                                        ; export func index
; move data: [18e, 2cd) -> [18f, 2ce)
000018d: bf02                                      ; FIXUP section size
; section "Start" (8)
00002ce: 08                                        ; section code
00002cf: 00                                        ; section size (guess)
00002d0: 19                                        ; start func index
00002cf: 01                                        ; FIXUP section size
; section "Code" (10)
00002d1: 0a                                        ; section code
00002d2: 00                                        ; section size (guess)
00002d3: 10                                        ; num functions
; function body 0
00002d4: 00                                        ; func body size (guess)
00002d5: 01                                        ; local decl count
00002d6: 01                                        ; local type count
00002d7: 7f                                        ; i32
00002d8: 23                                        ; global.get
00002d9: 00                                        ; global index
00002da: 21                                        ; local.set
00002db: 02                                        ; local index
00002dc: 20                                        ; local.get
00002dd: 02                                        ; local index
00002de: 20                                        ; local.get
00002df: 00                                        ; local index
00002e0: 6a                                        ; i32.add
00002e1: 24                                        ; global.set
00002e2: 00                                        ; global index
00002e3: 20                                        ; local.get
00002e4: 02                                        ; local index
00002e5: 20                                        ; local.get
00002e6: 01                                        ; local index
00002e7: 10                                        ; call
00002e8: 07                                        ; function index
00002e9: 20                                        ; local.get
00002ea: 02                                        ; local index
00002eb: 0f                                        ; return
00002ec: 0b                                        ; end
00002d4: 18                                        ; FIXUP func body size
; function body 1
00002ed: 00                                        ; func body size (guess)
00002ee: 01                                        ; local decl count
00002ef: 02                                        ; local type count
00002f0: 7f                                        ; i32
00002f1: 23                                        ; global.get
00002f2: 0b                                        ; global index
00002f3: 41                                        ; i32.const
00002f4: 02                                        ; i32 literal
00002f5: b7                                        ; f64.convert_i32_s
00002f6: a2                                        ; f64.mul
00002f7: 24                                        ; global.set
00002f8: 0b                                        ; global index
00002f9: 41                                        ; i32.const
00002fa: 10                                        ; i32 literal
00002fb: 41                                        ; i32.const
00002fc: fe01                                      ; i32 literal
00002fe: 10                                        ; call
00002ff: 0c                                        ; function index
0000300: 21                                        ; local.set
0000301: 01                                        ; local index
0000302: 20                                        ; local.get
0000303: 01                                        ; local index
0000304: 41                                        ; i32.const
0000305: 00                                        ; i32 literal
0000306: 6a                                        ; i32.add
0000307: 23                                        ; global.get
0000308: 0b                                        ; global index
0000309: b6                                        ; f32.demote_f64
000030a: 38                                        ; f32.store
000030b: 02                                        ; alignment
000030c: 00                                        ; store offset
000030d: 20                                        ; local.get
000030e: 01                                        ; local index
000030f: 41                                        ; i32.const
0000310: 04                                        ; i32 literal
0000311: 6a                                        ; i32.add
0000312: 41                                        ; i32.const
0000313: 8fce 00                                   ; i32 literal
0000316: b2                                        ; f32.convert_i32_s
0000317: 38                                        ; f32.store
0000318: 02                                        ; alignment
0000319: 00                                        ; store offset
000031a: 20                                        ; local.get
000031b: 01                                        ; local index
000031c: 41                                        ; i32.const
000031d: 0c                                        ; i32 literal
000031e: 6a                                        ; i32.add
000031f: 10                                        ; call
0000320: 0e                                        ; function index
0000321: 36                                        ; i32.store
0000322: 02                                        ; alignment
0000323: 00                                        ; store offset
0000324: 20                                        ; local.get
0000325: 01                                        ; local index
0000326: 41                                        ; i32.const
0000327: 08                                        ; i32 literal
0000328: 6a                                        ; i32.add
0000329: 41                                        ; i32.const
000032a: e400                                      ; i32 literal
000032c: 36                                        ; i32.store
000032d: 02                                        ; alignment
000032e: 00                                        ; store offset
000032f: 20                                        ; local.get
0000330: 01                                        ; local index
0000331: 0f                                        ; return
0000332: 0b                                        ; end
00002ed: 45                                        ; FIXUP func body size
; function body 2
0000333: 00                                        ; func body size (guess)
0000334: 01                                        ; local decl count
0000335: 01                                        ; local type count
0000336: 7f                                        ; i32
0000337: 41                                        ; i32.const
0000338: 04                                        ; i32 literal
0000339: 41                                        ; i32.const
000033a: 0d                                        ; i32 literal
000033b: 10                                        ; call
000033c: 0c                                        ; function index
000033d: 21                                        ; local.set
000033e: 00                                        ; local index
000033f: 20                                        ; local.get
0000340: 00                                        ; local index
0000341: 41                                        ; i32.const
0000342: 00                                        ; i32 literal
0000343: 6a                                        ; i32.add
0000344: 41                                        ; i32.const
0000345: e809                                      ; i32 literal
0000347: 36                                        ; i32.store
0000348: 02                                        ; alignment
0000349: 00                                        ; store offset
000034a: 20                                        ; local.get
000034b: 00                                        ; local index
000034c: 0f                                        ; return
000034d: 0b                                        ; end
0000333: 1a                                        ; FIXUP func body size
; function body 3
000034e: 00                                        ; func body size (guess)
000034f: 00                                        ; local decl count
0000350: 23                                        ; global.get
0000351: 0c                                        ; global index
0000352: 0f                                        ; return
0000353: 0b                                        ; end
000034e: 05                                        ; FIXUP func body size
; function body 4
0000354: 00                                        ; func body size (guess)
0000355: 00                                        ; local decl count
0000356: 41                                        ; i32.const
0000357: 890a                                      ; i32 literal
0000359: 0f                                        ; return
000035a: 0b                                        ; end
0000354: 06                                        ; FIXUP func body size
; function body 5
000035b: 00                                        ; func body size (guess)
000035c: 00                                        ; local decl count
000035d: 41                                        ; i32.const
000035e: 980a                                      ; i32 literal
0000360: 0f                                        ; return
0000361: 0b                                        ; end
000035b: 06                                        ; FIXUP func body size
; function body 6
0000362: 00                                        ; func body size (guess)
0000363: 00                                        ; local decl count
0000364: 41                                        ; i32.const
0000365: d00a                                      ; i32 literal
0000367: 0f                                        ; return
0000368: 0b                                        ; end
0000362: 06                                        ; FIXUP func body size
; function body 7
0000369: 00                                        ; func body size (guess)
000036a: 00                                        ; local decl count
000036b: 41                                        ; i32.const
000036c: de0a                                      ; i32 literal
000036e: 0f                                        ; return
000036f: 0b                                        ; end
0000369: 06                                        ; FIXUP func body size
; function body 8
0000370: 00                                        ; func body size (guess)
0000371: 00                                        ; local decl count
0000372: 41                                        ; i32.const
0000373: e80a                                      ; i32 literal
0000375: 0f                                        ; return
0000376: 0b                                        ; end
0000370: 06                                        ; FIXUP func body size
; function body 9
0000377: 00                                        ; func body size (guess)
0000378: 00                                        ; local decl count
0000379: 41                                        ; i32.const
000037a: 890b                                      ; i32 literal
000037c: 0f                                        ; return
000037d: 0b                                        ; end
0000377: 06                                        ; FIXUP func body size
; function body 10
000037e: 00                                        ; func body size (guess)
000037f: 00                                        ; local decl count
0000380: 41                                        ; i32.const
0000381: 940b                                      ; i32 literal
0000383: 0f                                        ; return
0000384: 0b                                        ; end
000037e: 06                                        ; FIXUP func body size
; function body 11
0000385: 00                                        ; func body size (guess)
0000386: 00                                        ; local decl count
0000387: 41                                        ; i32.const
0000388: b90b                                      ; i32 literal
000038a: 0f                                        ; return
000038b: 0b                                        ; end
0000385: 06                                        ; FIXUP func body size
; function body 12
000038c: 00                                        ; func body size (guess)
000038d: 00                                        ; local decl count
000038e: 41                                        ; i32.const
000038f: c10b                                      ; i32 literal
0000391: 0f                                        ; return
0000392: 0b                                        ; end
000038c: 06                                        ; FIXUP func body size
; function body 13
0000393: 00                                        ; func body size (guess)
0000394: 00                                        ; local decl count
0000395: 10                                        ; call
0000396: 1a                                        ; function index
0000397: 10                                        ; call
0000398: 1b                                        ; function index
0000399: 0b                                        ; end
0000393: 06                                        ; FIXUP func body size
; function body 14
000039a: 00                                        ; func body size (guess)
000039b: 01                                        ; local decl count
000039c: 01                                        ; local type count
000039d: 7f                                        ; i32
000039e: 41                                        ; i32.const
000039f: 24                                        ; i32 literal
00003a0: 41                                        ; i32.const
00003a1: 9b05                                      ; i32 literal
00003a3: 10                                        ; call
00003a4: 0c                                        ; function index
00003a5: 21                                        ; local.set
00003a6: 00                                        ; local index
00003a7: 20                                        ; local.get
00003a8: 00                                        ; local index
00003a9: 41                                        ; i32.const
00003aa: 10                                        ; i32 literal
00003ab: 6a                                        ; i32.add
00003ac: 41                                        ; i32.const
00003ad: ffff ffff 07                              ; i32 literal
00003b2: b7                                        ; f64.convert_i32_s
00003b3: 39                                        ; f64.store
00003b4: 03                                        ; alignment
00003b5: 00                                        ; store offset
00003b6: 20                                        ; local.get
00003b7: 00                                        ; local index
00003b8: 41                                        ; i32.const
00003b9: 08                                        ; i32 literal
00003ba: 6a                                        ; i32.add
00003bb: 41                                        ; i32.const
00003bc: 0a                                        ; i32 literal
00003bd: b7                                        ; f64.convert_i32_s
00003be: 39                                        ; f64.store
00003bf: 03                                        ; alignment
00003c0: 00                                        ; store offset
00003c1: 20                                        ; local.get
00003c2: 00                                        ; local index
00003c3: 41                                        ; i32.const
00003c4: 00                                        ; i32 literal
00003c5: 6a                                        ; i32.add
00003c6: 41                                        ; i32.const
00003c7: e807                                      ; i32 literal
00003c9: 36                                        ; i32.store
00003ca: 02                                        ; alignment
00003cb: 00                                        ; store offset
00003cc: 20                                        ; local.get
00003cd: 00                                        ; local index
00003ce: 41                                        ; i32.const
00003cf: 04                                        ; i32 literal
00003d0: 6a                                        ; i32.add
00003d1: 41                                        ; i32.const
00003d2: e807                                      ; i32 literal
00003d4: 36                                        ; i32.store
00003d5: 02                                        ; alignment
00003d6: 00                                        ; store offset
00003d7: 20                                        ; local.get
00003d8: 00                                        ; local index
00003d9: 41                                        ; i32.const
00003da: 18                                        ; i32 literal
00003db: 6a                                        ; i32.add
00003dc: 41                                        ; i32.const
00003dd: 00                                        ; i32 literal
00003de: 36                                        ; i32.store
00003df: 02                                        ; alignment
00003e0: 00                                        ; store offset
00003e1: 20                                        ; local.get
00003e2: 00                                        ; local index
00003e3: 41                                        ; i32.const
00003e4: 1c                                        ; i32 literal
00003e5: 6a                                        ; i32.add
00003e6: 43                                        ; f32.const
00003e7: 0000 c6c2                                 ; f32 literal
00003eb: 38                                        ; f32.store
00003ec: 02                                        ; alignment
00003ed: 00                                        ; store offset
00003ee: 20                                        ; local.get
00003ef: 00                                        ; local index
00003f0: 41                                        ; i32.const
00003f1: 20                                        ; i32 literal
00003f2: 6a                                        ; i32.add
00003f3: 41                                        ; i32.const
00003f4: 00                                        ; i32 literal
00003f5: 36                                        ; i32.store
00003f6: 02                                        ; alignment
00003f7: 00                                        ; store offset
00003f8: 20                                        ; local.get
00003f9: 00                                        ; local index
00003fa: 24                                        ; global.set
00003fb: 0c                                        ; global index
00003fc: 0b                                        ; end
000039a: 62                                        ; FIXUP func body size
; function body 15
00003fd: 00                                        ; func body size (guess)
00003fe: 00                                        ; local decl count
00003ff: 23                                        ; global.get
0000400: 0c                                        ; global index
0000401: 41                                        ; i32.const
0000402: 18                                        ; i32 literal
0000403: 6a                                        ; i32.add
0000404: 41                                        ; i32.const
0000405: fd09                                      ; i32 literal
0000407: 36                                        ; i32.store
0000408: 02                                        ; alignment
0000409: 00                                        ; store offset
000040a: 23                                        ; global.get
000040b: 0c                                        ; global index
000040c: 41                                        ; i32.const
000040d: 20                                        ; i32 literal
000040e: 6a                                        ; i32.add
000040f: 10                                        ; call
0000410: 0d                                        ; function index
0000411: 36                                        ; i32.store
0000412: 02                                        ; alignment
0000413: 00                                        ; store offset
0000414: 0b                                        ; end
00003fd: 17                                        ; FIXUP func body size
; move data: [2d3, 415) -> [2d4, 416)
00002d2: c202                                      ; FIXUP section size
; section "Data" (11)
0000416: 0b                                        ; section code
0000417: 00                                        ; section size (guess)
0000418: 0e                                        ; num data segments
; data segment header 0
0000419: 00                                      
000041a: 41                                        ; i32.const
000041b: e809                                      ; i32 literal
000041d: 0b                                        ; end
000041e: 15                                        ; data segment size
; data segment data 0
000041f: 7468 6973 2069 7320 6120 7374 7275 6374 
000042f: 7572 6521 00                              ; data segment data
; data segment header 1
0000434: 00                                      
0000435: 41                                        ; i32.const
0000436: fd09                                      ; i32 literal
0000438: 0b                                        ; end
0000439: 0c                                        ; data segment size
; data segment data 1
000043a: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 2
0000446: 00                                      
0000447: 41                                        ; i32.const
0000448: 890a                                      ; i32 literal
000044a: 0b                                        ; end
000044b: 0f                                        ; data segment size
; data segment data 2
000044c: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 3
000045b: 00                                      
000045c: 41                                        ; i32.const
000045d: 980a                                      ; i32 literal
000045f: 0b                                        ; end
0000460: 38                                        ; data segment size
; data segment data 3
0000461: 4a61 7661 7363 7269 7074 206f 626a 6563 
0000471: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000481: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000491: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 4
0000499: 00                                      
000049a: 41                                        ; i32.const
000049b: d00a                                      ; i32 literal
000049d: 0b                                        ; end
000049e: 0e                                        ; data segment size
; data segment data 4
000049f: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 5
00004ad: 00                                      
00004ae: 41                                        ; i32.const
00004af: de0a                                      ; i32 literal
00004b1: 0b                                        ; end
00004b2: 0a                                        ; data segment size
; data segment data 5
00004b3: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 6
00004bd: 00                                      
00004be: 41                                        ; i32.const
00004bf: e80a                                      ; i32 literal
00004c1: 0b                                        ; end
00004c2: 21                                        ; data segment size
; data segment data 6
00004c3: 436f 7079 7269 6768 7420 2863 2920 7661 
00004d3: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
00004e3: 00                                        ; data segment data
; data segment header 7
00004e4: 00                                      
00004e5: 41                                        ; i32.const
00004e6: 890b                                      ; i32 literal
00004e8: 0b                                        ; end
00004e9: 0b                                        ; data segment size
; data segment data 7
00004ea: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 8
00004f5: 00                                      
00004f6: 41                                        ; i32.const
00004f7: 940b                                      ; i32 literal
00004f9: 0b                                        ; end
00004fa: 25                                        ; data segment size
; data segment data 8
00004fb: 3632 6233 3338 3964 2d35 3130 392d 3437 
000050b: 3430 2d39 6336 612d 3335 6262 3032 3233 
000051b: 3535 6239 00                              ; data segment data
; data segment header 9
0000520: 00                                      
0000521: 41                                        ; i32.const
0000522: b90b                                      ; i32 literal
0000524: 0b                                        ; end
0000525: 08                                        ; data segment size
; data segment data 9
0000526: 312e 302e 302e 3000                       ; data segment data
; data segment header 10
000052e: 00                                      
000052f: 41                                        ; i32.const
0000530: c10b                                      ; i32 literal
0000532: 0b                                        ; end
0000533: 08                                        ; data segment size
; data segment data 10
0000534: 312e 302e 302e 3000                       ; data segment data
; data segment header 11
000053c: 00                                      
000053d: 41                                        ; i32.const
000053e: 0d                                        ; i32 literal
000053f: 0b                                        ; end
0000540: f101                                      ; data segment size
; data segment data 11
0000542: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000552: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000562: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000572: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
0000582: 4f69 4a7a 6448 4a31 5933 5255 5a58 4e30 
0000592: 4969 7769 5932 7868 6333 4e66 6157 5169 
00005a2: 4f6a 457a 4c43 4a6d 6157 5673 5a48 4d69 
00005b2: 4f6e 7369 626d 4674 5a53 4936 6579 4a6e 
00005c2: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
00005d2: 636d 4633 496a 6f69 6333 5279 6157 356e 
00005e2: 4969 7769 6448 6c77 5a53 4936 4e58 3139 
00005f2: 4c43 4a70 6331 4e30 636e 566a 6443 4936 
0000602: 5a6d 4673 6332 5573 496d 316c 6447 6876 
0000612: 5a48 4d69 4f6e 7439 4c43 4a75 5957 316c 
0000622: 6333 4268 5932 5569 4f6d 3531 6247 7839 
0000632: 00                                        ; data segment data
; data segment header 12
0000633: 00                                      
0000634: 41                                        ; i32.const
0000635: fe01                                      ; i32 literal
0000637: 0b                                        ; end
0000638: 9d03                                      ; data segment size
; data segment data 12
000063a: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000064a: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
000065a: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000066a: 4f6a 4931 4e48 3073 496d 4e73 5958 4e7a 
000067a: 496a 6f69 5932 6c79 5932 786c 4969 7769 
000068a: 5932 7868 6333 4e66 6157 5169 4f6a 4931 
000069a: 4e43 7769 5a6d 6c6c 6247 527a 496a 7037 
00006aa: 496e 6769 4f6e 7369 5a32 5675 5a58 4a70 
00006ba: 5979 4936 5731 3073 496e 4a68 6479 4936 
00006ca: 496d 597a 4d69 4973 496e 5235 6347 5569 
00006da: 4f6a 4e39 4c43 4a35 496a 7037 496d 646c 
00006ea: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00006fa: 5958 6369 4f69 4a6d 4d7a 4969 4c43 4a30 
000070a: 6558 426c 496a 6f7a 6653 7769 6369 4936 
000071a: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
000072a: 5853 7769 636d 4633 496a 6f69 6154 4d79 
000073a: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
000074a: 496e 4e30 636e 566a 6443 4936 6579 4a6e 
000075a: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
000076a: 636d 4633 496a 6f69 577a 457a 5858 4e30 
000077a: 636e 566a 6446 526c 6333 5169 4c43 4a30 
000078a: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
000079a: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
00007aa: 6332 5573 496d 316c 6447 6876 5a48 4d69 
00007ba: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
00007ca: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 13
00007d7: 00                                      
00007d8: 41                                        ; i32.const
00007d9: 9b05                                      ; i32 literal
00007db: 0b                                        ; end
00007dc: cd04                                      ; data segment size
; data segment data 13
00007de: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00007ee: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00007fe: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000080e: 4f6a 5932 4e33 3073 496d 4e73 5958 4e7a 
000081e: 496a 6f69 636d 566a 6447 4675 5a32 786c 
000082e: 4969 7769 5932 7868 6333 4e66 6157 5169 
000083e: 4f6a 5932 4e79 7769 5a6d 6c6c 6247 527a 
000084e: 496a 7037 496d 6769 4f6e 7369 5a32 5675 
000085e: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
000086e: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
000087e: 6347 5569 4f6a 4639 4c43 4a33 496a 7037 
000088e: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
000089e: 4c43 4a79 5958 6369 4f69 4a70 4d7a 4969 
00008ae: 4c43 4a30 6558 426c 496a 6f78 6653 7769 
00008be: 6553 4936 6579 4a6e 5a57 356c 636d 6c6a 
00008ce: 496a 7062 5853 7769 636d 4633 496a 6f69 
00008de: 5a6a 5930 4969 7769 6448 6c77 5a53 4936 
00008ee: 4e48 3073 496e 6769 4f6e 7369 5a32 5675 
00008fe: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
000090e: 6479 4936 496d 5932 4e43 4973 496e 5235 
000091e: 6347 5569 4f6a 5239 4c43 4a75 5957 316c 
000092e: 496a 7037 496d 646c 626d 5679 6157 4d69 
000093e: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a7a 
000094e: 6448 4a70 626d 6369 4c43 4a30 6558 426c 
000095e: 496a 6f31 6653 7769 636d 466b 6158 567a 
000096e: 496a 7037 496d 646c 626d 5679 6157 4d69 
000097e: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
000098e: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
000099e: 6653 7769 6157 3575 5a58 4969 4f6e 7369 
00009ae: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00009be: 496e 4a68 6479 4936 496c 7379 4e54 5264 
00009ce: 5932 6c79 5932 786c 4969 7769 6448 6c77 
00009de: 5a53 4936 4d54 4239 6653 7769 6158 4e54 
00009ee: 6448 4a31 5933 5169 4f6d 5a68 6248 4e6c 
00009fe: 4c43 4a74 5a58 526f 6232 527a 496a 7037 
0000a0e: 6653 7769 626d 4674 5a58 4e77 5957 4e6c 
0000a1e: 496a 7075 6457 7873 6651 3d3d 00          ; data segment data
; move data: [418, a2b) -> [419, a2c)
0000417: 930c                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0311 1005 0707 0707 0707 0707 0707 0707 
0000100: 0808 0806 8601 0d7f 0141 c90b 0b7c 0144 
0000110: 6957 148b 0abf 0540 0b7c 0144 182d 4454 
0000120: fb21 0940 0b7f 0141 ffff ffff 070b 7e01 
0000130: 42ff ffff ffff ffff ffff 000b 7d01 43ff 
0000140: ff7f 7f0b 7c01 44ff ffff ffff ffef 7f0b 
0000150: 7f01 4180 8080 8078 0b7e 0142 8080 8080 
0000160: 8080 8080 807f 0b7d 0143 ffff 7fff 0b7c 
0000170: 0144 ffff ffff ffff efff 0b7c 0144 0000 
0000180: 0000 0040 8f40 0b7f 0141 000b 07bf 020b 
0000190: 114d 6f64 756c 6531 2e6e 6577 4369 7263 
00001a0: 6c65 000d 114d 6f64 756c 6531 2e67 6574 
00001b0: 4f62 6a65 6374 000f 1a41 7373 656d 626c 
00001c0: 7949 6e66 6f2e 4173 7365 6d62 6c79 5469 
00001d0: 746c 6500 1020 4173 7365 6d62 6c79 496e 
00001e0: 666f 2e41 7373 656d 626c 7944 6573 6372 
00001f0: 6970 7469 6f6e 0011 1c41 7373 656d 626c 
0000200: 7949 6e66 6f2e 4173 7365 6d62 6c79 436f 
0000210: 6d70 616e 7900 121c 4173 7365 6d62 6c79 
0000220: 496e 666f 2e41 7373 656d 626c 7950 726f 
0000230: 6475 6374 0013 1e41 7373 656d 626c 7949 
0000240: 6e66 6f2e 4173 7365 6d62 6c79 436f 7079 
0000250: 7269 6768 7400 141e 4173 7365 6d62 6c79 
0000260: 496e 666f 2e41 7373 656d 626c 7954 7261 
0000270: 6465 6d61 726b 0015 1141 7373 656d 626c 
0000280: 7949 6e66 6f2e 4775 6964 0016 1c41 7373 
0000290: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
00002a0: 6c79 5665 7273 696f 6e00 1720 4173 7365 
00002b0: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
00002c0: 7946 696c 6556 6572 7369 6f6e 0018 0801 
00002d0: 190a c202 1018 0101 7f23 0021 0220 0220 
00002e0: 006a 2400 2002 2001 1007 2002 0f0b 4501 
00002f0: 027f 230b 4102 b7a2 240b 4110 41fe 0110 
0000300: 0c21 0120 0141 006a 230b b638 0200 2001 
0000310: 4104 6a41 8fce 00b2 3802 0020 0141 0c6a 
0000320: 100e 3602 0020 0141 086a 41e4 0036 0200 
0000330: 2001 0f0b 1a01 017f 4104 410d 100c 2100 
0000340: 2000 4100 6a41 e809 3602 0020 000f 0b05 
0000350: 0023 0c0f 0b06 0041 890a 0f0b 0600 4198 
0000360: 0a0f 0b06 0041 d00a 0f0b 0600 41de 0a0f 
0000370: 0b06 0041 e80a 0f0b 0600 4189 0b0f 0b06 
0000380: 0041 940b 0f0b 0600 41b9 0b0f 0b06 0041 
0000390: c10b 0f0b 0600 101a 101b 0b62 0101 7f41 
00003a0: 2441 9b05 100c 2100 2000 4110 6a41 ffff 
00003b0: ffff 07b7 3903 0020 0041 086a 410a b739 
00003c0: 0300 2000 4100 6a41 e807 3602 0020 0041 
00003d0: 046a 41e8 0736 0200 2000 4118 6a41 0036 
00003e0: 0200 2000 411c 6a43 0000 c6c2 3802 0020 
00003f0: 0041 206a 4100 3602 0020 0024 0c0b 1700 
0000400: 230c 4118 6a41 fd09 3602 0023 0c41 206a 
0000410: 100d 3602 000b 0b93 0c0e 0041 e809 0b15 
0000420: 7468 6973 2069 7320 6120 7374 7275 6374 
0000430: 7572 6521 0000 41fd 090b 0c74 6573 7420 
0000440: 6f62 6a65 6374 0000 4189 0a0b 0f6a 735f 
0000450: 6f62 6a65 6374 2064 656d 6f00 0041 980a 
0000460: 0b38 4a61 7661 7363 7269 7074 206f 626a 
0000470: 6563 7420 6765 6e65 7261 7465 2066 726f 
0000480: 6d20 5642 2e4e 4554 2057 6562 4173 7365 
0000490: 6d62 6c79 2064 656d 6f00 0041 d00a 0b0e 
00004a0: 7661 6e69 6c6c 6176 622e 6170 7000 0041 
00004b0: de0a 0b0a 6a73 5f6f 626a 6563 7400 0041 
00004c0: e80a 0b21 436f 7079 7269 6768 7420 2863 
00004d0: 2920 7661 6e69 6c6c 6176 622e 6170 7020 
00004e0: 3230 3139 0000 4189 0b0b 0b64 6f74 7661 
00004f0: 6e69 6c6c 6100 0041 940b 0b25 3632 6233 
0000500: 3338 3964 2d35 3130 392d 3437 3430 2d39 
0000510: 6336 612d 3335 6262 3032 3233 3535 6239 
0000520: 0000 41b9 0b0b 0831 2e30 2e30 2e30 0000 
0000530: 41c1 0b0b 0831 2e30 2e30 2e30 0000 410d 
0000540: 0bf1 0165 794a 6a62 3231 745a 5735 3049 
0000550: 6a70 7564 5778 734c 434a 745a 5731 7663 
0000560: 6e6c 5164 4849 694f 6e73 6956 6d46 7364 
0000570: 5755 694f 6a45 7a66 5377 6959 3278 6863 
0000580: 334d 694f 694a 7a64 484a 3159 3352 555a 
0000590: 584e 3049 6977 6959 3278 6863 334e 6661 
00005a0: 5751 694f 6a45 7a4c 434a 6d61 5756 735a 
00005b0: 484d 694f 6e73 6962 6d46 745a 5349 3665 
00005c0: 794a 6e5a 5735 6c63 6d6c 6a49 6a70 6258 
00005d0: 5377 6963 6d46 3349 6a6f 6963 3352 7961 
00005e0: 5735 6e49 6977 6964 486c 775a 5349 364e 
00005f0: 5831 394c 434a 7063 314e 3063 6e56 6a64 
0000600: 4349 365a 6d46 7363 3255 7349 6d31 6c64 
0000610: 4768 765a 484d 694f 6e74 394c 434a 7559 
0000620: 5731 6c63 3342 6859 3255 694f 6d35 3162 
0000630: 4778 3900 0041 fe01 0b9d 0365 794a 6a62 
0000640: 3231 745a 5735 3049 6a70 7564 5778 734c 
0000650: 434a 745a 5731 7663 6e6c 5164 4849 694f 
0000660: 6e73 6956 6d46 7364 5755 694f 6a49 314e 
0000670: 4830 7349 6d4e 7359 584e 7a49 6a6f 6959 
0000680: 326c 7959 3278 6c49 6977 6959 3278 6863 
0000690: 334e 6661 5751 694f 6a49 314e 4377 695a 
00006a0: 6d6c 6c62 4752 7a49 6a70 3749 6e67 694f 
00006b0: 6e73 695a 3256 755a 584a 7059 7949 3657 
00006c0: 3130 7349 6e4a 6864 7949 3649 6d59 7a4d 
00006d0: 6949 7349 6e52 3563 4755 694f 6a4e 394c 
00006e0: 434a 3549 6a70 3749 6d64 6c62 6d56 7961 
00006f0: 574d 694f 6c74 644c 434a 7959 5863 694f 
0000700: 694a 6d4d 7a49 694c 434a 3065 5842 6c49 
0000710: 6a6f 7a66 5377 6963 6949 3665 794a 6e5a 
0000720: 5735 6c63 6d6c 6a49 6a70 6258 5377 6963 
0000730: 6d46 3349 6a6f 6961 544d 7949 6977 6964 
0000740: 486c 775a 5349 364d 5830 7349 6e4e 3063 
0000750: 6e56 6a64 4349 3665 794a 6e5a 5735 6c63 
0000760: 6d6c 6a49 6a70 6258 5377 6963 6d46 3349 
0000770: 6a6f 6957 7a45 7a58 584e 3063 6e56 6a64 
0000780: 4652 6c63 3351 694c 434a 3065 5842 6c49 
0000790: 6a6f 784d 4831 394c 434a 7063 314e 3063 
00007a0: 6e56 6a64 4349 365a 6d46 7363 3255 7349 
00007b0: 6d31 6c64 4768 765a 484d 694f 6e74 394c 
00007c0: 434a 7559 5731 6c63 3342 6859 3255 694f 
00007d0: 6d35 3162 4778 3900 0041 9b05 0bcd 0465 
00007e0: 794a 6a62 3231 745a 5735 3049 6a70 7564 
00007f0: 5778 734c 434a 745a 5731 7663 6e6c 5164 
0000800: 4849 694f 6e73 6956 6d46 7364 5755 694f 
0000810: 6a59 324e 3330 7349 6d4e 7359 584e 7a49 
0000820: 6a6f 6963 6d56 6a64 4746 755a 3278 6c49 
0000830: 6977 6959 3278 6863 334e 6661 5751 694f 
0000840: 6a59 324e 7977 695a 6d6c 6c62 4752 7a49 
0000850: 6a70 3749 6d67 694f 6e73 695a 3256 755a 
0000860: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000870: 7949 3649 6d6b 7a4d 6949 7349 6e52 3563 
0000880: 4755 694f 6a46 394c 434a 3349 6a70 3749 
0000890: 6d64 6c62 6d56 7961 574d 694f 6c74 644c 
00008a0: 434a 7959 5863 694f 694a 704d 7a49 694c 
00008b0: 434a 3065 5842 6c49 6a6f 7866 5377 6965 
00008c0: 5349 3665 794a 6e5a 5735 6c63 6d6c 6a49 
00008d0: 6a70 6258 5377 6963 6d46 3349 6a6f 695a 
00008e0: 6a59 3049 6977 6964 486c 775a 5349 364e 
00008f0: 4830 7349 6e67 694f 6e73 695a 3256 755a 
0000900: 584a 7059 7949 3657 3130 7349 6e4a 6864 
0000910: 7949 3649 6d59 324e 4349 7349 6e52 3563 
0000920: 4755 694f 6a52 394c 434a 7559 5731 6c49 
0000930: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000940: 6c74 644c 434a 7959 5863 694f 694a 7a64 
0000950: 484a 7062 6d63 694c 434a 3065 5842 6c49 
0000960: 6a6f 3166 5377 6963 6d46 6b61 5856 7a49 
0000970: 6a70 3749 6d64 6c62 6d56 7961 574d 694f 
0000980: 6c74 644c 434a 7959 5863 694f 694a 6d4d 
0000990: 7a49 694c 434a 3065 5842 6c49 6a6f 7a66 
00009a0: 5377 6961 5735 755a 5849 694f 6e73 695a 
00009b0: 3256 755a 584a 7059 7949 3657 3130 7349 
00009c0: 6e4a 6864 7949 3649 6c73 794e 5452 6459 
00009d0: 326c 7959 3278 6c49 6977 6964 486c 775a 
00009e0: 5349 364d 5442 3966 5377 6961 584e 5464 
00009f0: 484a 3159 3351 694f 6d5a 6862 484e 6c4c 
0000a00: 434a 745a 5852 6f62 3252 7a49 6a70 3766 
0000a10: 5377 6962 6d46 745a 584e 7759 574e 6c49 
0000a20: 6a70 7564 5778 7366 513d 3d00           
