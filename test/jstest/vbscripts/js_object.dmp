0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 14                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 07                                        ; function 13 signature index
0000101: 07                                        ; function 14 signature index
0000102: 07                                        ; function 15 signature index
0000103: 08                                        ; function 16 signature index
0000104: 08                                        ; function 17 signature index
0000105: 08                                        ; function 18 signature index
0000106: 08                                        ; function 19 signature index
00000f1: 15                                        ; FIXUP section size
; section "Global" (6)
0000107: 06                                        ; section code
0000108: 00                                        ; section size (guess)
0000109: 0e                                        ; num globals
000010a: 7f                                        ; i32
000010b: 01                                        ; global mutability
000010c: 41                                        ; i32.const
000010d: 900e                                      ; i32 literal
000010f: 0b                                        ; end
0000110: 7c                                        ; f64
0000111: 01                                        ; global mutability
0000112: 44                                        ; f64.const
0000113: 6957 148b 0abf 0540                       ; f64 literal
000011b: 0b                                        ; end
000011c: 7c                                        ; f64
000011d: 01                                        ; global mutability
000011e: 44                                        ; f64.const
000011f: 182d 4454 fb21 0940                       ; f64 literal
0000127: 0b                                        ; end
0000128: 7f                                        ; i32
0000129: 01                                        ; global mutability
000012a: 41                                        ; i32.const
000012b: ffff ffff 07                              ; i32 literal
0000130: 0b                                        ; end
0000131: 7e                                        ; i64
0000132: 01                                        ; global mutability
0000133: 42                                        ; i64.const
0000134: ffff ffff ffff ffff ff00                  ; i64 literal
000013e: 0b                                        ; end
000013f: 7d                                        ; f32
0000140: 01                                        ; global mutability
0000141: 43                                        ; f32.const
0000142: ffff 7f7f                                 ; f32 literal
0000146: 0b                                        ; end
0000147: 7c                                        ; f64
0000148: 01                                        ; global mutability
0000149: 44                                        ; f64.const
000014a: ffff ffff ffff ef7f                       ; f64 literal
0000152: 0b                                        ; end
0000153: 7f                                        ; i32
0000154: 01                                        ; global mutability
0000155: 41                                        ; i32.const
0000156: 8080 8080 78                              ; i32 literal
000015b: 0b                                        ; end
000015c: 7e                                        ; i64
000015d: 01                                        ; global mutability
000015e: 42                                        ; i64.const
000015f: 8080 8080 8080 8080 807f                  ; i64 literal
0000169: 0b                                        ; end
000016a: 7d                                        ; f32
000016b: 01                                        ; global mutability
000016c: 43                                        ; f32.const
000016d: ffff 7fff                                 ; f32 literal
0000171: 0b                                        ; end
0000172: 7c                                        ; f64
0000173: 01                                        ; global mutability
0000174: 44                                        ; f64.const
0000175: ffff ffff ffff efff                       ; f64 literal
000017d: 0b                                        ; end
000017e: 7c                                        ; f64
000017f: 01                                        ; global mutability
0000180: 44                                        ; f64.const
0000181: 0000 0000 0040 8f40                       ; f64 literal
0000189: 0b                                        ; end
000018a: 7f                                        ; i32
000018b: 01                                        ; global mutability
000018c: 41                                        ; i32.const
000018d: 00                                        ; i32 literal
000018e: 0b                                        ; end
000018f: 7f                                        ; i32
0000190: 01                                        ; global mutability
0000191: 41                                        ; i32.const
0000192: f808                                      ; i32 literal
0000194: 0b                                        ; end
; move data: [109, 195) -> [10a, 196)
0000108: 8c01                                      ; FIXUP section size
; section "Export" (7)
0000196: 07                                        ; section code
0000197: 00                                        ; section size (guess)
0000198: 0e                                        ; num exports
0000199: 12                                        ; string length
000019a: 6f62 6a65 6374 4743 2e6e 6577 4369 7263  objectGC.newCirc
00001aa: 6c65                                     le  ; export name
00001ac: 00                                        ; export kind
00001ad: 0d                                        ; export func index
00001ae: 12                                        ; string length
00001af: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65  objectGC.getObje
00001bf: 6374                                     ct  ; export name
00001c1: 00                                        ; export kind
00001c2: 0f                                        ; export func index
00001c3: 18                                        ; string length
00001c4: 6e75 6d62 6572 4172 7261 792e 6372 6561  numberArray.crea
00001d4: 7465 5665 6374 6f72                      teVector  ; export name
00001dc: 00                                        ; export kind
00001dd: 10                                        ; export func index
00001de: 17                                        ; string length
00001df: 6e75 6d62 6572 4172 7261 792e 6e61 6d65  numberArray.name
00001ef: 7356 6563 746f 72                        sVector  ; export name
00001f6: 00                                        ; export kind
00001f7: 11                                        ; export func index
00001f8: 16                                        ; string length
00001f9: 6e75 6d62 6572 4172 7261 792e 7374 7275  numberArray.stru
0000209: 6374 7572 6573                           ctures  ; export name
000020f: 00                                        ; export kind
0000210: 12                                        ; export func index
0000211: 1a                                        ; string length
0000212: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000222: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
000022c: 00                                        ; export kind
000022d: 13                                        ; export func index
000022e: 20                                        ; string length
000022f: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000023f: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
000024f: 00                                        ; export kind
0000250: 14                                        ; export func index
0000251: 1c                                        ; string length
0000252: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000262: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
000026e: 00                                        ; export kind
000026f: 15                                        ; export func index
0000270: 1c                                        ; string length
0000271: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000281: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
000028d: 00                                        ; export kind
000028e: 16                                        ; export func index
000028f: 1e                                        ; string length
0000290: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a0: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002ae: 00                                        ; export kind
00002af: 17                                        ; export func index
00002b0: 1e                                        ; string length
00002b1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002c1: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002cf: 00                                        ; export kind
00002d0: 18                                        ; export func index
00002d1: 11                                        ; string length
00002d2: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002e2: 64                                       d  ; export name
00002e3: 00                                        ; export kind
00002e4: 19                                        ; export func index
00002e5: 1c                                        ; string length
00002e6: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002f6: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000302: 00                                        ; export kind
0000303: 1a                                        ; export func index
0000304: 20                                        ; string length
0000305: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000315: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000325: 00                                        ; export kind
0000326: 1b                                        ; export func index
; move data: [198, 327) -> [199, 328)
0000197: 8f03                                      ; FIXUP section size
; section "Start" (8)
0000328: 08                                        ; section code
0000329: 00                                        ; section size (guess)
000032a: 1c                                        ; start func index
0000329: 01                                        ; FIXUP section size
; section "Code" (10)
000032b: 0a                                        ; section code
000032c: 00                                        ; section size (guess)
000032d: 14                                        ; num functions
; function body 0
000032e: 00                                        ; func body size (guess)
000032f: 01                                        ; local decl count
0000330: 01                                        ; local type count
0000331: 7f                                        ; i32
0000332: 23                                        ; global.get
0000333: 00                                        ; global index
0000334: 21                                        ; local.set
0000335: 02                                        ; local index
0000336: 20                                        ; local.get
0000337: 02                                        ; local index
0000338: 20                                        ; local.get
0000339: 00                                        ; local index
000033a: 6a                                        ; i32.add
000033b: 24                                        ; global.set
000033c: 00                                        ; global index
000033d: 20                                        ; local.get
000033e: 02                                        ; local index
000033f: 20                                        ; local.get
0000340: 01                                        ; local index
0000341: 10                                        ; call
0000342: 07                                        ; function index
0000343: 20                                        ; local.get
0000344: 02                                        ; local index
0000345: 0f                                        ; return
0000346: 0b                                        ; end
000032e: 18                                        ; FIXUP func body size
; function body 1
0000347: 00                                        ; func body size (guess)
0000348: 01                                        ; local decl count
0000349: 07                                        ; local type count
000034a: 7f                                        ; i32
000034b: 23                                        ; global.get
000034c: 0b                                        ; global index
000034d: 41                                        ; i32.const
000034e: 02                                        ; i32 literal
000034f: b7                                        ; f64.convert_i32_s
0000350: a2                                        ; f64.mul
0000351: 24                                        ; global.set
0000352: 0b                                        ; global index
0000353: 41                                        ; i32.const
0000354: 1c                                        ; i32 literal
0000355: 41                                        ; i32.const
0000356: 0d                                        ; i32 literal
0000357: 10                                        ; call
0000358: 0c                                        ; function index
0000359: 21                                        ; local.set
000035a: 01                                        ; local index
000035b: 20                                        ; local.get
000035c: 01                                        ; local index
000035d: 41                                        ; i32.const
000035e: 00                                        ; i32 literal
000035f: 6a                                        ; i32.add
0000360: 23                                        ; global.get
0000361: 0b                                        ; global index
0000362: b6                                        ; f32.demote_f64
0000363: 38                                        ; f32.store
0000364: 02                                        ; alignment
0000365: 00                                        ; store offset
0000366: 20                                        ; local.get
0000367: 01                                        ; local index
0000368: 41                                        ; i32.const
0000369: 04                                        ; i32 literal
000036a: 6a                                        ; i32.add
000036b: 41                                        ; i32.const
000036c: 8fce 00                                   ; i32 literal
000036f: b2                                        ; f32.convert_i32_s
0000370: 38                                        ; f32.store
0000371: 02                                        ; alignment
0000372: 00                                        ; store offset
0000373: 10                                        ; call
0000374: 0e                                        ; function index
0000375: 21                                        ; local.set
0000376: 04                                        ; local index
0000377: 20                                        ; local.get
0000378: 01                                        ; local index
0000379: 41                                        ; i32.const
000037a: 0c                                        ; i32 literal
000037b: 6a                                        ; i32.add
000037c: 21                                        ; local.set
000037d: 03                                        ; local index
000037e: 20                                        ; local.get
000037f: 03                                        ; local index
0000380: 41                                        ; i32.const
0000381: 00                                        ; i32 literal
0000382: 6a                                        ; i32.add
0000383: 20                                        ; local.get
0000384: 04                                        ; local index
0000385: 41                                        ; i32.const
0000386: 00                                        ; i32 literal
0000387: 6a                                        ; i32.add
0000388: 28                                        ; i32.load
0000389: 02                                        ; alignment
000038a: 00                                        ; load offset
000038b: 36                                        ; i32.store
000038c: 02                                        ; alignment
000038d: 00                                        ; store offset
000038e: 20                                        ; local.get
000038f: 03                                        ; local index
0000390: 41                                        ; i32.const
0000391: 04                                        ; i32 literal
0000392: 6a                                        ; i32.add
0000393: 20                                        ; local.get
0000394: 04                                        ; local index
0000395: 41                                        ; i32.const
0000396: 04                                        ; i32 literal
0000397: 6a                                        ; i32.add
0000398: 28                                        ; i32.load
0000399: 02                                        ; alignment
000039a: 00                                        ; load offset
000039b: 36                                        ; i32.store
000039c: 02                                        ; alignment
000039d: 00                                        ; store offset
000039e: 41                                        ; i32.const
000039f: 08                                        ; i32 literal
00003a0: 41                                        ; i32.const
00003a1: 8809                                      ; i32 literal
00003a3: 10                                        ; call
00003a4: 0c                                        ; function index
00003a5: 21                                        ; local.set
00003a6: 02                                        ; local index
00003a7: 20                                        ; local.get
00003a8: 02                                        ; local index
00003a9: 41                                        ; i32.const
00003aa: 04                                        ; i32 literal
00003ab: 6a                                        ; i32.add
00003ac: 41                                        ; i32.const
00003ad: 900b                                      ; i32 literal
00003af: 36                                        ; i32.store
00003b0: 02                                        ; alignment
00003b1: 00                                        ; store offset
00003b2: 20                                        ; local.get
00003b3: 02                                        ; local index
00003b4: 41                                        ; i32.const
00003b5: 00                                        ; i32 literal
00003b6: 6a                                        ; i32.add
00003b7: 41                                        ; i32.const
00003b8: 00                                        ; i32 literal
00003b9: 36                                        ; i32.store
00003ba: 02                                        ; alignment
00003bb: 00                                        ; store offset
00003bc: 20                                        ; local.get
00003bd: 02                                        ; local index
00003be: 21                                        ; local.set
00003bf: 06                                        ; local index
00003c0: 20                                        ; local.get
00003c1: 01                                        ; local index
00003c2: 41                                        ; i32.const
00003c3: 14                                        ; i32 literal
00003c4: 6a                                        ; i32.add
00003c5: 21                                        ; local.set
00003c6: 05                                        ; local index
00003c7: 20                                        ; local.get
00003c8: 05                                        ; local index
00003c9: 41                                        ; i32.const
00003ca: 00                                        ; i32 literal
00003cb: 6a                                        ; i32.add
00003cc: 20                                        ; local.get
00003cd: 06                                        ; local index
00003ce: 41                                        ; i32.const
00003cf: 00                                        ; i32 literal
00003d0: 6a                                        ; i32.add
00003d1: 28                                        ; i32.load
00003d2: 02                                        ; alignment
00003d3: 00                                        ; load offset
00003d4: 36                                        ; i32.store
00003d5: 02                                        ; alignment
00003d6: 00                                        ; store offset
00003d7: 20                                        ; local.get
00003d8: 05                                        ; local index
00003d9: 41                                        ; i32.const
00003da: 04                                        ; i32 literal
00003db: 6a                                        ; i32.add
00003dc: 20                                        ; local.get
00003dd: 06                                        ; local index
00003de: 41                                        ; i32.const
00003df: 04                                        ; i32 literal
00003e0: 6a                                        ; i32.add
00003e1: 28                                        ; i32.load
00003e2: 02                                        ; alignment
00003e3: 00                                        ; load offset
00003e4: 36                                        ; i32.store
00003e5: 02                                        ; alignment
00003e6: 00                                        ; store offset
00003e7: 20                                        ; local.get
00003e8: 01                                        ; local index
00003e9: 41                                        ; i32.const
00003ea: 08                                        ; i32 literal
00003eb: 6a                                        ; i32.add
00003ec: 41                                        ; i32.const
00003ed: e400                                      ; i32 literal
00003ef: 36                                        ; i32.store
00003f0: 02                                        ; alignment
00003f1: 00                                        ; store offset
00003f2: 20                                        ; local.get
00003f3: 01                                        ; local index
00003f4: 0f                                        ; return
00003f5: 0b                                        ; end
; move data: [348, 3f6) -> [349, 3f7)
0000347: ae01                                      ; FIXUP func body size
; function body 2
00003f7: 00                                        ; func body size (guess)
00003f8: 01                                        ; local decl count
00003f9: 01                                        ; local type count
00003fa: 7f                                        ; i32
00003fb: 41                                        ; i32.const
00003fc: 08                                        ; i32 literal
00003fd: 41                                        ; i32.const
00003fe: 8809                                      ; i32 literal
0000400: 10                                        ; call
0000401: 0c                                        ; function index
0000402: 21                                        ; local.set
0000403: 00                                        ; local index
0000404: 20                                        ; local.get
0000405: 00                                        ; local index
0000406: 41                                        ; i32.const
0000407: 04                                        ; i32 literal
0000408: 6a                                        ; i32.add
0000409: 41                                        ; i32.const
000040a: b00b                                      ; i32 literal
000040c: 36                                        ; i32.store
000040d: 02                                        ; alignment
000040e: 00                                        ; store offset
000040f: 20                                        ; local.get
0000410: 00                                        ; local index
0000411: 41                                        ; i32.const
0000412: 00                                        ; i32 literal
0000413: 6a                                        ; i32.add
0000414: 41                                        ; i32.const
0000415: 87e4 06                                   ; i32 literal
0000418: 36                                        ; i32.store
0000419: 02                                        ; alignment
000041a: 00                                        ; store offset
000041b: 20                                        ; local.get
000041c: 00                                        ; local index
000041d: 0f                                        ; return
000041e: 0b                                        ; end
00003f7: 27                                        ; FIXUP func body size
; function body 3
000041f: 00                                        ; func body size (guess)
0000420: 00                                        ; local decl count
0000421: 23                                        ; global.get
0000422: 0c                                        ; global index
0000423: 0f                                        ; return
0000424: 0b                                        ; end
000041f: 05                                        ; FIXUP func body size
; function body 4
0000425: 00                                        ; func body size (guess)
0000426: 01                                        ; local decl count
0000427: 03                                        ; local type count
0000428: 7f                                        ; i32
0000429: 41                                        ; i32.const
000042a: 08                                        ; i32 literal
000042b: 41                                        ; i32.const
000042c: 0a                                        ; i32 literal
000042d: 41                                        ; i32.const
000042e: 04                                        ; i32 literal
000042f: 6c                                        ; i32.mul
0000430: 6a                                        ; i32.add
0000431: 41                                        ; i32.const
0000432: 07                                        ; i32 literal
0000433: 10                                        ; call
0000434: 0c                                        ; function index
0000435: 21                                        ; local.set
0000436: 01                                        ; local index
0000437: 20                                        ; local.get
0000438: 01                                        ; local index
0000439: 41                                        ; i32.const
000043a: 01                                        ; i32 literal
000043b: 36                                        ; i32.store
000043c: 02                                        ; alignment
000043d: 00                                        ; store offset
000043e: 20                                        ; local.get
000043f: 01                                        ; local index
0000440: 41                                        ; i32.const
0000441: 04                                        ; i32 literal
0000442: 6a                                        ; i32.add
0000443: 41                                        ; i32.const
0000444: 0a                                        ; i32 literal
0000445: 36                                        ; i32.store
0000446: 02                                        ; alignment
0000447: 00                                        ; store offset
0000448: 20                                        ; local.get
0000449: 01                                        ; local index
000044a: 41                                        ; i32.const
000044b: 08                                        ; i32 literal
000044c: 6a                                        ; i32.add
000044d: 21                                        ; local.set
000044e: 02                                        ; local index
000044f: 20                                        ; local.get
0000450: 02                                        ; local index
0000451: 41                                        ; i32.const
0000452: 00                                        ; i32 literal
0000453: 6a                                        ; i32.add
0000454: 41                                        ; i32.const
0000455: 01                                        ; i32 literal
0000456: 36                                        ; i32.store
0000457: 02                                        ; alignment
0000458: 00                                        ; store offset
0000459: 20                                        ; local.get
000045a: 02                                        ; local index
000045b: 41                                        ; i32.const
000045c: 04                                        ; i32 literal
000045d: 6a                                        ; i32.add
000045e: 41                                        ; i32.const
000045f: 02                                        ; i32 literal
0000460: 36                                        ; i32.store
0000461: 02                                        ; alignment
0000462: 00                                        ; store offset
0000463: 20                                        ; local.get
0000464: 02                                        ; local index
0000465: 41                                        ; i32.const
0000466: 08                                        ; i32 literal
0000467: 6a                                        ; i32.add
0000468: 41                                        ; i32.const
0000469: 03                                        ; i32 literal
000046a: 36                                        ; i32.store
000046b: 02                                        ; alignment
000046c: 00                                        ; store offset
000046d: 20                                        ; local.get
000046e: 02                                        ; local index
000046f: 41                                        ; i32.const
0000470: 0c                                        ; i32 literal
0000471: 6a                                        ; i32.add
0000472: 41                                        ; i32.const
0000473: 04                                        ; i32 literal
0000474: 36                                        ; i32.store
0000475: 02                                        ; alignment
0000476: 00                                        ; store offset
0000477: 20                                        ; local.get
0000478: 02                                        ; local index
0000479: 41                                        ; i32.const
000047a: 10                                        ; i32 literal
000047b: 6a                                        ; i32.add
000047c: 41                                        ; i32.const
000047d: 05                                        ; i32 literal
000047e: 36                                        ; i32.store
000047f: 02                                        ; alignment
0000480: 00                                        ; store offset
0000481: 20                                        ; local.get
0000482: 02                                        ; local index
0000483: 41                                        ; i32.const
0000484: 14                                        ; i32 literal
0000485: 6a                                        ; i32.add
0000486: 41                                        ; i32.const
0000487: 06                                        ; i32 literal
0000488: 36                                        ; i32.store
0000489: 02                                        ; alignment
000048a: 00                                        ; store offset
000048b: 20                                        ; local.get
000048c: 02                                        ; local index
000048d: 41                                        ; i32.const
000048e: 18                                        ; i32 literal
000048f: 6a                                        ; i32.add
0000490: 41                                        ; i32.const
0000491: 07                                        ; i32 literal
0000492: 36                                        ; i32.store
0000493: 02                                        ; alignment
0000494: 00                                        ; store offset
0000495: 20                                        ; local.get
0000496: 02                                        ; local index
0000497: 41                                        ; i32.const
0000498: 1c                                        ; i32 literal
0000499: 6a                                        ; i32.add
000049a: 41                                        ; i32.const
000049b: 08                                        ; i32 literal
000049c: 36                                        ; i32.store
000049d: 02                                        ; alignment
000049e: 00                                        ; store offset
000049f: 20                                        ; local.get
00004a0: 02                                        ; local index
00004a1: 41                                        ; i32.const
00004a2: 20                                        ; i32 literal
00004a3: 6a                                        ; i32.add
00004a4: 41                                        ; i32.const
00004a5: 09                                        ; i32 literal
00004a6: 36                                        ; i32.store
00004a7: 02                                        ; alignment
00004a8: 00                                        ; store offset
00004a9: 20                                        ; local.get
00004aa: 02                                        ; local index
00004ab: 41                                        ; i32.const
00004ac: 24                                        ; i32 literal
00004ad: 6a                                        ; i32.add
00004ae: 41                                        ; i32.const
00004af: 00                                        ; i32 literal
00004b0: 36                                        ; i32.store
00004b1: 02                                        ; alignment
00004b2: 00                                        ; store offset
00004b3: 20                                        ; local.get
00004b4: 01                                        ; local index
00004b5: 0f                                        ; return
00004b6: 0b                                        ; end
; move data: [426, 4b7) -> [427, 4b8)
0000425: 9101                                      ; FIXUP func body size
; function body 5
00004b8: 00                                        ; func body size (guess)
00004b9: 01                                        ; local decl count
00004ba: 02                                        ; local type count
00004bb: 7f                                        ; i32
00004bc: 41                                        ; i32.const
00004bd: 08                                        ; i32 literal
00004be: 41                                        ; i32.const
00004bf: 07                                        ; i32 literal
00004c0: 41                                        ; i32.const
00004c1: 04                                        ; i32 literal
00004c2: 6c                                        ; i32.mul
00004c3: 6a                                        ; i32.add
00004c4: 41                                        ; i32.const
00004c5: 07                                        ; i32 literal
00004c6: 10                                        ; call
00004c7: 0c                                        ; function index
00004c8: 21                                        ; local.set
00004c9: 00                                        ; local index
00004ca: 20                                        ; local.get
00004cb: 00                                        ; local index
00004cc: 41                                        ; i32.const
00004cd: 05                                        ; i32 literal
00004ce: 36                                        ; i32.store
00004cf: 02                                        ; alignment
00004d0: 00                                        ; store offset
00004d1: 20                                        ; local.get
00004d2: 00                                        ; local index
00004d3: 41                                        ; i32.const
00004d4: 04                                        ; i32 literal
00004d5: 6a                                        ; i32.add
00004d6: 41                                        ; i32.const
00004d7: 07                                        ; i32 literal
00004d8: 36                                        ; i32.store
00004d9: 02                                        ; alignment
00004da: 00                                        ; store offset
00004db: 20                                        ; local.get
00004dc: 00                                        ; local index
00004dd: 41                                        ; i32.const
00004de: 08                                        ; i32 literal
00004df: 6a                                        ; i32.add
00004e0: 21                                        ; local.set
00004e1: 01                                        ; local index
00004e2: 20                                        ; local.get
00004e3: 01                                        ; local index
00004e4: 41                                        ; i32.const
00004e5: 00                                        ; i32 literal
00004e6: 6a                                        ; i32.add
00004e7: 41                                        ; i32.const
00004e8: d80b                                      ; i32 literal
00004ea: 36                                        ; i32.store
00004eb: 02                                        ; alignment
00004ec: 00                                        ; store offset
00004ed: 20                                        ; local.get
00004ee: 01                                        ; local index
00004ef: 41                                        ; i32.const
00004f0: 04                                        ; i32 literal
00004f1: 6a                                        ; i32.add
00004f2: 41                                        ; i32.const
00004f3: e80b                                      ; i32 literal
00004f5: 36                                        ; i32.store
00004f6: 02                                        ; alignment
00004f7: 00                                        ; store offset
00004f8: 20                                        ; local.get
00004f9: 01                                        ; local index
00004fa: 41                                        ; i32.const
00004fb: 08                                        ; i32 literal
00004fc: 6a                                        ; i32.add
00004fd: 41                                        ; i32.const
00004fe: f80b                                      ; i32 literal
0000500: 36                                        ; i32.store
0000501: 02                                        ; alignment
0000502: 00                                        ; store offset
0000503: 20                                        ; local.get
0000504: 01                                        ; local index
0000505: 41                                        ; i32.const
0000506: 0c                                        ; i32 literal
0000507: 6a                                        ; i32.add
0000508: 41                                        ; i32.const
0000509: 880c                                      ; i32 literal
000050b: 36                                        ; i32.store
000050c: 02                                        ; alignment
000050d: 00                                        ; store offset
000050e: 20                                        ; local.get
000050f: 01                                        ; local index
0000510: 41                                        ; i32.const
0000511: 10                                        ; i32 literal
0000512: 6a                                        ; i32.add
0000513: 41                                        ; i32.const
0000514: 980c                                      ; i32 literal
0000516: 36                                        ; i32.store
0000517: 02                                        ; alignment
0000518: 00                                        ; store offset
0000519: 20                                        ; local.get
000051a: 01                                        ; local index
000051b: 41                                        ; i32.const
000051c: 14                                        ; i32 literal
000051d: 6a                                        ; i32.add
000051e: 41                                        ; i32.const
000051f: a00c                                      ; i32 literal
0000521: 36                                        ; i32.store
0000522: 02                                        ; alignment
0000523: 00                                        ; store offset
0000524: 20                                        ; local.get
0000525: 01                                        ; local index
0000526: 41                                        ; i32.const
0000527: 18                                        ; i32 literal
0000528: 6a                                        ; i32.add
0000529: 41                                        ; i32.const
000052a: a80c                                      ; i32 literal
000052c: 36                                        ; i32.store
000052d: 02                                        ; alignment
000052e: 00                                        ; store offset
000052f: 20                                        ; local.get
0000530: 00                                        ; local index
0000531: 0f                                        ; return
0000532: 0b                                        ; end
00004b8: 7a                                        ; FIXUP func body size
; function body 6
0000533: 00                                        ; func body size (guess)
0000534: 01                                        ; local decl count
0000535: 09                                        ; local type count
0000536: 7f                                        ; i32
0000537: 10                                        ; call
0000538: 11                                        ; function index
0000539: 21                                        ; local.set
000053a: 00                                        ; local index
000053b: 41                                        ; i32.const
000053c: 08                                        ; i32 literal
000053d: 41                                        ; i32.const
000053e: 03                                        ; i32 literal
000053f: 41                                        ; i32.const
0000540: 08                                        ; i32 literal
0000541: 6c                                        ; i32.mul
0000542: 6a                                        ; i32.add
0000543: 41                                        ; i32.const
0000544: 07                                        ; i32 literal
0000545: 10                                        ; call
0000546: 0c                                        ; function index
0000547: 21                                        ; local.set
0000548: 04                                        ; local index
0000549: 20                                        ; local.get
000054a: 04                                        ; local index
000054b: 41                                        ; i32.const
000054c: 8809                                      ; i32 literal
000054e: 36                                        ; i32.store
000054f: 02                                        ; alignment
0000550: 00                                        ; store offset
0000551: 20                                        ; local.get
0000552: 04                                        ; local index
0000553: 41                                        ; i32.const
0000554: 04                                        ; i32 literal
0000555: 6a                                        ; i32.add
0000556: 41                                        ; i32.const
0000557: 03                                        ; i32 literal
0000558: 36                                        ; i32.store
0000559: 02                                        ; alignment
000055a: 00                                        ; store offset
000055b: 20                                        ; local.get
000055c: 04                                        ; local index
000055d: 41                                        ; i32.const
000055e: 08                                        ; i32 literal
000055f: 6a                                        ; i32.add
0000560: 21                                        ; local.set
0000561: 05                                        ; local index
0000562: 20                                        ; local.get
0000563: 05                                        ; local index
0000564: 41                                        ; i32.const
0000565: 00                                        ; i32 literal
0000566: 6a                                        ; i32.add
0000567: 21                                        ; local.set
0000568: 06                                        ; local index
0000569: 20                                        ; local.get
000056a: 06                                        ; local index
000056b: 21                                        ; local.set
000056c: 01                                        ; local index
000056d: 20                                        ; local.get
000056e: 01                                        ; local index
000056f: 41                                        ; i32.const
0000570: 04                                        ; i32 literal
0000571: 6a                                        ; i32.add
0000572: 20                                        ; local.get
0000573: 00                                        ; local index
0000574: 41                                        ; i32.const
0000575: 08                                        ; i32 literal
0000576: 6a                                        ; i32.add
0000577: 41                                        ; i32.const
0000578: 00                                        ; i32 literal
0000579: 41                                        ; i32.const
000057a: 04                                        ; i32 literal
000057b: 6c                                        ; i32.mul
000057c: 6a                                        ; i32.add
000057d: 28                                        ; i32.load
000057e: 02                                        ; alignment
000057f: 00                                        ; load offset
0000580: 36                                        ; i32.store
0000581: 02                                        ; alignment
0000582: 00                                        ; store offset
0000583: 20                                        ; local.get
0000584: 01                                        ; local index
0000585: 41                                        ; i32.const
0000586: 00                                        ; i32 literal
0000587: 6a                                        ; i32.add
0000588: 41                                        ; i32.const
0000589: 00                                        ; i32 literal
000058a: 36                                        ; i32.store
000058b: 02                                        ; alignment
000058c: 00                                        ; store offset
000058d: 20                                        ; local.get
000058e: 05                                        ; local index
000058f: 41                                        ; i32.const
0000590: 08                                        ; i32 literal
0000591: 6a                                        ; i32.add
0000592: 21                                        ; local.set
0000593: 07                                        ; local index
0000594: 20                                        ; local.get
0000595: 07                                        ; local index
0000596: 21                                        ; local.set
0000597: 02                                        ; local index
0000598: 20                                        ; local.get
0000599: 02                                        ; local index
000059a: 41                                        ; i32.const
000059b: 04                                        ; i32 literal
000059c: 6a                                        ; i32.add
000059d: 20                                        ; local.get
000059e: 00                                        ; local index
000059f: 41                                        ; i32.const
00005a0: 08                                        ; i32 literal
00005a1: 6a                                        ; i32.add
00005a2: 41                                        ; i32.const
00005a3: 01                                        ; i32 literal
00005a4: 41                                        ; i32.const
00005a5: 04                                        ; i32 literal
00005a6: 6c                                        ; i32.mul
00005a7: 6a                                        ; i32.add
00005a8: 28                                        ; i32.load
00005a9: 02                                        ; alignment
00005aa: 00                                        ; load offset
00005ab: 36                                        ; i32.store
00005ac: 02                                        ; alignment
00005ad: 00                                        ; store offset
00005ae: 20                                        ; local.get
00005af: 02                                        ; local index
00005b0: 41                                        ; i32.const
00005b1: 00                                        ; i32 literal
00005b2: 6a                                        ; i32.add
00005b3: 41                                        ; i32.const
00005b4: 01                                        ; i32 literal
00005b5: 36                                        ; i32.store
00005b6: 02                                        ; alignment
00005b7: 00                                        ; store offset
00005b8: 20                                        ; local.get
00005b9: 05                                        ; local index
00005ba: 41                                        ; i32.const
00005bb: 10                                        ; i32 literal
00005bc: 6a                                        ; i32.add
00005bd: 21                                        ; local.set
00005be: 08                                        ; local index
00005bf: 20                                        ; local.get
00005c0: 08                                        ; local index
00005c1: 21                                        ; local.set
00005c2: 03                                        ; local index
00005c3: 20                                        ; local.get
00005c4: 03                                        ; local index
00005c5: 41                                        ; i32.const
00005c6: 04                                        ; i32 literal
00005c7: 6a                                        ; i32.add
00005c8: 20                                        ; local.get
00005c9: 00                                        ; local index
00005ca: 41                                        ; i32.const
00005cb: 08                                        ; i32 literal
00005cc: 6a                                        ; i32.add
00005cd: 41                                        ; i32.const
00005ce: 02                                        ; i32 literal
00005cf: 41                                        ; i32.const
00005d0: 04                                        ; i32 literal
00005d1: 6c                                        ; i32.mul
00005d2: 6a                                        ; i32.add
00005d3: 28                                        ; i32.load
00005d4: 02                                        ; alignment
00005d5: 00                                        ; load offset
00005d6: 36                                        ; i32.store
00005d7: 02                                        ; alignment
00005d8: 00                                        ; store offset
00005d9: 20                                        ; local.get
00005da: 03                                        ; local index
00005db: 41                                        ; i32.const
00005dc: 00                                        ; i32 literal
00005dd: 6a                                        ; i32.add
00005de: 41                                        ; i32.const
00005df: 02                                        ; i32 literal
00005e0: 36                                        ; i32.store
00005e1: 02                                        ; alignment
00005e2: 00                                        ; store offset
00005e3: 20                                        ; local.get
00005e4: 04                                        ; local index
00005e5: 0f                                        ; return
00005e6: 0b                                        ; end
; move data: [534, 5e7) -> [535, 5e8)
0000533: b301                                      ; FIXUP func body size
; function body 7
00005e8: 00                                        ; func body size (guess)
00005e9: 00                                        ; local decl count
00005ea: 41                                        ; i32.const
00005eb: b80c                                      ; i32 literal
00005ed: 0f                                        ; return
00005ee: 0b                                        ; end
00005e8: 06                                        ; FIXUP func body size
; function body 8
00005ef: 00                                        ; func body size (guess)
00005f0: 00                                        ; local decl count
00005f1: 41                                        ; i32.const
00005f2: c80c                                      ; i32 literal
00005f4: 0f                                        ; return
00005f5: 0b                                        ; end
00005ef: 06                                        ; FIXUP func body size
; function body 9
00005f6: 00                                        ; func body size (guess)
00005f7: 00                                        ; local decl count
00005f8: 41                                        ; i32.const
00005f9: 800d                                      ; i32 literal
00005fb: 0f                                        ; return
00005fc: 0b                                        ; end
00005f6: 06                                        ; FIXUP func body size
; function body 10
00005fd: 00                                        ; func body size (guess)
00005fe: 00                                        ; local decl count
00005ff: 41                                        ; i32.const
0000600: 900d                                      ; i32 literal
0000602: 0f                                        ; return
0000603: 0b                                        ; end
00005fd: 06                                        ; FIXUP func body size
; function body 11
0000604: 00                                        ; func body size (guess)
0000605: 00                                        ; local decl count
0000606: 41                                        ; i32.const
0000607: a00d                                      ; i32 literal
0000609: 0f                                        ; return
000060a: 0b                                        ; end
0000604: 06                                        ; FIXUP func body size
; function body 12
000060b: 00                                        ; func body size (guess)
000060c: 00                                        ; local decl count
000060d: 41                                        ; i32.const
000060e: c80d                                      ; i32 literal
0000610: 0f                                        ; return
0000611: 0b                                        ; end
000060b: 06                                        ; FIXUP func body size
; function body 13
0000612: 00                                        ; func body size (guess)
0000613: 00                                        ; local decl count
0000614: 41                                        ; i32.const
0000615: d80d                                      ; i32 literal
0000617: 0f                                        ; return
0000618: 0b                                        ; end
0000612: 06                                        ; FIXUP func body size
; function body 14
0000619: 00                                        ; func body size (guess)
000061a: 00                                        ; local decl count
000061b: 41                                        ; i32.const
000061c: 800e                                      ; i32 literal
000061e: 0f                                        ; return
000061f: 0b                                        ; end
0000619: 06                                        ; FIXUP func body size
; function body 15
0000620: 00                                        ; func body size (guess)
0000621: 00                                        ; local decl count
0000622: 41                                        ; i32.const
0000623: 880e                                      ; i32 literal
0000625: 0f                                        ; return
0000626: 0b                                        ; end
0000620: 06                                        ; FIXUP func body size
; function body 16
0000627: 00                                        ; func body size (guess)
0000628: 00                                        ; local decl count
0000629: 10                                        ; call
000062a: 1d                                        ; function index
000062b: 10                                        ; call
000062c: 1e                                        ; function index
000062d: 10                                        ; call
000062e: 1f                                        ; function index
000062f: 0b                                        ; end
0000627: 08                                        ; FIXUP func body size
; function body 17
0000630: 00                                        ; func body size (guess)
0000631: 01                                        ; local decl count
0000632: 01                                        ; local type count
0000633: 7f                                        ; i32
0000634: 41                                        ; i32.const
0000635: 28                                        ; i32 literal
0000636: 41                                        ; i32.const
0000637: 8804                                      ; i32 literal
0000639: 10                                        ; call
000063a: 0c                                        ; function index
000063b: 21                                        ; local.set
000063c: 00                                        ; local index
000063d: 20                                        ; local.get
000063e: 00                                        ; local index
000063f: 41                                        ; i32.const
0000640: 18                                        ; i32 literal
0000641: 6a                                        ; i32.add
0000642: 41                                        ; i32.const
0000643: ffff ffff 07                              ; i32 literal
0000648: b7                                        ; f64.convert_i32_s
0000649: 39                                        ; f64.store
000064a: 03                                        ; alignment
000064b: 00                                        ; store offset
000064c: 20                                        ; local.get
000064d: 00                                        ; local index
000064e: 41                                        ; i32.const
000064f: 10                                        ; i32 literal
0000650: 6a                                        ; i32.add
0000651: 41                                        ; i32.const
0000652: 0a                                        ; i32 literal
0000653: b7                                        ; f64.convert_i32_s
0000654: 39                                        ; f64.store
0000655: 03                                        ; alignment
0000656: 00                                        ; store offset
0000657: 20                                        ; local.get
0000658: 00                                        ; local index
0000659: 41                                        ; i32.const
000065a: 08                                        ; i32 literal
000065b: 6a                                        ; i32.add
000065c: 41                                        ; i32.const
000065d: e807                                      ; i32 literal
000065f: 36                                        ; i32.store
0000660: 02                                        ; alignment
0000661: 00                                        ; store offset
0000662: 20                                        ; local.get
0000663: 00                                        ; local index
0000664: 41                                        ; i32.const
0000665: 0c                                        ; i32 literal
0000666: 6a                                        ; i32.add
0000667: 41                                        ; i32.const
0000668: e807                                      ; i32 literal
000066a: 36                                        ; i32.store
000066b: 02                                        ; alignment
000066c: 00                                        ; store offset
000066d: 20                                        ; local.get
000066e: 00                                        ; local index
000066f: 41                                        ; i32.const
0000670: 20                                        ; i32 literal
0000671: 6a                                        ; i32.add
0000672: 43                                        ; f32.const
0000673: 0000 c6c2                                 ; f32 literal
0000677: 38                                        ; f32.store
0000678: 02                                        ; alignment
0000679: 00                                        ; store offset
000067a: 20                                        ; local.get
000067b: 00                                        ; local index
000067c: 41                                        ; i32.const
000067d: 24                                        ; i32 literal
000067e: 6a                                        ; i32.add
000067f: 41                                        ; i32.const
0000680: 00                                        ; i32 literal
0000681: 36                                        ; i32.store
0000682: 02                                        ; alignment
0000683: 00                                        ; store offset
0000684: 20                                        ; local.get
0000685: 00                                        ; local index
0000686: 24                                        ; global.set
0000687: 0c                                        ; global index
0000688: 0b                                        ; end
0000630: 58                                        ; FIXUP func body size
; function body 18
0000689: 00                                        ; func body size (guess)
000068a: 01                                        ; local decl count
000068b: 01                                        ; local type count
000068c: 7f                                        ; i32
000068d: 41                                        ; i32.const
000068e: 08                                        ; i32 literal
000068f: 41                                        ; i32.const
0000690: 8809                                      ; i32 literal
0000692: 10                                        ; call
0000693: 0c                                        ; function index
0000694: 21                                        ; local.set
0000695: 00                                        ; local index
0000696: 20                                        ; local.get
0000697: 00                                        ; local index
0000698: 41                                        ; i32.const
0000699: 04                                        ; i32 literal
000069a: 6a                                        ; i32.add
000069b: 41                                        ; i32.const
000069c: c80b                                      ; i32 literal
000069e: 36                                        ; i32.store
000069f: 02                                        ; alignment
00006a0: 00                                        ; store offset
00006a1: 20                                        ; local.get
00006a2: 00                                        ; local index
00006a3: 41                                        ; i32.const
00006a4: 00                                        ; i32 literal
00006a5: 6a                                        ; i32.add
00006a6: 41                                        ; i32.const
00006a7: b8bc eda7 03                              ; i32 literal
00006ac: 36                                        ; i32.store
00006ad: 02                                        ; alignment
00006ae: 00                                        ; store offset
00006af: 23                                        ; global.get
00006b0: 0c                                        ; global index
00006b1: 41                                        ; i32.const
00006b2: 00                                        ; i32 literal
00006b3: 6a                                        ; i32.add
00006b4: 20                                        ; local.get
00006b5: 00                                        ; local index
00006b6: 36                                        ; i32.store
00006b7: 02                                        ; alignment
00006b8: 00                                        ; store offset
00006b9: 23                                        ; global.get
00006ba: 0c                                        ; global index
00006bb: 41                                        ; i32.const
00006bc: 24                                        ; i32 literal
00006bd: 6a                                        ; i32.add
00006be: 10                                        ; call
00006bf: 0d                                        ; function index
00006c0: 36                                        ; i32.store
00006c1: 02                                        ; alignment
00006c2: 00                                        ; store offset
00006c3: 0b                                        ; end
0000689: 3a                                        ; FIXUP func body size
; function body 19
00006c4: 00                                        ; func body size (guess)
00006c5: 00                                        ; local decl count
00006c6: 0b                                        ; end
00006c4: 02                                        ; FIXUP func body size
; move data: [32d, 6c7) -> [32e, 6c8)
000032c: 9a07                                      ; FIXUP section size
; section "Data" (11)
00006c8: 0b                                        ; section code
00006c9: 00                                        ; section size (guess)
00006ca: 17                                        ; num data segments
; data segment header 0
00006cb: 00                                      
00006cc: 41                                        ; i32.const
00006cd: f808                                      ; i32 literal
00006cf: 0b                                        ; end
00006d0: 09                                        ; data segment size
; data segment data 0
00006d1: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
00006da: 00                                      
00006db: 41                                        ; i32.const
00006dc: 900b                                      ; i32 literal
00006de: 0b                                        ; end
00006df: 1d                                        ; data segment size
; data segment data 1
00006e0: 6469 7265 6374 6c79 2063 7265 6174 6520 
00006f0: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 2
00006fd: 00                                      
00006fe: 41                                        ; i32.const
00006ff: b00b                                      ; i32 literal
0000701: 0b                                        ; end
0000702: 15                                        ; data segment size
; data segment data 2
0000703: 7468 6973 2069 7320 6120 7374 7275 6374 
0000713: 7572 6521 00                              ; data segment data
; data segment header 3
0000718: 00                                      
0000719: 41                                        ; i32.const
000071a: c80b                                      ; i32 literal
000071c: 0b                                        ; end
000071d: 0c                                        ; data segment size
; data segment data 3
000071e: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 4
000072a: 00                                      
000072b: 41                                        ; i32.const
000072c: d80b                                      ; i32 literal
000072e: 0b                                        ; end
000072f: 09                                        ; data segment size
; data segment data 4
0000730: 4141 4141 4141 4141 00                    ; data segment data
; data segment header 5
0000739: 00                                      
000073a: 41                                        ; i32.const
000073b: e80b                                      ; i32 literal
000073d: 0b                                        ; end
000073e: 09                                        ; data segment size
; data segment data 5
000073f: 4242 4242 4242 4242 00                    ; data segment data
; data segment header 6
0000748: 00                                      
0000749: 41                                        ; i32.const
000074a: f80b                                      ; i32 literal
000074c: 0b                                        ; end
000074d: 0b                                        ; data segment size
; data segment data 6
000074e: 4343 4343 4343 4343 4343 00               ; data segment data
; data segment header 7
0000759: 00                                      
000075a: 41                                        ; i32.const
000075b: 880c                                      ; i32 literal
000075d: 0b                                        ; end
000075e: 0b                                        ; data segment size
; data segment data 7
000075f: 4444 4444 4444 4444 4444 00               ; data segment data
; data segment header 8
000076a: 00                                      
000076b: 41                                        ; i32.const
000076c: 980c                                      ; i32 literal
000076e: 0b                                        ; end
000076f: 03                                        ; data segment size
; data segment data 8
0000770: 4545 00                                   ; data segment data
; data segment header 9
0000773: 00                                      
0000774: 41                                        ; i32.const
0000775: a00c                                      ; i32 literal
0000777: 0b                                        ; end
0000778: 08                                        ; data segment size
; data segment data 9
0000779: 4646 4646 4646 4600                       ; data segment data
; data segment header 10
0000781: 00                                      
0000782: 41                                        ; i32.const
0000783: a80c                                      ; i32 literal
0000785: 0b                                        ; end
0000786: 09                                        ; data segment size
; data segment data 10
0000787: 4747 4747 4747 4747 00                    ; data segment data
; data segment header 11
0000790: 00                                      
0000791: 41                                        ; i32.const
0000792: b80c                                      ; i32 literal
0000794: 0b                                        ; end
0000795: 0f                                        ; data segment size
; data segment data 11
0000796: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 12
00007a5: 00                                      
00007a6: 41                                        ; i32.const
00007a7: c80c                                      ; i32 literal
00007a9: 0b                                        ; end
00007aa: 38                                        ; data segment size
; data segment data 12
00007ab: 4a61 7661 7363 7269 7074 206f 626a 6563 
00007bb: 7420 6765 6e65 7261 7465 2066 726f 6d20 
00007cb: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
00007db: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 13
00007e3: 00                                      
00007e4: 41                                        ; i32.const
00007e5: 800d                                      ; i32 literal
00007e7: 0b                                        ; end
00007e8: 0e                                        ; data segment size
; data segment data 13
00007e9: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 14
00007f7: 00                                      
00007f8: 41                                        ; i32.const
00007f9: 900d                                      ; i32 literal
00007fb: 0b                                        ; end
00007fc: 0a                                        ; data segment size
; data segment data 14
00007fd: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 15
0000807: 00                                      
0000808: 41                                        ; i32.const
0000809: a00d                                      ; i32 literal
000080b: 0b                                        ; end
000080c: 21                                        ; data segment size
; data segment data 15
000080d: 436f 7079 7269 6768 7420 2863 2920 7661 
000081d: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
000082d: 00                                        ; data segment data
; data segment header 16
000082e: 00                                      
000082f: 41                                        ; i32.const
0000830: c80d                                      ; i32 literal
0000832: 0b                                        ; end
0000833: 0b                                        ; data segment size
; data segment data 16
0000834: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 17
000083f: 00                                      
0000840: 41                                        ; i32.const
0000841: d80d                                      ; i32 literal
0000843: 0b                                        ; end
0000844: 25                                        ; data segment size
; data segment data 17
0000845: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000855: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000865: 3535 6239 00                              ; data segment data
; data segment header 18
000086a: 00                                      
000086b: 41                                        ; i32.const
000086c: 800e                                      ; i32 literal
000086e: 0b                                        ; end
000086f: 08                                        ; data segment size
; data segment data 18
0000870: 312e 302e 302e 3000                       ; data segment data
; data segment header 19
0000878: 00                                      
0000879: 41                                        ; i32.const
000087a: 880e                                      ; i32 literal
000087c: 0b                                        ; end
000087d: 08                                        ; data segment size
; data segment data 19
000087e: 312e 302e 302e 3000                       ; data segment data
; data segment header 20
0000886: 00                                      
0000887: 41                                        ; i32.const
0000888: 0d                                        ; i32 literal
0000889: 0b                                        ; end
000088a: bd03                                      ; data segment size
; data segment data 20
000088c: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000089c: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00008ac: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
00008bc: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
00008cc: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
00008dc: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
00008ec: 5731 3073 496e 4a68 6479 4936 496d 597a 
00008fc: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
000090c: 4c43 4a35 496a 7037 496d 646c 626d 5679 
000091c: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
000092c: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
000093c: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
000094c: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
000095c: 636d 4633 496a 6f69 6154 4d79 4969 7769 
000096c: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
000097c: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
000098c: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
000099c: 6479 4936 496c 7378 4d54 5977 5857 3568 
00009ac: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
00009bc: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
00009cc: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
00009dc: 5731 3073 496e 4a68 6479 4936 496c 7378 
00009ec: 4d54 5977 5857 3568 6257 5569 4c43 4a30 
00009fc: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000a0c: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000a1c: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000a2c: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000a3c: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 21
0000a49: 00                                      
0000a4a: 41                                        ; i32.const
0000a4b: 8804                                      ; i32 literal
0000a4d: 0b                                        ; end
0000a4e: ad04                                      ; data segment size
; data segment data 21
0000a50: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000a60: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000a70: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
0000a80: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
0000a90: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
0000aa0: 6579 4a75 5957 316c 496a 7037 496d 646c 
0000ab0: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000ac0: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000ad0: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000ae0: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000af0: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000b00: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000b10: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000b20: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000b30: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000b40: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000b50: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000b60: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000b70: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000b80: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
0000b90: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000ba0: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000bb0: 6558 426c 496a 6f30 6653 7769 636d 466b 
0000bc0: 6158 567a 496a 7037 496d 646c 626d 5679 
0000bd0: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000be0: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000bf0: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000c00: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000c10: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000c20: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000c30: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000c40: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000c50: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000c60: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000c70: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 22
0000c7d: 00                                      
0000c7e: 41                                        ; i32.const
0000c7f: 8809                                      ; i32 literal
0000c81: 0b                                        ; end
0000c82: 8502                                      ; data segment size
; data segment data 22
0000c84: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000c94: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000ca4: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000cb4: 6331 3970 5a43 4936 4d54 4532 4d43 7769 
0000cc4: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000cd4: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000ce4: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000cf4: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000d04: 5a53 4936 4d58 3073 496d 3568 6257 5569 
0000d14: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000d24: 5731 3073 496e 4a68 6479 4936 496e 4e30 
0000d34: 636d 6c75 5a79 4973 496e 5235 6347 5569 
0000d44: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
0000d54: 5933 5169 4f6e 5279 6457 5573 496d 316c 
0000d64: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0000d74: 5957 316c 6333 4268 5932 5569 4f6d 3531 
0000d84: 6247 7839 00                              ; data segment data
; move data: [6ca, d89) -> [6cb, d8a)
00006c9: bf0d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0315 1405 0707 0707 0707 0707 0707 0707 
0000100: 0707 0708 0808 0806 8c01 0e7f 0141 900e 
0000110: 0b7c 0144 6957 148b 0abf 0540 0b7c 0144 
0000120: 182d 4454 fb21 0940 0b7f 0141 ffff ffff 
0000130: 070b 7e01 42ff ffff ffff ffff ffff 000b 
0000140: 7d01 43ff ff7f 7f0b 7c01 44ff ffff ffff 
0000150: ffef 7f0b 7f01 4180 8080 8078 0b7e 0142 
0000160: 8080 8080 8080 8080 807f 0b7d 0143 ffff 
0000170: 7fff 0b7c 0144 ffff ffff ffff efff 0b7c 
0000180: 0144 0000 0000 0040 8f40 0b7f 0141 000b 
0000190: 7f01 41f8 080b 078f 030e 126f 626a 6563 
00001a0: 7447 432e 6e65 7743 6972 636c 6500 0d12 
00001b0: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65 
00001c0: 6374 000f 186e 756d 6265 7241 7272 6179 
00001d0: 2e63 7265 6174 6556 6563 746f 7200 1017 
00001e0: 6e75 6d62 6572 4172 7261 792e 6e61 6d65 
00001f0: 7356 6563 746f 7200 1116 6e75 6d62 6572 
0000200: 4172 7261 792e 7374 7275 6374 7572 6573 
0000210: 0012 1a41 7373 656d 626c 7949 6e66 6f2e 
0000220: 4173 7365 6d62 6c79 5469 746c 6500 1320 
0000230: 4173 7365 6d62 6c79 496e 666f 2e41 7373 
0000240: 656d 626c 7944 6573 6372 6970 7469 6f6e 
0000250: 0014 1c41 7373 656d 626c 7949 6e66 6f2e 
0000260: 4173 7365 6d62 6c79 436f 6d70 616e 7900 
0000270: 151c 4173 7365 6d62 6c79 496e 666f 2e41 
0000280: 7373 656d 626c 7950 726f 6475 6374 0016 
0000290: 1e41 7373 656d 626c 7949 6e66 6f2e 4173 
00002a0: 7365 6d62 6c79 436f 7079 7269 6768 7400 
00002b0: 171e 4173 7365 6d62 6c79 496e 666f 2e41 
00002c0: 7373 656d 626c 7954 7261 6465 6d61 726b 
00002d0: 0018 1141 7373 656d 626c 7949 6e66 6f2e 
00002e0: 4775 6964 0019 1c41 7373 656d 626c 7949 
00002f0: 6e66 6f2e 4173 7365 6d62 6c79 5665 7273 
0000300: 696f 6e00 1a20 4173 7365 6d62 6c79 496e 
0000310: 666f 2e41 7373 656d 626c 7946 696c 6556 
0000320: 6572 7369 6f6e 001b 0801 1c0a 9a07 1418 
0000330: 0101 7f23 0021 0220 0220 006a 2400 2002 
0000340: 2001 1007 2002 0f0b ae01 0107 7f23 0b41 
0000350: 02b7 a224 0b41 1c41 0d10 0c21 0120 0141 
0000360: 006a 230b b638 0200 2001 4104 6a41 8fce 
0000370: 00b2 3802 0010 0e21 0420 0141 0c6a 2103 
0000380: 2003 4100 6a20 0441 006a 2802 0036 0200 
0000390: 2003 4104 6a20 0441 046a 2802 0036 0200 
00003a0: 4108 4188 0910 0c21 0220 0241 046a 4190 
00003b0: 0b36 0200 2002 4100 6a41 0036 0200 2002 
00003c0: 2106 2001 4114 6a21 0520 0541 006a 2006 
00003d0: 4100 6a28 0200 3602 0020 0541 046a 2006 
00003e0: 4104 6a28 0200 3602 0020 0141 086a 41e4 
00003f0: 0036 0200 2001 0f0b 2701 017f 4108 4188 
0000400: 0910 0c21 0020 0041 046a 41b0 0b36 0200 
0000410: 2000 4100 6a41 87e4 0636 0200 2000 0f0b 
0000420: 0500 230c 0f0b 9101 0103 7f41 0841 0a41 
0000430: 046c 6a41 0710 0c21 0120 0141 0136 0200 
0000440: 2001 4104 6a41 0a36 0200 2001 4108 6a21 
0000450: 0220 0241 006a 4101 3602 0020 0241 046a 
0000460: 4102 3602 0020 0241 086a 4103 3602 0020 
0000470: 0241 0c6a 4104 3602 0020 0241 106a 4105 
0000480: 3602 0020 0241 146a 4106 3602 0020 0241 
0000490: 186a 4107 3602 0020 0241 1c6a 4108 3602 
00004a0: 0020 0241 206a 4109 3602 0020 0241 246a 
00004b0: 4100 3602 0020 010f 0b7a 0102 7f41 0841 
00004c0: 0741 046c 6a41 0710 0c21 0020 0041 0536 
00004d0: 0200 2000 4104 6a41 0736 0200 2000 4108 
00004e0: 6a21 0120 0141 006a 41d8 0b36 0200 2001 
00004f0: 4104 6a41 e80b 3602 0020 0141 086a 41f8 
0000500: 0b36 0200 2001 410c 6a41 880c 3602 0020 
0000510: 0141 106a 4198 0c36 0200 2001 4114 6a41 
0000520: a00c 3602 0020 0141 186a 41a8 0c36 0200 
0000530: 2000 0f0b b301 0109 7f10 1121 0041 0841 
0000540: 0341 086c 6a41 0710 0c21 0420 0441 8809 
0000550: 3602 0020 0441 046a 4103 3602 0020 0441 
0000560: 086a 2105 2005 4100 6a21 0620 0621 0120 
0000570: 0141 046a 2000 4108 6a41 0041 046c 6a28 
0000580: 0200 3602 0020 0141 006a 4100 3602 0020 
0000590: 0541 086a 2107 2007 2102 2002 4104 6a20 
00005a0: 0041 086a 4101 4104 6c6a 2802 0036 0200 
00005b0: 2002 4100 6a41 0136 0200 2005 4110 6a21 
00005c0: 0820 0821 0320 0341 046a 2000 4108 6a41 
00005d0: 0241 046c 6a28 0200 3602 0020 0341 006a 
00005e0: 4102 3602 0020 040f 0b06 0041 b80c 0f0b 
00005f0: 0600 41c8 0c0f 0b06 0041 800d 0f0b 0600 
0000600: 4190 0d0f 0b06 0041 a00d 0f0b 0600 41c8 
0000610: 0d0f 0b06 0041 d80d 0f0b 0600 4180 0e0f 
0000620: 0b06 0041 880e 0f0b 0800 101d 101e 101f 
0000630: 0b58 0101 7f41 2841 8804 100c 2100 2000 
0000640: 4118 6a41 ffff ffff 07b7 3903 0020 0041 
0000650: 106a 410a b739 0300 2000 4108 6a41 e807 
0000660: 3602 0020 0041 0c6a 41e8 0736 0200 2000 
0000670: 4120 6a43 0000 c6c2 3802 0020 0041 246a 
0000680: 4100 3602 0020 0024 0c0b 3a01 017f 4108 
0000690: 4188 0910 0c21 0020 0041 046a 41c8 0b36 
00006a0: 0200 2000 4100 6a41 b8bc eda7 0336 0200 
00006b0: 230c 4100 6a20 0036 0200 230c 4124 6a10 
00006c0: 0d36 0200 0b02 000b 0bbf 0d17 0041 f808 
00006d0: 0b09 3939 3939 3939 3939 0000 4190 0b0b 
00006e0: 1d64 6972 6563 746c 7920 6372 6561 7465 
00006f0: 2061 2073 7472 7563 7475 7274 6500 0041 
0000700: b00b 0b15 7468 6973 2069 7320 6120 7374 
0000710: 7275 6374 7572 6521 0000 41c8 0b0b 0c74 
0000720: 6573 7420 6f62 6a65 6374 0000 41d8 0b0b 
0000730: 0941 4141 4141 4141 4100 0041 e80b 0b09 
0000740: 4242 4242 4242 4242 0000 41f8 0b0b 0b43 
0000750: 4343 4343 4343 4343 4300 0041 880c 0b0b 
0000760: 4444 4444 4444 4444 4444 0000 4198 0c0b 
0000770: 0345 4500 0041 a00c 0b08 4646 4646 4646 
0000780: 4600 0041 a80c 0b09 4747 4747 4747 4747 
0000790: 0000 41b8 0c0b 0f6a 735f 6f62 6a65 6374 
00007a0: 2064 656d 6f00 0041 c80c 0b38 4a61 7661 
00007b0: 7363 7269 7074 206f 626a 6563 7420 6765 
00007c0: 6e65 7261 7465 2066 726f 6d20 5642 2e4e 
00007d0: 4554 2057 6562 4173 7365 6d62 6c79 2064 
00007e0: 656d 6f00 0041 800d 0b0e 7661 6e69 6c6c 
00007f0: 6176 622e 6170 7000 0041 900d 0b0a 6a73 
0000800: 5f6f 626a 6563 7400 0041 a00d 0b21 436f 
0000810: 7079 7269 6768 7420 2863 2920 7661 6e69 
0000820: 6c6c 6176 622e 6170 7020 3230 3139 0000 
0000830: 41c8 0d0b 0b64 6f74 7661 6e69 6c6c 6100 
0000840: 0041 d80d 0b25 3632 6233 3338 3964 2d35 
0000850: 3130 392d 3437 3430 2d39 6336 612d 3335 
0000860: 6262 3032 3233 3535 6239 0000 4180 0e0b 
0000870: 0831 2e30 2e30 2e30 0000 4188 0e0b 0831 
0000880: 2e30 2e30 2e30 0000 410d 0bbd 0365 794a 
0000890: 6a62 3231 745a 5735 3049 6a70 7564 5778 
00008a0: 734c 434a 6a62 4746 7a63 7949 3649 6d4e 
00008b0: 7063 6d4e 735a 5349 7349 6d4e 7359 584e 
00008c0: 7a58 326c 6b49 6a6f 784d 7977 695a 6d6c 
00008d0: 6c62 4752 7a49 6a70 3749 6e67 694f 6e73 
00008e0: 695a 3256 755a 584a 7059 7949 3657 3130 
00008f0: 7349 6e4a 6864 7949 3649 6d59 7a4d 6949 
0000900: 7349 6e52 3563 4755 694f 6a4e 394c 434a 
0000910: 3549 6a70 3749 6d64 6c62 6d56 7961 574d 
0000920: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000930: 6d4d 7a49 694c 434a 3065 5842 6c49 6a6f 
0000940: 7a66 5377 6963 6949 3665 794a 6e5a 5735 
0000950: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
0000960: 3349 6a6f 6961 544d 7949 6977 6964 486c 
0000970: 775a 5349 364d 5830 7349 6d35 6862 5756 
0000980: 505a 6c67 694f 6e73 695a 3256 755a 584a 
0000990: 7059 7949 3657 3130 7349 6e4a 6864 7949 
00009a0: 3649 6c73 784d 5459 7758 5735 6862 5755 
00009b0: 694c 434a 3065 5842 6c49 6a6f 784d 4830 
00009c0: 7349 6d35 6862 5756 505a 6c6b 694f 6e73 
00009d0: 695a 3256 755a 584a 7059 7949 3657 3130 
00009e0: 7349 6e4a 6864 7949 3649 6c73 784d 5459 
00009f0: 7758 5735 6862 5755 694c 434a 3065 5842 
0000a00: 6c49 6a6f 784d 4831 394c 434a 7063 314e 
0000a10: 3063 6e56 6a64 4349 365a 6d46 7363 3255 
0000a20: 7349 6d31 6c64 4768 765a 484d 694f 6e74 
0000a30: 394c 434a 7559 5731 6c63 3342 6859 3255 
0000a40: 694f 6d35 3162 4778 3900 0041 8804 0bad 
0000a50: 0465 794a 6a62 3231 745a 5735 3049 6a70 
0000a60: 7564 5778 734c 434a 6a62 4746 7a63 7949 
0000a70: 3649 6e4a 6c59 3352 6862 6d64 735a 5349 
0000a80: 7349 6d4e 7359 584e 7a58 326c 6b49 6a6f 
0000a90: 314d 6a41 7349 6d5a 705a 5778 6b63 7949 
0000aa0: 3665 794a 7559 5731 6c49 6a70 3749 6d64 
0000ab0: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000ac0: 7959 5863 694f 694a 624d 5445 324d 4631 
0000ad0: 7559 5731 6c49 6977 6964 486c 775a 5349 
0000ae0: 364d 5442 394c 434a 6f49 6a70 3749 6d64 
0000af0: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000b00: 7959 5863 694f 694a 704d 7a49 694c 434a 
0000b10: 3065 5842 6c49 6a6f 7866 5377 6964 7949 
0000b20: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000b30: 6258 5377 6963 6d46 3349 6a6f 6961 544d 
0000b40: 7949 6977 6964 486c 775a 5349 364d 5830 
0000b50: 7349 6e6b 694f 6e73 695a 3256 755a 584a 
0000b60: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000b70: 3649 6d59 324e 4349 7349 6e52 3563 4755 
0000b80: 694f 6a52 394c 434a 3449 6a70 3749 6d64 
0000b90: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000ba0: 7959 5863 694f 694a 6d4e 6a51 694c 434a 
0000bb0: 3065 5842 6c49 6a6f 3066 5377 6963 6d46 
0000bc0: 6b61 5856 7a49 6a70 3749 6d64 6c62 6d56 
0000bd0: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000be0: 694f 694a 6d4d 7a49 694c 434a 3065 5842 
0000bf0: 6c49 6a6f 7a66 5377 6961 5735 755a 5849 
0000c00: 694f 6e73 695a 3256 755a 584a 7059 7949 
0000c10: 3657 3130 7349 6e4a 6864 7949 3649 6c73 
0000c20: 784d 3131 6a61 584a 6a62 4755 694c 434a 
0000c30: 3065 5842 6c49 6a6f 784d 4831 394c 434a 
0000c40: 7063 314e 3063 6e56 6a64 4349 365a 6d46 
0000c50: 7363 3255 7349 6d31 6c64 4768 765a 484d 
0000c60: 694f 6e74 394c 434a 7559 5731 6c63 3342 
0000c70: 6859 3255 694f 6d35 3162 4778 3900 0041 
0000c80: 8809 0b85 0265 794a 6a62 3231 745a 5735 
0000c90: 3049 6a70 7564 5778 734c 434a 6a62 4746 
0000ca0: 7a63 7949 3649 6d35 6862 5755 694c 434a 
0000cb0: 6a62 4746 7a63 3139 705a 4349 364d 5445 
0000cc0: 324d 4377 695a 6d6c 6c62 4752 7a49 6a70 
0000cd0: 3749 6e4e 7664 584a 6a5a 5349 3665 794a 
0000ce0: 6e5a 5735 6c63 6d6c 6a49 6a70 6258 5377 
0000cf0: 6963 6d46 3349 6a6f 6961 544d 7949 6977 
0000d00: 6964 486c 775a 5349 364d 5830 7349 6d35 
0000d10: 6862 5755 694f 6e73 695a 3256 755a 584a 
0000d20: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000d30: 3649 6e4e 3063 6d6c 755a 7949 7349 6e52 
0000d40: 3563 4755 694f 6a56 3966 5377 6961 584e 
0000d50: 5464 484a 3159 3351 694f 6e52 7964 5755 
0000d60: 7349 6d31 6c64 4768 765a 484d 694f 6e74 
0000d70: 394c 434a 7559 5731 6c63 3342 6859 3255 
0000d80: 694f 6d35 3162 4778 3900                
