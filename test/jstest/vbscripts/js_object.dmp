0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0a                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 01                                        ; num params
0000033: 7f                                        ; i32
0000034: 00                                        ; num results
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 00                                        ; num params
000003b: 00                                        ; num results
0000009: 32                                        ; FIXUP section size
; section "Import" (2)
000003c: 02                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 10                                        ; num imports
; import header 0
000003f: 04                                        ; string length
0000040: 4d61 7468                                Math  ; import module name
0000044: 03                                        ; string length
0000045: 706f 77                                  pow  ; import field name
0000048: 00                                        ; import kind
0000049: 00                                        ; import signature index
; import header 1
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 04                                        ; string length
0000050: 7371 7274                                sqrt  ; import field name
0000054: 00                                        ; import kind
0000055: 01                                        ; import signature index
; import header 2
0000056: 04                                        ; string length
0000057: 4d61 7468                                Math  ; import module name
000005b: 03                                        ; string length
000005c: 6578 70                                  exp  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 3
0000061: 04                                        ; string length
0000062: 4d61 7468                                Math  ; import module name
0000066: 03                                        ; string length
0000067: 636f 73                                  cos  ; import field name
000006a: 00                                        ; import kind
000006b: 01                                        ; import signature index
; import header 4
000006c: 04                                        ; string length
000006d: 4d61 7468                                Math  ; import module name
0000071: 06                                        ; string length
0000072: 7261 6e64 6f6d                           random  ; import field name
0000078: 00                                        ; import kind
0000079: 02                                        ; import signature index
; import header 5
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 04                                        ; string length
0000080: 6365 696c                                ceil  ; import field name
0000084: 00                                        ; import kind
0000085: 01                                        ; import signature index
; import header 6
0000086: 04                                        ; string length
0000087: 4d61 7468                                Math  ; import module name
000008b: 05                                        ; string length
000008c: 666c 6f6f 72                             floor  ; import field name
0000091: 00                                        ; import kind
0000092: 01                                        ; import signature index
; import header 7
0000093: 02                                        ; string length
0000094: 4743                                     GC  ; import module name
0000096: 09                                        ; string length
0000097: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a0: 00                                        ; import kind
00000a1: 03                                        ; import signature index
; import header 8
00000a2: 06                                        ; string length
00000a3: 7374 7269 6e67                           string  ; import module name
00000a9: 07                                        ; string length
00000aa: 7265 706c 6163 65                        replace  ; import field name
00000b1: 00                                        ; import kind
00000b2: 04                                        ; import signature index
; import header 9
00000b3: 06                                        ; string length
00000b4: 7374 7269 6e67                           string  ; import module name
00000ba: 03                                        ; string length
00000bb: 6164 64                                  add  ; import field name
00000be: 00                                        ; import kind
00000bf: 05                                        ; import signature index
; import header 10
00000c0: 06                                        ; string length
00000c1: 7374 7269 6e67                           string  ; import module name
00000c7: 06                                        ; string length
00000c8: 6c65 6e67 7468                           length  ; import field name
00000ce: 00                                        ; import kind
00000cf: 06                                        ; import signature index
; import header 11
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 07                                        ; string length
00000d8: 696e 6465 784f 66                        indexOf  ; import field name
00000df: 00                                        ; import kind
00000e0: 05                                        ; import signature index
; import header 12
00000e1: 07                                        ; string length
00000e2: 636f 6e73 6f6c 65                        console  ; import module name
00000e9: 03                                        ; string length
00000ea: 6c6f 67                                  log  ; import field name
00000ed: 00                                        ; import kind
00000ee: 07                                        ; import signature index
; import header 13
00000ef: 07                                        ; string length
00000f0: 636f 6e73 6f6c 65                        console  ; import module name
00000f7: 03                                        ; string length
00000f8: 6c6f 67                                  log  ; import field name
00000fb: 00                                        ; import kind
00000fc: 07                                        ; import signature index
; import header 14
00000fd: 06                                        ; string length
00000fe: 7374 7269 6e67                           string  ; import module name
0000104: 08                                        ; string length
0000105: 746f 5374 7269 6e67                      toString  ; import field name
000010d: 00                                        ; import kind
000010e: 06                                        ; import signature index
; import header 15
000010f: 03                                        ; string length
0000110: 656e 76                                  env  ; import module name
0000113: 0a                                        ; string length
0000114: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011e: 02                                        ; import kind
000011f: 00                                        ; limits: flags
0000120: 01                                        ; limits: initial
; move data: [3e, 121) -> [3f, 122)
000003d: e301                                      ; FIXUP section size
; section "Function" (3)
0000122: 03                                        ; section code
0000123: 00                                        ; section size (guess)
0000124: 16                                        ; num functions
0000125: 05                                        ; function 0 signature index
0000126: 08                                        ; function 1 signature index
0000127: 08                                        ; function 2 signature index
0000128: 08                                        ; function 3 signature index
0000129: 08                                        ; function 4 signature index
000012a: 08                                        ; function 5 signature index
000012b: 08                                        ; function 6 signature index
000012c: 08                                        ; function 7 signature index
000012d: 08                                        ; function 8 signature index
000012e: 08                                        ; function 9 signature index
000012f: 08                                        ; function 10 signature index
0000130: 08                                        ; function 11 signature index
0000131: 08                                        ; function 12 signature index
0000132: 08                                        ; function 13 signature index
0000133: 08                                        ; function 14 signature index
0000134: 08                                        ; function 15 signature index
0000135: 08                                        ; function 16 signature index
0000136: 09                                        ; function 17 signature index
0000137: 09                                        ; function 18 signature index
0000138: 09                                        ; function 19 signature index
0000139: 09                                        ; function 20 signature index
000013a: 09                                        ; function 21 signature index
0000123: 17                                        ; FIXUP section size
; section "Global" (6)
000013b: 06                                        ; section code
000013c: 00                                        ; section size (guess)
000013d: 0f                                        ; num globals
000013e: 7f                                        ; i32
000013f: 01                                        ; global mutability
0000140: 41                                        ; i32.const
0000141: b00e                                      ; i32 literal
0000143: 0b                                        ; end
0000144: 7c                                        ; f64
0000145: 01                                        ; global mutability
0000146: 44                                        ; f64.const
0000147: 6957 148b 0abf 0540                       ; f64 literal
000014f: 0b                                        ; end
0000150: 7c                                        ; f64
0000151: 01                                        ; global mutability
0000152: 44                                        ; f64.const
0000153: 182d 4454 fb21 0940                       ; f64 literal
000015b: 0b                                        ; end
000015c: 7f                                        ; i32
000015d: 01                                        ; global mutability
000015e: 41                                        ; i32.const
000015f: ffff ffff 07                              ; i32 literal
0000164: 0b                                        ; end
0000165: 7e                                        ; i64
0000166: 01                                        ; global mutability
0000167: 42                                        ; i64.const
0000168: ffff ffff ffff ffff ff00                  ; i64 literal
0000172: 0b                                        ; end
0000173: 7d                                        ; f32
0000174: 01                                        ; global mutability
0000175: 43                                        ; f32.const
0000176: ffff 7f7f                                 ; f32 literal
000017a: 0b                                        ; end
000017b: 7c                                        ; f64
000017c: 01                                        ; global mutability
000017d: 44                                        ; f64.const
000017e: ffff ffff ffff ef7f                       ; f64 literal
0000186: 0b                                        ; end
0000187: 7f                                        ; i32
0000188: 01                                        ; global mutability
0000189: 41                                        ; i32.const
000018a: 8080 8080 78                              ; i32 literal
000018f: 0b                                        ; end
0000190: 7e                                        ; i64
0000191: 01                                        ; global mutability
0000192: 42                                        ; i64.const
0000193: 8080 8080 8080 8080 807f                  ; i64 literal
000019d: 0b                                        ; end
000019e: 7d                                        ; f32
000019f: 01                                        ; global mutability
00001a0: 43                                        ; f32.const
00001a1: ffff 7fff                                 ; f32 literal
00001a5: 0b                                        ; end
00001a6: 7c                                        ; f64
00001a7: 01                                        ; global mutability
00001a8: 44                                        ; f64.const
00001a9: ffff ffff ffff efff                       ; f64 literal
00001b1: 0b                                        ; end
00001b2: 7c                                        ; f64
00001b3: 01                                        ; global mutability
00001b4: 44                                        ; f64.const
00001b5: 0000 0000 0040 8f40                       ; f64 literal
00001bd: 0b                                        ; end
00001be: 7f                                        ; i32
00001bf: 01                                        ; global mutability
00001c0: 41                                        ; i32.const
00001c1: 00                                        ; i32 literal
00001c2: 0b                                        ; end
00001c3: 7f                                        ; i32
00001c4: 01                                        ; global mutability
00001c5: 41                                        ; i32.const
00001c6: 00                                        ; i32 literal
00001c7: 0b                                        ; end
00001c8: 7f                                        ; i32
00001c9: 01                                        ; global mutability
00001ca: 41                                        ; i32.const
00001cb: f808                                      ; i32 literal
00001cd: 0b                                        ; end
; move data: [13d, 1ce) -> [13e, 1cf)
000013c: 9101                                      ; FIXUP section size
; section "Export" (7)
00001cf: 07                                        ; section code
00001d0: 00                                        ; section size (guess)
00001d1: 0f                                        ; num exports
00001d2: 14                                        ; string length
00001d3: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001e3: 5369 7a65                                Size  ; export name
00001e7: 00                                        ; export kind
00001e8: 10                                        ; export func index
00001e9: 12                                        ; string length
00001ea: 6f62 6a65 6374 4743 2e6e 6577 4369 7263  objectGC.newCirc
00001fa: 6c65                                     le  ; export name
00001fc: 00                                        ; export kind
00001fd: 11                                        ; export func index
00001fe: 12                                        ; string length
00001ff: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65  objectGC.getObje
000020f: 6374                                     ct  ; export name
0000211: 00                                        ; export kind
0000212: 13                                        ; export func index
0000213: 18                                        ; string length
0000214: 6e75 6d62 6572 4172 7261 792e 6372 6561  numberArray.crea
0000224: 7465 5665 6374 6f72                      teVector  ; export name
000022c: 00                                        ; export kind
000022d: 14                                        ; export func index
000022e: 17                                        ; string length
000022f: 6e75 6d62 6572 4172 7261 792e 6e61 6d65  numberArray.name
000023f: 7356 6563 746f 72                        sVector  ; export name
0000246: 00                                        ; export kind
0000247: 15                                        ; export func index
0000248: 16                                        ; string length
0000249: 6e75 6d62 6572 4172 7261 792e 7374 7275  numberArray.stru
0000259: 6374 7572 6573                           ctures  ; export name
000025f: 00                                        ; export kind
0000260: 16                                        ; export func index
0000261: 1a                                        ; string length
0000262: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000272: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
000027c: 00                                        ; export kind
000027d: 17                                        ; export func index
000027e: 20                                        ; string length
000027f: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000028f: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
000029f: 00                                        ; export kind
00002a0: 18                                        ; export func index
00002a1: 1c                                        ; string length
00002a2: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b2: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00002be: 00                                        ; export kind
00002bf: 19                                        ; export func index
00002c0: 1c                                        ; string length
00002c1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d1: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
00002dd: 00                                        ; export kind
00002de: 1a                                        ; export func index
00002df: 1e                                        ; string length
00002e0: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002f0: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
00002fe: 00                                        ; export kind
00002ff: 1b                                        ; export func index
0000300: 1e                                        ; string length
0000301: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000311: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
000031f: 00                                        ; export kind
0000320: 1c                                        ; export func index
0000321: 11                                        ; string length
0000322: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000332: 64                                       d  ; export name
0000333: 00                                        ; export kind
0000334: 1d                                        ; export func index
0000335: 1c                                        ; string length
0000336: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000346: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000352: 00                                        ; export kind
0000353: 1e                                        ; export func index
0000354: 20                                        ; string length
0000355: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000365: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
0000375: 00                                        ; export kind
0000376: 1f                                        ; export func index
; move data: [1d1, 377) -> [1d2, 378)
00001d0: a603                                      ; FIXUP section size
; section "Start" (8)
0000378: 08                                        ; section code
0000379: 00                                        ; section size (guess)
000037a: 20                                        ; start func index
0000379: 01                                        ; FIXUP section size
; section "Code" (10)
000037b: 0a                                        ; section code
000037c: 00                                        ; section size (guess)
000037d: 16                                        ; num functions
; function body 0
000037e: 00                                        ; func body size (guess)
000037f: 01                                        ; local decl count
0000380: 01                                        ; local type count
0000381: 7f                                        ; i32
0000382: 23                                        ; global.get
0000383: 00                                        ; global index
0000384: 21                                        ; local.set
0000385: 02                                        ; local index
0000386: 20                                        ; local.get
0000387: 02                                        ; local index
0000388: 20                                        ; local.get
0000389: 00                                        ; local index
000038a: 6a                                        ; i32.add
000038b: 24                                        ; global.set
000038c: 00                                        ; global index
000038d: 20                                        ; local.get
000038e: 02                                        ; local index
000038f: 20                                        ; local.get
0000390: 01                                        ; local index
0000391: 10                                        ; call
0000392: 07                                        ; function index
0000393: 20                                        ; local.get
0000394: 02                                        ; local index
0000395: 0f                                        ; return
0000396: 0b                                        ; end
000037e: 18                                        ; FIXUP func body size
; function body 1
0000397: 00                                        ; func body size (guess)
0000398: 00                                        ; local decl count
0000399: 23                                        ; global.get
000039a: 00                                        ; global index
000039b: 0f                                        ; return
000039c: 0b                                        ; end
0000397: 05                                        ; FIXUP func body size
; function body 2
000039d: 00                                        ; func body size (guess)
000039e: 01                                        ; local decl count
000039f: 16                                        ; local type count
00003a0: 7f                                        ; i32
00003a1: 23                                        ; global.get
00003a2: 0b                                        ; global index
00003a3: 41                                        ; i32.const
00003a4: 02                                        ; i32 literal
00003a5: b7                                        ; f64.convert_i32_s
00003a6: a2                                        ; f64.mul
00003a7: 24                                        ; global.set
00003a8: 0b                                        ; global index
00003a9: 41                                        ; i32.const
00003aa: 1c                                        ; i32 literal
00003ab: 41                                        ; i32.const
00003ac: 0d                                        ; i32 literal
00003ad: 10                                        ; call
00003ae: 0f                                        ; function index
00003af: 21                                        ; local.set
00003b0: 10                                        ; local index
00003b1: 20                                        ; local.get
00003b2: 10                                        ; local index
00003b3: 41                                        ; i32.const
00003b4: 00                                        ; i32 literal
00003b5: 6a                                        ; i32.add
00003b6: 23                                        ; global.get
00003b7: 0b                                        ; global index
00003b8: b6                                        ; f32.demote_f64
00003b9: 38                                        ; f32.store
00003ba: 02                                        ; alignment
00003bb: 00                                        ; store offset
00003bc: 20                                        ; local.get
00003bd: 10                                        ; local index
00003be: 41                                        ; i32.const
00003bf: 04                                        ; i32 literal
00003c0: 6a                                        ; i32.add
00003c1: 41                                        ; i32.const
00003c2: 8fce 00                                   ; i32 literal
00003c5: b2                                        ; f32.convert_i32_s
00003c6: 38                                        ; f32.store
00003c7: 02                                        ; alignment
00003c8: 00                                        ; store offset
00003c9: 10                                        ; call
00003ca: 12                                        ; function index
00003cb: 21                                        ; local.set
00003cc: 13                                        ; local index
00003cd: 20                                        ; local.get
00003ce: 10                                        ; local index
00003cf: 41                                        ; i32.const
00003d0: 0c                                        ; i32 literal
00003d1: 6a                                        ; i32.add
00003d2: 21                                        ; local.set
00003d3: 12                                        ; local index
00003d4: 20                                        ; local.get
00003d5: 12                                        ; local index
00003d6: 41                                        ; i32.const
00003d7: 00                                        ; i32 literal
00003d8: 6a                                        ; i32.add
00003d9: 20                                        ; local.get
00003da: 13                                        ; local index
00003db: 41                                        ; i32.const
00003dc: 00                                        ; i32 literal
00003dd: 6a                                        ; i32.add
00003de: 28                                        ; i32.load
00003df: 02                                        ; alignment
00003e0: 00                                        ; load offset
00003e1: 36                                        ; i32.store
00003e2: 02                                        ; alignment
00003e3: 00                                        ; store offset
00003e4: 20                                        ; local.get
00003e5: 12                                        ; local index
00003e6: 41                                        ; i32.const
00003e7: 04                                        ; i32 literal
00003e8: 6a                                        ; i32.add
00003e9: 20                                        ; local.get
00003ea: 13                                        ; local index
00003eb: 41                                        ; i32.const
00003ec: 04                                        ; i32 literal
00003ed: 6a                                        ; i32.add
00003ee: 28                                        ; i32.load
00003ef: 02                                        ; alignment
00003f0: 00                                        ; load offset
00003f1: 36                                        ; i32.store
00003f2: 02                                        ; alignment
00003f3: 00                                        ; store offset
00003f4: 41                                        ; i32.const
00003f5: 08                                        ; i32 literal
00003f6: 41                                        ; i32.const
00003f7: 8809                                      ; i32 literal
00003f9: 10                                        ; call
00003fa: 0f                                        ; function index
00003fb: 21                                        ; local.set
00003fc: 11                                        ; local index
00003fd: 20                                        ; local.get
00003fe: 11                                        ; local index
00003ff: 41                                        ; i32.const
0000400: 04                                        ; i32 literal
0000401: 6a                                        ; i32.add
0000402: 41                                        ; i32.const
0000403: b00b                                      ; i32 literal
0000405: 36                                        ; i32.store
0000406: 02                                        ; alignment
0000407: 00                                        ; store offset
0000408: 20                                        ; local.get
0000409: 11                                        ; local index
000040a: 41                                        ; i32.const
000040b: 00                                        ; i32 literal
000040c: 6a                                        ; i32.add
000040d: 41                                        ; i32.const
000040e: 00                                        ; i32 literal
000040f: 36                                        ; i32.store
0000410: 02                                        ; alignment
0000411: 00                                        ; store offset
0000412: 20                                        ; local.get
0000413: 11                                        ; local index
0000414: 21                                        ; local.set
0000415: 15                                        ; local index
0000416: 20                                        ; local.get
0000417: 10                                        ; local index
0000418: 41                                        ; i32.const
0000419: 14                                        ; i32 literal
000041a: 6a                                        ; i32.add
000041b: 21                                        ; local.set
000041c: 14                                        ; local index
000041d: 20                                        ; local.get
000041e: 14                                        ; local index
000041f: 41                                        ; i32.const
0000420: 00                                        ; i32 literal
0000421: 6a                                        ; i32.add
0000422: 20                                        ; local.get
0000423: 15                                        ; local index
0000424: 41                                        ; i32.const
0000425: 00                                        ; i32 literal
0000426: 6a                                        ; i32.add
0000427: 28                                        ; i32.load
0000428: 02                                        ; alignment
0000429: 00                                        ; load offset
000042a: 36                                        ; i32.store
000042b: 02                                        ; alignment
000042c: 00                                        ; store offset
000042d: 20                                        ; local.get
000042e: 14                                        ; local index
000042f: 41                                        ; i32.const
0000430: 04                                        ; i32 literal
0000431: 6a                                        ; i32.add
0000432: 20                                        ; local.get
0000433: 15                                        ; local index
0000434: 41                                        ; i32.const
0000435: 04                                        ; i32 literal
0000436: 6a                                        ; i32.add
0000437: 28                                        ; i32.load
0000438: 02                                        ; alignment
0000439: 00                                        ; load offset
000043a: 36                                        ; i32.store
000043b: 02                                        ; alignment
000043c: 00                                        ; store offset
000043d: 20                                        ; local.get
000043e: 10                                        ; local index
000043f: 41                                        ; i32.const
0000440: 08                                        ; i32 literal
0000441: 6a                                        ; i32.add
0000442: 41                                        ; i32.const
0000443: e400                                      ; i32 literal
0000445: 36                                        ; i32.store
0000446: 02                                        ; alignment
0000447: 00                                        ; store offset
0000448: 20                                        ; local.get
0000449: 10                                        ; local index
000044a: 0f                                        ; return
000044b: 0b                                        ; end
; move data: [39e, 44c) -> [39f, 44d)
000039d: ae01                                      ; FIXUP func body size
; function body 3
000044d: 00                                        ; func body size (guess)
000044e: 01                                        ; local decl count
000044f: 01                                        ; local type count
0000450: 7f                                        ; i32
0000451: 41                                        ; i32.const
0000452: 08                                        ; i32 literal
0000453: 41                                        ; i32.const
0000454: 8809                                      ; i32 literal
0000456: 10                                        ; call
0000457: 0f                                        ; function index
0000458: 21                                        ; local.set
0000459: 00                                        ; local index
000045a: 20                                        ; local.get
000045b: 00                                        ; local index
000045c: 41                                        ; i32.const
000045d: 04                                        ; i32 literal
000045e: 6a                                        ; i32.add
000045f: 41                                        ; i32.const
0000460: d00b                                      ; i32 literal
0000462: 36                                        ; i32.store
0000463: 02                                        ; alignment
0000464: 00                                        ; store offset
0000465: 20                                        ; local.get
0000466: 00                                        ; local index
0000467: 41                                        ; i32.const
0000468: 00                                        ; i32 literal
0000469: 6a                                        ; i32.add
000046a: 41                                        ; i32.const
000046b: 87e4 06                                   ; i32 literal
000046e: 36                                        ; i32.store
000046f: 02                                        ; alignment
0000470: 00                                        ; store offset
0000471: 20                                        ; local.get
0000472: 00                                        ; local index
0000473: 0f                                        ; return
0000474: 0b                                        ; end
000044d: 27                                        ; FIXUP func body size
; function body 4
0000475: 00                                        ; func body size (guess)
0000476: 00                                        ; local decl count
0000477: 23                                        ; global.get
0000478: 0d                                        ; global index
0000479: 0f                                        ; return
000047a: 0b                                        ; end
0000475: 05                                        ; FIXUP func body size
; function body 5
000047b: 00                                        ; func body size (guess)
000047c: 01                                        ; local decl count
000047d: 03                                        ; local type count
000047e: 7f                                        ; i32
000047f: 41                                        ; i32.const
0000480: 08                                        ; i32 literal
0000481: 41                                        ; i32.const
0000482: 0a                                        ; i32 literal
0000483: 41                                        ; i32.const
0000484: 04                                        ; i32 literal
0000485: 6c                                        ; i32.mul
0000486: 6a                                        ; i32.add
0000487: 41                                        ; i32.const
0000488: 07                                        ; i32 literal
0000489: 10                                        ; call
000048a: 0f                                        ; function index
000048b: 21                                        ; local.set
000048c: 01                                        ; local index
000048d: 20                                        ; local.get
000048e: 01                                        ; local index
000048f: 41                                        ; i32.const
0000490: 01                                        ; i32 literal
0000491: 36                                        ; i32.store
0000492: 02                                        ; alignment
0000493: 00                                        ; store offset
0000494: 20                                        ; local.get
0000495: 01                                        ; local index
0000496: 41                                        ; i32.const
0000497: 04                                        ; i32 literal
0000498: 6a                                        ; i32.add
0000499: 41                                        ; i32.const
000049a: 0a                                        ; i32 literal
000049b: 36                                        ; i32.store
000049c: 02                                        ; alignment
000049d: 00                                        ; store offset
000049e: 20                                        ; local.get
000049f: 01                                        ; local index
00004a0: 41                                        ; i32.const
00004a1: 08                                        ; i32 literal
00004a2: 6a                                        ; i32.add
00004a3: 21                                        ; local.set
00004a4: 02                                        ; local index
00004a5: 20                                        ; local.get
00004a6: 02                                        ; local index
00004a7: 41                                        ; i32.const
00004a8: 00                                        ; i32 literal
00004a9: 6a                                        ; i32.add
00004aa: 41                                        ; i32.const
00004ab: 01                                        ; i32 literal
00004ac: 36                                        ; i32.store
00004ad: 02                                        ; alignment
00004ae: 00                                        ; store offset
00004af: 20                                        ; local.get
00004b0: 02                                        ; local index
00004b1: 41                                        ; i32.const
00004b2: 04                                        ; i32 literal
00004b3: 6a                                        ; i32.add
00004b4: 41                                        ; i32.const
00004b5: 02                                        ; i32 literal
00004b6: 36                                        ; i32.store
00004b7: 02                                        ; alignment
00004b8: 00                                        ; store offset
00004b9: 20                                        ; local.get
00004ba: 02                                        ; local index
00004bb: 41                                        ; i32.const
00004bc: 08                                        ; i32 literal
00004bd: 6a                                        ; i32.add
00004be: 41                                        ; i32.const
00004bf: 03                                        ; i32 literal
00004c0: 36                                        ; i32.store
00004c1: 02                                        ; alignment
00004c2: 00                                        ; store offset
00004c3: 20                                        ; local.get
00004c4: 02                                        ; local index
00004c5: 41                                        ; i32.const
00004c6: 0c                                        ; i32 literal
00004c7: 6a                                        ; i32.add
00004c8: 41                                        ; i32.const
00004c9: 04                                        ; i32 literal
00004ca: 36                                        ; i32.store
00004cb: 02                                        ; alignment
00004cc: 00                                        ; store offset
00004cd: 20                                        ; local.get
00004ce: 02                                        ; local index
00004cf: 41                                        ; i32.const
00004d0: 10                                        ; i32 literal
00004d1: 6a                                        ; i32.add
00004d2: 41                                        ; i32.const
00004d3: 05                                        ; i32 literal
00004d4: 36                                        ; i32.store
00004d5: 02                                        ; alignment
00004d6: 00                                        ; store offset
00004d7: 20                                        ; local.get
00004d8: 02                                        ; local index
00004d9: 41                                        ; i32.const
00004da: 14                                        ; i32 literal
00004db: 6a                                        ; i32.add
00004dc: 41                                        ; i32.const
00004dd: 06                                        ; i32 literal
00004de: 36                                        ; i32.store
00004df: 02                                        ; alignment
00004e0: 00                                        ; store offset
00004e1: 20                                        ; local.get
00004e2: 02                                        ; local index
00004e3: 41                                        ; i32.const
00004e4: 18                                        ; i32 literal
00004e5: 6a                                        ; i32.add
00004e6: 41                                        ; i32.const
00004e7: 07                                        ; i32 literal
00004e8: 36                                        ; i32.store
00004e9: 02                                        ; alignment
00004ea: 00                                        ; store offset
00004eb: 20                                        ; local.get
00004ec: 02                                        ; local index
00004ed: 41                                        ; i32.const
00004ee: 1c                                        ; i32 literal
00004ef: 6a                                        ; i32.add
00004f0: 41                                        ; i32.const
00004f1: 08                                        ; i32 literal
00004f2: 36                                        ; i32.store
00004f3: 02                                        ; alignment
00004f4: 00                                        ; store offset
00004f5: 20                                        ; local.get
00004f6: 02                                        ; local index
00004f7: 41                                        ; i32.const
00004f8: 20                                        ; i32 literal
00004f9: 6a                                        ; i32.add
00004fa: 41                                        ; i32.const
00004fb: 09                                        ; i32 literal
00004fc: 36                                        ; i32.store
00004fd: 02                                        ; alignment
00004fe: 00                                        ; store offset
00004ff: 20                                        ; local.get
0000500: 02                                        ; local index
0000501: 41                                        ; i32.const
0000502: 24                                        ; i32 literal
0000503: 6a                                        ; i32.add
0000504: 41                                        ; i32.const
0000505: 00                                        ; i32 literal
0000506: 36                                        ; i32.store
0000507: 02                                        ; alignment
0000508: 00                                        ; store offset
0000509: 20                                        ; local.get
000050a: 01                                        ; local index
000050b: 0f                                        ; return
000050c: 0b                                        ; end
; move data: [47c, 50d) -> [47d, 50e)
000047b: 9101                                      ; FIXUP func body size
; function body 6
000050e: 00                                        ; func body size (guess)
000050f: 01                                        ; local decl count
0000510: 02                                        ; local type count
0000511: 7f                                        ; i32
0000512: 41                                        ; i32.const
0000513: 08                                        ; i32 literal
0000514: 41                                        ; i32.const
0000515: 07                                        ; i32 literal
0000516: 41                                        ; i32.const
0000517: 04                                        ; i32 literal
0000518: 6c                                        ; i32.mul
0000519: 6a                                        ; i32.add
000051a: 41                                        ; i32.const
000051b: 07                                        ; i32 literal
000051c: 10                                        ; call
000051d: 0f                                        ; function index
000051e: 21                                        ; local.set
000051f: 00                                        ; local index
0000520: 20                                        ; local.get
0000521: 00                                        ; local index
0000522: 41                                        ; i32.const
0000523: 05                                        ; i32 literal
0000524: 36                                        ; i32.store
0000525: 02                                        ; alignment
0000526: 00                                        ; store offset
0000527: 20                                        ; local.get
0000528: 00                                        ; local index
0000529: 41                                        ; i32.const
000052a: 04                                        ; i32 literal
000052b: 6a                                        ; i32.add
000052c: 41                                        ; i32.const
000052d: 07                                        ; i32 literal
000052e: 36                                        ; i32.store
000052f: 02                                        ; alignment
0000530: 00                                        ; store offset
0000531: 20                                        ; local.get
0000532: 00                                        ; local index
0000533: 41                                        ; i32.const
0000534: 08                                        ; i32 literal
0000535: 6a                                        ; i32.add
0000536: 21                                        ; local.set
0000537: 01                                        ; local index
0000538: 20                                        ; local.get
0000539: 01                                        ; local index
000053a: 41                                        ; i32.const
000053b: 00                                        ; i32 literal
000053c: 6a                                        ; i32.add
000053d: 41                                        ; i32.const
000053e: f80b                                      ; i32 literal
0000540: 36                                        ; i32.store
0000541: 02                                        ; alignment
0000542: 00                                        ; store offset
0000543: 20                                        ; local.get
0000544: 01                                        ; local index
0000545: 41                                        ; i32.const
0000546: 04                                        ; i32 literal
0000547: 6a                                        ; i32.add
0000548: 41                                        ; i32.const
0000549: 880c                                      ; i32 literal
000054b: 36                                        ; i32.store
000054c: 02                                        ; alignment
000054d: 00                                        ; store offset
000054e: 20                                        ; local.get
000054f: 01                                        ; local index
0000550: 41                                        ; i32.const
0000551: 08                                        ; i32 literal
0000552: 6a                                        ; i32.add
0000553: 41                                        ; i32.const
0000554: 980c                                      ; i32 literal
0000556: 36                                        ; i32.store
0000557: 02                                        ; alignment
0000558: 00                                        ; store offset
0000559: 20                                        ; local.get
000055a: 01                                        ; local index
000055b: 41                                        ; i32.const
000055c: 0c                                        ; i32 literal
000055d: 6a                                        ; i32.add
000055e: 41                                        ; i32.const
000055f: a80c                                      ; i32 literal
0000561: 36                                        ; i32.store
0000562: 02                                        ; alignment
0000563: 00                                        ; store offset
0000564: 20                                        ; local.get
0000565: 01                                        ; local index
0000566: 41                                        ; i32.const
0000567: 10                                        ; i32 literal
0000568: 6a                                        ; i32.add
0000569: 41                                        ; i32.const
000056a: b80c                                      ; i32 literal
000056c: 36                                        ; i32.store
000056d: 02                                        ; alignment
000056e: 00                                        ; store offset
000056f: 20                                        ; local.get
0000570: 01                                        ; local index
0000571: 41                                        ; i32.const
0000572: 14                                        ; i32 literal
0000573: 6a                                        ; i32.add
0000574: 41                                        ; i32.const
0000575: c00c                                      ; i32 literal
0000577: 36                                        ; i32.store
0000578: 02                                        ; alignment
0000579: 00                                        ; store offset
000057a: 20                                        ; local.get
000057b: 01                                        ; local index
000057c: 41                                        ; i32.const
000057d: 18                                        ; i32 literal
000057e: 6a                                        ; i32.add
000057f: 41                                        ; i32.const
0000580: c80c                                      ; i32 literal
0000582: 36                                        ; i32.store
0000583: 02                                        ; alignment
0000584: 00                                        ; store offset
0000585: 20                                        ; local.get
0000586: 00                                        ; local index
0000587: 0f                                        ; return
0000588: 0b                                        ; end
000050e: 7a                                        ; FIXUP func body size
; function body 7
0000589: 00                                        ; func body size (guess)
000058a: 01                                        ; local decl count
000058b: 09                                        ; local type count
000058c: 7f                                        ; i32
000058d: 10                                        ; call
000058e: 15                                        ; function index
000058f: 21                                        ; local.set
0000590: 00                                        ; local index
0000591: 41                                        ; i32.const
0000592: 08                                        ; i32 literal
0000593: 41                                        ; i32.const
0000594: 03                                        ; i32 literal
0000595: 41                                        ; i32.const
0000596: 08                                        ; i32 literal
0000597: 6c                                        ; i32.mul
0000598: 6a                                        ; i32.add
0000599: 41                                        ; i32.const
000059a: 07                                        ; i32 literal
000059b: 10                                        ; call
000059c: 0f                                        ; function index
000059d: 21                                        ; local.set
000059e: 04                                        ; local index
000059f: 20                                        ; local.get
00005a0: 04                                        ; local index
00005a1: 41                                        ; i32.const
00005a2: 8809                                      ; i32 literal
00005a4: 36                                        ; i32.store
00005a5: 02                                        ; alignment
00005a6: 00                                        ; store offset
00005a7: 20                                        ; local.get
00005a8: 04                                        ; local index
00005a9: 41                                        ; i32.const
00005aa: 04                                        ; i32 literal
00005ab: 6a                                        ; i32.add
00005ac: 41                                        ; i32.const
00005ad: 03                                        ; i32 literal
00005ae: 36                                        ; i32.store
00005af: 02                                        ; alignment
00005b0: 00                                        ; store offset
00005b1: 20                                        ; local.get
00005b2: 04                                        ; local index
00005b3: 41                                        ; i32.const
00005b4: 08                                        ; i32 literal
00005b5: 6a                                        ; i32.add
00005b6: 21                                        ; local.set
00005b7: 05                                        ; local index
00005b8: 20                                        ; local.get
00005b9: 05                                        ; local index
00005ba: 41                                        ; i32.const
00005bb: 00                                        ; i32 literal
00005bc: 6a                                        ; i32.add
00005bd: 21                                        ; local.set
00005be: 06                                        ; local index
00005bf: 20                                        ; local.get
00005c0: 06                                        ; local index
00005c1: 41                                        ; i32.const
00005c2: 8809                                      ; i32 literal
00005c4: 10                                        ; call
00005c5: 07                                        ; function index
00005c6: 20                                        ; local.get
00005c7: 06                                        ; local index
00005c8: 21                                        ; local.set
00005c9: 01                                        ; local index
00005ca: 20                                        ; local.get
00005cb: 01                                        ; local index
00005cc: 41                                        ; i32.const
00005cd: 04                                        ; i32 literal
00005ce: 6a                                        ; i32.add
00005cf: 20                                        ; local.get
00005d0: 00                                        ; local index
00005d1: 41                                        ; i32.const
00005d2: 08                                        ; i32 literal
00005d3: 6a                                        ; i32.add
00005d4: 41                                        ; i32.const
00005d5: 00                                        ; i32 literal
00005d6: 41                                        ; i32.const
00005d7: 04                                        ; i32 literal
00005d8: 6c                                        ; i32.mul
00005d9: 6a                                        ; i32.add
00005da: 28                                        ; i32.load
00005db: 02                                        ; alignment
00005dc: 00                                        ; load offset
00005dd: 36                                        ; i32.store
00005de: 02                                        ; alignment
00005df: 00                                        ; store offset
00005e0: 20                                        ; local.get
00005e1: 01                                        ; local index
00005e2: 41                                        ; i32.const
00005e3: 00                                        ; i32 literal
00005e4: 6a                                        ; i32.add
00005e5: 41                                        ; i32.const
00005e6: 00                                        ; i32 literal
00005e7: 36                                        ; i32.store
00005e8: 02                                        ; alignment
00005e9: 00                                        ; store offset
00005ea: 20                                        ; local.get
00005eb: 05                                        ; local index
00005ec: 41                                        ; i32.const
00005ed: 08                                        ; i32 literal
00005ee: 6a                                        ; i32.add
00005ef: 21                                        ; local.set
00005f0: 07                                        ; local index
00005f1: 20                                        ; local.get
00005f2: 07                                        ; local index
00005f3: 41                                        ; i32.const
00005f4: 8809                                      ; i32 literal
00005f6: 10                                        ; call
00005f7: 07                                        ; function index
00005f8: 20                                        ; local.get
00005f9: 07                                        ; local index
00005fa: 21                                        ; local.set
00005fb: 02                                        ; local index
00005fc: 20                                        ; local.get
00005fd: 02                                        ; local index
00005fe: 41                                        ; i32.const
00005ff: 04                                        ; i32 literal
0000600: 6a                                        ; i32.add
0000601: 20                                        ; local.get
0000602: 00                                        ; local index
0000603: 41                                        ; i32.const
0000604: 08                                        ; i32 literal
0000605: 6a                                        ; i32.add
0000606: 41                                        ; i32.const
0000607: 01                                        ; i32 literal
0000608: 41                                        ; i32.const
0000609: 04                                        ; i32 literal
000060a: 6c                                        ; i32.mul
000060b: 6a                                        ; i32.add
000060c: 28                                        ; i32.load
000060d: 02                                        ; alignment
000060e: 00                                        ; load offset
000060f: 36                                        ; i32.store
0000610: 02                                        ; alignment
0000611: 00                                        ; store offset
0000612: 20                                        ; local.get
0000613: 02                                        ; local index
0000614: 41                                        ; i32.const
0000615: 00                                        ; i32 literal
0000616: 6a                                        ; i32.add
0000617: 41                                        ; i32.const
0000618: 01                                        ; i32 literal
0000619: 36                                        ; i32.store
000061a: 02                                        ; alignment
000061b: 00                                        ; store offset
000061c: 20                                        ; local.get
000061d: 05                                        ; local index
000061e: 41                                        ; i32.const
000061f: 10                                        ; i32 literal
0000620: 6a                                        ; i32.add
0000621: 21                                        ; local.set
0000622: 08                                        ; local index
0000623: 20                                        ; local.get
0000624: 08                                        ; local index
0000625: 41                                        ; i32.const
0000626: 8809                                      ; i32 literal
0000628: 10                                        ; call
0000629: 07                                        ; function index
000062a: 20                                        ; local.get
000062b: 08                                        ; local index
000062c: 21                                        ; local.set
000062d: 03                                        ; local index
000062e: 20                                        ; local.get
000062f: 03                                        ; local index
0000630: 41                                        ; i32.const
0000631: 04                                        ; i32 literal
0000632: 6a                                        ; i32.add
0000633: 20                                        ; local.get
0000634: 00                                        ; local index
0000635: 41                                        ; i32.const
0000636: 08                                        ; i32 literal
0000637: 6a                                        ; i32.add
0000638: 41                                        ; i32.const
0000639: 02                                        ; i32 literal
000063a: 41                                        ; i32.const
000063b: 04                                        ; i32 literal
000063c: 6c                                        ; i32.mul
000063d: 6a                                        ; i32.add
000063e: 28                                        ; i32.load
000063f: 02                                        ; alignment
0000640: 00                                        ; load offset
0000641: 36                                        ; i32.store
0000642: 02                                        ; alignment
0000643: 00                                        ; store offset
0000644: 20                                        ; local.get
0000645: 03                                        ; local index
0000646: 41                                        ; i32.const
0000647: 00                                        ; i32 literal
0000648: 6a                                        ; i32.add
0000649: 41                                        ; i32.const
000064a: 02                                        ; i32 literal
000064b: 36                                        ; i32.store
000064c: 02                                        ; alignment
000064d: 00                                        ; store offset
000064e: 20                                        ; local.get
000064f: 04                                        ; local index
0000650: 0f                                        ; return
0000651: 0b                                        ; end
; move data: [58a, 652) -> [58b, 653)
0000589: c801                                      ; FIXUP func body size
; function body 8
0000653: 00                                        ; func body size (guess)
0000654: 00                                        ; local decl count
0000655: 41                                        ; i32.const
0000656: d80c                                      ; i32 literal
0000658: 0f                                        ; return
0000659: 0b                                        ; end
0000653: 06                                        ; FIXUP func body size
; function body 9
000065a: 00                                        ; func body size (guess)
000065b: 00                                        ; local decl count
000065c: 41                                        ; i32.const
000065d: e80c                                      ; i32 literal
000065f: 0f                                        ; return
0000660: 0b                                        ; end
000065a: 06                                        ; FIXUP func body size
; function body 10
0000661: 00                                        ; func body size (guess)
0000662: 00                                        ; local decl count
0000663: 41                                        ; i32.const
0000664: a00d                                      ; i32 literal
0000666: 0f                                        ; return
0000667: 0b                                        ; end
0000661: 06                                        ; FIXUP func body size
; function body 11
0000668: 00                                        ; func body size (guess)
0000669: 00                                        ; local decl count
000066a: 41                                        ; i32.const
000066b: b00d                                      ; i32 literal
000066d: 0f                                        ; return
000066e: 0b                                        ; end
0000668: 06                                        ; FIXUP func body size
; function body 12
000066f: 00                                        ; func body size (guess)
0000670: 00                                        ; local decl count
0000671: 41                                        ; i32.const
0000672: c00d                                      ; i32 literal
0000674: 0f                                        ; return
0000675: 0b                                        ; end
000066f: 06                                        ; FIXUP func body size
; function body 13
0000676: 00                                        ; func body size (guess)
0000677: 00                                        ; local decl count
0000678: 41                                        ; i32.const
0000679: e80d                                      ; i32 literal
000067b: 0f                                        ; return
000067c: 0b                                        ; end
0000676: 06                                        ; FIXUP func body size
; function body 14
000067d: 00                                        ; func body size (guess)
000067e: 00                                        ; local decl count
000067f: 41                                        ; i32.const
0000680: f80d                                      ; i32 literal
0000682: 0f                                        ; return
0000683: 0b                                        ; end
000067d: 06                                        ; FIXUP func body size
; function body 15
0000684: 00                                        ; func body size (guess)
0000685: 00                                        ; local decl count
0000686: 41                                        ; i32.const
0000687: a00e                                      ; i32 literal
0000689: 0f                                        ; return
000068a: 0b                                        ; end
0000684: 06                                        ; FIXUP func body size
; function body 16
000068b: 00                                        ; func body size (guess)
000068c: 00                                        ; local decl count
000068d: 41                                        ; i32.const
000068e: a80e                                      ; i32 literal
0000690: 0f                                        ; return
0000691: 0b                                        ; end
000068b: 06                                        ; FIXUP func body size
; function body 17
0000692: 00                                        ; func body size (guess)
0000693: 00                                        ; local decl count
0000694: 10                                        ; call
0000695: 21                                        ; function index
0000696: 10                                        ; call
0000697: 22                                        ; function index
0000698: 10                                        ; call
0000699: 23                                        ; function index
000069a: 10                                        ; call
000069b: 24                                        ; function index
000069c: 0b                                        ; end
0000692: 0a                                        ; FIXUP func body size
; function body 18
000069d: 00                                        ; func body size (guess)
000069e: 01                                        ; local decl count
000069f: 0f                                        ; local type count
00006a0: 7f                                        ; i32
00006a1: 41                                        ; i32.const
00006a2: 08                                        ; i32 literal
00006a3: 41                                        ; i32.const
00006a4: 02                                        ; i32 literal
00006a5: 41                                        ; i32.const
00006a6: 04                                        ; i32 literal
00006a7: 6c                                        ; i32.mul
00006a8: 6a                                        ; i32.add
00006a9: 41                                        ; i32.const
00006aa: 07                                        ; i32 literal
00006ab: 10                                        ; call
00006ac: 0f                                        ; function index
00006ad: 21                                        ; local.set
00006ae: 00                                        ; local index
00006af: 20                                        ; local.get
00006b0: 00                                        ; local index
00006b1: 41                                        ; i32.const
00006b2: 8804                                      ; i32 literal
00006b4: 36                                        ; i32.store
00006b5: 02                                        ; alignment
00006b6: 00                                        ; store offset
00006b7: 20                                        ; local.get
00006b8: 00                                        ; local index
00006b9: 41                                        ; i32.const
00006ba: 04                                        ; i32 literal
00006bb: 6a                                        ; i32.add
00006bc: 41                                        ; i32.const
00006bd: 02                                        ; i32 literal
00006be: 36                                        ; i32.store
00006bf: 02                                        ; alignment
00006c0: 00                                        ; store offset
00006c1: 20                                        ; local.get
00006c2: 00                                        ; local index
00006c3: 41                                        ; i32.const
00006c4: 08                                        ; i32 literal
00006c5: 6a                                        ; i32.add
00006c6: 21                                        ; local.set
00006c7: 01                                        ; local index
00006c8: 41                                        ; i32.const
00006c9: 28                                        ; i32 literal
00006ca: 41                                        ; i32.const
00006cb: 8804                                      ; i32 literal
00006cd: 10                                        ; call
00006ce: 0f                                        ; function index
00006cf: 21                                        ; local.set
00006d0: 02                                        ; local index
00006d1: 20                                        ; local.get
00006d2: 02                                        ; local index
00006d3: 41                                        ; i32.const
00006d4: 08                                        ; i32 literal
00006d5: 6a                                        ; i32.add
00006d6: 41                                        ; i32.const
00006d7: e400                                      ; i32 literal
00006d9: 36                                        ; i32.store
00006da: 02                                        ; alignment
00006db: 00                                        ; store offset
00006dc: 41                                        ; i32.const
00006dd: 1c                                        ; i32 literal
00006de: 41                                        ; i32.const
00006df: 0d                                        ; i32 literal
00006e0: 10                                        ; call
00006e1: 0f                                        ; function index
00006e2: 21                                        ; local.set
00006e3: 03                                        ; local index
00006e4: 41                                        ; i32.const
00006e5: 08                                        ; i32 literal
00006e6: 41                                        ; i32.const
00006e7: 8809                                      ; i32 literal
00006e9: 10                                        ; call
00006ea: 0f                                        ; function index
00006eb: 21                                        ; local.set
00006ec: 04                                        ; local index
00006ed: 20                                        ; local.get
00006ee: 04                                        ; local index
00006ef: 41                                        ; i32.const
00006f0: 04                                        ; i32 literal
00006f1: 6a                                        ; i32.add
00006f2: 41                                        ; i32.const
00006f3: 900b                                      ; i32 literal
00006f5: 36                                        ; i32.store
00006f6: 02                                        ; alignment
00006f7: 00                                        ; store offset
00006f8: 20                                        ; local.get
00006f9: 04                                        ; local index
00006fa: 41                                        ; i32.const
00006fb: 00                                        ; i32 literal
00006fc: 6a                                        ; i32.add
00006fd: 41                                        ; i32.const
00006fe: 00                                        ; i32 literal
00006ff: 36                                        ; i32.store
0000700: 02                                        ; alignment
0000701: 00                                        ; store offset
0000702: 20                                        ; local.get
0000703: 04                                        ; local index
0000704: 21                                        ; local.set
0000705: 05                                        ; local index
0000706: 20                                        ; local.get
0000707: 03                                        ; local index
0000708: 41                                        ; i32.const
0000709: 0c                                        ; i32 literal
000070a: 6a                                        ; i32.add
000070b: 21                                        ; local.set
000070c: 06                                        ; local index
000070d: 20                                        ; local.get
000070e: 06                                        ; local index
000070f: 41                                        ; i32.const
0000710: 00                                        ; i32 literal
0000711: 6a                                        ; i32.add
0000712: 20                                        ; local.get
0000713: 05                                        ; local index
0000714: 41                                        ; i32.const
0000715: 00                                        ; i32 literal
0000716: 6a                                        ; i32.add
0000717: 28                                        ; i32.load
0000718: 02                                        ; alignment
0000719: 00                                        ; load offset
000071a: 36                                        ; i32.store
000071b: 02                                        ; alignment
000071c: 00                                        ; store offset
000071d: 20                                        ; local.get
000071e: 06                                        ; local index
000071f: 41                                        ; i32.const
0000720: 04                                        ; i32 literal
0000721: 6a                                        ; i32.add
0000722: 20                                        ; local.get
0000723: 05                                        ; local index
0000724: 41                                        ; i32.const
0000725: 04                                        ; i32 literal
0000726: 6a                                        ; i32.add
0000727: 28                                        ; i32.load
0000728: 02                                        ; alignment
0000729: 00                                        ; load offset
000072a: 36                                        ; i32.store
000072b: 02                                        ; alignment
000072c: 00                                        ; store offset
000072d: 20                                        ; local.get
000072e: 03                                        ; local index
000072f: 41                                        ; i32.const
0000730: 00                                        ; i32 literal
0000731: 6a                                        ; i32.add
0000732: 43                                        ; f32.const
0000733: 0000 0000                                 ; f32 literal
0000737: 38                                        ; f32.store
0000738: 02                                        ; alignment
0000739: 00                                        ; store offset
000073a: 20                                        ; local.get
000073b: 03                                        ; local index
000073c: 41                                        ; i32.const
000073d: 04                                        ; i32 literal
000073e: 6a                                        ; i32.add
000073f: 43                                        ; f32.const
0000740: 0000 0000                                 ; f32 literal
0000744: 38                                        ; f32.store
0000745: 02                                        ; alignment
0000746: 00                                        ; store offset
0000747: 20                                        ; local.get
0000748: 03                                        ; local index
0000749: 41                                        ; i32.const
000074a: 08                                        ; i32 literal
000074b: 6a                                        ; i32.add
000074c: 41                                        ; i32.const
000074d: e400                                      ; i32 literal
000074f: 36                                        ; i32.store
0000750: 02                                        ; alignment
0000751: 00                                        ; store offset
0000752: 20                                        ; local.get
0000753: 02                                        ; local index
0000754: 41                                        ; i32.const
0000755: 24                                        ; i32 literal
0000756: 6a                                        ; i32.add
0000757: 20                                        ; local.get
0000758: 03                                        ; local index
0000759: 36                                        ; i32.store
000075a: 02                                        ; alignment
000075b: 00                                        ; store offset
000075c: 20                                        ; local.get
000075d: 02                                        ; local index
000075e: 41                                        ; i32.const
000075f: 20                                        ; i32 literal
0000760: 6a                                        ; i32.add
0000761: 41                                        ; i32.const
0000762: e707                                      ; i32 literal
0000764: b2                                        ; f32.convert_i32_s
0000765: 38                                        ; f32.store
0000766: 02                                        ; alignment
0000767: 00                                        ; store offset
0000768: 41                                        ; i32.const
0000769: 08                                        ; i32 literal
000076a: 41                                        ; i32.const
000076b: 8809                                      ; i32 literal
000076d: 10                                        ; call
000076e: 0f                                        ; function index
000076f: 21                                        ; local.set
0000770: 07                                        ; local index
0000771: 20                                        ; local.get
0000772: 07                                        ; local index
0000773: 41                                        ; i32.const
0000774: 04                                        ; i32 literal
0000775: 6a                                        ; i32.add
0000776: 41                                        ; i32.const
0000777: 980b                                      ; i32 literal
0000779: 36                                        ; i32.store
000077a: 02                                        ; alignment
000077b: 00                                        ; store offset
000077c: 20                                        ; local.get
000077d: 07                                        ; local index
000077e: 41                                        ; i32.const
000077f: 00                                        ; i32 literal
0000780: 6a                                        ; i32.add
0000781: 41                                        ; i32.const
0000782: 00                                        ; i32 literal
0000783: 36                                        ; i32.store
0000784: 02                                        ; alignment
0000785: 00                                        ; store offset
0000786: 20                                        ; local.get
0000787: 07                                        ; local index
0000788: 21                                        ; local.set
0000789: 08                                        ; local index
000078a: 20                                        ; local.get
000078b: 02                                        ; local index
000078c: 41                                        ; i32.const
000078d: 00                                        ; i32 literal
000078e: 6a                                        ; i32.add
000078f: 21                                        ; local.set
0000790: 09                                        ; local index
0000791: 20                                        ; local.get
0000792: 09                                        ; local index
0000793: 41                                        ; i32.const
0000794: 00                                        ; i32 literal
0000795: 6a                                        ; i32.add
0000796: 20                                        ; local.get
0000797: 08                                        ; local index
0000798: 41                                        ; i32.const
0000799: 00                                        ; i32 literal
000079a: 6a                                        ; i32.add
000079b: 28                                        ; i32.load
000079c: 02                                        ; alignment
000079d: 00                                        ; load offset
000079e: 36                                        ; i32.store
000079f: 02                                        ; alignment
00007a0: 00                                        ; store offset
00007a1: 20                                        ; local.get
00007a2: 09                                        ; local index
00007a3: 41                                        ; i32.const
00007a4: 04                                        ; i32 literal
00007a5: 6a                                        ; i32.add
00007a6: 20                                        ; local.get
00007a7: 08                                        ; local index
00007a8: 41                                        ; i32.const
00007a9: 04                                        ; i32 literal
00007aa: 6a                                        ; i32.add
00007ab: 28                                        ; i32.load
00007ac: 02                                        ; alignment
00007ad: 00                                        ; load offset
00007ae: 36                                        ; i32.store
00007af: 02                                        ; alignment
00007b0: 00                                        ; store offset
00007b1: 20                                        ; local.get
00007b2: 02                                        ; local index
00007b3: 41                                        ; i32.const
00007b4: 0c                                        ; i32 literal
00007b5: 6a                                        ; i32.add
00007b6: 41                                        ; i32.const
00007b7: e807                                      ; i32 literal
00007b9: 36                                        ; i32.store
00007ba: 02                                        ; alignment
00007bb: 00                                        ; store offset
00007bc: 20                                        ; local.get
00007bd: 02                                        ; local index
00007be: 41                                        ; i32.const
00007bf: 10                                        ; i32 literal
00007c0: 6a                                        ; i32.add
00007c1: 44                                        ; f64.const
00007c2: 0000 0000 0000 0000                       ; f64 literal
00007ca: 39                                        ; f64.store
00007cb: 03                                        ; alignment
00007cc: 00                                        ; store offset
00007cd: 20                                        ; local.get
00007ce: 02                                        ; local index
00007cf: 41                                        ; i32.const
00007d0: 18                                        ; i32 literal
00007d1: 6a                                        ; i32.add
00007d2: 44                                        ; f64.const
00007d3: 0000 0000 0000 0000                       ; f64 literal
00007db: 39                                        ; f64.store
00007dc: 03                                        ; alignment
00007dd: 00                                        ; store offset
00007de: 20                                        ; local.get
00007df: 01                                        ; local index
00007e0: 41                                        ; i32.const
00007e1: 00                                        ; i32 literal
00007e2: 6a                                        ; i32.add
00007e3: 20                                        ; local.get
00007e4: 02                                        ; local index
00007e5: 36                                        ; i32.store
00007e6: 02                                        ; alignment
00007e7: 00                                        ; store offset
00007e8: 41                                        ; i32.const
00007e9: 28                                        ; i32 literal
00007ea: 41                                        ; i32.const
00007eb: 8804                                      ; i32 literal
00007ed: 10                                        ; call
00007ee: 0f                                        ; function index
00007ef: 21                                        ; local.set
00007f0: 0a                                        ; local index
00007f1: 41                                        ; i32.const
00007f2: 08                                        ; i32 literal
00007f3: 41                                        ; i32.const
00007f4: 8809                                      ; i32 literal
00007f6: 10                                        ; call
00007f7: 0f                                        ; function index
00007f8: 21                                        ; local.set
00007f9: 0b                                        ; local index
00007fa: 20                                        ; local.get
00007fb: 0b                                        ; local index
00007fc: 41                                        ; i32.const
00007fd: 04                                        ; i32 literal
00007fe: 6a                                        ; i32.add
00007ff: 41                                        ; i32.const
0000800: a00b                                      ; i32 literal
0000802: 36                                        ; i32.store
0000803: 02                                        ; alignment
0000804: 00                                        ; store offset
0000805: 20                                        ; local.get
0000806: 0b                                        ; local index
0000807: 41                                        ; i32.const
0000808: 00                                        ; i32 literal
0000809: 6a                                        ; i32.add
000080a: 41                                        ; i32.const
000080b: 00                                        ; i32 literal
000080c: 36                                        ; i32.store
000080d: 02                                        ; alignment
000080e: 00                                        ; store offset
000080f: 20                                        ; local.get
0000810: 0b                                        ; local index
0000811: 21                                        ; local.set
0000812: 0c                                        ; local index
0000813: 20                                        ; local.get
0000814: 0a                                        ; local index
0000815: 41                                        ; i32.const
0000816: 00                                        ; i32 literal
0000817: 6a                                        ; i32.add
0000818: 21                                        ; local.set
0000819: 0d                                        ; local index
000081a: 20                                        ; local.get
000081b: 0d                                        ; local index
000081c: 41                                        ; i32.const
000081d: 00                                        ; i32 literal
000081e: 6a                                        ; i32.add
000081f: 20                                        ; local.get
0000820: 0c                                        ; local index
0000821: 41                                        ; i32.const
0000822: 00                                        ; i32 literal
0000823: 6a                                        ; i32.add
0000824: 28                                        ; i32.load
0000825: 02                                        ; alignment
0000826: 00                                        ; load offset
0000827: 36                                        ; i32.store
0000828: 02                                        ; alignment
0000829: 00                                        ; store offset
000082a: 20                                        ; local.get
000082b: 0d                                        ; local index
000082c: 41                                        ; i32.const
000082d: 04                                        ; i32 literal
000082e: 6a                                        ; i32.add
000082f: 20                                        ; local.get
0000830: 0c                                        ; local index
0000831: 41                                        ; i32.const
0000832: 04                                        ; i32 literal
0000833: 6a                                        ; i32.add
0000834: 28                                        ; i32.load
0000835: 02                                        ; alignment
0000836: 00                                        ; load offset
0000837: 36                                        ; i32.store
0000838: 02                                        ; alignment
0000839: 00                                        ; store offset
000083a: 20                                        ; local.get
000083b: 0a                                        ; local index
000083c: 41                                        ; i32.const
000083d: 08                                        ; i32 literal
000083e: 6a                                        ; i32.add
000083f: 41                                        ; i32.const
0000840: e807                                      ; i32 literal
0000842: 36                                        ; i32.store
0000843: 02                                        ; alignment
0000844: 00                                        ; store offset
0000845: 20                                        ; local.get
0000846: 0a                                        ; local index
0000847: 41                                        ; i32.const
0000848: 0c                                        ; i32 literal
0000849: 6a                                        ; i32.add
000084a: 41                                        ; i32.const
000084b: e807                                      ; i32 literal
000084d: 36                                        ; i32.store
000084e: 02                                        ; alignment
000084f: 00                                        ; store offset
0000850: 20                                        ; local.get
0000851: 0a                                        ; local index
0000852: 41                                        ; i32.const
0000853: 10                                        ; i32 literal
0000854: 6a                                        ; i32.add
0000855: 44                                        ; f64.const
0000856: 0000 0000 0000 0000                       ; f64 literal
000085e: 39                                        ; f64.store
000085f: 03                                        ; alignment
0000860: 00                                        ; store offset
0000861: 20                                        ; local.get
0000862: 0a                                        ; local index
0000863: 41                                        ; i32.const
0000864: 18                                        ; i32 literal
0000865: 6a                                        ; i32.add
0000866: 44                                        ; f64.const
0000867: 0000 0000 0000 0000                       ; f64 literal
000086f: 39                                        ; f64.store
0000870: 03                                        ; alignment
0000871: 00                                        ; store offset
0000872: 20                                        ; local.get
0000873: 0a                                        ; local index
0000874: 41                                        ; i32.const
0000875: 20                                        ; i32 literal
0000876: 6a                                        ; i32.add
0000877: 43                                        ; f32.const
0000878: 0000 c6c2                                 ; f32 literal
000087c: 38                                        ; f32.store
000087d: 02                                        ; alignment
000087e: 00                                        ; store offset
000087f: 20                                        ; local.get
0000880: 0a                                        ; local index
0000881: 41                                        ; i32.const
0000882: 24                                        ; i32 literal
0000883: 6a                                        ; i32.add
0000884: 41                                        ; i32.const
0000885: 00                                        ; i32 literal
0000886: 36                                        ; i32.store
0000887: 02                                        ; alignment
0000888: 00                                        ; store offset
0000889: 20                                        ; local.get
000088a: 01                                        ; local index
000088b: 41                                        ; i32.const
000088c: 04                                        ; i32 literal
000088d: 6a                                        ; i32.add
000088e: 20                                        ; local.get
000088f: 0a                                        ; local index
0000890: 36                                        ; i32.store
0000891: 02                                        ; alignment
0000892: 00                                        ; store offset
0000893: 20                                        ; local.get
0000894: 00                                        ; local index
0000895: 24                                        ; global.set
0000896: 0c                                        ; global index
0000897: 41                                        ; i32.const
0000898: 28                                        ; i32 literal
0000899: 41                                        ; i32.const
000089a: 8804                                      ; i32 literal
000089c: 10                                        ; call
000089d: 0f                                        ; function index
000089e: 21                                        ; local.set
000089f: 0e                                        ; local index
00008a0: 20                                        ; local.get
00008a1: 0e                                        ; local index
00008a2: 41                                        ; i32.const
00008a3: 18                                        ; i32 literal
00008a4: 6a                                        ; i32.add
00008a5: 41                                        ; i32.const
00008a6: ffff ffff 07                              ; i32 literal
00008ab: b7                                        ; f64.convert_i32_s
00008ac: 39                                        ; f64.store
00008ad: 03                                        ; alignment
00008ae: 00                                        ; store offset
00008af: 20                                        ; local.get
00008b0: 0e                                        ; local index
00008b1: 41                                        ; i32.const
00008b2: 10                                        ; i32 literal
00008b3: 6a                                        ; i32.add
00008b4: 41                                        ; i32.const
00008b5: 0a                                        ; i32 literal
00008b6: b7                                        ; f64.convert_i32_s
00008b7: 39                                        ; f64.store
00008b8: 03                                        ; alignment
00008b9: 00                                        ; store offset
00008ba: 20                                        ; local.get
00008bb: 0e                                        ; local index
00008bc: 41                                        ; i32.const
00008bd: 08                                        ; i32 literal
00008be: 6a                                        ; i32.add
00008bf: 41                                        ; i32.const
00008c0: e807                                      ; i32 literal
00008c2: 36                                        ; i32.store
00008c3: 02                                        ; alignment
00008c4: 00                                        ; store offset
00008c5: 20                                        ; local.get
00008c6: 0e                                        ; local index
00008c7: 41                                        ; i32.const
00008c8: 0c                                        ; i32 literal
00008c9: 6a                                        ; i32.add
00008ca: 41                                        ; i32.const
00008cb: e807                                      ; i32 literal
00008cd: 36                                        ; i32.store
00008ce: 02                                        ; alignment
00008cf: 00                                        ; store offset
00008d0: 20                                        ; local.get
00008d1: 0e                                        ; local index
00008d2: 41                                        ; i32.const
00008d3: 20                                        ; i32 literal
00008d4: 6a                                        ; i32.add
00008d5: 43                                        ; f32.const
00008d6: 0000 c6c2                                 ; f32 literal
00008da: 38                                        ; f32.store
00008db: 02                                        ; alignment
00008dc: 00                                        ; store offset
00008dd: 20                                        ; local.get
00008de: 0e                                        ; local index
00008df: 41                                        ; i32.const
00008e0: 24                                        ; i32 literal
00008e1: 6a                                        ; i32.add
00008e2: 41                                        ; i32.const
00008e3: 00                                        ; i32 literal
00008e4: 36                                        ; i32.store
00008e5: 02                                        ; alignment
00008e6: 00                                        ; store offset
00008e7: 20                                        ; local.get
00008e8: 0e                                        ; local index
00008e9: 24                                        ; global.set
00008ea: 0d                                        ; global index
00008eb: 0b                                        ; end
; move data: [69e, 8ec) -> [69f, 8ed)
000069d: ce04                                      ; FIXUP func body size
; function body 19
00008ed: 00                                        ; func body size (guess)
00008ee: 01                                        ; local decl count
00008ef: 10                                        ; local type count
00008f0: 7f                                        ; i32
00008f1: 41                                        ; i32.const
00008f2: 00                                        ; i32 literal
00008f3: 21                                        ; local.set
00008f4: 0f                                        ; local index
00008f5: 02                                        ; block
00008f6: 40                                        ; void
00008f7: 03                                        ; loop
00008f8: 40                                        ; void
00008f9: 20                                        ; local.get
00008fa: 0f                                        ; local index
00008fb: 23                                        ; global.get
00008fc: 0c                                        ; global index
00008fd: 41                                        ; i32.const
00008fe: 04                                        ; i32 literal
00008ff: 6a                                        ; i32.add
0000900: 28                                        ; i32.load
0000901: 02                                        ; alignment
0000902: 00                                        ; load offset
0000903: 41                                        ; i32.const
0000904: 01                                        ; i32 literal
0000905: 6b                                        ; i32.sub
0000906: 4a                                        ; i32.gt_s
0000907: 0d                                        ; br_if
0000908: 01                                        ; break depth
0000909: 41                                        ; i32.const
000090a: a80b                                      ; i32 literal
000090c: 20                                        ; local.get
000090d: 0f                                        ; local index
000090e: 10                                        ; call
000090f: 0e                                        ; function index
0000910: 10                                        ; call
0000911: 09                                        ; function index
0000912: 10                                        ; call
0000913: 0d                                        ; function index
0000914: 23                                        ; global.get
0000915: 0c                                        ; global index
0000916: 41                                        ; i32.const
0000917: 08                                        ; i32 literal
0000918: 6a                                        ; i32.add
0000919: 20                                        ; local.get
000091a: 0f                                        ; local index
000091b: 41                                        ; i32.const
000091c: 04                                        ; i32 literal
000091d: 6c                                        ; i32.mul
000091e: 6a                                        ; i32.add
000091f: 28                                        ; i32.load
0000920: 02                                        ; alignment
0000921: 00                                        ; load offset
0000922: 10                                        ; call
0000923: 0c                                        ; function index
0000924: 20                                        ; local.get
0000925: 0f                                        ; local index
0000926: 41                                        ; i32.const
0000927: 01                                        ; i32 literal
0000928: 6a                                        ; i32.add
0000929: 21                                        ; local.set
000092a: 0f                                        ; local index
000092b: 0c                                        ; br
000092c: 00                                        ; break depth
000092d: 0b                                        ; end
000092e: 0b                                        ; end
000092f: 0b                                        ; end
00008ed: 42                                        ; FIXUP func body size
; function body 20
0000930: 00                                        ; func body size (guess)
0000931: 01                                        ; local decl count
0000932: 01                                        ; local type count
0000933: 7f                                        ; i32
0000934: 41                                        ; i32.const
0000935: 08                                        ; i32 literal
0000936: 41                                        ; i32.const
0000937: 8809                                      ; i32 literal
0000939: 10                                        ; call
000093a: 0f                                        ; function index
000093b: 21                                        ; local.set
000093c: 00                                        ; local index
000093d: 20                                        ; local.get
000093e: 00                                        ; local index
000093f: 41                                        ; i32.const
0000940: 04                                        ; i32 literal
0000941: 6a                                        ; i32.add
0000942: 41                                        ; i32.const
0000943: e80b                                      ; i32 literal
0000945: 36                                        ; i32.store
0000946: 02                                        ; alignment
0000947: 00                                        ; store offset
0000948: 20                                        ; local.get
0000949: 00                                        ; local index
000094a: 41                                        ; i32.const
000094b: 00                                        ; i32 literal
000094c: 6a                                        ; i32.add
000094d: 41                                        ; i32.const
000094e: b8bc eda7 03                              ; i32 literal
0000953: 36                                        ; i32.store
0000954: 02                                        ; alignment
0000955: 00                                        ; store offset
0000956: 23                                        ; global.get
0000957: 0d                                        ; global index
0000958: 41                                        ; i32.const
0000959: 00                                        ; i32 literal
000095a: 6a                                        ; i32.add
000095b: 20                                        ; local.get
000095c: 00                                        ; local index
000095d: 36                                        ; i32.store
000095e: 02                                        ; alignment
000095f: 00                                        ; store offset
0000960: 23                                        ; global.get
0000961: 0d                                        ; global index
0000962: 41                                        ; i32.const
0000963: 24                                        ; i32 literal
0000964: 6a                                        ; i32.add
0000965: 10                                        ; call
0000966: 11                                        ; function index
0000967: 36                                        ; i32.store
0000968: 02                                        ; alignment
0000969: 00                                        ; store offset
000096a: 0b                                        ; end
0000930: 3a                                        ; FIXUP func body size
; function body 21
000096b: 00                                        ; func body size (guess)
000096c: 00                                        ; local decl count
000096d: 0b                                        ; end
000096b: 02                                        ; FIXUP func body size
; move data: [37d, 96e) -> [37e, 96f)
000037c: f10b                                      ; FIXUP section size
; section "Data" (11)
000096f: 0b                                        ; section code
0000970: 00                                        ; section size (guess)
0000971: 1b                                        ; num data segments
; data segment header 0
0000972: 00                                      
0000973: 41                                        ; i32.const
0000974: f808                                      ; i32 literal
0000976: 0b                                        ; end
0000977: 09                                        ; data segment size
; data segment data 0
0000978: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
0000981: 00                                      
0000982: 41                                        ; i32.const
0000983: 900b                                      ; i32 literal
0000985: 0b                                        ; end
0000986: 04                                        ; data segment size
; data segment data 1
0000987: 3132 3300                                 ; data segment data
; data segment header 2
000098b: 00                                      
000098c: 41                                        ; i32.const
000098d: 980b                                      ; i32 literal
000098f: 0b                                        ; end
0000990: 06                                        ; data segment size
; data segment data 2
0000991: 6669 7273 7400                            ; data segment data
; data segment header 3
0000997: 00                                      
0000998: 41                                        ; i32.const
0000999: a00b                                      ; i32 literal
000099b: 0b                                        ; end
000099c: 07                                        ; data segment size
; data segment data 3
000099d: 7365 636f 6e64 00                         ; data segment data
; data segment header 4
00009a4: 00                                      
00009a5: 41                                        ; i32.const
00009a6: a80b                                      ; i32 literal
00009a8: 0b                                        ; end
00009a9: 08                                        ; data segment size
; data segment data 4
00009aa: 696e 6465 783d 2300                       ; data segment data
; data segment header 5
00009b2: 00                                      
00009b3: 41                                        ; i32.const
00009b4: b00b                                      ; i32 literal
00009b6: 0b                                        ; end
00009b7: 1d                                        ; data segment size
; data segment data 5
00009b8: 6469 7265 6374 6c79 2063 7265 6174 6520 
00009c8: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 6
00009d5: 00                                      
00009d6: 41                                        ; i32.const
00009d7: d00b                                      ; i32 literal
00009d9: 0b                                        ; end
00009da: 15                                        ; data segment size
; data segment data 6
00009db: 7468 6973 2069 7320 6120 7374 7275 6374 
00009eb: 7572 6521 00                              ; data segment data
; data segment header 7
00009f0: 00                                      
00009f1: 41                                        ; i32.const
00009f2: e80b                                      ; i32 literal
00009f4: 0b                                        ; end
00009f5: 0c                                        ; data segment size
; data segment data 7
00009f6: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 8
0000a02: 00                                      
0000a03: 41                                        ; i32.const
0000a04: f80b                                      ; i32 literal
0000a06: 0b                                        ; end
0000a07: 09                                        ; data segment size
; data segment data 8
0000a08: 4141 4141 4141 4141 00                    ; data segment data
; data segment header 9
0000a11: 00                                      
0000a12: 41                                        ; i32.const
0000a13: 880c                                      ; i32 literal
0000a15: 0b                                        ; end
0000a16: 09                                        ; data segment size
; data segment data 9
0000a17: 4242 4242 4242 4242 00                    ; data segment data
; data segment header 10
0000a20: 00                                      
0000a21: 41                                        ; i32.const
0000a22: 980c                                      ; i32 literal
0000a24: 0b                                        ; end
0000a25: 0b                                        ; data segment size
; data segment data 10
0000a26: 4343 4343 4343 4343 4343 00               ; data segment data
; data segment header 11
0000a31: 00                                      
0000a32: 41                                        ; i32.const
0000a33: a80c                                      ; i32 literal
0000a35: 0b                                        ; end
0000a36: 0b                                        ; data segment size
; data segment data 11
0000a37: 4444 4444 4444 4444 4444 00               ; data segment data
; data segment header 12
0000a42: 00                                      
0000a43: 41                                        ; i32.const
0000a44: b80c                                      ; i32 literal
0000a46: 0b                                        ; end
0000a47: 03                                        ; data segment size
; data segment data 12
0000a48: 4545 00                                   ; data segment data
; data segment header 13
0000a4b: 00                                      
0000a4c: 41                                        ; i32.const
0000a4d: c00c                                      ; i32 literal
0000a4f: 0b                                        ; end
0000a50: 08                                        ; data segment size
; data segment data 13
0000a51: 4646 4646 4646 4600                       ; data segment data
; data segment header 14
0000a59: 00                                      
0000a5a: 41                                        ; i32.const
0000a5b: c80c                                      ; i32 literal
0000a5d: 0b                                        ; end
0000a5e: 09                                        ; data segment size
; data segment data 14
0000a5f: 4747 4747 4747 4747 00                    ; data segment data
; data segment header 15
0000a68: 00                                      
0000a69: 41                                        ; i32.const
0000a6a: d80c                                      ; i32 literal
0000a6c: 0b                                        ; end
0000a6d: 0f                                        ; data segment size
; data segment data 15
0000a6e: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 16
0000a7d: 00                                      
0000a7e: 41                                        ; i32.const
0000a7f: e80c                                      ; i32 literal
0000a81: 0b                                        ; end
0000a82: 38                                        ; data segment size
; data segment data 16
0000a83: 4a61 7661 7363 7269 7074 206f 626a 6563 
0000a93: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000aa3: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000ab3: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 17
0000abb: 00                                      
0000abc: 41                                        ; i32.const
0000abd: a00d                                      ; i32 literal
0000abf: 0b                                        ; end
0000ac0: 0e                                        ; data segment size
; data segment data 17
0000ac1: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 18
0000acf: 00                                      
0000ad0: 41                                        ; i32.const
0000ad1: b00d                                      ; i32 literal
0000ad3: 0b                                        ; end
0000ad4: 0a                                        ; data segment size
; data segment data 18
0000ad5: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 19
0000adf: 00                                      
0000ae0: 41                                        ; i32.const
0000ae1: c00d                                      ; i32 literal
0000ae3: 0b                                        ; end
0000ae4: 21                                        ; data segment size
; data segment data 19
0000ae5: 436f 7079 7269 6768 7420 2863 2920 7661 
0000af5: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
0000b05: 00                                        ; data segment data
; data segment header 20
0000b06: 00                                      
0000b07: 41                                        ; i32.const
0000b08: e80d                                      ; i32 literal
0000b0a: 0b                                        ; end
0000b0b: 0b                                        ; data segment size
; data segment data 20
0000b0c: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 21
0000b17: 00                                      
0000b18: 41                                        ; i32.const
0000b19: f80d                                      ; i32 literal
0000b1b: 0b                                        ; end
0000b1c: 25                                        ; data segment size
; data segment data 21
0000b1d: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000b2d: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000b3d: 3535 6239 00                              ; data segment data
; data segment header 22
0000b42: 00                                      
0000b43: 41                                        ; i32.const
0000b44: a00e                                      ; i32 literal
0000b46: 0b                                        ; end
0000b47: 08                                        ; data segment size
; data segment data 22
0000b48: 312e 302e 302e 3000                       ; data segment data
; data segment header 23
0000b50: 00                                      
0000b51: 41                                        ; i32.const
0000b52: a80e                                      ; i32 literal
0000b54: 0b                                        ; end
0000b55: 08                                        ; data segment size
; data segment data 23
0000b56: 312e 302e 302e 3000                       ; data segment data
; data segment header 24
0000b5e: 00                                      
0000b5f: 41                                        ; i32.const
0000b60: 0d                                        ; i32 literal
0000b61: 0b                                        ; end
0000b62: bd03                                      ; data segment size
; data segment data 24
0000b64: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000b74: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000b84: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
0000b94: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
0000ba4: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
0000bb4: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000bc4: 5731 3073 496e 4a68 6479 4936 496d 597a 
0000bd4: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
0000be4: 4c43 4a35 496a 7037 496d 646c 626d 5679 
0000bf4: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000c04: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000c14: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
0000c24: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000c34: 636d 4633 496a 6f69 6154 4d79 4969 7769 
0000c44: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
0000c54: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
0000c64: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000c74: 6479 4936 496c 7378 4d54 5977 5857 3568 
0000c84: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
0000c94: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
0000ca4: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000cb4: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000cc4: 4d54 5977 5857 3568 6257 5569 4c43 4a30 
0000cd4: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000ce4: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000cf4: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000d04: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000d14: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 25
0000d21: 00                                      
0000d22: 41                                        ; i32.const
0000d23: 8804                                      ; i32 literal
0000d25: 0b                                        ; end
0000d26: ad04                                      ; data segment size
; data segment data 25
0000d28: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000d38: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000d48: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
0000d58: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
0000d68: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
0000d78: 6579 4a75 5957 316c 496a 7037 496d 646c 
0000d88: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000d98: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000da8: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000db8: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000dc8: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000dd8: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000de8: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000df8: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000e08: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000e18: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000e28: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000e38: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000e48: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000e58: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
0000e68: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000e78: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000e88: 6558 426c 496a 6f30 6653 7769 636d 466b 
0000e98: 6158 567a 496a 7037 496d 646c 626d 5679 
0000ea8: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000eb8: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000ec8: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000ed8: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000ee8: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000ef8: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000f08: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000f18: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000f28: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000f38: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000f48: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 26
0000f55: 00                                      
0000f56: 41                                        ; i32.const
0000f57: 8809                                      ; i32 literal
0000f59: 0b                                        ; end
0000f5a: 8502                                      ; data segment size
; data segment data 26
0000f5c: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000f6c: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000f7c: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000f8c: 6331 3970 5a43 4936 4d54 4532 4d43 7769 
0000f9c: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000fac: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000fbc: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000fcc: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000fdc: 5a53 4936 4d58 3073 496d 3568 6257 5569 
0000fec: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000ffc: 5731 3073 496e 4a68 6479 4936 496e 4e30 
000100c: 636d 6c75 5a79 4973 496e 5235 6347 5569 
000101c: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
000102c: 5933 5169 4f6e 5279 6457 5573 496d 316c 
000103c: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
000104c: 5957 316c 6333 4268 5932 5569 4f6d 3531 
000105c: 6247 7839 00                              ; data segment data
; move data: [971, 1061) -> [972, 1062)
0000970: f00d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0132 0a60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 017f 0060 0001 7f60 0000 02e3 0110 
0000040: 044d 6174 6803 706f 7700 0004 4d61 7468 
0000050: 0473 7172 7400 0104 4d61 7468 0365 7870 
0000060: 0001 044d 6174 6803 636f 7300 0104 4d61 
0000070: 7468 0672 616e 646f 6d00 0204 4d61 7468 
0000080: 0463 6569 6c00 0104 4d61 7468 0566 6c6f 
0000090: 6f72 0001 0247 4309 6164 644f 626a 6563 
00000a0: 7400 0306 7374 7269 6e67 0772 6570 6c61 
00000b0: 6365 0004 0673 7472 696e 6703 6164 6400 
00000c0: 0506 7374 7269 6e67 066c 656e 6774 6800 
00000d0: 0606 7374 7269 6e67 0769 6e64 6578 4f66 
00000e0: 0005 0763 6f6e 736f 6c65 036c 6f67 0007 
00000f0: 0763 6f6e 736f 6c65 036c 6f67 0007 0673 
0000100: 7472 696e 6708 746f 5374 7269 6e67 0006 
0000110: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
0000120: 0001 0317 1605 0808 0808 0808 0808 0808 
0000130: 0808 0808 0808 0909 0909 0906 9101 0f7f 
0000140: 0141 b00e 0b7c 0144 6957 148b 0abf 0540 
0000150: 0b7c 0144 182d 4454 fb21 0940 0b7f 0141 
0000160: ffff ffff 070b 7e01 42ff ffff ffff ffff 
0000170: ffff 000b 7d01 43ff ff7f 7f0b 7c01 44ff 
0000180: ffff ffff ffef 7f0b 7f01 4180 8080 8078 
0000190: 0b7e 0142 8080 8080 8080 8080 807f 0b7d 
00001a0: 0143 ffff 7fff 0b7c 0144 ffff ffff ffff 
00001b0: efff 0b7c 0144 0000 0000 0040 8f40 0b7f 
00001c0: 0141 000b 7f01 4100 0b7f 0141 f808 0b07 
00001d0: a603 0f14 676c 6f62 616c 2e47 6574 4d65 
00001e0: 6d6f 7279 5369 7a65 0010 126f 626a 6563 
00001f0: 7447 432e 6e65 7743 6972 636c 6500 1112 
0000200: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65 
0000210: 6374 0013 186e 756d 6265 7241 7272 6179 
0000220: 2e63 7265 6174 6556 6563 746f 7200 1417 
0000230: 6e75 6d62 6572 4172 7261 792e 6e61 6d65 
0000240: 7356 6563 746f 7200 1516 6e75 6d62 6572 
0000250: 4172 7261 792e 7374 7275 6374 7572 6573 
0000260: 0016 1a41 7373 656d 626c 7949 6e66 6f2e 
0000270: 4173 7365 6d62 6c79 5469 746c 6500 1720 
0000280: 4173 7365 6d62 6c79 496e 666f 2e41 7373 
0000290: 656d 626c 7944 6573 6372 6970 7469 6f6e 
00002a0: 0018 1c41 7373 656d 626c 7949 6e66 6f2e 
00002b0: 4173 7365 6d62 6c79 436f 6d70 616e 7900 
00002c0: 191c 4173 7365 6d62 6c79 496e 666f 2e41 
00002d0: 7373 656d 626c 7950 726f 6475 6374 001a 
00002e0: 1e41 7373 656d 626c 7949 6e66 6f2e 4173 
00002f0: 7365 6d62 6c79 436f 7079 7269 6768 7400 
0000300: 1b1e 4173 7365 6d62 6c79 496e 666f 2e41 
0000310: 7373 656d 626c 7954 7261 6465 6d61 726b 
0000320: 001c 1141 7373 656d 626c 7949 6e66 6f2e 
0000330: 4775 6964 001d 1c41 7373 656d 626c 7949 
0000340: 6e66 6f2e 4173 7365 6d62 6c79 5665 7273 
0000350: 696f 6e00 1e20 4173 7365 6d62 6c79 496e 
0000360: 666f 2e41 7373 656d 626c 7946 696c 6556 
0000370: 6572 7369 6f6e 001f 0801 200a f10b 1618 
0000380: 0101 7f23 0021 0220 0220 006a 2400 2002 
0000390: 2001 1007 2002 0f0b 0500 2300 0f0b ae01 
00003a0: 0116 7f23 0b41 02b7 a224 0b41 1c41 0d10 
00003b0: 0f21 1020 1041 006a 230b b638 0200 2010 
00003c0: 4104 6a41 8fce 00b2 3802 0010 1221 1320 
00003d0: 1041 0c6a 2112 2012 4100 6a20 1341 006a 
00003e0: 2802 0036 0200 2012 4104 6a20 1341 046a 
00003f0: 2802 0036 0200 4108 4188 0910 0f21 1120 
0000400: 1141 046a 41b0 0b36 0200 2011 4100 6a41 
0000410: 0036 0200 2011 2115 2010 4114 6a21 1420 
0000420: 1441 006a 2015 4100 6a28 0200 3602 0020 
0000430: 1441 046a 2015 4104 6a28 0200 3602 0020 
0000440: 1041 086a 41e4 0036 0200 2010 0f0b 2701 
0000450: 017f 4108 4188 0910 0f21 0020 0041 046a 
0000460: 41d0 0b36 0200 2000 4100 6a41 87e4 0636 
0000470: 0200 2000 0f0b 0500 230d 0f0b 9101 0103 
0000480: 7f41 0841 0a41 046c 6a41 0710 0f21 0120 
0000490: 0141 0136 0200 2001 4104 6a41 0a36 0200 
00004a0: 2001 4108 6a21 0220 0241 006a 4101 3602 
00004b0: 0020 0241 046a 4102 3602 0020 0241 086a 
00004c0: 4103 3602 0020 0241 0c6a 4104 3602 0020 
00004d0: 0241 106a 4105 3602 0020 0241 146a 4106 
00004e0: 3602 0020 0241 186a 4107 3602 0020 0241 
00004f0: 1c6a 4108 3602 0020 0241 206a 4109 3602 
0000500: 0020 0241 246a 4100 3602 0020 010f 0b7a 
0000510: 0102 7f41 0841 0741 046c 6a41 0710 0f21 
0000520: 0020 0041 0536 0200 2000 4104 6a41 0736 
0000530: 0200 2000 4108 6a21 0120 0141 006a 41f8 
0000540: 0b36 0200 2001 4104 6a41 880c 3602 0020 
0000550: 0141 086a 4198 0c36 0200 2001 410c 6a41 
0000560: a80c 3602 0020 0141 106a 41b8 0c36 0200 
0000570: 2001 4114 6a41 c00c 3602 0020 0141 186a 
0000580: 41c8 0c36 0200 2000 0f0b c801 0109 7f10 
0000590: 1521 0041 0841 0341 086c 6a41 0710 0f21 
00005a0: 0420 0441 8809 3602 0020 0441 046a 4103 
00005b0: 3602 0020 0441 086a 2105 2005 4100 6a21 
00005c0: 0620 0641 8809 1007 2006 2101 2001 4104 
00005d0: 6a20 0041 086a 4100 4104 6c6a 2802 0036 
00005e0: 0200 2001 4100 6a41 0036 0200 2005 4108 
00005f0: 6a21 0720 0741 8809 1007 2007 2102 2002 
0000600: 4104 6a20 0041 086a 4101 4104 6c6a 2802 
0000610: 0036 0200 2002 4100 6a41 0136 0200 2005 
0000620: 4110 6a21 0820 0841 8809 1007 2008 2103 
0000630: 2003 4104 6a20 0041 086a 4102 4104 6c6a 
0000640: 2802 0036 0200 2003 4100 6a41 0236 0200 
0000650: 2004 0f0b 0600 41d8 0c0f 0b06 0041 e80c 
0000660: 0f0b 0600 41a0 0d0f 0b06 0041 b00d 0f0b 
0000670: 0600 41c0 0d0f 0b06 0041 e80d 0f0b 0600 
0000680: 41f8 0d0f 0b06 0041 a00e 0f0b 0600 41a8 
0000690: 0e0f 0b0a 0010 2110 2210 2310 240b ce04 
00006a0: 010f 7f41 0841 0241 046c 6a41 0710 0f21 
00006b0: 0020 0041 8804 3602 0020 0041 046a 4102 
00006c0: 3602 0020 0041 086a 2101 4128 4188 0410 
00006d0: 0f21 0220 0241 086a 41e4 0036 0200 411c 
00006e0: 410d 100f 2103 4108 4188 0910 0f21 0420 
00006f0: 0441 046a 4190 0b36 0200 2004 4100 6a41 
0000700: 0036 0200 2004 2105 2003 410c 6a21 0620 
0000710: 0641 006a 2005 4100 6a28 0200 3602 0020 
0000720: 0641 046a 2005 4104 6a28 0200 3602 0020 
0000730: 0341 006a 4300 0000 0038 0200 2003 4104 
0000740: 6a43 0000 0000 3802 0020 0341 086a 41e4 
0000750: 0036 0200 2002 4124 6a20 0336 0200 2002 
0000760: 4120 6a41 e707 b238 0200 4108 4188 0910 
0000770: 0f21 0720 0741 046a 4198 0b36 0200 2007 
0000780: 4100 6a41 0036 0200 2007 2108 2002 4100 
0000790: 6a21 0920 0941 006a 2008 4100 6a28 0200 
00007a0: 3602 0020 0941 046a 2008 4104 6a28 0200 
00007b0: 3602 0020 0241 0c6a 41e8 0736 0200 2002 
00007c0: 4110 6a44 0000 0000 0000 0000 3903 0020 
00007d0: 0241 186a 4400 0000 0000 0000 0039 0300 
00007e0: 2001 4100 6a20 0236 0200 4128 4188 0410 
00007f0: 0f21 0a41 0841 8809 100f 210b 200b 4104 
0000800: 6a41 a00b 3602 0020 0b41 006a 4100 3602 
0000810: 0020 0b21 0c20 0a41 006a 210d 200d 4100 
0000820: 6a20 0c41 006a 2802 0036 0200 200d 4104 
0000830: 6a20 0c41 046a 2802 0036 0200 200a 4108 
0000840: 6a41 e807 3602 0020 0a41 0c6a 41e8 0736 
0000850: 0200 200a 4110 6a44 0000 0000 0000 0000 
0000860: 3903 0020 0a41 186a 4400 0000 0000 0000 
0000870: 0039 0300 200a 4120 6a43 0000 c6c2 3802 
0000880: 0020 0a41 246a 4100 3602 0020 0141 046a 
0000890: 200a 3602 0020 0024 0c41 2841 8804 100f 
00008a0: 210e 200e 4118 6a41 ffff ffff 07b7 3903 
00008b0: 0020 0e41 106a 410a b739 0300 200e 4108 
00008c0: 6a41 e807 3602 0020 0e41 0c6a 41e8 0736 
00008d0: 0200 200e 4120 6a43 0000 c6c2 3802 0020 
00008e0: 0e41 246a 4100 3602 0020 0e24 0d0b 4201 
00008f0: 107f 4100 210f 0240 0340 200f 230c 4104 
0000900: 6a28 0200 4101 6b4a 0d01 41a8 0b20 0f10 
0000910: 0e10 0910 0d23 0c41 086a 200f 4104 6c6a 
0000920: 2802 0010 0c20 0f41 016a 210f 0c00 0b0b 
0000930: 0b3a 0101 7f41 0841 8809 100f 2100 2000 
0000940: 4104 6a41 e80b 3602 0020 0041 006a 41b8 
0000950: bced a703 3602 0023 0d41 006a 2000 3602 
0000960: 0023 0d41 246a 1011 3602 000b 0200 0b0b 
0000970: f00d 1b00 41f8 080b 0939 3939 3939 3939 
0000980: 3900 0041 900b 0b04 3132 3300 0041 980b 
0000990: 0b06 6669 7273 7400 0041 a00b 0b07 7365 
00009a0: 636f 6e64 0000 41a8 0b0b 0869 6e64 6578 
00009b0: 3d23 0000 41b0 0b0b 1d64 6972 6563 746c 
00009c0: 7920 6372 6561 7465 2061 2073 7472 7563 
00009d0: 7475 7274 6500 0041 d00b 0b15 7468 6973 
00009e0: 2069 7320 6120 7374 7275 6374 7572 6521 
00009f0: 0000 41e8 0b0b 0c74 6573 7420 6f62 6a65 
0000a00: 6374 0000 41f8 0b0b 0941 4141 4141 4141 
0000a10: 4100 0041 880c 0b09 4242 4242 4242 4242 
0000a20: 0000 4198 0c0b 0b43 4343 4343 4343 4343 
0000a30: 4300 0041 a80c 0b0b 4444 4444 4444 4444 
0000a40: 4444 0000 41b8 0c0b 0345 4500 0041 c00c 
0000a50: 0b08 4646 4646 4646 4600 0041 c80c 0b09 
0000a60: 4747 4747 4747 4747 0000 41d8 0c0b 0f6a 
0000a70: 735f 6f62 6a65 6374 2064 656d 6f00 0041 
0000a80: e80c 0b38 4a61 7661 7363 7269 7074 206f 
0000a90: 626a 6563 7420 6765 6e65 7261 7465 2066 
0000aa0: 726f 6d20 5642 2e4e 4554 2057 6562 4173 
0000ab0: 7365 6d62 6c79 2064 656d 6f00 0041 a00d 
0000ac0: 0b0e 7661 6e69 6c6c 6176 622e 6170 7000 
0000ad0: 0041 b00d 0b0a 6a73 5f6f 626a 6563 7400 
0000ae0: 0041 c00d 0b21 436f 7079 7269 6768 7420 
0000af0: 2863 2920 7661 6e69 6c6c 6176 622e 6170 
0000b00: 7020 3230 3139 0000 41e8 0d0b 0b64 6f74 
0000b10: 7661 6e69 6c6c 6100 0041 f80d 0b25 3632 
0000b20: 6233 3338 3964 2d35 3130 392d 3437 3430 
0000b30: 2d39 6336 612d 3335 6262 3032 3233 3535 
0000b40: 6239 0000 41a0 0e0b 0831 2e30 2e30 2e30 
0000b50: 0000 41a8 0e0b 0831 2e30 2e30 2e30 0000 
0000b60: 410d 0bbd 0365 794a 6a62 3231 745a 5735 
0000b70: 3049 6a70 7564 5778 734c 434a 6a62 4746 
0000b80: 7a63 7949 3649 6d4e 7063 6d4e 735a 5349 
0000b90: 7349 6d4e 7359 584e 7a58 326c 6b49 6a6f 
0000ba0: 784d 7977 695a 6d6c 6c62 4752 7a49 6a70 
0000bb0: 3749 6e67 694f 6e73 695a 3256 755a 584a 
0000bc0: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000bd0: 3649 6d59 7a4d 6949 7349 6e52 3563 4755 
0000be0: 694f 6a4e 394c 434a 3549 6a70 3749 6d64 
0000bf0: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000c00: 7959 5863 694f 694a 6d4d 7a49 694c 434a 
0000c10: 3065 5842 6c49 6a6f 7a66 5377 6963 6949 
0000c20: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000c30: 6258 5377 6963 6d46 3349 6a6f 6961 544d 
0000c40: 7949 6977 6964 486c 775a 5349 364d 5830 
0000c50: 7349 6d35 6862 5756 505a 6c67 694f 6e73 
0000c60: 695a 3256 755a 584a 7059 7949 3657 3130 
0000c70: 7349 6e4a 6864 7949 3649 6c73 784d 5459 
0000c80: 7758 5735 6862 5755 694c 434a 3065 5842 
0000c90: 6c49 6a6f 784d 4830 7349 6d35 6862 5756 
0000ca0: 505a 6c6b 694f 6e73 695a 3256 755a 584a 
0000cb0: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000cc0: 3649 6c73 784d 5459 7758 5735 6862 5755 
0000cd0: 694c 434a 3065 5842 6c49 6a6f 784d 4831 
0000ce0: 394c 434a 7063 314e 3063 6e56 6a64 4349 
0000cf0: 365a 6d46 7363 3255 7349 6d31 6c64 4768 
0000d00: 765a 484d 694f 6e74 394c 434a 7559 5731 
0000d10: 6c63 3342 6859 3255 694f 6d35 3162 4778 
0000d20: 3900 0041 8804 0bad 0465 794a 6a62 3231 
0000d30: 745a 5735 3049 6a70 7564 5778 734c 434a 
0000d40: 6a62 4746 7a63 7949 3649 6e4a 6c59 3352 
0000d50: 6862 6d64 735a 5349 7349 6d4e 7359 584e 
0000d60: 7a58 326c 6b49 6a6f 314d 6a41 7349 6d5a 
0000d70: 705a 5778 6b63 7949 3665 794a 7559 5731 
0000d80: 6c49 6a70 3749 6d64 6c62 6d56 7961 574d 
0000d90: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000da0: 624d 5445 324d 4631 7559 5731 6c49 6977 
0000db0: 6964 486c 775a 5349 364d 5442 394c 434a 
0000dc0: 6f49 6a70 3749 6d64 6c62 6d56 7961 574d 
0000dd0: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000de0: 704d 7a49 694c 434a 3065 5842 6c49 6a6f 
0000df0: 7866 5377 6964 7949 3665 794a 6e5a 5735 
0000e00: 6c63 6d6c 6a49 6a70 6258 5377 6963 6d46 
0000e10: 3349 6a6f 6961 544d 7949 6977 6964 486c 
0000e20: 775a 5349 364d 5830 7349 6e6b 694f 6e73 
0000e30: 695a 3256 755a 584a 7059 7949 3657 3130 
0000e40: 7349 6e4a 6864 7949 3649 6d59 324e 4349 
0000e50: 7349 6e52 3563 4755 694f 6a52 394c 434a 
0000e60: 3449 6a70 3749 6d64 6c62 6d56 7961 574d 
0000e70: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000e80: 6d4e 6a51 694c 434a 3065 5842 6c49 6a6f 
0000e90: 3066 5377 6963 6d46 6b61 5856 7a49 6a70 
0000ea0: 3749 6d64 6c62 6d56 7961 574d 694f 6c74 
0000eb0: 644c 434a 7959 5863 694f 694a 6d4d 7a49 
0000ec0: 694c 434a 3065 5842 6c49 6a6f 7a66 5377 
0000ed0: 6961 5735 755a 5849 694f 6e73 695a 3256 
0000ee0: 755a 584a 7059 7949 3657 3130 7349 6e4a 
0000ef0: 6864 7949 3649 6c73 784d 3131 6a61 584a 
0000f00: 6a62 4755 694c 434a 3065 5842 6c49 6a6f 
0000f10: 784d 4831 394c 434a 7063 314e 3063 6e56 
0000f20: 6a64 4349 365a 6d46 7363 3255 7349 6d31 
0000f30: 6c64 4768 765a 484d 694f 6e74 394c 434a 
0000f40: 7559 5731 6c63 3342 6859 3255 694f 6d35 
0000f50: 3162 4778 3900 0041 8809 0b85 0265 794a 
0000f60: 6a62 3231 745a 5735 3049 6a70 7564 5778 
0000f70: 734c 434a 6a62 4746 7a63 7949 3649 6d35 
0000f80: 6862 5755 694c 434a 6a62 4746 7a63 3139 
0000f90: 705a 4349 364d 5445 324d 4377 695a 6d6c 
0000fa0: 6c62 4752 7a49 6a70 3749 6e4e 7664 584a 
0000fb0: 6a5a 5349 3665 794a 6e5a 5735 6c63 6d6c 
0000fc0: 6a49 6a70 6258 5377 6963 6d46 3349 6a6f 
0000fd0: 6961 544d 7949 6977 6964 486c 775a 5349 
0000fe0: 364d 5830 7349 6d35 6862 5755 694f 6e73 
0000ff0: 695a 3256 755a 584a 7059 7949 3657 3130 
0001000: 7349 6e4a 6864 7949 3649 6e4e 3063 6d6c 
0001010: 755a 7949 7349 6e52 3563 4755 694f 6a56 
0001020: 3966 5377 6961 584e 5464 484a 3159 3351 
0001030: 694f 6e52 7964 5755 7349 6d31 6c64 4768 
0001040: 765a 484d 694f 6e74 394c 434a 7559 5731 
0001050: 6c63 3342 6859 3255 694f 6d35 3162 4778 
0001060: 3900                                    
