0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 10                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
00000f1: 11                                        ; FIXUP section size
; section "Global" (6)
0000103: 06                                        ; section code
0000104: 00                                        ; section size (guess)
0000105: 0d                                        ; num globals
0000106: 7f                                        ; i32
0000107: 01                                        ; global mutability
0000108: 41                                        ; i32.const
0000109: d60c                                      ; i32 literal
000010b: 0b                                        ; end
000010c: 7c                                        ; f64
000010d: 01                                        ; global mutability
000010e: 44                                        ; f64.const
000010f: 6957 148b 0abf 0540                       ; f64 literal
0000117: 0b                                        ; end
0000118: 7c                                        ; f64
0000119: 01                                        ; global mutability
000011a: 44                                        ; f64.const
000011b: 182d 4454 fb21 0940                       ; f64 literal
0000123: 0b                                        ; end
0000124: 7f                                        ; i32
0000125: 01                                        ; global mutability
0000126: 41                                        ; i32.const
0000127: ffff ffff 07                              ; i32 literal
000012c: 0b                                        ; end
000012d: 7e                                        ; i64
000012e: 01                                        ; global mutability
000012f: 42                                        ; i64.const
0000130: ffff ffff ffff ffff ff00                  ; i64 literal
000013a: 0b                                        ; end
000013b: 7d                                        ; f32
000013c: 01                                        ; global mutability
000013d: 43                                        ; f32.const
000013e: ffff 7f7f                                 ; f32 literal
0000142: 0b                                        ; end
0000143: 7c                                        ; f64
0000144: 01                                        ; global mutability
0000145: 44                                        ; f64.const
0000146: ffff ffff ffff ef7f                       ; f64 literal
000014e: 0b                                        ; end
000014f: 7f                                        ; i32
0000150: 01                                        ; global mutability
0000151: 41                                        ; i32.const
0000152: 8080 8080 78                              ; i32 literal
0000157: 0b                                        ; end
0000158: 7e                                        ; i64
0000159: 01                                        ; global mutability
000015a: 42                                        ; i64.const
000015b: 8080 8080 8080 8080 807f                  ; i64 literal
0000165: 0b                                        ; end
0000166: 7d                                        ; f32
0000167: 01                                        ; global mutability
0000168: 43                                        ; f32.const
0000169: ffff 7fff                                 ; f32 literal
000016d: 0b                                        ; end
000016e: 7c                                        ; f64
000016f: 01                                        ; global mutability
0000170: 44                                        ; f64.const
0000171: ffff ffff ffff efff                       ; f64 literal
0000179: 0b                                        ; end
000017a: 7c                                        ; f64
000017b: 01                                        ; global mutability
000017c: 44                                        ; f64.const
000017d: 0000 0000 0040 8f40                       ; f64 literal
0000185: 0b                                        ; end
0000186: 7f                                        ; i32
0000187: 01                                        ; global mutability
0000188: 41                                        ; i32.const
0000189: 00                                        ; i32 literal
000018a: 0b                                        ; end
; move data: [105, 18b) -> [106, 18c)
0000104: 8601                                      ; FIXUP section size
; section "Export" (7)
000018c: 07                                        ; section code
000018d: 00                                        ; section size (guess)
000018e: 0b                                        ; num exports
000018f: 11                                        ; string length
0000190: 4d6f 6475 6c65 312e 6e65 7743 6972 636c  Module1.newCircl
00001a0: 65                                       e  ; export name
00001a1: 00                                        ; export kind
00001a2: 0d                                        ; export func index
00001a3: 11                                        ; string length
00001a4: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
00001b4: 74                                       t  ; export name
00001b5: 00                                        ; export kind
00001b6: 0f                                        ; export func index
00001b7: 1a                                        ; string length
00001b8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c8: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001d2: 00                                        ; export kind
00001d3: 10                                        ; export func index
00001d4: 20                                        ; string length
00001d5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e5: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001f5: 00                                        ; export kind
00001f6: 11                                        ; export func index
00001f7: 1c                                        ; string length
00001f8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000208: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000214: 00                                        ; export kind
0000215: 12                                        ; export func index
0000216: 1c                                        ; string length
0000217: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000227: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000233: 00                                        ; export kind
0000234: 13                                        ; export func index
0000235: 1e                                        ; string length
0000236: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000246: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000254: 00                                        ; export kind
0000255: 14                                        ; export func index
0000256: 1e                                        ; string length
0000257: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000267: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000275: 00                                        ; export kind
0000276: 15                                        ; export func index
0000277: 11                                        ; string length
0000278: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000288: 64                                       d  ; export name
0000289: 00                                        ; export kind
000028a: 16                                        ; export func index
000028b: 1c                                        ; string length
000028c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000029c: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002a8: 00                                        ; export kind
00002a9: 17                                        ; export func index
00002aa: 20                                        ; string length
00002ab: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002bb: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002cb: 00                                        ; export kind
00002cc: 18                                        ; export func index
; move data: [18e, 2cd) -> [18f, 2ce)
000018d: bf02                                      ; FIXUP section size
; section "Start" (8)
00002ce: 08                                        ; section code
00002cf: 00                                        ; section size (guess)
00002d0: 19                                        ; start func index
00002cf: 01                                        ; FIXUP section size
; section "Code" (10)
00002d1: 0a                                        ; section code
00002d2: 00                                        ; section size (guess)
00002d3: 10                                        ; num functions
; function body 0
00002d4: 00                                        ; func body size (guess)
00002d5: 01                                        ; local decl count
00002d6: 01                                        ; local type count
00002d7: 7f                                        ; i32
00002d8: 23                                        ; global.get
00002d9: 00                                        ; global index
00002da: 21                                        ; local.set
00002db: 02                                        ; local index
00002dc: 20                                        ; local.get
00002dd: 02                                        ; local index
00002de: 20                                        ; local.get
00002df: 00                                        ; local index
00002e0: 6a                                        ; i32.add
00002e1: 24                                        ; global.set
00002e2: 00                                        ; global index
00002e3: 20                                        ; local.get
00002e4: 02                                        ; local index
00002e5: 20                                        ; local.get
00002e6: 01                                        ; local index
00002e7: 10                                        ; call
00002e8: 07                                        ; function index
00002e9: 20                                        ; local.get
00002ea: 02                                        ; local index
00002eb: 0f                                        ; return
00002ec: 0b                                        ; end
00002d4: 18                                        ; FIXUP func body size
; function body 1
00002ed: 00                                        ; func body size (guess)
00002ee: 01                                        ; local decl count
00002ef: 07                                        ; local type count
00002f0: 7f                                        ; i32
00002f1: 23                                        ; global.get
00002f2: 0b                                        ; global index
00002f3: 41                                        ; i32.const
00002f4: 02                                        ; i32 literal
00002f5: b7                                        ; f64.convert_i32_s
00002f6: a2                                        ; f64.mul
00002f7: 24                                        ; global.set
00002f8: 0b                                        ; global index
00002f9: 41                                        ; i32.const
00002fa: 1c                                        ; i32 literal
00002fb: 41                                        ; i32.const
00002fc: 0d                                        ; i32 literal
00002fd: 10                                        ; call
00002fe: 0c                                        ; function index
00002ff: 21                                        ; local.set
0000300: 01                                        ; local index
0000301: 20                                        ; local.get
0000302: 01                                        ; local index
0000303: 41                                        ; i32.const
0000304: 00                                        ; i32 literal
0000305: 6a                                        ; i32.add
0000306: 23                                        ; global.get
0000307: 0b                                        ; global index
0000308: b6                                        ; f32.demote_f64
0000309: 38                                        ; f32.store
000030a: 02                                        ; alignment
000030b: 00                                        ; store offset
000030c: 20                                        ; local.get
000030d: 01                                        ; local index
000030e: 41                                        ; i32.const
000030f: 04                                        ; i32 literal
0000310: 6a                                        ; i32.add
0000311: 41                                        ; i32.const
0000312: 8fce 00                                   ; i32 literal
0000315: b2                                        ; f32.convert_i32_s
0000316: 38                                        ; f32.store
0000317: 02                                        ; alignment
0000318: 00                                        ; store offset
0000319: 10                                        ; call
000031a: 0e                                        ; function index
000031b: 21                                        ; local.set
000031c: 04                                        ; local index
000031d: 20                                        ; local.get
000031e: 01                                        ; local index
000031f: 41                                        ; i32.const
0000320: 0c                                        ; i32 literal
0000321: 6a                                        ; i32.add
0000322: 21                                        ; local.set
0000323: 03                                        ; local index
0000324: 20                                        ; local.get
0000325: 03                                        ; local index
0000326: 41                                        ; i32.const
0000327: 00                                        ; i32 literal
0000328: 6a                                        ; i32.add
0000329: 20                                        ; local.get
000032a: 04                                        ; local index
000032b: 41                                        ; i32.const
000032c: 00                                        ; i32 literal
000032d: 6a                                        ; i32.add
000032e: 28                                        ; i32.load
000032f: 02                                        ; alignment
0000330: 00                                        ; load offset
0000331: 36                                        ; i32.store
0000332: 02                                        ; alignment
0000333: 00                                        ; store offset
0000334: 20                                        ; local.get
0000335: 03                                        ; local index
0000336: 41                                        ; i32.const
0000337: 04                                        ; i32 literal
0000338: 6a                                        ; i32.add
0000339: 20                                        ; local.get
000033a: 04                                        ; local index
000033b: 41                                        ; i32.const
000033c: 04                                        ; i32 literal
000033d: 6a                                        ; i32.add
000033e: 28                                        ; i32.load
000033f: 02                                        ; alignment
0000340: 00                                        ; load offset
0000341: 36                                        ; i32.store
0000342: 02                                        ; alignment
0000343: 00                                        ; store offset
0000344: 41                                        ; i32.const
0000345: 08                                        ; i32 literal
0000346: 41                                        ; i32.const
0000347: af08                                      ; i32 literal
0000349: 10                                        ; call
000034a: 0c                                        ; function index
000034b: 21                                        ; local.set
000034c: 02                                        ; local index
000034d: 20                                        ; local.get
000034e: 02                                        ; local index
000034f: 41                                        ; i32.const
0000350: 04                                        ; i32 literal
0000351: 6a                                        ; i32.add
0000352: 41                                        ; i32.const
0000353: d80a                                      ; i32 literal
0000355: 36                                        ; i32.store
0000356: 02                                        ; alignment
0000357: 00                                        ; store offset
0000358: 20                                        ; local.get
0000359: 02                                        ; local index
000035a: 41                                        ; i32.const
000035b: 00                                        ; i32 literal
000035c: 6a                                        ; i32.add
000035d: 41                                        ; i32.const
000035e: 00                                        ; i32 literal
000035f: 36                                        ; i32.store
0000360: 02                                        ; alignment
0000361: 00                                        ; store offset
0000362: 20                                        ; local.get
0000363: 02                                        ; local index
0000364: 21                                        ; local.set
0000365: 06                                        ; local index
0000366: 20                                        ; local.get
0000367: 01                                        ; local index
0000368: 41                                        ; i32.const
0000369: 14                                        ; i32 literal
000036a: 6a                                        ; i32.add
000036b: 21                                        ; local.set
000036c: 05                                        ; local index
000036d: 20                                        ; local.get
000036e: 05                                        ; local index
000036f: 41                                        ; i32.const
0000370: 00                                        ; i32 literal
0000371: 6a                                        ; i32.add
0000372: 20                                        ; local.get
0000373: 06                                        ; local index
0000374: 41                                        ; i32.const
0000375: 00                                        ; i32 literal
0000376: 6a                                        ; i32.add
0000377: 28                                        ; i32.load
0000378: 02                                        ; alignment
0000379: 00                                        ; load offset
000037a: 36                                        ; i32.store
000037b: 02                                        ; alignment
000037c: 00                                        ; store offset
000037d: 20                                        ; local.get
000037e: 05                                        ; local index
000037f: 41                                        ; i32.const
0000380: 04                                        ; i32 literal
0000381: 6a                                        ; i32.add
0000382: 20                                        ; local.get
0000383: 06                                        ; local index
0000384: 41                                        ; i32.const
0000385: 04                                        ; i32 literal
0000386: 6a                                        ; i32.add
0000387: 28                                        ; i32.load
0000388: 02                                        ; alignment
0000389: 00                                        ; load offset
000038a: 36                                        ; i32.store
000038b: 02                                        ; alignment
000038c: 00                                        ; store offset
000038d: 20                                        ; local.get
000038e: 01                                        ; local index
000038f: 41                                        ; i32.const
0000390: 08                                        ; i32 literal
0000391: 6a                                        ; i32.add
0000392: 41                                        ; i32.const
0000393: e400                                      ; i32 literal
0000395: 36                                        ; i32.store
0000396: 02                                        ; alignment
0000397: 00                                        ; store offset
0000398: 20                                        ; local.get
0000399: 01                                        ; local index
000039a: 0f                                        ; return
000039b: 0b                                        ; end
; move data: [2ee, 39c) -> [2ef, 39d)
00002ed: ae01                                      ; FIXUP func body size
; function body 2
000039d: 00                                        ; func body size (guess)
000039e: 01                                        ; local decl count
000039f: 01                                        ; local type count
00003a0: 7f                                        ; i32
00003a1: 41                                        ; i32.const
00003a2: 08                                        ; i32 literal
00003a3: 41                                        ; i32.const
00003a4: af08                                      ; i32 literal
00003a6: 10                                        ; call
00003a7: 0c                                        ; function index
00003a8: 21                                        ; local.set
00003a9: 00                                        ; local index
00003aa: 20                                        ; local.get
00003ab: 00                                        ; local index
00003ac: 41                                        ; i32.const
00003ad: 04                                        ; i32 literal
00003ae: 6a                                        ; i32.add
00003af: 41                                        ; i32.const
00003b0: f50a                                      ; i32 literal
00003b2: 36                                        ; i32.store
00003b3: 02                                        ; alignment
00003b4: 00                                        ; store offset
00003b5: 20                                        ; local.get
00003b6: 00                                        ; local index
00003b7: 41                                        ; i32.const
00003b8: 00                                        ; i32 literal
00003b9: 6a                                        ; i32.add
00003ba: 41                                        ; i32.const
00003bb: 87e4 06                                   ; i32 literal
00003be: 36                                        ; i32.store
00003bf: 02                                        ; alignment
00003c0: 00                                        ; store offset
00003c1: 20                                        ; local.get
00003c2: 00                                        ; local index
00003c3: 0f                                        ; return
00003c4: 0b                                        ; end
000039d: 27                                        ; FIXUP func body size
; function body 3
00003c5: 00                                        ; func body size (guess)
00003c6: 00                                        ; local decl count
00003c7: 23                                        ; global.get
00003c8: 0c                                        ; global index
00003c9: 0f                                        ; return
00003ca: 0b                                        ; end
00003c5: 05                                        ; FIXUP func body size
; function body 4
00003cb: 00                                        ; func body size (guess)
00003cc: 00                                        ; local decl count
00003cd: 41                                        ; i32.const
00003ce: 960b                                      ; i32 literal
00003d0: 0f                                        ; return
00003d1: 0b                                        ; end
00003cb: 06                                        ; FIXUP func body size
; function body 5
00003d2: 00                                        ; func body size (guess)
00003d3: 00                                        ; local decl count
00003d4: 41                                        ; i32.const
00003d5: a50b                                      ; i32 literal
00003d7: 0f                                        ; return
00003d8: 0b                                        ; end
00003d2: 06                                        ; FIXUP func body size
; function body 6
00003d9: 00                                        ; func body size (guess)
00003da: 00                                        ; local decl count
00003db: 41                                        ; i32.const
00003dc: dd0b                                      ; i32 literal
00003de: 0f                                        ; return
00003df: 0b                                        ; end
00003d9: 06                                        ; FIXUP func body size
; function body 7
00003e0: 00                                        ; func body size (guess)
00003e1: 00                                        ; local decl count
00003e2: 41                                        ; i32.const
00003e3: eb0b                                      ; i32 literal
00003e5: 0f                                        ; return
00003e6: 0b                                        ; end
00003e0: 06                                        ; FIXUP func body size
; function body 8
00003e7: 00                                        ; func body size (guess)
00003e8: 00                                        ; local decl count
00003e9: 41                                        ; i32.const
00003ea: f50b                                      ; i32 literal
00003ec: 0f                                        ; return
00003ed: 0b                                        ; end
00003e7: 06                                        ; FIXUP func body size
; function body 9
00003ee: 00                                        ; func body size (guess)
00003ef: 00                                        ; local decl count
00003f0: 41                                        ; i32.const
00003f1: 960c                                      ; i32 literal
00003f3: 0f                                        ; return
00003f4: 0b                                        ; end
00003ee: 06                                        ; FIXUP func body size
; function body 10
00003f5: 00                                        ; func body size (guess)
00003f6: 00                                        ; local decl count
00003f7: 41                                        ; i32.const
00003f8: a10c                                      ; i32 literal
00003fa: 0f                                        ; return
00003fb: 0b                                        ; end
00003f5: 06                                        ; FIXUP func body size
; function body 11
00003fc: 00                                        ; func body size (guess)
00003fd: 00                                        ; local decl count
00003fe: 41                                        ; i32.const
00003ff: c60c                                      ; i32 literal
0000401: 0f                                        ; return
0000402: 0b                                        ; end
00003fc: 06                                        ; FIXUP func body size
; function body 12
0000403: 00                                        ; func body size (guess)
0000404: 00                                        ; local decl count
0000405: 41                                        ; i32.const
0000406: ce0c                                      ; i32 literal
0000408: 0f                                        ; return
0000409: 0b                                        ; end
0000403: 06                                        ; FIXUP func body size
; function body 13
000040a: 00                                        ; func body size (guess)
000040b: 00                                        ; local decl count
000040c: 10                                        ; call
000040d: 1a                                        ; function index
000040e: 10                                        ; call
000040f: 1b                                        ; function index
0000410: 0b                                        ; end
000040a: 06                                        ; FIXUP func body size
; function body 14
0000411: 00                                        ; func body size (guess)
0000412: 01                                        ; local decl count
0000413: 01                                        ; local type count
0000414: 7f                                        ; i32
0000415: 41                                        ; i32.const
0000416: 24                                        ; i32 literal
0000417: 41                                        ; i32.const
0000418: e603                                      ; i32 literal
000041a: 10                                        ; call
000041b: 0c                                        ; function index
000041c: 21                                        ; local.set
000041d: 00                                        ; local index
000041e: 20                                        ; local.get
000041f: 00                                        ; local index
0000420: 41                                        ; i32.const
0000421: 14                                        ; i32 literal
0000422: 6a                                        ; i32.add
0000423: 41                                        ; i32.const
0000424: ffff ffff 07                              ; i32 literal
0000429: b7                                        ; f64.convert_i32_s
000042a: 39                                        ; f64.store
000042b: 03                                        ; alignment
000042c: 00                                        ; store offset
000042d: 20                                        ; local.get
000042e: 00                                        ; local index
000042f: 41                                        ; i32.const
0000430: 0c                                        ; i32 literal
0000431: 6a                                        ; i32.add
0000432: 41                                        ; i32.const
0000433: 0a                                        ; i32 literal
0000434: b7                                        ; f64.convert_i32_s
0000435: 39                                        ; f64.store
0000436: 03                                        ; alignment
0000437: 00                                        ; store offset
0000438: 20                                        ; local.get
0000439: 00                                        ; local index
000043a: 41                                        ; i32.const
000043b: 00                                        ; i32 literal
000043c: 6a                                        ; i32.add
000043d: 41                                        ; i32.const
000043e: 00                                        ; i32 literal
000043f: 36                                        ; i32.store
0000440: 02                                        ; alignment
0000441: 00                                        ; store offset
0000442: 20                                        ; local.get
0000443: 00                                        ; local index
0000444: 41                                        ; i32.const
0000445: 04                                        ; i32 literal
0000446: 6a                                        ; i32.add
0000447: 41                                        ; i32.const
0000448: e807                                      ; i32 literal
000044a: 36                                        ; i32.store
000044b: 02                                        ; alignment
000044c: 00                                        ; store offset
000044d: 20                                        ; local.get
000044e: 00                                        ; local index
000044f: 41                                        ; i32.const
0000450: 08                                        ; i32 literal
0000451: 6a                                        ; i32.add
0000452: 41                                        ; i32.const
0000453: e807                                      ; i32 literal
0000455: 36                                        ; i32.store
0000456: 02                                        ; alignment
0000457: 00                                        ; store offset
0000458: 20                                        ; local.get
0000459: 00                                        ; local index
000045a: 41                                        ; i32.const
000045b: 1c                                        ; i32 literal
000045c: 6a                                        ; i32.add
000045d: 43                                        ; f32.const
000045e: 0000 c6c2                                 ; f32 literal
0000462: 38                                        ; f32.store
0000463: 02                                        ; alignment
0000464: 00                                        ; store offset
0000465: 20                                        ; local.get
0000466: 00                                        ; local index
0000467: 41                                        ; i32.const
0000468: 20                                        ; i32 literal
0000469: 6a                                        ; i32.add
000046a: 41                                        ; i32.const
000046b: 00                                        ; i32 literal
000046c: 36                                        ; i32.store
000046d: 02                                        ; alignment
000046e: 00                                        ; store offset
000046f: 20                                        ; local.get
0000470: 00                                        ; local index
0000471: 24                                        ; global.set
0000472: 0c                                        ; global index
0000473: 0b                                        ; end
0000411: 62                                        ; FIXUP func body size
; function body 15
0000474: 00                                        ; func body size (guess)
0000475: 00                                        ; local decl count
0000476: 23                                        ; global.get
0000477: 0c                                        ; global index
0000478: 41                                        ; i32.const
0000479: 00                                        ; i32 literal
000047a: 6a                                        ; i32.add
000047b: 41                                        ; i32.const
000047c: 8a0b                                      ; i32 literal
000047e: 36                                        ; i32.store
000047f: 02                                        ; alignment
0000480: 00                                        ; store offset
0000481: 23                                        ; global.get
0000482: 0c                                        ; global index
0000483: 41                                        ; i32.const
0000484: 20                                        ; i32 literal
0000485: 6a                                        ; i32.add
0000486: 10                                        ; call
0000487: 0d                                        ; function index
0000488: 36                                        ; i32.store
0000489: 02                                        ; alignment
000048a: 00                                        ; store offset
000048b: 0b                                        ; end
0000474: 17                                        ; FIXUP func body size
; move data: [2d3, 48c) -> [2d4, 48d)
00002d2: b903                                      ; FIXUP section size
; section "Data" (11)
000048d: 0b                                        ; section code
000048e: 00                                        ; section size (guess)
000048f: 0f                                        ; num data segments
; data segment header 0
0000490: 00                                      
0000491: 41                                        ; i32.const
0000492: d80a                                      ; i32 literal
0000494: 0b                                        ; end
0000495: 1d                                        ; data segment size
; data segment data 0
0000496: 6469 7265 6374 6c79 2063 7265 6174 6520 
00004a6: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 1
00004b3: 00                                      
00004b4: 41                                        ; i32.const
00004b5: f50a                                      ; i32 literal
00004b7: 0b                                        ; end
00004b8: 15                                        ; data segment size
; data segment data 1
00004b9: 7468 6973 2069 7320 6120 7374 7275 6374 
00004c9: 7572 6521 00                              ; data segment data
; data segment header 2
00004ce: 00                                      
00004cf: 41                                        ; i32.const
00004d0: 8a0b                                      ; i32 literal
00004d2: 0b                                        ; end
00004d3: 0c                                        ; data segment size
; data segment data 2
00004d4: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 3
00004e0: 00                                      
00004e1: 41                                        ; i32.const
00004e2: 960b                                      ; i32 literal
00004e4: 0b                                        ; end
00004e5: 0f                                        ; data segment size
; data segment data 3
00004e6: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 4
00004f5: 00                                      
00004f6: 41                                        ; i32.const
00004f7: a50b                                      ; i32 literal
00004f9: 0b                                        ; end
00004fa: 38                                        ; data segment size
; data segment data 4
00004fb: 4a61 7661 7363 7269 7074 206f 626a 6563 
000050b: 7420 6765 6e65 7261 7465 2066 726f 6d20 
000051b: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
000052b: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 5
0000533: 00                                      
0000534: 41                                        ; i32.const
0000535: dd0b                                      ; i32 literal
0000537: 0b                                        ; end
0000538: 0e                                        ; data segment size
; data segment data 5
0000539: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 6
0000547: 00                                      
0000548: 41                                        ; i32.const
0000549: eb0b                                      ; i32 literal
000054b: 0b                                        ; end
000054c: 0a                                        ; data segment size
; data segment data 6
000054d: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 7
0000557: 00                                      
0000558: 41                                        ; i32.const
0000559: f50b                                      ; i32 literal
000055b: 0b                                        ; end
000055c: 21                                        ; data segment size
; data segment data 7
000055d: 436f 7079 7269 6768 7420 2863 2920 7661 
000056d: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
000057d: 00                                        ; data segment data
; data segment header 8
000057e: 00                                      
000057f: 41                                        ; i32.const
0000580: 960c                                      ; i32 literal
0000582: 0b                                        ; end
0000583: 0b                                        ; data segment size
; data segment data 8
0000584: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 9
000058f: 00                                      
0000590: 41                                        ; i32.const
0000591: a10c                                      ; i32 literal
0000593: 0b                                        ; end
0000594: 25                                        ; data segment size
; data segment data 9
0000595: 3632 6233 3338 3964 2d35 3130 392d 3437 
00005a5: 3430 2d39 6336 612d 3335 6262 3032 3233 
00005b5: 3535 6239 00                              ; data segment data
; data segment header 10
00005ba: 00                                      
00005bb: 41                                        ; i32.const
00005bc: c60c                                      ; i32 literal
00005be: 0b                                        ; end
00005bf: 08                                        ; data segment size
; data segment data 10
00005c0: 312e 302e 302e 3000                       ; data segment data
; data segment header 11
00005c8: 00                                      
00005c9: 41                                        ; i32.const
00005ca: ce0c                                      ; i32 literal
00005cc: 0b                                        ; end
00005cd: 08                                        ; data segment size
; data segment data 11
00005ce: 312e 302e 302e 3000                       ; data segment data
; data segment header 12
00005d6: 00                                      
00005d7: 41                                        ; i32.const
00005d8: 0d                                        ; i32 literal
00005d9: 0b                                        ; end
00005da: e103                                      ; data segment size
; data segment data 12
00005dc: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00005ec: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00005fc: 6448 4969 4f6e 7369 566d 4673 6457 5569 
000060c: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
000061c: 4f69 4a6a 6158 4a6a 6247 5569 4c43 4a6a 
000062c: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
000063c: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
000064c: 496a 7037 496d 646c 626d 5679 6157 4d69 
000065c: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
000066c: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
000067c: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
000068c: 636d 6c6a 496a 7062 5853 7769 636d 4633 
000069c: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
00006ac: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
00006bc: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00006cc: 496e 4a68 6479 4936 496d 6b7a 4d69 4973 
00006dc: 496e 5235 6347 5569 4f6a 4639 4c43 4a75 
00006ec: 5957 316c 5432 5a59 496a 7037 496d 646c 
00006fc: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
000070c: 5958 6369 4f69 4a62 4d54 4133 4d56 3175 
000071c: 5957 316c 4969 7769 6448 6c77 5a53 4936 
000072c: 4d54 4239 4c43 4a75 5957 316c 5432 5a5a 
000073c: 496a 7037 496d 646c 626d 5679 6157 4d69 
000074c: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a62 
000075c: 4d54 4133 4d56 3175 5957 316c 4969 7769 
000076c: 6448 6c77 5a53 4936 4d54 4239 6653 7769 
000077c: 6158 4e54 6448 4a31 5933 5169 4f6d 5a68 
000078c: 6248 4e6c 4c43 4a74 5a58 526f 6232 527a 
000079c: 496a 7037 6653 7769 626d 4674 5a58 4e77 
00007ac: 5957 4e6c 496a 7075 6457 7873 6651 3d3d 
00007bc: 00                                        ; data segment data
; data segment header 13
00007bd: 00                                      
00007be: 41                                        ; i32.const
00007bf: e603                                      ; i32 literal
00007c1: 0b                                        ; end
00007c2: c904                                      ; data segment size
; data segment data 13
00007c4: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00007d4: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00007e4: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00007f4: 4f6a 5134 4e6e 3073 496d 4e73 5958 4e7a 
0000804: 496a 6f69 636d 566a 6447 4675 5a32 786c 
0000814: 4969 7769 5932 7868 6333 4e66 6157 5169 
0000824: 4f6a 5134 4e69 7769 5a6d 6c6c 6247 527a 
0000834: 496a 7037 496d 3568 6257 5569 4f6e 7369 
0000844: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000854: 496e 4a68 6479 4936 496e 4e30 636d 6c75 
0000864: 5a79 4973 496e 5235 6347 5569 4f6a 5639 
0000874: 4c43 4a6f 496a 7037 496d 646c 626d 5679 
0000884: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000894: 4f69 4a70 4d7a 4969 4c43 4a30 6558 426c 
00008a4: 496a 6f78 6653 7769 6479 4936 6579 4a6e 
00008b4: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
00008c4: 636d 4633 496a 6f69 6154 4d79 4969 7769 
00008d4: 6448 6c77 5a53 4936 4d58 3073 496e 6b69 
00008e4: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
00008f4: 5731 3073 496e 4a68 6479 4936 496d 5932 
0000904: 4e43 4973 496e 5235 6347 5569 4f6a 5239 
0000914: 4c43 4a34 496a 7037 496d 646c 626d 5679 
0000924: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000934: 4f69 4a6d 4e6a 5169 4c43 4a30 6558 426c 
0000944: 496a 6f30 6653 7769 636d 466b 6158 567a 
0000954: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000964: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000974: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000984: 6653 7769 6157 3575 5a58 4969 4f6e 7369 
0000994: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
00009a4: 496e 4a68 6479 4936 496c 7378 4d31 316a 
00009b4: 6158 4a6a 6247 5569 4c43 4a30 6558 426c 
00009c4: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
00009d4: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00009e4: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00009f4: 4c43 4a75 5957 316c 6333 4268 5932 5569 
0000a04: 4f6d 3531 6247 7839 00                    ; data segment data
; data segment header 14
0000a0d: 00                                      
0000a0e: 41                                        ; i32.const
0000a0f: af08                                      ; i32 literal
0000a11: 0b                                        ; end
0000a12: a902                                      ; data segment size
; data segment data 14
0000a14: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000a24: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000a34: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000a44: 4f6a 4577 4e7a 4639 4c43 4a6a 6247 467a 
0000a54: 6379 4936 496d 3568 6257 5569 4c43 4a6a 
0000a64: 6247 467a 6331 3970 5a43 4936 4d54 4133 
0000a74: 4d53 7769 5a6d 6c6c 6247 527a 496a 7037 
0000a84: 496e 4e76 6458 4a6a 5a53 4936 6579 4a6e 
0000a94: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000aa4: 636d 4633 496a 6f69 6154 4d79 4969 7769 
0000ab4: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
0000ac4: 6257 5569 4f6e 7369 5a32 5675 5a58 4a70 
0000ad4: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000ae4: 496e 4e30 636d 6c75 5a79 4973 496e 5235 
0000af4: 6347 5569 4f6a 5639 6653 7769 6158 4e54 
0000b04: 6448 4a31 5933 5169 4f6e 5279 6457 5573 
0000b14: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
0000b24: 4c43 4a75 5957 316c 6333 4268 5932 5569 
0000b34: 4f6d 3531 6247 7839 00                    ; data segment data
; move data: [48f, b3d) -> [490, b3e)
000048e: ae0d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0311 1005 0707 0707 0707 0707 0707 0707 
0000100: 0808 0806 8601 0d7f 0141 d60c 0b7c 0144 
0000110: 6957 148b 0abf 0540 0b7c 0144 182d 4454 
0000120: fb21 0940 0b7f 0141 ffff ffff 070b 7e01 
0000130: 42ff ffff ffff ffff ffff 000b 7d01 43ff 
0000140: ff7f 7f0b 7c01 44ff ffff ffff ffef 7f0b 
0000150: 7f01 4180 8080 8078 0b7e 0142 8080 8080 
0000160: 8080 8080 807f 0b7d 0143 ffff 7fff 0b7c 
0000170: 0144 ffff ffff ffff efff 0b7c 0144 0000 
0000180: 0000 0040 8f40 0b7f 0141 000b 07bf 020b 
0000190: 114d 6f64 756c 6531 2e6e 6577 4369 7263 
00001a0: 6c65 000d 114d 6f64 756c 6531 2e67 6574 
00001b0: 4f62 6a65 6374 000f 1a41 7373 656d 626c 
00001c0: 7949 6e66 6f2e 4173 7365 6d62 6c79 5469 
00001d0: 746c 6500 1020 4173 7365 6d62 6c79 496e 
00001e0: 666f 2e41 7373 656d 626c 7944 6573 6372 
00001f0: 6970 7469 6f6e 0011 1c41 7373 656d 626c 
0000200: 7949 6e66 6f2e 4173 7365 6d62 6c79 436f 
0000210: 6d70 616e 7900 121c 4173 7365 6d62 6c79 
0000220: 496e 666f 2e41 7373 656d 626c 7950 726f 
0000230: 6475 6374 0013 1e41 7373 656d 626c 7949 
0000240: 6e66 6f2e 4173 7365 6d62 6c79 436f 7079 
0000250: 7269 6768 7400 141e 4173 7365 6d62 6c79 
0000260: 496e 666f 2e41 7373 656d 626c 7954 7261 
0000270: 6465 6d61 726b 0015 1141 7373 656d 626c 
0000280: 7949 6e66 6f2e 4775 6964 0016 1c41 7373 
0000290: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
00002a0: 6c79 5665 7273 696f 6e00 1720 4173 7365 
00002b0: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
00002c0: 7946 696c 6556 6572 7369 6f6e 0018 0801 
00002d0: 190a b903 1018 0101 7f23 0021 0220 0220 
00002e0: 006a 2400 2002 2001 1007 2002 0f0b ae01 
00002f0: 0107 7f23 0b41 02b7 a224 0b41 1c41 0d10 
0000300: 0c21 0120 0141 006a 230b b638 0200 2001 
0000310: 4104 6a41 8fce 00b2 3802 0010 0e21 0420 
0000320: 0141 0c6a 2103 2003 4100 6a20 0441 006a 
0000330: 2802 0036 0200 2003 4104 6a20 0441 046a 
0000340: 2802 0036 0200 4108 41af 0810 0c21 0220 
0000350: 0241 046a 41d8 0a36 0200 2002 4100 6a41 
0000360: 0036 0200 2002 2106 2001 4114 6a21 0520 
0000370: 0541 006a 2006 4100 6a28 0200 3602 0020 
0000380: 0541 046a 2006 4104 6a28 0200 3602 0020 
0000390: 0141 086a 41e4 0036 0200 2001 0f0b 2701 
00003a0: 017f 4108 41af 0810 0c21 0020 0041 046a 
00003b0: 41f5 0a36 0200 2000 4100 6a41 87e4 0636 
00003c0: 0200 2000 0f0b 0500 230c 0f0b 0600 4196 
00003d0: 0b0f 0b06 0041 a50b 0f0b 0600 41dd 0b0f 
00003e0: 0b06 0041 eb0b 0f0b 0600 41f5 0b0f 0b06 
00003f0: 0041 960c 0f0b 0600 41a1 0c0f 0b06 0041 
0000400: c60c 0f0b 0600 41ce 0c0f 0b06 0010 1a10 
0000410: 1b0b 6201 017f 4124 41e6 0310 0c21 0020 
0000420: 0041 146a 41ff ffff ff07 b739 0300 2000 
0000430: 410c 6a41 0ab7 3903 0020 0041 006a 4100 
0000440: 3602 0020 0041 046a 41e8 0736 0200 2000 
0000450: 4108 6a41 e807 3602 0020 0041 1c6a 4300 
0000460: 00c6 c238 0200 2000 4120 6a41 0036 0200 
0000470: 2000 240c 0b17 0023 0c41 006a 418a 0b36 
0000480: 0200 230c 4120 6a10 0d36 0200 0b0b ae0d 
0000490: 0f00 41d8 0a0b 1d64 6972 6563 746c 7920 
00004a0: 6372 6561 7465 2061 2073 7472 7563 7475 
00004b0: 7274 6500 0041 f50a 0b15 7468 6973 2069 
00004c0: 7320 6120 7374 7275 6374 7572 6521 0000 
00004d0: 418a 0b0b 0c74 6573 7420 6f62 6a65 6374 
00004e0: 0000 4196 0b0b 0f6a 735f 6f62 6a65 6374 
00004f0: 2064 656d 6f00 0041 a50b 0b38 4a61 7661 
0000500: 7363 7269 7074 206f 626a 6563 7420 6765 
0000510: 6e65 7261 7465 2066 726f 6d20 5642 2e4e 
0000520: 4554 2057 6562 4173 7365 6d62 6c79 2064 
0000530: 656d 6f00 0041 dd0b 0b0e 7661 6e69 6c6c 
0000540: 6176 622e 6170 7000 0041 eb0b 0b0a 6a73 
0000550: 5f6f 626a 6563 7400 0041 f50b 0b21 436f 
0000560: 7079 7269 6768 7420 2863 2920 7661 6e69 
0000570: 6c6c 6176 622e 6170 7020 3230 3139 0000 
0000580: 4196 0c0b 0b64 6f74 7661 6e69 6c6c 6100 
0000590: 0041 a10c 0b25 3632 6233 3338 3964 2d35 
00005a0: 3130 392d 3437 3430 2d39 6336 612d 3335 
00005b0: 6262 3032 3233 3535 6239 0000 41c6 0c0b 
00005c0: 0831 2e30 2e30 2e30 0000 41ce 0c0b 0831 
00005d0: 2e30 2e30 2e30 0000 410d 0be1 0365 794a 
00005e0: 6a62 3231 745a 5735 3049 6a70 7564 5778 
00005f0: 734c 434a 745a 5731 7663 6e6c 5164 4849 
0000600: 694f 6e73 6956 6d46 7364 5755 694f 6a45 
0000610: 7a66 5377 6959 3278 6863 334d 694f 694a 
0000620: 6a61 584a 6a62 4755 694c 434a 6a62 4746 
0000630: 7a63 3139 705a 4349 364d 544d 7349 6d5a 
0000640: 705a 5778 6b63 7949 3665 794a 3449 6a70 
0000650: 3749 6d64 6c62 6d56 7961 574d 694f 6c74 
0000660: 644c 434a 7959 5863 694f 694a 6d4d 7a49 
0000670: 694c 434a 3065 5842 6c49 6a6f 7a66 5377 
0000680: 6965 5349 3665 794a 6e5a 5735 6c63 6d6c 
0000690: 6a49 6a70 6258 5377 6963 6d46 3349 6a6f 
00006a0: 695a 6a4d 7949 6977 6964 486c 775a 5349 
00006b0: 364d 3330 7349 6e49 694f 6e73 695a 3256 
00006c0: 755a 584a 7059 7949 3657 3130 7349 6e4a 
00006d0: 6864 7949 3649 6d6b 7a4d 6949 7349 6e52 
00006e0: 3563 4755 694f 6a46 394c 434a 7559 5731 
00006f0: 6c54 325a 5949 6a70 3749 6d64 6c62 6d56 
0000700: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000710: 694f 694a 624d 5441 334d 5631 7559 5731 
0000720: 6c49 6977 6964 486c 775a 5349 364d 5442 
0000730: 394c 434a 7559 5731 6c54 325a 5a49 6a70 
0000740: 3749 6d64 6c62 6d56 7961 574d 694f 6c74 
0000750: 644c 434a 7959 5863 694f 694a 624d 5441 
0000760: 334d 5631 7559 5731 6c49 6977 6964 486c 
0000770: 775a 5349 364d 5442 3966 5377 6961 584e 
0000780: 5464 484a 3159 3351 694f 6d5a 6862 484e 
0000790: 6c4c 434a 745a 5852 6f62 3252 7a49 6a70 
00007a0: 3766 5377 6962 6d46 745a 584e 7759 574e 
00007b0: 6c49 6a70 7564 5778 7366 513d 3d00 0041 
00007c0: e603 0bc9 0465 794a 6a62 3231 745a 5735 
00007d0: 3049 6a70 7564 5778 734c 434a 745a 5731 
00007e0: 7663 6e6c 5164 4849 694f 6e73 6956 6d46 
00007f0: 7364 5755 694f 6a51 344e 6e30 7349 6d4e 
0000800: 7359 584e 7a49 6a6f 6963 6d56 6a64 4746 
0000810: 755a 3278 6c49 6977 6959 3278 6863 334e 
0000820: 6661 5751 694f 6a51 344e 6977 695a 6d6c 
0000830: 6c62 4752 7a49 6a70 3749 6d35 6862 5755 
0000840: 694f 6e73 695a 3256 755a 584a 7059 7949 
0000850: 3657 3130 7349 6e4a 6864 7949 3649 6e4e 
0000860: 3063 6d6c 755a 7949 7349 6e52 3563 4755 
0000870: 694f 6a56 394c 434a 6f49 6a70 3749 6d64 
0000880: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000890: 7959 5863 694f 694a 704d 7a49 694c 434a 
00008a0: 3065 5842 6c49 6a6f 7866 5377 6964 7949 
00008b0: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
00008c0: 6258 5377 6963 6d46 3349 6a6f 6961 544d 
00008d0: 7949 6977 6964 486c 775a 5349 364d 5830 
00008e0: 7349 6e6b 694f 6e73 695a 3256 755a 584a 
00008f0: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000900: 3649 6d59 324e 4349 7349 6e52 3563 4755 
0000910: 694f 6a52 394c 434a 3449 6a70 3749 6d64 
0000920: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
0000930: 7959 5863 694f 694a 6d4e 6a51 694c 434a 
0000940: 3065 5842 6c49 6a6f 3066 5377 6963 6d46 
0000950: 6b61 5856 7a49 6a70 3749 6d64 6c62 6d56 
0000960: 7961 574d 694f 6c74 644c 434a 7959 5863 
0000970: 694f 694a 6d4d 7a49 694c 434a 3065 5842 
0000980: 6c49 6a6f 7a66 5377 6961 5735 755a 5849 
0000990: 694f 6e73 695a 3256 755a 584a 7059 7949 
00009a0: 3657 3130 7349 6e4a 6864 7949 3649 6c73 
00009b0: 784d 3131 6a61 584a 6a62 4755 694c 434a 
00009c0: 3065 5842 6c49 6a6f 784d 4831 394c 434a 
00009d0: 7063 314e 3063 6e56 6a64 4349 365a 6d46 
00009e0: 7363 3255 7349 6d31 6c64 4768 765a 484d 
00009f0: 694f 6e74 394c 434a 7559 5731 6c63 3342 
0000a00: 6859 3255 694f 6d35 3162 4778 3900 0041 
0000a10: af08 0ba9 0265 794a 6a62 3231 745a 5735 
0000a20: 3049 6a70 7564 5778 734c 434a 745a 5731 
0000a30: 7663 6e6c 5164 4849 694f 6e73 6956 6d46 
0000a40: 7364 5755 694f 6a45 774e 7a46 394c 434a 
0000a50: 6a62 4746 7a63 7949 3649 6d35 6862 5755 
0000a60: 694c 434a 6a62 4746 7a63 3139 705a 4349 
0000a70: 364d 5441 334d 5377 695a 6d6c 6c62 4752 
0000a80: 7a49 6a70 3749 6e4e 7664 584a 6a5a 5349 
0000a90: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000aa0: 6258 5377 6963 6d46 3349 6a6f 6961 544d 
0000ab0: 7949 6977 6964 486c 775a 5349 364d 5830 
0000ac0: 7349 6d35 6862 5755 694f 6e73 695a 3256 
0000ad0: 755a 584a 7059 7949 3657 3130 7349 6e4a 
0000ae0: 6864 7949 3649 6e4e 3063 6d6c 755a 7949 
0000af0: 7349 6e52 3563 4755 694f 6a56 3966 5377 
0000b00: 6961 584e 5464 484a 3159 3351 694f 6e52 
0000b10: 7964 5755 7349 6d31 6c64 4768 765a 484d 
0000b20: 694f 6e74 394c 434a 7559 5731 6c63 3342 
0000b30: 6859 3255 694f 6d35 3162 4778 3900      
