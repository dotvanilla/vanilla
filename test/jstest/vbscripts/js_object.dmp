0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 13                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 07                                        ; function 13 signature index
0000101: 07                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
0000103: 08                                        ; function 16 signature index
0000104: 08                                        ; function 17 signature index
0000105: 08                                        ; function 18 signature index
00000f1: 14                                        ; FIXUP section size
; section "Global" (6)
0000106: 06                                        ; section code
0000107: 00                                        ; section size (guess)
0000108: 0e                                        ; num globals
0000109: 7f                                        ; i32
000010a: 01                                        ; global mutability
000010b: 41                                        ; i32.const
000010c: 900e                                      ; i32 literal
000010e: 0b                                        ; end
000010f: 7c                                        ; f64
0000110: 01                                        ; global mutability
0000111: 44                                        ; f64.const
0000112: 6957 148b 0abf 0540                       ; f64 literal
000011a: 0b                                        ; end
000011b: 7c                                        ; f64
000011c: 01                                        ; global mutability
000011d: 44                                        ; f64.const
000011e: 182d 4454 fb21 0940                       ; f64 literal
0000126: 0b                                        ; end
0000127: 7f                                        ; i32
0000128: 01                                        ; global mutability
0000129: 41                                        ; i32.const
000012a: ffff ffff 07                              ; i32 literal
000012f: 0b                                        ; end
0000130: 7e                                        ; i64
0000131: 01                                        ; global mutability
0000132: 42                                        ; i64.const
0000133: ffff ffff ffff ffff ff00                  ; i64 literal
000013d: 0b                                        ; end
000013e: 7d                                        ; f32
000013f: 01                                        ; global mutability
0000140: 43                                        ; f32.const
0000141: ffff 7f7f                                 ; f32 literal
0000145: 0b                                        ; end
0000146: 7c                                        ; f64
0000147: 01                                        ; global mutability
0000148: 44                                        ; f64.const
0000149: ffff ffff ffff ef7f                       ; f64 literal
0000151: 0b                                        ; end
0000152: 7f                                        ; i32
0000153: 01                                        ; global mutability
0000154: 41                                        ; i32.const
0000155: 8080 8080 78                              ; i32 literal
000015a: 0b                                        ; end
000015b: 7e                                        ; i64
000015c: 01                                        ; global mutability
000015d: 42                                        ; i64.const
000015e: 8080 8080 8080 8080 807f                  ; i64 literal
0000168: 0b                                        ; end
0000169: 7d                                        ; f32
000016a: 01                                        ; global mutability
000016b: 43                                        ; f32.const
000016c: ffff 7fff                                 ; f32 literal
0000170: 0b                                        ; end
0000171: 7c                                        ; f64
0000172: 01                                        ; global mutability
0000173: 44                                        ; f64.const
0000174: ffff ffff ffff efff                       ; f64 literal
000017c: 0b                                        ; end
000017d: 7c                                        ; f64
000017e: 01                                        ; global mutability
000017f: 44                                        ; f64.const
0000180: 0000 0000 0040 8f40                       ; f64 literal
0000188: 0b                                        ; end
0000189: 7f                                        ; i32
000018a: 01                                        ; global mutability
000018b: 41                                        ; i32.const
000018c: 00                                        ; i32 literal
000018d: 0b                                        ; end
000018e: 7f                                        ; i32
000018f: 01                                        ; global mutability
0000190: 41                                        ; i32.const
0000191: f808                                      ; i32 literal
0000193: 0b                                        ; end
; move data: [108, 194) -> [109, 195)
0000107: 8c01                                      ; FIXUP section size
; section "Export" (7)
0000195: 07                                        ; section code
0000196: 00                                        ; section size (guess)
0000197: 0d                                        ; num exports
0000198: 12                                        ; string length
0000199: 6f62 6a65 6374 4743 2e6e 6577 4369 7263  objectGC.newCirc
00001a9: 6c65                                     le  ; export name
00001ab: 00                                        ; export kind
00001ac: 0d                                        ; export func index
00001ad: 12                                        ; string length
00001ae: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65  objectGC.getObje
00001be: 6374                                     ct  ; export name
00001c0: 00                                        ; export kind
00001c1: 0f                                        ; export func index
00001c2: 18                                        ; string length
00001c3: 6e75 6d62 6572 4172 7261 792e 6372 6561  numberArray.crea
00001d3: 7465 5665 6374 6f72                      teVector  ; export name
00001db: 00                                        ; export kind
00001dc: 10                                        ; export func index
00001dd: 17                                        ; string length
00001de: 6e75 6d62 6572 4172 7261 792e 6e61 6d65  numberArray.name
00001ee: 7356 6563 746f 72                        sVector  ; export name
00001f5: 00                                        ; export kind
00001f6: 11                                        ; export func index
00001f7: 1a                                        ; string length
00001f8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000208: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
0000212: 00                                        ; export kind
0000213: 12                                        ; export func index
0000214: 20                                        ; string length
0000215: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000225: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000235: 00                                        ; export kind
0000236: 13                                        ; export func index
0000237: 1c                                        ; string length
0000238: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000248: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000254: 00                                        ; export kind
0000255: 14                                        ; export func index
0000256: 1c                                        ; string length
0000257: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000267: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000273: 00                                        ; export kind
0000274: 15                                        ; export func index
0000275: 1e                                        ; string length
0000276: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000286: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000294: 00                                        ; export kind
0000295: 16                                        ; export func index
0000296: 1e                                        ; string length
0000297: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002a7: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
00002b5: 00                                        ; export kind
00002b6: 17                                        ; export func index
00002b7: 11                                        ; string length
00002b8: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002c8: 64                                       d  ; export name
00002c9: 00                                        ; export kind
00002ca: 18                                        ; export func index
00002cb: 1c                                        ; string length
00002cc: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002dc: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002e8: 00                                        ; export kind
00002e9: 19                                        ; export func index
00002ea: 20                                        ; string length
00002eb: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002fb: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
000030b: 00                                        ; export kind
000030c: 1a                                        ; export func index
; move data: [197, 30d) -> [198, 30e)
0000196: f602                                      ; FIXUP section size
; section "Start" (8)
000030e: 08                                        ; section code
000030f: 00                                        ; section size (guess)
0000310: 1b                                        ; start func index
000030f: 01                                        ; FIXUP section size
; section "Code" (10)
0000311: 0a                                        ; section code
0000312: 00                                        ; section size (guess)
0000313: 13                                        ; num functions
; function body 0
0000314: 00                                        ; func body size (guess)
0000315: 01                                        ; local decl count
0000316: 01                                        ; local type count
0000317: 7f                                        ; i32
0000318: 23                                        ; global.get
0000319: 00                                        ; global index
000031a: 21                                        ; local.set
000031b: 02                                        ; local index
000031c: 20                                        ; local.get
000031d: 02                                        ; local index
000031e: 20                                        ; local.get
000031f: 00                                        ; local index
0000320: 6a                                        ; i32.add
0000321: 24                                        ; global.set
0000322: 00                                        ; global index
0000323: 20                                        ; local.get
0000324: 02                                        ; local index
0000325: 20                                        ; local.get
0000326: 01                                        ; local index
0000327: 10                                        ; call
0000328: 07                                        ; function index
0000329: 20                                        ; local.get
000032a: 02                                        ; local index
000032b: 0f                                        ; return
000032c: 0b                                        ; end
0000314: 18                                        ; FIXUP func body size
; function body 1
000032d: 00                                        ; func body size (guess)
000032e: 01                                        ; local decl count
000032f: 07                                        ; local type count
0000330: 7f                                        ; i32
0000331: 23                                        ; global.get
0000332: 0b                                        ; global index
0000333: 41                                        ; i32.const
0000334: 02                                        ; i32 literal
0000335: b7                                        ; f64.convert_i32_s
0000336: a2                                        ; f64.mul
0000337: 24                                        ; global.set
0000338: 0b                                        ; global index
0000339: 41                                        ; i32.const
000033a: 1c                                        ; i32 literal
000033b: 41                                        ; i32.const
000033c: 0d                                        ; i32 literal
000033d: 10                                        ; call
000033e: 0c                                        ; function index
000033f: 21                                        ; local.set
0000340: 01                                        ; local index
0000341: 20                                        ; local.get
0000342: 01                                        ; local index
0000343: 41                                        ; i32.const
0000344: 00                                        ; i32 literal
0000345: 6a                                        ; i32.add
0000346: 23                                        ; global.get
0000347: 0b                                        ; global index
0000348: b6                                        ; f32.demote_f64
0000349: 38                                        ; f32.store
000034a: 02                                        ; alignment
000034b: 00                                        ; store offset
000034c: 20                                        ; local.get
000034d: 01                                        ; local index
000034e: 41                                        ; i32.const
000034f: 04                                        ; i32 literal
0000350: 6a                                        ; i32.add
0000351: 41                                        ; i32.const
0000352: 8fce 00                                   ; i32 literal
0000355: b2                                        ; f32.convert_i32_s
0000356: 38                                        ; f32.store
0000357: 02                                        ; alignment
0000358: 00                                        ; store offset
0000359: 10                                        ; call
000035a: 0e                                        ; function index
000035b: 21                                        ; local.set
000035c: 04                                        ; local index
000035d: 20                                        ; local.get
000035e: 01                                        ; local index
000035f: 41                                        ; i32.const
0000360: 0c                                        ; i32 literal
0000361: 6a                                        ; i32.add
0000362: 21                                        ; local.set
0000363: 03                                        ; local index
0000364: 20                                        ; local.get
0000365: 03                                        ; local index
0000366: 41                                        ; i32.const
0000367: 00                                        ; i32 literal
0000368: 6a                                        ; i32.add
0000369: 20                                        ; local.get
000036a: 04                                        ; local index
000036b: 41                                        ; i32.const
000036c: 00                                        ; i32 literal
000036d: 6a                                        ; i32.add
000036e: 28                                        ; i32.load
000036f: 02                                        ; alignment
0000370: 00                                        ; load offset
0000371: 36                                        ; i32.store
0000372: 02                                        ; alignment
0000373: 00                                        ; store offset
0000374: 20                                        ; local.get
0000375: 03                                        ; local index
0000376: 41                                        ; i32.const
0000377: 04                                        ; i32 literal
0000378: 6a                                        ; i32.add
0000379: 20                                        ; local.get
000037a: 04                                        ; local index
000037b: 41                                        ; i32.const
000037c: 04                                        ; i32 literal
000037d: 6a                                        ; i32.add
000037e: 28                                        ; i32.load
000037f: 02                                        ; alignment
0000380: 00                                        ; load offset
0000381: 36                                        ; i32.store
0000382: 02                                        ; alignment
0000383: 00                                        ; store offset
0000384: 41                                        ; i32.const
0000385: 08                                        ; i32 literal
0000386: 41                                        ; i32.const
0000387: 8809                                      ; i32 literal
0000389: 10                                        ; call
000038a: 0c                                        ; function index
000038b: 21                                        ; local.set
000038c: 02                                        ; local index
000038d: 20                                        ; local.get
000038e: 02                                        ; local index
000038f: 41                                        ; i32.const
0000390: 04                                        ; i32 literal
0000391: 6a                                        ; i32.add
0000392: 41                                        ; i32.const
0000393: 900b                                      ; i32 literal
0000395: 36                                        ; i32.store
0000396: 02                                        ; alignment
0000397: 00                                        ; store offset
0000398: 20                                        ; local.get
0000399: 02                                        ; local index
000039a: 41                                        ; i32.const
000039b: 00                                        ; i32 literal
000039c: 6a                                        ; i32.add
000039d: 41                                        ; i32.const
000039e: 00                                        ; i32 literal
000039f: 36                                        ; i32.store
00003a0: 02                                        ; alignment
00003a1: 00                                        ; store offset
00003a2: 20                                        ; local.get
00003a3: 02                                        ; local index
00003a4: 21                                        ; local.set
00003a5: 06                                        ; local index
00003a6: 20                                        ; local.get
00003a7: 01                                        ; local index
00003a8: 41                                        ; i32.const
00003a9: 14                                        ; i32 literal
00003aa: 6a                                        ; i32.add
00003ab: 21                                        ; local.set
00003ac: 05                                        ; local index
00003ad: 20                                        ; local.get
00003ae: 05                                        ; local index
00003af: 41                                        ; i32.const
00003b0: 00                                        ; i32 literal
00003b1: 6a                                        ; i32.add
00003b2: 20                                        ; local.get
00003b3: 06                                        ; local index
00003b4: 41                                        ; i32.const
00003b5: 00                                        ; i32 literal
00003b6: 6a                                        ; i32.add
00003b7: 28                                        ; i32.load
00003b8: 02                                        ; alignment
00003b9: 00                                        ; load offset
00003ba: 36                                        ; i32.store
00003bb: 02                                        ; alignment
00003bc: 00                                        ; store offset
00003bd: 20                                        ; local.get
00003be: 05                                        ; local index
00003bf: 41                                        ; i32.const
00003c0: 04                                        ; i32 literal
00003c1: 6a                                        ; i32.add
00003c2: 20                                        ; local.get
00003c3: 06                                        ; local index
00003c4: 41                                        ; i32.const
00003c5: 04                                        ; i32 literal
00003c6: 6a                                        ; i32.add
00003c7: 28                                        ; i32.load
00003c8: 02                                        ; alignment
00003c9: 00                                        ; load offset
00003ca: 36                                        ; i32.store
00003cb: 02                                        ; alignment
00003cc: 00                                        ; store offset
00003cd: 20                                        ; local.get
00003ce: 01                                        ; local index
00003cf: 41                                        ; i32.const
00003d0: 08                                        ; i32 literal
00003d1: 6a                                        ; i32.add
00003d2: 41                                        ; i32.const
00003d3: e400                                      ; i32 literal
00003d5: 36                                        ; i32.store
00003d6: 02                                        ; alignment
00003d7: 00                                        ; store offset
00003d8: 20                                        ; local.get
00003d9: 01                                        ; local index
00003da: 0f                                        ; return
00003db: 0b                                        ; end
; move data: [32e, 3dc) -> [32f, 3dd)
000032d: ae01                                      ; FIXUP func body size
; function body 2
00003dd: 00                                        ; func body size (guess)
00003de: 01                                        ; local decl count
00003df: 01                                        ; local type count
00003e0: 7f                                        ; i32
00003e1: 41                                        ; i32.const
00003e2: 08                                        ; i32 literal
00003e3: 41                                        ; i32.const
00003e4: 8809                                      ; i32 literal
00003e6: 10                                        ; call
00003e7: 0c                                        ; function index
00003e8: 21                                        ; local.set
00003e9: 00                                        ; local index
00003ea: 20                                        ; local.get
00003eb: 00                                        ; local index
00003ec: 41                                        ; i32.const
00003ed: 04                                        ; i32 literal
00003ee: 6a                                        ; i32.add
00003ef: 41                                        ; i32.const
00003f0: b00b                                      ; i32 literal
00003f2: 36                                        ; i32.store
00003f3: 02                                        ; alignment
00003f4: 00                                        ; store offset
00003f5: 20                                        ; local.get
00003f6: 00                                        ; local index
00003f7: 41                                        ; i32.const
00003f8: 00                                        ; i32 literal
00003f9: 6a                                        ; i32.add
00003fa: 41                                        ; i32.const
00003fb: 87e4 06                                   ; i32 literal
00003fe: 36                                        ; i32.store
00003ff: 02                                        ; alignment
0000400: 00                                        ; store offset
0000401: 20                                        ; local.get
0000402: 00                                        ; local index
0000403: 0f                                        ; return
0000404: 0b                                        ; end
00003dd: 27                                        ; FIXUP func body size
; function body 3
0000405: 00                                        ; func body size (guess)
0000406: 00                                        ; local decl count
0000407: 23                                        ; global.get
0000408: 0c                                        ; global index
0000409: 0f                                        ; return
000040a: 0b                                        ; end
0000405: 05                                        ; FIXUP func body size
; function body 4
000040b: 00                                        ; func body size (guess)
000040c: 01                                        ; local decl count
000040d: 03                                        ; local type count
000040e: 7f                                        ; i32
000040f: 41                                        ; i32.const
0000410: 08                                        ; i32 literal
0000411: 41                                        ; i32.const
0000412: 0a                                        ; i32 literal
0000413: 41                                        ; i32.const
0000414: 04                                        ; i32 literal
0000415: 6c                                        ; i32.mul
0000416: 6a                                        ; i32.add
0000417: 41                                        ; i32.const
0000418: 07                                        ; i32 literal
0000419: 10                                        ; call
000041a: 0c                                        ; function index
000041b: 21                                        ; local.set
000041c: 01                                        ; local index
000041d: 20                                        ; local.get
000041e: 01                                        ; local index
000041f: 41                                        ; i32.const
0000420: 01                                        ; i32 literal
0000421: 36                                        ; i32.store
0000422: 02                                        ; alignment
0000423: 00                                        ; store offset
0000424: 20                                        ; local.get
0000425: 01                                        ; local index
0000426: 41                                        ; i32.const
0000427: 04                                        ; i32 literal
0000428: 6a                                        ; i32.add
0000429: 41                                        ; i32.const
000042a: 0a                                        ; i32 literal
000042b: 36                                        ; i32.store
000042c: 02                                        ; alignment
000042d: 00                                        ; store offset
000042e: 20                                        ; local.get
000042f: 01                                        ; local index
0000430: 41                                        ; i32.const
0000431: 08                                        ; i32 literal
0000432: 6a                                        ; i32.add
0000433: 21                                        ; local.set
0000434: 02                                        ; local index
0000435: 20                                        ; local.get
0000436: 02                                        ; local index
0000437: 41                                        ; i32.const
0000438: 00                                        ; i32 literal
0000439: 6a                                        ; i32.add
000043a: 41                                        ; i32.const
000043b: 01                                        ; i32 literal
000043c: 36                                        ; i32.store
000043d: 02                                        ; alignment
000043e: 00                                        ; store offset
000043f: 20                                        ; local.get
0000440: 02                                        ; local index
0000441: 41                                        ; i32.const
0000442: 04                                        ; i32 literal
0000443: 6a                                        ; i32.add
0000444: 41                                        ; i32.const
0000445: 02                                        ; i32 literal
0000446: 36                                        ; i32.store
0000447: 02                                        ; alignment
0000448: 00                                        ; store offset
0000449: 20                                        ; local.get
000044a: 02                                        ; local index
000044b: 41                                        ; i32.const
000044c: 08                                        ; i32 literal
000044d: 6a                                        ; i32.add
000044e: 41                                        ; i32.const
000044f: 03                                        ; i32 literal
0000450: 36                                        ; i32.store
0000451: 02                                        ; alignment
0000452: 00                                        ; store offset
0000453: 20                                        ; local.get
0000454: 02                                        ; local index
0000455: 41                                        ; i32.const
0000456: 0c                                        ; i32 literal
0000457: 6a                                        ; i32.add
0000458: 41                                        ; i32.const
0000459: 04                                        ; i32 literal
000045a: 36                                        ; i32.store
000045b: 02                                        ; alignment
000045c: 00                                        ; store offset
000045d: 20                                        ; local.get
000045e: 02                                        ; local index
000045f: 41                                        ; i32.const
0000460: 10                                        ; i32 literal
0000461: 6a                                        ; i32.add
0000462: 41                                        ; i32.const
0000463: 05                                        ; i32 literal
0000464: 36                                        ; i32.store
0000465: 02                                        ; alignment
0000466: 00                                        ; store offset
0000467: 20                                        ; local.get
0000468: 02                                        ; local index
0000469: 41                                        ; i32.const
000046a: 14                                        ; i32 literal
000046b: 6a                                        ; i32.add
000046c: 41                                        ; i32.const
000046d: 06                                        ; i32 literal
000046e: 36                                        ; i32.store
000046f: 02                                        ; alignment
0000470: 00                                        ; store offset
0000471: 20                                        ; local.get
0000472: 02                                        ; local index
0000473: 41                                        ; i32.const
0000474: 18                                        ; i32 literal
0000475: 6a                                        ; i32.add
0000476: 41                                        ; i32.const
0000477: 07                                        ; i32 literal
0000478: 36                                        ; i32.store
0000479: 02                                        ; alignment
000047a: 00                                        ; store offset
000047b: 20                                        ; local.get
000047c: 02                                        ; local index
000047d: 41                                        ; i32.const
000047e: 1c                                        ; i32 literal
000047f: 6a                                        ; i32.add
0000480: 41                                        ; i32.const
0000481: 08                                        ; i32 literal
0000482: 36                                        ; i32.store
0000483: 02                                        ; alignment
0000484: 00                                        ; store offset
0000485: 20                                        ; local.get
0000486: 02                                        ; local index
0000487: 41                                        ; i32.const
0000488: 20                                        ; i32 literal
0000489: 6a                                        ; i32.add
000048a: 41                                        ; i32.const
000048b: 09                                        ; i32 literal
000048c: 36                                        ; i32.store
000048d: 02                                        ; alignment
000048e: 00                                        ; store offset
000048f: 20                                        ; local.get
0000490: 02                                        ; local index
0000491: 41                                        ; i32.const
0000492: 24                                        ; i32 literal
0000493: 6a                                        ; i32.add
0000494: 41                                        ; i32.const
0000495: 00                                        ; i32 literal
0000496: 36                                        ; i32.store
0000497: 02                                        ; alignment
0000498: 00                                        ; store offset
0000499: 20                                        ; local.get
000049a: 01                                        ; local index
000049b: 0f                                        ; return
000049c: 0b                                        ; end
; move data: [40c, 49d) -> [40d, 49e)
000040b: 9101                                      ; FIXUP func body size
; function body 5
000049e: 00                                        ; func body size (guess)
000049f: 01                                        ; local decl count
00004a0: 02                                        ; local type count
00004a1: 7f                                        ; i32
00004a2: 41                                        ; i32.const
00004a3: 08                                        ; i32 literal
00004a4: 41                                        ; i32.const
00004a5: 07                                        ; i32 literal
00004a6: 41                                        ; i32.const
00004a7: 04                                        ; i32 literal
00004a8: 6c                                        ; i32.mul
00004a9: 6a                                        ; i32.add
00004aa: 41                                        ; i32.const
00004ab: 07                                        ; i32 literal
00004ac: 10                                        ; call
00004ad: 0c                                        ; function index
00004ae: 21                                        ; local.set
00004af: 00                                        ; local index
00004b0: 20                                        ; local.get
00004b1: 00                                        ; local index
00004b2: 41                                        ; i32.const
00004b3: 05                                        ; i32 literal
00004b4: 36                                        ; i32.store
00004b5: 02                                        ; alignment
00004b6: 00                                        ; store offset
00004b7: 20                                        ; local.get
00004b8: 00                                        ; local index
00004b9: 41                                        ; i32.const
00004ba: 04                                        ; i32 literal
00004bb: 6a                                        ; i32.add
00004bc: 41                                        ; i32.const
00004bd: 07                                        ; i32 literal
00004be: 36                                        ; i32.store
00004bf: 02                                        ; alignment
00004c0: 00                                        ; store offset
00004c1: 20                                        ; local.get
00004c2: 00                                        ; local index
00004c3: 41                                        ; i32.const
00004c4: 08                                        ; i32 literal
00004c5: 6a                                        ; i32.add
00004c6: 21                                        ; local.set
00004c7: 01                                        ; local index
00004c8: 20                                        ; local.get
00004c9: 01                                        ; local index
00004ca: 41                                        ; i32.const
00004cb: 00                                        ; i32 literal
00004cc: 6a                                        ; i32.add
00004cd: 41                                        ; i32.const
00004ce: d80b                                      ; i32 literal
00004d0: 36                                        ; i32.store
00004d1: 02                                        ; alignment
00004d2: 00                                        ; store offset
00004d3: 20                                        ; local.get
00004d4: 01                                        ; local index
00004d5: 41                                        ; i32.const
00004d6: 04                                        ; i32 literal
00004d7: 6a                                        ; i32.add
00004d8: 41                                        ; i32.const
00004d9: e80b                                      ; i32 literal
00004db: 36                                        ; i32.store
00004dc: 02                                        ; alignment
00004dd: 00                                        ; store offset
00004de: 20                                        ; local.get
00004df: 01                                        ; local index
00004e0: 41                                        ; i32.const
00004e1: 08                                        ; i32 literal
00004e2: 6a                                        ; i32.add
00004e3: 41                                        ; i32.const
00004e4: f80b                                      ; i32 literal
00004e6: 36                                        ; i32.store
00004e7: 02                                        ; alignment
00004e8: 00                                        ; store offset
00004e9: 20                                        ; local.get
00004ea: 01                                        ; local index
00004eb: 41                                        ; i32.const
00004ec: 0c                                        ; i32 literal
00004ed: 6a                                        ; i32.add
00004ee: 41                                        ; i32.const
00004ef: 880c                                      ; i32 literal
00004f1: 36                                        ; i32.store
00004f2: 02                                        ; alignment
00004f3: 00                                        ; store offset
00004f4: 20                                        ; local.get
00004f5: 01                                        ; local index
00004f6: 41                                        ; i32.const
00004f7: 10                                        ; i32 literal
00004f8: 6a                                        ; i32.add
00004f9: 41                                        ; i32.const
00004fa: 980c                                      ; i32 literal
00004fc: 36                                        ; i32.store
00004fd: 02                                        ; alignment
00004fe: 00                                        ; store offset
00004ff: 20                                        ; local.get
0000500: 01                                        ; local index
0000501: 41                                        ; i32.const
0000502: 14                                        ; i32 literal
0000503: 6a                                        ; i32.add
0000504: 41                                        ; i32.const
0000505: a00c                                      ; i32 literal
0000507: 36                                        ; i32.store
0000508: 02                                        ; alignment
0000509: 00                                        ; store offset
000050a: 20                                        ; local.get
000050b: 01                                        ; local index
000050c: 41                                        ; i32.const
000050d: 18                                        ; i32 literal
000050e: 6a                                        ; i32.add
000050f: 41                                        ; i32.const
0000510: a80c                                      ; i32 literal
0000512: 36                                        ; i32.store
0000513: 02                                        ; alignment
0000514: 00                                        ; store offset
0000515: 20                                        ; local.get
0000516: 00                                        ; local index
0000517: 0f                                        ; return
0000518: 0b                                        ; end
000049e: 7a                                        ; FIXUP func body size
; function body 6
0000519: 00                                        ; func body size (guess)
000051a: 00                                        ; local decl count
000051b: 41                                        ; i32.const
000051c: b80c                                      ; i32 literal
000051e: 0f                                        ; return
000051f: 0b                                        ; end
0000519: 06                                        ; FIXUP func body size
; function body 7
0000520: 00                                        ; func body size (guess)
0000521: 00                                        ; local decl count
0000522: 41                                        ; i32.const
0000523: c80c                                      ; i32 literal
0000525: 0f                                        ; return
0000526: 0b                                        ; end
0000520: 06                                        ; FIXUP func body size
; function body 8
0000527: 00                                        ; func body size (guess)
0000528: 00                                        ; local decl count
0000529: 41                                        ; i32.const
000052a: 800d                                      ; i32 literal
000052c: 0f                                        ; return
000052d: 0b                                        ; end
0000527: 06                                        ; FIXUP func body size
; function body 9
000052e: 00                                        ; func body size (guess)
000052f: 00                                        ; local decl count
0000530: 41                                        ; i32.const
0000531: 900d                                      ; i32 literal
0000533: 0f                                        ; return
0000534: 0b                                        ; end
000052e: 06                                        ; FIXUP func body size
; function body 10
0000535: 00                                        ; func body size (guess)
0000536: 00                                        ; local decl count
0000537: 41                                        ; i32.const
0000538: a00d                                      ; i32 literal
000053a: 0f                                        ; return
000053b: 0b                                        ; end
0000535: 06                                        ; FIXUP func body size
; function body 11
000053c: 00                                        ; func body size (guess)
000053d: 00                                        ; local decl count
000053e: 41                                        ; i32.const
000053f: c80d                                      ; i32 literal
0000541: 0f                                        ; return
0000542: 0b                                        ; end
000053c: 06                                        ; FIXUP func body size
; function body 12
0000543: 00                                        ; func body size (guess)
0000544: 00                                        ; local decl count
0000545: 41                                        ; i32.const
0000546: d80d                                      ; i32 literal
0000548: 0f                                        ; return
0000549: 0b                                        ; end
0000543: 06                                        ; FIXUP func body size
; function body 13
000054a: 00                                        ; func body size (guess)
000054b: 00                                        ; local decl count
000054c: 41                                        ; i32.const
000054d: 800e                                      ; i32 literal
000054f: 0f                                        ; return
0000550: 0b                                        ; end
000054a: 06                                        ; FIXUP func body size
; function body 14
0000551: 00                                        ; func body size (guess)
0000552: 00                                        ; local decl count
0000553: 41                                        ; i32.const
0000554: 880e                                      ; i32 literal
0000556: 0f                                        ; return
0000557: 0b                                        ; end
0000551: 06                                        ; FIXUP func body size
; function body 15
0000558: 00                                        ; func body size (guess)
0000559: 00                                        ; local decl count
000055a: 10                                        ; call
000055b: 1c                                        ; function index
000055c: 10                                        ; call
000055d: 1d                                        ; function index
000055e: 10                                        ; call
000055f: 1e                                        ; function index
0000560: 0b                                        ; end
0000558: 08                                        ; FIXUP func body size
; function body 16
0000561: 00                                        ; func body size (guess)
0000562: 01                                        ; local decl count
0000563: 01                                        ; local type count
0000564: 7f                                        ; i32
0000565: 41                                        ; i32.const
0000566: 28                                        ; i32 literal
0000567: 41                                        ; i32.const
0000568: 8804                                      ; i32 literal
000056a: 10                                        ; call
000056b: 0c                                        ; function index
000056c: 21                                        ; local.set
000056d: 00                                        ; local index
000056e: 20                                        ; local.get
000056f: 00                                        ; local index
0000570: 41                                        ; i32.const
0000571: 18                                        ; i32 literal
0000572: 6a                                        ; i32.add
0000573: 41                                        ; i32.const
0000574: ffff ffff 07                              ; i32 literal
0000579: b7                                        ; f64.convert_i32_s
000057a: 39                                        ; f64.store
000057b: 03                                        ; alignment
000057c: 00                                        ; store offset
000057d: 20                                        ; local.get
000057e: 00                                        ; local index
000057f: 41                                        ; i32.const
0000580: 10                                        ; i32 literal
0000581: 6a                                        ; i32.add
0000582: 41                                        ; i32.const
0000583: 0a                                        ; i32 literal
0000584: b7                                        ; f64.convert_i32_s
0000585: 39                                        ; f64.store
0000586: 03                                        ; alignment
0000587: 00                                        ; store offset
0000588: 20                                        ; local.get
0000589: 00                                        ; local index
000058a: 41                                        ; i32.const
000058b: 08                                        ; i32 literal
000058c: 6a                                        ; i32.add
000058d: 41                                        ; i32.const
000058e: e807                                      ; i32 literal
0000590: 36                                        ; i32.store
0000591: 02                                        ; alignment
0000592: 00                                        ; store offset
0000593: 20                                        ; local.get
0000594: 00                                        ; local index
0000595: 41                                        ; i32.const
0000596: 0c                                        ; i32 literal
0000597: 6a                                        ; i32.add
0000598: 41                                        ; i32.const
0000599: e807                                      ; i32 literal
000059b: 36                                        ; i32.store
000059c: 02                                        ; alignment
000059d: 00                                        ; store offset
000059e: 20                                        ; local.get
000059f: 00                                        ; local index
00005a0: 41                                        ; i32.const
00005a1: 20                                        ; i32 literal
00005a2: 6a                                        ; i32.add
00005a3: 43                                        ; f32.const
00005a4: 0000 c6c2                                 ; f32 literal
00005a8: 38                                        ; f32.store
00005a9: 02                                        ; alignment
00005aa: 00                                        ; store offset
00005ab: 20                                        ; local.get
00005ac: 00                                        ; local index
00005ad: 41                                        ; i32.const
00005ae: 24                                        ; i32 literal
00005af: 6a                                        ; i32.add
00005b0: 41                                        ; i32.const
00005b1: 00                                        ; i32 literal
00005b2: 36                                        ; i32.store
00005b3: 02                                        ; alignment
00005b4: 00                                        ; store offset
00005b5: 20                                        ; local.get
00005b6: 00                                        ; local index
00005b7: 24                                        ; global.set
00005b8: 0c                                        ; global index
00005b9: 0b                                        ; end
0000561: 58                                        ; FIXUP func body size
; function body 17
00005ba: 00                                        ; func body size (guess)
00005bb: 01                                        ; local decl count
00005bc: 01                                        ; local type count
00005bd: 7f                                        ; i32
00005be: 41                                        ; i32.const
00005bf: 08                                        ; i32 literal
00005c0: 41                                        ; i32.const
00005c1: 8809                                      ; i32 literal
00005c3: 10                                        ; call
00005c4: 0c                                        ; function index
00005c5: 21                                        ; local.set
00005c6: 00                                        ; local index
00005c7: 20                                        ; local.get
00005c8: 00                                        ; local index
00005c9: 41                                        ; i32.const
00005ca: 04                                        ; i32 literal
00005cb: 6a                                        ; i32.add
00005cc: 41                                        ; i32.const
00005cd: c80b                                      ; i32 literal
00005cf: 36                                        ; i32.store
00005d0: 02                                        ; alignment
00005d1: 00                                        ; store offset
00005d2: 20                                        ; local.get
00005d3: 00                                        ; local index
00005d4: 41                                        ; i32.const
00005d5: 00                                        ; i32 literal
00005d6: 6a                                        ; i32.add
00005d7: 41                                        ; i32.const
00005d8: b8bc eda7 03                              ; i32 literal
00005dd: 36                                        ; i32.store
00005de: 02                                        ; alignment
00005df: 00                                        ; store offset
00005e0: 23                                        ; global.get
00005e1: 0c                                        ; global index
00005e2: 41                                        ; i32.const
00005e3: 00                                        ; i32 literal
00005e4: 6a                                        ; i32.add
00005e5: 20                                        ; local.get
00005e6: 00                                        ; local index
00005e7: 36                                        ; i32.store
00005e8: 02                                        ; alignment
00005e9: 00                                        ; store offset
00005ea: 23                                        ; global.get
00005eb: 0c                                        ; global index
00005ec: 41                                        ; i32.const
00005ed: 24                                        ; i32 literal
00005ee: 6a                                        ; i32.add
00005ef: 10                                        ; call
00005f0: 0d                                        ; function index
00005f1: 36                                        ; i32.store
00005f2: 02                                        ; alignment
00005f3: 00                                        ; store offset
00005f4: 0b                                        ; end
00005ba: 3a                                        ; FIXUP func body size
; function body 18
00005f5: 00                                        ; func body size (guess)
00005f6: 00                                        ; local decl count
00005f7: 0b                                        ; end
00005f5: 02                                        ; FIXUP func body size
; move data: [313, 5f8) -> [314, 5f9)
0000312: e505                                      ; FIXUP section size
; section "Data" (11)
00005f9: 0b                                        ; section code
00005fa: 00                                        ; section size (guess)
00005fb: 17                                        ; num data segments
; data segment header 0
00005fc: 00                                      
00005fd: 41                                        ; i32.const
00005fe: f808                                      ; i32 literal
0000600: 0b                                        ; end
0000601: 09                                        ; data segment size
; data segment data 0
0000602: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
000060b: 00                                      
000060c: 41                                        ; i32.const
000060d: 900b                                      ; i32 literal
000060f: 0b                                        ; end
0000610: 1d                                        ; data segment size
; data segment data 1
0000611: 6469 7265 6374 6c79 2063 7265 6174 6520 
0000621: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 2
000062e: 00                                      
000062f: 41                                        ; i32.const
0000630: b00b                                      ; i32 literal
0000632: 0b                                        ; end
0000633: 15                                        ; data segment size
; data segment data 2
0000634: 7468 6973 2069 7320 6120 7374 7275 6374 
0000644: 7572 6521 00                              ; data segment data
; data segment header 3
0000649: 00                                      
000064a: 41                                        ; i32.const
000064b: c80b                                      ; i32 literal
000064d: 0b                                        ; end
000064e: 0c                                        ; data segment size
; data segment data 3
000064f: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 4
000065b: 00                                      
000065c: 41                                        ; i32.const
000065d: d80b                                      ; i32 literal
000065f: 0b                                        ; end
0000660: 09                                        ; data segment size
; data segment data 4
0000661: 4141 4141 4141 4141 00                    ; data segment data
; data segment header 5
000066a: 00                                      
000066b: 41                                        ; i32.const
000066c: e80b                                      ; i32 literal
000066e: 0b                                        ; end
000066f: 09                                        ; data segment size
; data segment data 5
0000670: 4242 4242 4242 4242 00                    ; data segment data
; data segment header 6
0000679: 00                                      
000067a: 41                                        ; i32.const
000067b: f80b                                      ; i32 literal
000067d: 0b                                        ; end
000067e: 0b                                        ; data segment size
; data segment data 6
000067f: 4343 4343 4343 4343 4343 00               ; data segment data
; data segment header 7
000068a: 00                                      
000068b: 41                                        ; i32.const
000068c: 880c                                      ; i32 literal
000068e: 0b                                        ; end
000068f: 0b                                        ; data segment size
; data segment data 7
0000690: 4444 4444 4444 4444 4444 00               ; data segment data
; data segment header 8
000069b: 00                                      
000069c: 41                                        ; i32.const
000069d: 980c                                      ; i32 literal
000069f: 0b                                        ; end
00006a0: 03                                        ; data segment size
; data segment data 8
00006a1: 4545 00                                   ; data segment data
; data segment header 9
00006a4: 00                                      
00006a5: 41                                        ; i32.const
00006a6: a00c                                      ; i32 literal
00006a8: 0b                                        ; end
00006a9: 08                                        ; data segment size
; data segment data 9
00006aa: 4646 4646 4646 4600                       ; data segment data
; data segment header 10
00006b2: 00                                      
00006b3: 41                                        ; i32.const
00006b4: a80c                                      ; i32 literal
00006b6: 0b                                        ; end
00006b7: 09                                        ; data segment size
; data segment data 10
00006b8: 4747 4747 4747 4747 00                    ; data segment data
; data segment header 11
00006c1: 00                                      
00006c2: 41                                        ; i32.const
00006c3: b80c                                      ; i32 literal
00006c5: 0b                                        ; end
00006c6: 0f                                        ; data segment size
; data segment data 11
00006c7: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 12
00006d6: 00                                      
00006d7: 41                                        ; i32.const
00006d8: c80c                                      ; i32 literal
00006da: 0b                                        ; end
00006db: 38                                        ; data segment size
; data segment data 12
00006dc: 4a61 7661 7363 7269 7074 206f 626a 6563 
00006ec: 7420 6765 6e65 7261 7465 2066 726f 6d20 
00006fc: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
000070c: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 13
0000714: 00                                      
0000715: 41                                        ; i32.const
0000716: 800d                                      ; i32 literal
0000718: 0b                                        ; end
0000719: 0e                                        ; data segment size
; data segment data 13
000071a: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 14
0000728: 00                                      
0000729: 41                                        ; i32.const
000072a: 900d                                      ; i32 literal
000072c: 0b                                        ; end
000072d: 0a                                        ; data segment size
; data segment data 14
000072e: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 15
0000738: 00                                      
0000739: 41                                        ; i32.const
000073a: a00d                                      ; i32 literal
000073c: 0b                                        ; end
000073d: 21                                        ; data segment size
; data segment data 15
000073e: 436f 7079 7269 6768 7420 2863 2920 7661 
000074e: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
000075e: 00                                        ; data segment data
; data segment header 16
000075f: 00                                      
0000760: 41                                        ; i32.const
0000761: c80d                                      ; i32 literal
0000763: 0b                                        ; end
0000764: 0b                                        ; data segment size
; data segment data 16
0000765: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 17
0000770: 00                                      
0000771: 41                                        ; i32.const
0000772: d80d                                      ; i32 literal
0000774: 0b                                        ; end
0000775: 25                                        ; data segment size
; data segment data 17
0000776: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000786: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000796: 3535 6239 00                              ; data segment data
; data segment header 18
000079b: 00                                      
000079c: 41                                        ; i32.const
000079d: 800e                                      ; i32 literal
000079f: 0b                                        ; end
00007a0: 08                                        ; data segment size
; data segment data 18
00007a1: 312e 302e 302e 3000                       ; data segment data
; data segment header 19
00007a9: 00                                      
00007aa: 41                                        ; i32.const
00007ab: 880e                                      ; i32 literal
00007ad: 0b                                        ; end
00007ae: 08                                        ; data segment size
; data segment data 19
00007af: 312e 302e 302e 3000                       ; data segment data
; data segment header 20
00007b7: 00                                      
00007b8: 41                                        ; i32.const
00007b9: 0d                                        ; i32 literal
00007ba: 0b                                        ; end
00007bb: bd03                                      ; data segment size
; data segment data 20
00007bd: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00007cd: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00007dd: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
00007ed: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
00007fd: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
000080d: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
000081d: 5731 3073 496e 4a68 6479 4936 496d 597a 
000082d: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
000083d: 4c43 4a35 496a 7037 496d 646c 626d 5679 
000084d: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
000085d: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
000086d: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
000087d: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
000088d: 636d 4633 496a 6f69 6154 4d79 4969 7769 
000089d: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
00008ad: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
00008bd: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
00008cd: 6479 4936 496c 7378 4d54 5977 5857 3568 
00008dd: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
00008ed: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
00008fd: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
000090d: 5731 3073 496e 4a68 6479 4936 496c 7378 
000091d: 4d54 5977 5857 3568 6257 5569 4c43 4a30 
000092d: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
000093d: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
000094d: 6332 5573 496d 316c 6447 6876 5a48 4d69 
000095d: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
000096d: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 21
000097a: 00                                      
000097b: 41                                        ; i32.const
000097c: 8804                                      ; i32 literal
000097e: 0b                                        ; end
000097f: ad04                                      ; data segment size
; data segment data 21
0000981: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000991: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00009a1: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
00009b1: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
00009c1: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
00009d1: 6579 4a75 5957 316c 496a 7037 496d 646c 
00009e1: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00009f1: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000a01: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000a11: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000a21: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000a31: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000a41: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000a51: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000a61: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000a71: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000a81: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000a91: 5979 4936 5731 3073 496e 4a68 6479 4936 
0000aa1: 496d 5932 4e43 4973 496e 5235 6347 5569 
0000ab1: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
0000ac1: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000ad1: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
0000ae1: 6558 426c 496a 6f30 6653 7769 636d 466b 
0000af1: 6158 567a 496a 7037 496d 646c 626d 5679 
0000b01: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000b11: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000b21: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000b31: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000b41: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000b51: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000b61: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000b71: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000b81: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000b91: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000ba1: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 22
0000bae: 00                                      
0000baf: 41                                        ; i32.const
0000bb0: 8809                                      ; i32 literal
0000bb2: 0b                                        ; end
0000bb3: 8502                                      ; data segment size
; data segment data 22
0000bb5: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000bc5: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000bd5: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000be5: 6331 3970 5a43 4936 4d54 4532 4d43 7769 
0000bf5: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000c05: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000c15: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000c25: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000c35: 5a53 4936 4d58 3073 496d 3568 6257 5569 
0000c45: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000c55: 5731 3073 496e 4a68 6479 4936 496e 4e30 
0000c65: 636d 6c75 5a79 4973 496e 5235 6347 5569 
0000c75: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
0000c85: 5933 5169 4f6e 5279 6457 5573 496d 316c 
0000c95: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0000ca5: 5957 316c 6333 4268 5932 5569 4f6d 3531 
0000cb5: 6247 7839 00                              ; data segment data
; move data: [5fb, cba) -> [5fc, cbb)
00005fa: bf0d                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0314 1305 0707 0707 0707 0707 0707 0707 
0000100: 0707 0808 0808 068c 010e 7f01 4190 0e0b 
0000110: 7c01 4469 5714 8b0a bf05 400b 7c01 4418 
0000120: 2d44 54fb 2109 400b 7f01 41ff ffff ff07 
0000130: 0b7e 0142 ffff ffff ffff ffff ff00 0b7d 
0000140: 0143 ffff 7f7f 0b7c 0144 ffff ffff ffff 
0000150: ef7f 0b7f 0141 8080 8080 780b 7e01 4280 
0000160: 8080 8080 8080 8080 7f0b 7d01 43ff ff7f 
0000170: ff0b 7c01 44ff ffff ffff ffef ff0b 7c01 
0000180: 4400 0000 0000 408f 400b 7f01 4100 0b7f 
0000190: 0141 f808 0b07 f602 0d12 6f62 6a65 6374 
00001a0: 4743 2e6e 6577 4369 7263 6c65 000d 126f 
00001b0: 626a 6563 7447 432e 6765 744f 626a 6563 
00001c0: 7400 0f18 6e75 6d62 6572 4172 7261 792e 
00001d0: 6372 6561 7465 5665 6374 6f72 0010 176e 
00001e0: 756d 6265 7241 7272 6179 2e6e 616d 6573 
00001f0: 5665 6374 6f72 0011 1a41 7373 656d 626c 
0000200: 7949 6e66 6f2e 4173 7365 6d62 6c79 5469 
0000210: 746c 6500 1220 4173 7365 6d62 6c79 496e 
0000220: 666f 2e41 7373 656d 626c 7944 6573 6372 
0000230: 6970 7469 6f6e 0013 1c41 7373 656d 626c 
0000240: 7949 6e66 6f2e 4173 7365 6d62 6c79 436f 
0000250: 6d70 616e 7900 141c 4173 7365 6d62 6c79 
0000260: 496e 666f 2e41 7373 656d 626c 7950 726f 
0000270: 6475 6374 0015 1e41 7373 656d 626c 7949 
0000280: 6e66 6f2e 4173 7365 6d62 6c79 436f 7079 
0000290: 7269 6768 7400 161e 4173 7365 6d62 6c79 
00002a0: 496e 666f 2e41 7373 656d 626c 7954 7261 
00002b0: 6465 6d61 726b 0017 1141 7373 656d 626c 
00002c0: 7949 6e66 6f2e 4775 6964 0018 1c41 7373 
00002d0: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
00002e0: 6c79 5665 7273 696f 6e00 1920 4173 7365 
00002f0: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
0000300: 7946 696c 6556 6572 7369 6f6e 001a 0801 
0000310: 1b0a e505 1318 0101 7f23 0021 0220 0220 
0000320: 006a 2400 2002 2001 1007 2002 0f0b ae01 
0000330: 0107 7f23 0b41 02b7 a224 0b41 1c41 0d10 
0000340: 0c21 0120 0141 006a 230b b638 0200 2001 
0000350: 4104 6a41 8fce 00b2 3802 0010 0e21 0420 
0000360: 0141 0c6a 2103 2003 4100 6a20 0441 006a 
0000370: 2802 0036 0200 2003 4104 6a20 0441 046a 
0000380: 2802 0036 0200 4108 4188 0910 0c21 0220 
0000390: 0241 046a 4190 0b36 0200 2002 4100 6a41 
00003a0: 0036 0200 2002 2106 2001 4114 6a21 0520 
00003b0: 0541 006a 2006 4100 6a28 0200 3602 0020 
00003c0: 0541 046a 2006 4104 6a28 0200 3602 0020 
00003d0: 0141 086a 41e4 0036 0200 2001 0f0b 2701 
00003e0: 017f 4108 4188 0910 0c21 0020 0041 046a 
00003f0: 41b0 0b36 0200 2000 4100 6a41 87e4 0636 
0000400: 0200 2000 0f0b 0500 230c 0f0b 9101 0103 
0000410: 7f41 0841 0a41 046c 6a41 0710 0c21 0120 
0000420: 0141 0136 0200 2001 4104 6a41 0a36 0200 
0000430: 2001 4108 6a21 0220 0241 006a 4101 3602 
0000440: 0020 0241 046a 4102 3602 0020 0241 086a 
0000450: 4103 3602 0020 0241 0c6a 4104 3602 0020 
0000460: 0241 106a 4105 3602 0020 0241 146a 4106 
0000470: 3602 0020 0241 186a 4107 3602 0020 0241 
0000480: 1c6a 4108 3602 0020 0241 206a 4109 3602 
0000490: 0020 0241 246a 4100 3602 0020 010f 0b7a 
00004a0: 0102 7f41 0841 0741 046c 6a41 0710 0c21 
00004b0: 0020 0041 0536 0200 2000 4104 6a41 0736 
00004c0: 0200 2000 4108 6a21 0120 0141 006a 41d8 
00004d0: 0b36 0200 2001 4104 6a41 e80b 3602 0020 
00004e0: 0141 086a 41f8 0b36 0200 2001 410c 6a41 
00004f0: 880c 3602 0020 0141 106a 4198 0c36 0200 
0000500: 2001 4114 6a41 a00c 3602 0020 0141 186a 
0000510: 41a8 0c36 0200 2000 0f0b 0600 41b8 0c0f 
0000520: 0b06 0041 c80c 0f0b 0600 4180 0d0f 0b06 
0000530: 0041 900d 0f0b 0600 41a0 0d0f 0b06 0041 
0000540: c80d 0f0b 0600 41d8 0d0f 0b06 0041 800e 
0000550: 0f0b 0600 4188 0e0f 0b08 0010 1c10 1d10 
0000560: 1e0b 5801 017f 4128 4188 0410 0c21 0020 
0000570: 0041 186a 41ff ffff ff07 b739 0300 2000 
0000580: 4110 6a41 0ab7 3903 0020 0041 086a 41e8 
0000590: 0736 0200 2000 410c 6a41 e807 3602 0020 
00005a0: 0041 206a 4300 00c6 c238 0200 2000 4124 
00005b0: 6a41 0036 0200 2000 240c 0b3a 0101 7f41 
00005c0: 0841 8809 100c 2100 2000 4104 6a41 c80b 
00005d0: 3602 0020 0041 006a 41b8 bced a703 3602 
00005e0: 0023 0c41 006a 2000 3602 0023 0c41 246a 
00005f0: 100d 3602 000b 0200 0b0b bf0d 1700 41f8 
0000600: 080b 0939 3939 3939 3939 3900 0041 900b 
0000610: 0b1d 6469 7265 6374 6c79 2063 7265 6174 
0000620: 6520 6120 7374 7275 6374 7572 7465 0000 
0000630: 41b0 0b0b 1574 6869 7320 6973 2061 2073 
0000640: 7472 7563 7475 7265 2100 0041 c80b 0b0c 
0000650: 7465 7374 206f 626a 6563 7400 0041 d80b 
0000660: 0b09 4141 4141 4141 4141 0000 41e8 0b0b 
0000670: 0942 4242 4242 4242 4200 0041 f80b 0b0b 
0000680: 4343 4343 4343 4343 4343 0000 4188 0c0b 
0000690: 0b44 4444 4444 4444 4444 4400 0041 980c 
00006a0: 0b03 4545 0000 41a0 0c0b 0846 4646 4646 
00006b0: 4646 0000 41a8 0c0b 0947 4747 4747 4747 
00006c0: 4700 0041 b80c 0b0f 6a73 5f6f 626a 6563 
00006d0: 7420 6465 6d6f 0000 41c8 0c0b 384a 6176 
00006e0: 6173 6372 6970 7420 6f62 6a65 6374 2067 
00006f0: 656e 6572 6174 6520 6672 6f6d 2056 422e 
0000700: 4e45 5420 5765 6241 7373 656d 626c 7920 
0000710: 6465 6d6f 0000 4180 0d0b 0e76 616e 696c 
0000720: 6c61 7662 2e61 7070 0000 4190 0d0b 0a6a 
0000730: 735f 6f62 6a65 6374 0000 41a0 0d0b 2143 
0000740: 6f70 7972 6967 6874 2028 6329 2076 616e 
0000750: 696c 6c61 7662 2e61 7070 2032 3031 3900 
0000760: 0041 c80d 0b0b 646f 7476 616e 696c 6c61 
0000770: 0000 41d8 0d0b 2536 3262 3333 3839 642d 
0000780: 3531 3039 2d34 3734 302d 3963 3661 2d33 
0000790: 3562 6230 3232 3335 3562 3900 0041 800e 
00007a0: 0b08 312e 302e 302e 3000 0041 880e 0b08 
00007b0: 312e 302e 302e 3000 0041 0d0b bd03 6579 
00007c0: 4a6a 6232 3174 5a57 3530 496a 7075 6457 
00007d0: 7873 4c43 4a6a 6247 467a 6379 4936 496d 
00007e0: 4e70 636d 4e73 5a53 4973 496d 4e73 5958 
00007f0: 4e7a 5832 6c6b 496a 6f78 4d79 7769 5a6d 
0000800: 6c6c 6247 527a 496a 7037 496e 6769 4f6e 
0000810: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
0000820: 3073 496e 4a68 6479 4936 496d 597a 4d69 
0000830: 4973 496e 5235 6347 5569 4f6a 4e39 4c43 
0000840: 4a35 496a 7037 496d 646c 626d 5679 6157 
0000850: 4d69 4f6c 7464 4c43 4a79 5958 6369 4f69 
0000860: 4a6d 4d7a 4969 4c43 4a30 6558 426c 496a 
0000870: 6f7a 6653 7769 6369 4936 6579 4a6e 5a57 
0000880: 356c 636d 6c6a 496a 7062 5853 7769 636d 
0000890: 4633 496a 6f69 6154 4d79 4969 7769 6448 
00008a0: 6c77 5a53 4936 4d58 3073 496d 3568 6257 
00008b0: 5650 5a6c 6769 4f6e 7369 5a32 5675 5a58 
00008c0: 4a70 5979 4936 5731 3073 496e 4a68 6479 
00008d0: 4936 496c 7378 4d54 5977 5857 3568 6257 
00008e0: 5569 4c43 4a30 6558 426c 496a 6f78 4d48 
00008f0: 3073 496d 3568 6257 5650 5a6c 6b69 4f6e 
0000900: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
0000910: 3073 496e 4a68 6479 4936 496c 7378 4d54 
0000920: 5977 5857 3568 6257 5569 4c43 4a30 6558 
0000930: 426c 496a 6f78 4d48 3139 4c43 4a70 6331 
0000940: 4e30 636e 566a 6443 4936 5a6d 4673 6332 
0000950: 5573 496d 316c 6447 6876 5a48 4d69 4f6e 
0000960: 7439 4c43 4a75 5957 316c 6333 4268 5932 
0000970: 5569 4f6d 3531 6247 7839 0000 4188 040b 
0000980: ad04 6579 4a6a 6232 3174 5a57 3530 496a 
0000990: 7075 6457 7873 4c43 4a6a 6247 467a 6379 
00009a0: 4936 496e 4a6c 5933 5268 626d 6473 5a53 
00009b0: 4973 496d 4e73 5958 4e7a 5832 6c6b 496a 
00009c0: 6f31 4d6a 4173 496d 5a70 5a57 786b 6379 
00009d0: 4936 6579 4a75 5957 316c 496a 7037 496d 
00009e0: 646c 626d 5679 6157 4d69 4f6c 7464 4c43 
00009f0: 4a79 5958 6369 4f69 4a62 4d54 4532 4d46 
0000a00: 3175 5957 316c 4969 7769 6448 6c77 5a53 
0000a10: 4936 4d54 4239 4c43 4a6f 496a 7037 496d 
0000a20: 646c 626d 5679 6157 4d69 4f6c 7464 4c43 
0000a30: 4a79 5958 6369 4f69 4a70 4d7a 4969 4c43 
0000a40: 4a30 6558 426c 496a 6f78 6653 7769 6479 
0000a50: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0000a60: 7062 5853 7769 636d 4633 496a 6f69 6154 
0000a70: 4d79 4969 7769 6448 6c77 5a53 4936 4d58 
0000a80: 3073 496e 6b69 4f6e 7369 5a32 5675 5a58 
0000a90: 4a70 5979 4936 5731 3073 496e 4a68 6479 
0000aa0: 4936 496d 5932 4e43 4973 496e 5235 6347 
0000ab0: 5569 4f6a 5239 4c43 4a34 496a 7037 496d 
0000ac0: 646c 626d 5679 6157 4d69 4f6c 7464 4c43 
0000ad0: 4a79 5958 6369 4f69 4a6d 4e6a 5169 4c43 
0000ae0: 4a30 6558 426c 496a 6f30 6653 7769 636d 
0000af0: 466b 6158 567a 496a 7037 496d 646c 626d 
0000b00: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000b10: 6369 4f69 4a6d 4d7a 4969 4c43 4a30 6558 
0000b20: 426c 496a 6f7a 6653 7769 6157 3575 5a58 
0000b30: 4969 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000b40: 4936 5731 3073 496e 4a68 6479 4936 496c 
0000b50: 7378 4d31 316a 6158 4a6a 6247 5569 4c43 
0000b60: 4a30 6558 426c 496a 6f78 4d48 3139 4c43 
0000b70: 4a70 6331 4e30 636e 566a 6443 4936 5a6d 
0000b80: 4673 6332 5573 496d 316c 6447 6876 5a48 
0000b90: 4d69 4f6e 7439 4c43 4a75 5957 316c 6333 
0000ba0: 4268 5932 5569 4f6d 3531 6247 7839 0000 
0000bb0: 4188 090b 8502 6579 4a6a 6232 3174 5a57 
0000bc0: 3530 496a 7075 6457 7873 4c43 4a6a 6247 
0000bd0: 467a 6379 4936 496d 3568 6257 5569 4c43 
0000be0: 4a6a 6247 467a 6331 3970 5a43 4936 4d54 
0000bf0: 4532 4d43 7769 5a6d 6c6c 6247 527a 496a 
0000c00: 7037 496e 4e76 6458 4a6a 5a53 4936 6579 
0000c10: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
0000c20: 7769 636d 4633 496a 6f69 6154 4d79 4969 
0000c30: 7769 6448 6c77 5a53 4936 4d58 3073 496d 
0000c40: 3568 6257 5569 4f6e 7369 5a32 5675 5a58 
0000c50: 4a70 5979 4936 5731 3073 496e 4a68 6479 
0000c60: 4936 496e 4e30 636d 6c75 5a79 4973 496e 
0000c70: 5235 6347 5569 4f6a 5639 6653 7769 6158 
0000c80: 4e54 6448 4a31 5933 5169 4f6e 5279 6457 
0000c90: 5573 496d 316c 6447 6876 5a48 4d69 4f6e 
0000ca0: 7439 4c43 4a75 5957 316c 6333 4268 5932 
0000cb0: 5569 4f6d 3531 6247 7839 00             
