0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 12                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 07                                        ; function 11 signature index
00000ff: 07                                        ; function 12 signature index
0000100: 07                                        ; function 13 signature index
0000101: 08                                        ; function 14 signature index
0000102: 08                                        ; function 15 signature index
0000103: 08                                        ; function 16 signature index
0000104: 08                                        ; function 17 signature index
00000f1: 13                                        ; FIXUP section size
; section "Global" (6)
0000105: 06                                        ; section code
0000106: 00                                        ; section size (guess)
0000107: 0e                                        ; num globals
0000108: 7f                                        ; i32
0000109: 01                                        ; global mutability
000010a: 41                                        ; i32.const
000010b: b00d                                      ; i32 literal
000010d: 0b                                        ; end
000010e: 7c                                        ; f64
000010f: 01                                        ; global mutability
0000110: 44                                        ; f64.const
0000111: 6957 148b 0abf 0540                       ; f64 literal
0000119: 0b                                        ; end
000011a: 7c                                        ; f64
000011b: 01                                        ; global mutability
000011c: 44                                        ; f64.const
000011d: 182d 4454 fb21 0940                       ; f64 literal
0000125: 0b                                        ; end
0000126: 7f                                        ; i32
0000127: 01                                        ; global mutability
0000128: 41                                        ; i32.const
0000129: ffff ffff 07                              ; i32 literal
000012e: 0b                                        ; end
000012f: 7e                                        ; i64
0000130: 01                                        ; global mutability
0000131: 42                                        ; i64.const
0000132: ffff ffff ffff ffff ff00                  ; i64 literal
000013c: 0b                                        ; end
000013d: 7d                                        ; f32
000013e: 01                                        ; global mutability
000013f: 43                                        ; f32.const
0000140: ffff 7f7f                                 ; f32 literal
0000144: 0b                                        ; end
0000145: 7c                                        ; f64
0000146: 01                                        ; global mutability
0000147: 44                                        ; f64.const
0000148: ffff ffff ffff ef7f                       ; f64 literal
0000150: 0b                                        ; end
0000151: 7f                                        ; i32
0000152: 01                                        ; global mutability
0000153: 41                                        ; i32.const
0000154: 8080 8080 78                              ; i32 literal
0000159: 0b                                        ; end
000015a: 7e                                        ; i64
000015b: 01                                        ; global mutability
000015c: 42                                        ; i64.const
000015d: 8080 8080 8080 8080 807f                  ; i64 literal
0000167: 0b                                        ; end
0000168: 7d                                        ; f32
0000169: 01                                        ; global mutability
000016a: 43                                        ; f32.const
000016b: ffff 7fff                                 ; f32 literal
000016f: 0b                                        ; end
0000170: 7c                                        ; f64
0000171: 01                                        ; global mutability
0000172: 44                                        ; f64.const
0000173: ffff ffff ffff efff                       ; f64 literal
000017b: 0b                                        ; end
000017c: 7c                                        ; f64
000017d: 01                                        ; global mutability
000017e: 44                                        ; f64.const
000017f: 0000 0000 0040 8f40                       ; f64 literal
0000187: 0b                                        ; end
0000188: 7f                                        ; i32
0000189: 01                                        ; global mutability
000018a: 41                                        ; i32.const
000018b: 00                                        ; i32 literal
000018c: 0b                                        ; end
000018d: 7f                                        ; i32
000018e: 01                                        ; global mutability
000018f: 41                                        ; i32.const
0000190: f808                                      ; i32 literal
0000192: 0b                                        ; end
; move data: [107, 193) -> [108, 194)
0000106: 8c01                                      ; FIXUP section size
; section "Export" (7)
0000194: 07                                        ; section code
0000195: 00                                        ; section size (guess)
0000196: 0c                                        ; num exports
0000197: 12                                        ; string length
0000198: 6f62 6a65 6374 4743 2e6e 6577 4369 7263  objectGC.newCirc
00001a8: 6c65                                     le  ; export name
00001aa: 00                                        ; export kind
00001ab: 0d                                        ; export func index
00001ac: 12                                        ; string length
00001ad: 6f62 6a65 6374 4743 2e67 6574 4f62 6a65  objectGC.getObje
00001bd: 6374                                     ct  ; export name
00001bf: 00                                        ; export kind
00001c0: 0f                                        ; export func index
00001c1: 18                                        ; string length
00001c2: 6e75 6d62 6572 4172 7261 792e 6372 6561  numberArray.crea
00001d2: 7465 5665 6374 6f72                      teVector  ; export name
00001da: 00                                        ; export kind
00001db: 10                                        ; export func index
00001dc: 1a                                        ; string length
00001dd: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001ed: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001f7: 00                                        ; export kind
00001f8: 11                                        ; export func index
00001f9: 20                                        ; string length
00001fa: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000020a: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
000021a: 00                                        ; export kind
000021b: 12                                        ; export func index
000021c: 1c                                        ; string length
000021d: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000022d: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000239: 00                                        ; export kind
000023a: 13                                        ; export func index
000023b: 1c                                        ; string length
000023c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000024c: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000258: 00                                        ; export kind
0000259: 14                                        ; export func index
000025a: 1e                                        ; string length
000025b: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000026b: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000279: 00                                        ; export kind
000027a: 15                                        ; export func index
000027b: 1e                                        ; string length
000027c: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
000028c: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
000029a: 00                                        ; export kind
000029b: 16                                        ; export func index
000029c: 11                                        ; string length
000029d: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002ad: 64                                       d  ; export name
00002ae: 00                                        ; export kind
00002af: 17                                        ; export func index
00002b0: 1c                                        ; string length
00002b1: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002c1: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002cd: 00                                        ; export kind
00002ce: 18                                        ; export func index
00002cf: 20                                        ; string length
00002d0: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002e0: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002f0: 00                                        ; export kind
00002f1: 19                                        ; export func index
; move data: [196, 2f2) -> [197, 2f3)
0000195: dc02                                      ; FIXUP section size
; section "Start" (8)
00002f3: 08                                        ; section code
00002f4: 00                                        ; section size (guess)
00002f5: 1a                                        ; start func index
00002f4: 01                                        ; FIXUP section size
; section "Code" (10)
00002f6: 0a                                        ; section code
00002f7: 00                                        ; section size (guess)
00002f8: 12                                        ; num functions
; function body 0
00002f9: 00                                        ; func body size (guess)
00002fa: 01                                        ; local decl count
00002fb: 01                                        ; local type count
00002fc: 7f                                        ; i32
00002fd: 23                                        ; global.get
00002fe: 00                                        ; global index
00002ff: 21                                        ; local.set
0000300: 02                                        ; local index
0000301: 20                                        ; local.get
0000302: 02                                        ; local index
0000303: 20                                        ; local.get
0000304: 00                                        ; local index
0000305: 6a                                        ; i32.add
0000306: 24                                        ; global.set
0000307: 00                                        ; global index
0000308: 20                                        ; local.get
0000309: 02                                        ; local index
000030a: 20                                        ; local.get
000030b: 01                                        ; local index
000030c: 10                                        ; call
000030d: 07                                        ; function index
000030e: 20                                        ; local.get
000030f: 02                                        ; local index
0000310: 0f                                        ; return
0000311: 0b                                        ; end
00002f9: 18                                        ; FIXUP func body size
; function body 1
0000312: 00                                        ; func body size (guess)
0000313: 01                                        ; local decl count
0000314: 07                                        ; local type count
0000315: 7f                                        ; i32
0000316: 23                                        ; global.get
0000317: 0b                                        ; global index
0000318: 41                                        ; i32.const
0000319: 02                                        ; i32 literal
000031a: b7                                        ; f64.convert_i32_s
000031b: a2                                        ; f64.mul
000031c: 24                                        ; global.set
000031d: 0b                                        ; global index
000031e: 41                                        ; i32.const
000031f: 1c                                        ; i32 literal
0000320: 41                                        ; i32.const
0000321: 0d                                        ; i32 literal
0000322: 10                                        ; call
0000323: 0c                                        ; function index
0000324: 21                                        ; local.set
0000325: 01                                        ; local index
0000326: 20                                        ; local.get
0000327: 01                                        ; local index
0000328: 41                                        ; i32.const
0000329: 00                                        ; i32 literal
000032a: 6a                                        ; i32.add
000032b: 23                                        ; global.get
000032c: 0b                                        ; global index
000032d: b6                                        ; f32.demote_f64
000032e: 38                                        ; f32.store
000032f: 02                                        ; alignment
0000330: 00                                        ; store offset
0000331: 20                                        ; local.get
0000332: 01                                        ; local index
0000333: 41                                        ; i32.const
0000334: 04                                        ; i32 literal
0000335: 6a                                        ; i32.add
0000336: 41                                        ; i32.const
0000337: 8fce 00                                   ; i32 literal
000033a: b2                                        ; f32.convert_i32_s
000033b: 38                                        ; f32.store
000033c: 02                                        ; alignment
000033d: 00                                        ; store offset
000033e: 10                                        ; call
000033f: 0e                                        ; function index
0000340: 21                                        ; local.set
0000341: 04                                        ; local index
0000342: 20                                        ; local.get
0000343: 01                                        ; local index
0000344: 41                                        ; i32.const
0000345: 0c                                        ; i32 literal
0000346: 6a                                        ; i32.add
0000347: 21                                        ; local.set
0000348: 03                                        ; local index
0000349: 20                                        ; local.get
000034a: 03                                        ; local index
000034b: 41                                        ; i32.const
000034c: 00                                        ; i32 literal
000034d: 6a                                        ; i32.add
000034e: 20                                        ; local.get
000034f: 04                                        ; local index
0000350: 41                                        ; i32.const
0000351: 00                                        ; i32 literal
0000352: 6a                                        ; i32.add
0000353: 28                                        ; i32.load
0000354: 02                                        ; alignment
0000355: 00                                        ; load offset
0000356: 36                                        ; i32.store
0000357: 02                                        ; alignment
0000358: 00                                        ; store offset
0000359: 20                                        ; local.get
000035a: 03                                        ; local index
000035b: 41                                        ; i32.const
000035c: 04                                        ; i32 literal
000035d: 6a                                        ; i32.add
000035e: 20                                        ; local.get
000035f: 04                                        ; local index
0000360: 41                                        ; i32.const
0000361: 04                                        ; i32 literal
0000362: 6a                                        ; i32.add
0000363: 28                                        ; i32.load
0000364: 02                                        ; alignment
0000365: 00                                        ; load offset
0000366: 36                                        ; i32.store
0000367: 02                                        ; alignment
0000368: 00                                        ; store offset
0000369: 41                                        ; i32.const
000036a: 08                                        ; i32 literal
000036b: 41                                        ; i32.const
000036c: 8809                                      ; i32 literal
000036e: 10                                        ; call
000036f: 0c                                        ; function index
0000370: 21                                        ; local.set
0000371: 02                                        ; local index
0000372: 20                                        ; local.get
0000373: 02                                        ; local index
0000374: 41                                        ; i32.const
0000375: 04                                        ; i32 literal
0000376: 6a                                        ; i32.add
0000377: 41                                        ; i32.const
0000378: 900b                                      ; i32 literal
000037a: 36                                        ; i32.store
000037b: 02                                        ; alignment
000037c: 00                                        ; store offset
000037d: 20                                        ; local.get
000037e: 02                                        ; local index
000037f: 41                                        ; i32.const
0000380: 00                                        ; i32 literal
0000381: 6a                                        ; i32.add
0000382: 41                                        ; i32.const
0000383: 00                                        ; i32 literal
0000384: 36                                        ; i32.store
0000385: 02                                        ; alignment
0000386: 00                                        ; store offset
0000387: 20                                        ; local.get
0000388: 02                                        ; local index
0000389: 21                                        ; local.set
000038a: 06                                        ; local index
000038b: 20                                        ; local.get
000038c: 01                                        ; local index
000038d: 41                                        ; i32.const
000038e: 14                                        ; i32 literal
000038f: 6a                                        ; i32.add
0000390: 21                                        ; local.set
0000391: 05                                        ; local index
0000392: 20                                        ; local.get
0000393: 05                                        ; local index
0000394: 41                                        ; i32.const
0000395: 00                                        ; i32 literal
0000396: 6a                                        ; i32.add
0000397: 20                                        ; local.get
0000398: 06                                        ; local index
0000399: 41                                        ; i32.const
000039a: 00                                        ; i32 literal
000039b: 6a                                        ; i32.add
000039c: 28                                        ; i32.load
000039d: 02                                        ; alignment
000039e: 00                                        ; load offset
000039f: 36                                        ; i32.store
00003a0: 02                                        ; alignment
00003a1: 00                                        ; store offset
00003a2: 20                                        ; local.get
00003a3: 05                                        ; local index
00003a4: 41                                        ; i32.const
00003a5: 04                                        ; i32 literal
00003a6: 6a                                        ; i32.add
00003a7: 20                                        ; local.get
00003a8: 06                                        ; local index
00003a9: 41                                        ; i32.const
00003aa: 04                                        ; i32 literal
00003ab: 6a                                        ; i32.add
00003ac: 28                                        ; i32.load
00003ad: 02                                        ; alignment
00003ae: 00                                        ; load offset
00003af: 36                                        ; i32.store
00003b0: 02                                        ; alignment
00003b1: 00                                        ; store offset
00003b2: 20                                        ; local.get
00003b3: 01                                        ; local index
00003b4: 41                                        ; i32.const
00003b5: 08                                        ; i32 literal
00003b6: 6a                                        ; i32.add
00003b7: 41                                        ; i32.const
00003b8: e400                                      ; i32 literal
00003ba: 36                                        ; i32.store
00003bb: 02                                        ; alignment
00003bc: 00                                        ; store offset
00003bd: 20                                        ; local.get
00003be: 01                                        ; local index
00003bf: 0f                                        ; return
00003c0: 0b                                        ; end
; move data: [313, 3c1) -> [314, 3c2)
0000312: ae01                                      ; FIXUP func body size
; function body 2
00003c2: 00                                        ; func body size (guess)
00003c3: 01                                        ; local decl count
00003c4: 01                                        ; local type count
00003c5: 7f                                        ; i32
00003c6: 41                                        ; i32.const
00003c7: 08                                        ; i32 literal
00003c8: 41                                        ; i32.const
00003c9: 8809                                      ; i32 literal
00003cb: 10                                        ; call
00003cc: 0c                                        ; function index
00003cd: 21                                        ; local.set
00003ce: 00                                        ; local index
00003cf: 20                                        ; local.get
00003d0: 00                                        ; local index
00003d1: 41                                        ; i32.const
00003d2: 04                                        ; i32 literal
00003d3: 6a                                        ; i32.add
00003d4: 41                                        ; i32.const
00003d5: b00b                                      ; i32 literal
00003d7: 36                                        ; i32.store
00003d8: 02                                        ; alignment
00003d9: 00                                        ; store offset
00003da: 20                                        ; local.get
00003db: 00                                        ; local index
00003dc: 41                                        ; i32.const
00003dd: 00                                        ; i32 literal
00003de: 6a                                        ; i32.add
00003df: 41                                        ; i32.const
00003e0: 87e4 06                                   ; i32 literal
00003e3: 36                                        ; i32.store
00003e4: 02                                        ; alignment
00003e5: 00                                        ; store offset
00003e6: 20                                        ; local.get
00003e7: 00                                        ; local index
00003e8: 0f                                        ; return
00003e9: 0b                                        ; end
00003c2: 27                                        ; FIXUP func body size
; function body 3
00003ea: 00                                        ; func body size (guess)
00003eb: 00                                        ; local decl count
00003ec: 23                                        ; global.get
00003ed: 0c                                        ; global index
00003ee: 0f                                        ; return
00003ef: 0b                                        ; end
00003ea: 05                                        ; FIXUP func body size
; function body 4
00003f0: 00                                        ; func body size (guess)
00003f1: 01                                        ; local decl count
00003f2: 03                                        ; local type count
00003f3: 7f                                        ; i32
00003f4: 41                                        ; i32.const
00003f5: 08                                        ; i32 literal
00003f6: 41                                        ; i32.const
00003f7: 0a                                        ; i32 literal
00003f8: 41                                        ; i32.const
00003f9: 04                                        ; i32 literal
00003fa: 6c                                        ; i32.mul
00003fb: 6a                                        ; i32.add
00003fc: 41                                        ; i32.const
00003fd: 07                                        ; i32 literal
00003fe: 10                                        ; call
00003ff: 0c                                        ; function index
0000400: 21                                        ; local.set
0000401: 01                                        ; local index
0000402: 20                                        ; local.get
0000403: 01                                        ; local index
0000404: 41                                        ; i32.const
0000405: 01                                        ; i32 literal
0000406: 36                                        ; i32.store
0000407: 02                                        ; alignment
0000408: 00                                        ; store offset
0000409: 20                                        ; local.get
000040a: 01                                        ; local index
000040b: 41                                        ; i32.const
000040c: 04                                        ; i32 literal
000040d: 6a                                        ; i32.add
000040e: 41                                        ; i32.const
000040f: 0a                                        ; i32 literal
0000410: 36                                        ; i32.store
0000411: 02                                        ; alignment
0000412: 00                                        ; store offset
0000413: 20                                        ; local.get
0000414: 01                                        ; local index
0000415: 41                                        ; i32.const
0000416: 08                                        ; i32 literal
0000417: 6a                                        ; i32.add
0000418: 21                                        ; local.set
0000419: 02                                        ; local index
000041a: 20                                        ; local.get
000041b: 02                                        ; local index
000041c: 41                                        ; i32.const
000041d: 00                                        ; i32 literal
000041e: 6a                                        ; i32.add
000041f: 41                                        ; i32.const
0000420: 01                                        ; i32 literal
0000421: 36                                        ; i32.store
0000422: 02                                        ; alignment
0000423: 00                                        ; store offset
0000424: 20                                        ; local.get
0000425: 02                                        ; local index
0000426: 41                                        ; i32.const
0000427: 04                                        ; i32 literal
0000428: 6a                                        ; i32.add
0000429: 41                                        ; i32.const
000042a: 02                                        ; i32 literal
000042b: 36                                        ; i32.store
000042c: 02                                        ; alignment
000042d: 00                                        ; store offset
000042e: 20                                        ; local.get
000042f: 02                                        ; local index
0000430: 41                                        ; i32.const
0000431: 08                                        ; i32 literal
0000432: 6a                                        ; i32.add
0000433: 41                                        ; i32.const
0000434: 03                                        ; i32 literal
0000435: 36                                        ; i32.store
0000436: 02                                        ; alignment
0000437: 00                                        ; store offset
0000438: 20                                        ; local.get
0000439: 02                                        ; local index
000043a: 41                                        ; i32.const
000043b: 0c                                        ; i32 literal
000043c: 6a                                        ; i32.add
000043d: 41                                        ; i32.const
000043e: 04                                        ; i32 literal
000043f: 36                                        ; i32.store
0000440: 02                                        ; alignment
0000441: 00                                        ; store offset
0000442: 20                                        ; local.get
0000443: 02                                        ; local index
0000444: 41                                        ; i32.const
0000445: 10                                        ; i32 literal
0000446: 6a                                        ; i32.add
0000447: 41                                        ; i32.const
0000448: 05                                        ; i32 literal
0000449: 36                                        ; i32.store
000044a: 02                                        ; alignment
000044b: 00                                        ; store offset
000044c: 20                                        ; local.get
000044d: 02                                        ; local index
000044e: 41                                        ; i32.const
000044f: 14                                        ; i32 literal
0000450: 6a                                        ; i32.add
0000451: 41                                        ; i32.const
0000452: 06                                        ; i32 literal
0000453: 36                                        ; i32.store
0000454: 02                                        ; alignment
0000455: 00                                        ; store offset
0000456: 20                                        ; local.get
0000457: 02                                        ; local index
0000458: 41                                        ; i32.const
0000459: 18                                        ; i32 literal
000045a: 6a                                        ; i32.add
000045b: 41                                        ; i32.const
000045c: 07                                        ; i32 literal
000045d: 36                                        ; i32.store
000045e: 02                                        ; alignment
000045f: 00                                        ; store offset
0000460: 20                                        ; local.get
0000461: 02                                        ; local index
0000462: 41                                        ; i32.const
0000463: 1c                                        ; i32 literal
0000464: 6a                                        ; i32.add
0000465: 41                                        ; i32.const
0000466: 08                                        ; i32 literal
0000467: 36                                        ; i32.store
0000468: 02                                        ; alignment
0000469: 00                                        ; store offset
000046a: 20                                        ; local.get
000046b: 02                                        ; local index
000046c: 41                                        ; i32.const
000046d: 20                                        ; i32 literal
000046e: 6a                                        ; i32.add
000046f: 41                                        ; i32.const
0000470: 09                                        ; i32 literal
0000471: 36                                        ; i32.store
0000472: 02                                        ; alignment
0000473: 00                                        ; store offset
0000474: 20                                        ; local.get
0000475: 02                                        ; local index
0000476: 41                                        ; i32.const
0000477: 24                                        ; i32 literal
0000478: 6a                                        ; i32.add
0000479: 41                                        ; i32.const
000047a: 00                                        ; i32 literal
000047b: 36                                        ; i32.store
000047c: 02                                        ; alignment
000047d: 00                                        ; store offset
000047e: 20                                        ; local.get
000047f: 01                                        ; local index
0000480: 0f                                        ; return
0000481: 0b                                        ; end
; move data: [3f1, 482) -> [3f2, 483)
00003f0: 9101                                      ; FIXUP func body size
; function body 5
0000483: 00                                        ; func body size (guess)
0000484: 00                                        ; local decl count
0000485: 41                                        ; i32.const
0000486: d80b                                      ; i32 literal
0000488: 0f                                        ; return
0000489: 0b                                        ; end
0000483: 06                                        ; FIXUP func body size
; function body 6
000048a: 00                                        ; func body size (guess)
000048b: 00                                        ; local decl count
000048c: 41                                        ; i32.const
000048d: e80b                                      ; i32 literal
000048f: 0f                                        ; return
0000490: 0b                                        ; end
000048a: 06                                        ; FIXUP func body size
; function body 7
0000491: 00                                        ; func body size (guess)
0000492: 00                                        ; local decl count
0000493: 41                                        ; i32.const
0000494: a00c                                      ; i32 literal
0000496: 0f                                        ; return
0000497: 0b                                        ; end
0000491: 06                                        ; FIXUP func body size
; function body 8
0000498: 00                                        ; func body size (guess)
0000499: 00                                        ; local decl count
000049a: 41                                        ; i32.const
000049b: b00c                                      ; i32 literal
000049d: 0f                                        ; return
000049e: 0b                                        ; end
0000498: 06                                        ; FIXUP func body size
; function body 9
000049f: 00                                        ; func body size (guess)
00004a0: 00                                        ; local decl count
00004a1: 41                                        ; i32.const
00004a2: c00c                                      ; i32 literal
00004a4: 0f                                        ; return
00004a5: 0b                                        ; end
000049f: 06                                        ; FIXUP func body size
; function body 10
00004a6: 00                                        ; func body size (guess)
00004a7: 00                                        ; local decl count
00004a8: 41                                        ; i32.const
00004a9: e80c                                      ; i32 literal
00004ab: 0f                                        ; return
00004ac: 0b                                        ; end
00004a6: 06                                        ; FIXUP func body size
; function body 11
00004ad: 00                                        ; func body size (guess)
00004ae: 00                                        ; local decl count
00004af: 41                                        ; i32.const
00004b0: f80c                                      ; i32 literal
00004b2: 0f                                        ; return
00004b3: 0b                                        ; end
00004ad: 06                                        ; FIXUP func body size
; function body 12
00004b4: 00                                        ; func body size (guess)
00004b5: 00                                        ; local decl count
00004b6: 41                                        ; i32.const
00004b7: a00d                                      ; i32 literal
00004b9: 0f                                        ; return
00004ba: 0b                                        ; end
00004b4: 06                                        ; FIXUP func body size
; function body 13
00004bb: 00                                        ; func body size (guess)
00004bc: 00                                        ; local decl count
00004bd: 41                                        ; i32.const
00004be: a80d                                      ; i32 literal
00004c0: 0f                                        ; return
00004c1: 0b                                        ; end
00004bb: 06                                        ; FIXUP func body size
; function body 14
00004c2: 00                                        ; func body size (guess)
00004c3: 00                                        ; local decl count
00004c4: 10                                        ; call
00004c5: 1b                                        ; function index
00004c6: 10                                        ; call
00004c7: 1c                                        ; function index
00004c8: 10                                        ; call
00004c9: 1d                                        ; function index
00004ca: 0b                                        ; end
00004c2: 08                                        ; FIXUP func body size
; function body 15
00004cb: 00                                        ; func body size (guess)
00004cc: 01                                        ; local decl count
00004cd: 01                                        ; local type count
00004ce: 7f                                        ; i32
00004cf: 41                                        ; i32.const
00004d0: 28                                        ; i32 literal
00004d1: 41                                        ; i32.const
00004d2: 8804                                      ; i32 literal
00004d4: 10                                        ; call
00004d5: 0c                                        ; function index
00004d6: 21                                        ; local.set
00004d7: 00                                        ; local index
00004d8: 20                                        ; local.get
00004d9: 00                                        ; local index
00004da: 41                                        ; i32.const
00004db: 18                                        ; i32 literal
00004dc: 6a                                        ; i32.add
00004dd: 41                                        ; i32.const
00004de: ffff ffff 07                              ; i32 literal
00004e3: b7                                        ; f64.convert_i32_s
00004e4: 39                                        ; f64.store
00004e5: 03                                        ; alignment
00004e6: 00                                        ; store offset
00004e7: 20                                        ; local.get
00004e8: 00                                        ; local index
00004e9: 41                                        ; i32.const
00004ea: 10                                        ; i32 literal
00004eb: 6a                                        ; i32.add
00004ec: 41                                        ; i32.const
00004ed: 0a                                        ; i32 literal
00004ee: b7                                        ; f64.convert_i32_s
00004ef: 39                                        ; f64.store
00004f0: 03                                        ; alignment
00004f1: 00                                        ; store offset
00004f2: 20                                        ; local.get
00004f3: 00                                        ; local index
00004f4: 41                                        ; i32.const
00004f5: 08                                        ; i32 literal
00004f6: 6a                                        ; i32.add
00004f7: 41                                        ; i32.const
00004f8: e807                                      ; i32 literal
00004fa: 36                                        ; i32.store
00004fb: 02                                        ; alignment
00004fc: 00                                        ; store offset
00004fd: 20                                        ; local.get
00004fe: 00                                        ; local index
00004ff: 41                                        ; i32.const
0000500: 0c                                        ; i32 literal
0000501: 6a                                        ; i32.add
0000502: 41                                        ; i32.const
0000503: e807                                      ; i32 literal
0000505: 36                                        ; i32.store
0000506: 02                                        ; alignment
0000507: 00                                        ; store offset
0000508: 20                                        ; local.get
0000509: 00                                        ; local index
000050a: 41                                        ; i32.const
000050b: 20                                        ; i32 literal
000050c: 6a                                        ; i32.add
000050d: 43                                        ; f32.const
000050e: 0000 c6c2                                 ; f32 literal
0000512: 38                                        ; f32.store
0000513: 02                                        ; alignment
0000514: 00                                        ; store offset
0000515: 20                                        ; local.get
0000516: 00                                        ; local index
0000517: 41                                        ; i32.const
0000518: 24                                        ; i32 literal
0000519: 6a                                        ; i32.add
000051a: 41                                        ; i32.const
000051b: 00                                        ; i32 literal
000051c: 36                                        ; i32.store
000051d: 02                                        ; alignment
000051e: 00                                        ; store offset
000051f: 20                                        ; local.get
0000520: 00                                        ; local index
0000521: 24                                        ; global.set
0000522: 0c                                        ; global index
0000523: 0b                                        ; end
00004cb: 58                                        ; FIXUP func body size
; function body 16
0000524: 00                                        ; func body size (guess)
0000525: 01                                        ; local decl count
0000526: 01                                        ; local type count
0000527: 7f                                        ; i32
0000528: 41                                        ; i32.const
0000529: 08                                        ; i32 literal
000052a: 41                                        ; i32.const
000052b: 8809                                      ; i32 literal
000052d: 10                                        ; call
000052e: 0c                                        ; function index
000052f: 21                                        ; local.set
0000530: 00                                        ; local index
0000531: 20                                        ; local.get
0000532: 00                                        ; local index
0000533: 41                                        ; i32.const
0000534: 04                                        ; i32 literal
0000535: 6a                                        ; i32.add
0000536: 41                                        ; i32.const
0000537: c80b                                      ; i32 literal
0000539: 36                                        ; i32.store
000053a: 02                                        ; alignment
000053b: 00                                        ; store offset
000053c: 20                                        ; local.get
000053d: 00                                        ; local index
000053e: 41                                        ; i32.const
000053f: 00                                        ; i32 literal
0000540: 6a                                        ; i32.add
0000541: 41                                        ; i32.const
0000542: b8bc eda7 03                              ; i32 literal
0000547: 36                                        ; i32.store
0000548: 02                                        ; alignment
0000549: 00                                        ; store offset
000054a: 23                                        ; global.get
000054b: 0c                                        ; global index
000054c: 41                                        ; i32.const
000054d: 00                                        ; i32 literal
000054e: 6a                                        ; i32.add
000054f: 20                                        ; local.get
0000550: 00                                        ; local index
0000551: 36                                        ; i32.store
0000552: 02                                        ; alignment
0000553: 00                                        ; store offset
0000554: 23                                        ; global.get
0000555: 0c                                        ; global index
0000556: 41                                        ; i32.const
0000557: 24                                        ; i32 literal
0000558: 6a                                        ; i32.add
0000559: 10                                        ; call
000055a: 0d                                        ; function index
000055b: 36                                        ; i32.store
000055c: 02                                        ; alignment
000055d: 00                                        ; store offset
000055e: 0b                                        ; end
0000524: 3a                                        ; FIXUP func body size
; function body 17
000055f: 00                                        ; func body size (guess)
0000560: 00                                        ; local decl count
0000561: 0b                                        ; end
000055f: 02                                        ; FIXUP func body size
; move data: [2f8, 562) -> [2f9, 563)
00002f7: ea04                                      ; FIXUP section size
; section "Data" (11)
0000563: 0b                                        ; section code
0000564: 00                                        ; section size (guess)
0000565: 10                                        ; num data segments
; data segment header 0
0000566: 00                                      
0000567: 41                                        ; i32.const
0000568: f808                                      ; i32 literal
000056a: 0b                                        ; end
000056b: 09                                        ; data segment size
; data segment data 0
000056c: 3939 3939 3939 3939 00                    ; data segment data
; data segment header 1
0000575: 00                                      
0000576: 41                                        ; i32.const
0000577: 900b                                      ; i32 literal
0000579: 0b                                        ; end
000057a: 1d                                        ; data segment size
; data segment data 1
000057b: 6469 7265 6374 6c79 2063 7265 6174 6520 
000058b: 6120 7374 7275 6374 7572 7465 00          ; data segment data
; data segment header 2
0000598: 00                                      
0000599: 41                                        ; i32.const
000059a: b00b                                      ; i32 literal
000059c: 0b                                        ; end
000059d: 15                                        ; data segment size
; data segment data 2
000059e: 7468 6973 2069 7320 6120 7374 7275 6374 
00005ae: 7572 6521 00                              ; data segment data
; data segment header 3
00005b3: 00                                      
00005b4: 41                                        ; i32.const
00005b5: c80b                                      ; i32 literal
00005b7: 0b                                        ; end
00005b8: 0c                                        ; data segment size
; data segment data 3
00005b9: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 4
00005c5: 00                                      
00005c6: 41                                        ; i32.const
00005c7: d80b                                      ; i32 literal
00005c9: 0b                                        ; end
00005ca: 0f                                        ; data segment size
; data segment data 4
00005cb: 6a73 5f6f 626a 6563 7420 6465 6d6f 00     ; data segment data
; data segment header 5
00005da: 00                                      
00005db: 41                                        ; i32.const
00005dc: e80b                                      ; i32 literal
00005de: 0b                                        ; end
00005df: 38                                        ; data segment size
; data segment data 5
00005e0: 4a61 7661 7363 7269 7074 206f 626a 6563 
00005f0: 7420 6765 6e65 7261 7465 2066 726f 6d20 
0000600: 5642 2e4e 4554 2057 6562 4173 7365 6d62 
0000610: 6c79 2064 656d 6f00                       ; data segment data
; data segment header 6
0000618: 00                                      
0000619: 41                                        ; i32.const
000061a: a00c                                      ; i32 literal
000061c: 0b                                        ; end
000061d: 0e                                        ; data segment size
; data segment data 6
000061e: 7661 6e69 6c6c 6176 622e 6170 7000        ; data segment data
; data segment header 7
000062c: 00                                      
000062d: 41                                        ; i32.const
000062e: b00c                                      ; i32 literal
0000630: 0b                                        ; end
0000631: 0a                                        ; data segment size
; data segment data 7
0000632: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 8
000063c: 00                                      
000063d: 41                                        ; i32.const
000063e: c00c                                      ; i32 literal
0000640: 0b                                        ; end
0000641: 21                                        ; data segment size
; data segment data 8
0000642: 436f 7079 7269 6768 7420 2863 2920 7661 
0000652: 6e69 6c6c 6176 622e 6170 7020 3230 3139 
0000662: 00                                        ; data segment data
; data segment header 9
0000663: 00                                      
0000664: 41                                        ; i32.const
0000665: e80c                                      ; i32 literal
0000667: 0b                                        ; end
0000668: 0b                                        ; data segment size
; data segment data 9
0000669: 646f 7476 616e 696c 6c61 00               ; data segment data
; data segment header 10
0000674: 00                                      
0000675: 41                                        ; i32.const
0000676: f80c                                      ; i32 literal
0000678: 0b                                        ; end
0000679: 25                                        ; data segment size
; data segment data 10
000067a: 3632 6233 3338 3964 2d35 3130 392d 3437 
000068a: 3430 2d39 6336 612d 3335 6262 3032 3233 
000069a: 3535 6239 00                              ; data segment data
; data segment header 11
000069f: 00                                      
00006a0: 41                                        ; i32.const
00006a1: a00d                                      ; i32 literal
00006a3: 0b                                        ; end
00006a4: 08                                        ; data segment size
; data segment data 11
00006a5: 312e 302e 302e 3000                       ; data segment data
; data segment header 12
00006ad: 00                                      
00006ae: 41                                        ; i32.const
00006af: a80d                                      ; i32 literal
00006b1: 0b                                        ; end
00006b2: 08                                        ; data segment size
; data segment data 12
00006b3: 312e 302e 302e 3000                       ; data segment data
; data segment header 13
00006bb: 00                                      
00006bc: 41                                        ; i32.const
00006bd: 0d                                        ; i32 literal
00006be: 0b                                        ; end
00006bf: bd03                                      ; data segment size
; data segment data 13
00006c1: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00006d1: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00006e1: 496d 4e70 636d 4e73 5a53 4973 496d 4e73 
00006f1: 5958 4e7a 5832 6c6b 496a 6f78 4d79 7769 
0000701: 5a6d 6c6c 6247 527a 496a 7037 496e 6769 
0000711: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000721: 5731 3073 496e 4a68 6479 4936 496d 597a 
0000731: 4d69 4973 496e 5235 6347 5569 4f6a 4e39 
0000741: 4c43 4a35 496a 7037 496d 646c 626d 5679 
0000751: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000761: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000771: 496a 6f7a 6653 7769 6369 4936 6579 4a6e 
0000781: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
0000791: 636d 4633 496a 6f69 6154 4d79 4969 7769 
00007a1: 6448 6c77 5a53 4936 4d58 3073 496d 3568 
00007b1: 6257 5650 5a6c 6769 4f6e 7369 5a32 5675 
00007c1: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
00007d1: 6479 4936 496c 7378 4d54 5977 5857 3568 
00007e1: 6257 5569 4c43 4a30 6558 426c 496a 6f78 
00007f1: 4d48 3073 496d 3568 6257 5650 5a6c 6b69 
0000801: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000811: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000821: 4d54 5977 5857 3568 6257 5569 4c43 4a30 
0000831: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000841: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000851: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000861: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000871: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 14
000087e: 00                                      
000087f: 41                                        ; i32.const
0000880: 8804                                      ; i32 literal
0000882: 0b                                        ; end
0000883: ad04                                      ; data segment size
; data segment data 14
0000885: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000895: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00008a5: 496e 4a6c 5933 5268 626d 6473 5a53 4973 
00008b5: 496d 4e73 5958 4e7a 5832 6c6b 496a 6f31 
00008c5: 4d6a 4173 496d 5a70 5a57 786b 6379 4936 
00008d5: 6579 4a75 5957 316c 496a 7037 496d 646c 
00008e5: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00008f5: 5958 6369 4f69 4a62 4d54 4532 4d46 3175 
0000905: 5957 316c 4969 7769 6448 6c77 5a53 4936 
0000915: 4d54 4239 4c43 4a6f 496a 7037 496d 646c 
0000925: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000935: 5958 6369 4f69 4a70 4d7a 4969 4c43 4a30 
0000945: 6558 426c 496a 6f78 6653 7769 6479 4936 
0000955: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
0000965: 5853 7769 636d 4633 496a 6f69 6154 4d79 
0000975: 4969 7769 6448 6c77 5a53 4936 4d58 3073 
0000985: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
0000995: 5979 4936 5731 3073 496e 4a68 6479 4936 
00009a5: 496d 5932 4e43 4973 496e 5235 6347 5569 
00009b5: 4f6a 5239 4c43 4a34 496a 7037 496d 646c 
00009c5: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
00009d5: 5958 6369 4f69 4a6d 4e6a 5169 4c43 4a30 
00009e5: 6558 426c 496a 6f30 6653 7769 636d 466b 
00009f5: 6158 567a 496a 7037 496d 646c 626d 5679 
0000a05: 6157 4d69 4f6c 7464 4c43 4a79 5958 6369 
0000a15: 4f69 4a6d 4d7a 4969 4c43 4a30 6558 426c 
0000a25: 496a 6f7a 6653 7769 6157 3575 5a58 4969 
0000a35: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000a45: 5731 3073 496e 4a68 6479 4936 496c 7378 
0000a55: 4d31 316a 6158 4a6a 6247 5569 4c43 4a30 
0000a65: 6558 426c 496a 6f78 4d48 3139 4c43 4a70 
0000a75: 6331 4e30 636e 566a 6443 4936 5a6d 4673 
0000a85: 6332 5573 496d 316c 6447 6876 5a48 4d69 
0000a95: 4f6e 7439 4c43 4a75 5957 316c 6333 4268 
0000aa5: 5932 5569 4f6d 3531 6247 7839 00          ; data segment data
; data segment header 15
0000ab2: 00                                      
0000ab3: 41                                        ; i32.const
0000ab4: 8809                                      ; i32 literal
0000ab6: 0b                                        ; end
0000ab7: 8502                                      ; data segment size
; data segment data 15
0000ab9: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000ac9: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000ad9: 496d 3568 6257 5569 4c43 4a6a 6247 467a 
0000ae9: 6331 3970 5a43 4936 4d54 4532 4d43 7769 
0000af9: 5a6d 6c6c 6247 527a 496a 7037 496e 4e76 
0000b09: 6458 4a6a 5a53 4936 6579 4a6e 5a57 356c 
0000b19: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000b29: 496a 6f69 6154 4d79 4969 7769 6448 6c77 
0000b39: 5a53 4936 4d58 3073 496d 3568 6257 5569 
0000b49: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000b59: 5731 3073 496e 4a68 6479 4936 496e 4e30 
0000b69: 636d 6c75 5a79 4973 496e 5235 6347 5569 
0000b79: 4f6a 5639 6653 7769 6158 4e54 6448 4a31 
0000b89: 5933 5169 4f6e 5279 6457 5573 496d 316c 
0000b99: 6447 6876 5a48 4d69 4f6e 7439 4c43 4a75 
0000ba9: 5957 316c 6333 4268 5932 5569 4f6d 3531 
0000bb9: 6247 7839 00                              ; data segment data
; move data: [565, bbe) -> [566, bbf)
0000564: d90c                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 0313 1205 0707 0707 0707 0707 0707 0707 
0000100: 0708 0808 0806 8c01 0e7f 0141 b00d 0b7c 
0000110: 0144 6957 148b 0abf 0540 0b7c 0144 182d 
0000120: 4454 fb21 0940 0b7f 0141 ffff ffff 070b 
0000130: 7e01 42ff ffff ffff ffff ffff 000b 7d01 
0000140: 43ff ff7f 7f0b 7c01 44ff ffff ffff ffef 
0000150: 7f0b 7f01 4180 8080 8078 0b7e 0142 8080 
0000160: 8080 8080 8080 807f 0b7d 0143 ffff 7fff 
0000170: 0b7c 0144 ffff ffff ffff efff 0b7c 0144 
0000180: 0000 0000 0040 8f40 0b7f 0141 000b 7f01 
0000190: 41f8 080b 07dc 020c 126f 626a 6563 7447 
00001a0: 432e 6e65 7743 6972 636c 6500 0d12 6f62 
00001b0: 6a65 6374 4743 2e67 6574 4f62 6a65 6374 
00001c0: 000f 186e 756d 6265 7241 7272 6179 2e63 
00001d0: 7265 6174 6556 6563 746f 7200 101a 4173 
00001e0: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
00001f0: 626c 7954 6974 6c65 0011 2041 7373 656d 
0000200: 626c 7949 6e66 6f2e 4173 7365 6d62 6c79 
0000210: 4465 7363 7269 7074 696f 6e00 121c 4173 
0000220: 7365 6d62 6c79 496e 666f 2e41 7373 656d 
0000230: 626c 7943 6f6d 7061 6e79 0013 1c41 7373 
0000240: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
0000250: 6c79 5072 6f64 7563 7400 141e 4173 7365 
0000260: 6d62 6c79 496e 666f 2e41 7373 656d 626c 
0000270: 7943 6f70 7972 6967 6874 0015 1e41 7373 
0000280: 656d 626c 7949 6e66 6f2e 4173 7365 6d62 
0000290: 6c79 5472 6164 656d 6172 6b00 1611 4173 
00002a0: 7365 6d62 6c79 496e 666f 2e47 7569 6400 
00002b0: 171c 4173 7365 6d62 6c79 496e 666f 2e41 
00002c0: 7373 656d 626c 7956 6572 7369 6f6e 0018 
00002d0: 2041 7373 656d 626c 7949 6e66 6f2e 4173 
00002e0: 7365 6d62 6c79 4669 6c65 5665 7273 696f 
00002f0: 6e00 1908 011a 0aea 0412 1801 017f 2300 
0000300: 2102 2002 2000 6a24 0020 0220 0110 0720 
0000310: 020f 0bae 0101 077f 230b 4102 b7a2 240b 
0000320: 411c 410d 100c 2101 2001 4100 6a23 0bb6 
0000330: 3802 0020 0141 046a 418f ce00 b238 0200 
0000340: 100e 2104 2001 410c 6a21 0320 0341 006a 
0000350: 2004 4100 6a28 0200 3602 0020 0341 046a 
0000360: 2004 4104 6a28 0200 3602 0041 0841 8809 
0000370: 100c 2102 2002 4104 6a41 900b 3602 0020 
0000380: 0241 006a 4100 3602 0020 0221 0620 0141 
0000390: 146a 2105 2005 4100 6a20 0641 006a 2802 
00003a0: 0036 0200 2005 4104 6a20 0641 046a 2802 
00003b0: 0036 0200 2001 4108 6a41 e400 3602 0020 
00003c0: 010f 0b27 0101 7f41 0841 8809 100c 2100 
00003d0: 2000 4104 6a41 b00b 3602 0020 0041 006a 
00003e0: 4187 e406 3602 0020 000f 0b05 0023 0c0f 
00003f0: 0b91 0101 037f 4108 410a 4104 6c6a 4107 
0000400: 100c 2101 2001 4101 3602 0020 0141 046a 
0000410: 410a 3602 0020 0141 086a 2102 2002 4100 
0000420: 6a41 0136 0200 2002 4104 6a41 0236 0200 
0000430: 2002 4108 6a41 0336 0200 2002 410c 6a41 
0000440: 0436 0200 2002 4110 6a41 0536 0200 2002 
0000450: 4114 6a41 0636 0200 2002 4118 6a41 0736 
0000460: 0200 2002 411c 6a41 0836 0200 2002 4120 
0000470: 6a41 0936 0200 2002 4124 6a41 0036 0200 
0000480: 2001 0f0b 0600 41d8 0b0f 0b06 0041 e80b 
0000490: 0f0b 0600 41a0 0c0f 0b06 0041 b00c 0f0b 
00004a0: 0600 41c0 0c0f 0b06 0041 e80c 0f0b 0600 
00004b0: 41f8 0c0f 0b06 0041 a00d 0f0b 0600 41a8 
00004c0: 0d0f 0b08 0010 1b10 1c10 1d0b 5801 017f 
00004d0: 4128 4188 0410 0c21 0020 0041 186a 41ff 
00004e0: ffff ff07 b739 0300 2000 4110 6a41 0ab7 
00004f0: 3903 0020 0041 086a 41e8 0736 0200 2000 
0000500: 410c 6a41 e807 3602 0020 0041 206a 4300 
0000510: 00c6 c238 0200 2000 4124 6a41 0036 0200 
0000520: 2000 240c 0b3a 0101 7f41 0841 8809 100c 
0000530: 2100 2000 4104 6a41 c80b 3602 0020 0041 
0000540: 006a 41b8 bced a703 3602 0023 0c41 006a 
0000550: 2000 3602 0023 0c41 246a 100d 3602 000b 
0000560: 0200 0b0b d90c 1000 41f8 080b 0939 3939 
0000570: 3939 3939 3900 0041 900b 0b1d 6469 7265 
0000580: 6374 6c79 2063 7265 6174 6520 6120 7374 
0000590: 7275 6374 7572 7465 0000 41b0 0b0b 1574 
00005a0: 6869 7320 6973 2061 2073 7472 7563 7475 
00005b0: 7265 2100 0041 c80b 0b0c 7465 7374 206f 
00005c0: 626a 6563 7400 0041 d80b 0b0f 6a73 5f6f 
00005d0: 626a 6563 7420 6465 6d6f 0000 41e8 0b0b 
00005e0: 384a 6176 6173 6372 6970 7420 6f62 6a65 
00005f0: 6374 2067 656e 6572 6174 6520 6672 6f6d 
0000600: 2056 422e 4e45 5420 5765 6241 7373 656d 
0000610: 626c 7920 6465 6d6f 0000 41a0 0c0b 0e76 
0000620: 616e 696c 6c61 7662 2e61 7070 0000 41b0 
0000630: 0c0b 0a6a 735f 6f62 6a65 6374 0000 41c0 
0000640: 0c0b 2143 6f70 7972 6967 6874 2028 6329 
0000650: 2076 616e 696c 6c61 7662 2e61 7070 2032 
0000660: 3031 3900 0041 e80c 0b0b 646f 7476 616e 
0000670: 696c 6c61 0000 41f8 0c0b 2536 3262 3333 
0000680: 3839 642d 3531 3039 2d34 3734 302d 3963 
0000690: 3661 2d33 3562 6230 3232 3335 3562 3900 
00006a0: 0041 a00d 0b08 312e 302e 302e 3000 0041 
00006b0: a80d 0b08 312e 302e 302e 3000 0041 0d0b 
00006c0: bd03 6579 4a6a 6232 3174 5a57 3530 496a 
00006d0: 7075 6457 7873 4c43 4a6a 6247 467a 6379 
00006e0: 4936 496d 4e70 636d 4e73 5a53 4973 496d 
00006f0: 4e73 5958 4e7a 5832 6c6b 496a 6f78 4d79 
0000700: 7769 5a6d 6c6c 6247 527a 496a 7037 496e 
0000710: 6769 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000720: 4936 5731 3073 496e 4a68 6479 4936 496d 
0000730: 597a 4d69 4973 496e 5235 6347 5569 4f6a 
0000740: 4e39 4c43 4a35 496a 7037 496d 646c 626d 
0000750: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000760: 6369 4f69 4a6d 4d7a 4969 4c43 4a30 6558 
0000770: 426c 496a 6f7a 6653 7769 6369 4936 6579 
0000780: 4a6e 5a57 356c 636d 6c6a 496a 7062 5853 
0000790: 7769 636d 4633 496a 6f69 6154 4d79 4969 
00007a0: 7769 6448 6c77 5a53 4936 4d58 3073 496d 
00007b0: 3568 6257 5650 5a6c 6769 4f6e 7369 5a32 
00007c0: 5675 5a58 4a70 5979 4936 5731 3073 496e 
00007d0: 4a68 6479 4936 496c 7378 4d54 5977 5857 
00007e0: 3568 6257 5569 4c43 4a30 6558 426c 496a 
00007f0: 6f78 4d48 3073 496d 3568 6257 5650 5a6c 
0000800: 6b69 4f6e 7369 5a32 5675 5a58 4a70 5979 
0000810: 4936 5731 3073 496e 4a68 6479 4936 496c 
0000820: 7378 4d54 5977 5857 3568 6257 5569 4c43 
0000830: 4a30 6558 426c 496a 6f78 4d48 3139 4c43 
0000840: 4a70 6331 4e30 636e 566a 6443 4936 5a6d 
0000850: 4673 6332 5573 496d 316c 6447 6876 5a48 
0000860: 4d69 4f6e 7439 4c43 4a75 5957 316c 6333 
0000870: 4268 5932 5569 4f6d 3531 6247 7839 0000 
0000880: 4188 040b ad04 6579 4a6a 6232 3174 5a57 
0000890: 3530 496a 7075 6457 7873 4c43 4a6a 6247 
00008a0: 467a 6379 4936 496e 4a6c 5933 5268 626d 
00008b0: 6473 5a53 4973 496d 4e73 5958 4e7a 5832 
00008c0: 6c6b 496a 6f31 4d6a 4173 496d 5a70 5a57 
00008d0: 786b 6379 4936 6579 4a75 5957 316c 496a 
00008e0: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
00008f0: 7464 4c43 4a79 5958 6369 4f69 4a62 4d54 
0000900: 4532 4d46 3175 5957 316c 4969 7769 6448 
0000910: 6c77 5a53 4936 4d54 4239 4c43 4a6f 496a 
0000920: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
0000930: 7464 4c43 4a79 5958 6369 4f69 4a70 4d7a 
0000940: 4969 4c43 4a30 6558 426c 496a 6f78 6653 
0000950: 7769 6479 4936 6579 4a6e 5a57 356c 636d 
0000960: 6c6a 496a 7062 5853 7769 636d 4633 496a 
0000970: 6f69 6154 4d79 4969 7769 6448 6c77 5a53 
0000980: 4936 4d58 3073 496e 6b69 4f6e 7369 5a32 
0000990: 5675 5a58 4a70 5979 4936 5731 3073 496e 
00009a0: 4a68 6479 4936 496d 5932 4e43 4973 496e 
00009b0: 5235 6347 5569 4f6a 5239 4c43 4a34 496a 
00009c0: 7037 496d 646c 626d 5679 6157 4d69 4f6c 
00009d0: 7464 4c43 4a79 5958 6369 4f69 4a6d 4e6a 
00009e0: 5169 4c43 4a30 6558 426c 496a 6f30 6653 
00009f0: 7769 636d 466b 6158 567a 496a 7037 496d 
0000a00: 646c 626d 5679 6157 4d69 4f6c 7464 4c43 
0000a10: 4a79 5958 6369 4f69 4a6d 4d7a 4969 4c43 
0000a20: 4a30 6558 426c 496a 6f7a 6653 7769 6157 
0000a30: 3575 5a58 4969 4f6e 7369 5a32 5675 5a58 
0000a40: 4a70 5979 4936 5731 3073 496e 4a68 6479 
0000a50: 4936 496c 7378 4d31 316a 6158 4a6a 6247 
0000a60: 5569 4c43 4a30 6558 426c 496a 6f78 4d48 
0000a70: 3139 4c43 4a70 6331 4e30 636e 566a 6443 
0000a80: 4936 5a6d 4673 6332 5573 496d 316c 6447 
0000a90: 6876 5a48 4d69 4f6e 7439 4c43 4a75 5957 
0000aa0: 316c 6333 4268 5932 5569 4f6d 3531 6247 
0000ab0: 7839 0000 4188 090b 8502 6579 4a6a 6232 
0000ac0: 3174 5a57 3530 496a 7075 6457 7873 4c43 
0000ad0: 4a6a 6247 467a 6379 4936 496d 3568 6257 
0000ae0: 5569 4c43 4a6a 6247 467a 6331 3970 5a43 
0000af0: 4936 4d54 4532 4d43 7769 5a6d 6c6c 6247 
0000b00: 527a 496a 7037 496e 4e76 6458 4a6a 5a53 
0000b10: 4936 6579 4a6e 5a57 356c 636d 6c6a 496a 
0000b20: 7062 5853 7769 636d 4633 496a 6f69 6154 
0000b30: 4d79 4969 7769 6448 6c77 5a53 4936 4d58 
0000b40: 3073 496d 3568 6257 5569 4f6e 7369 5a32 
0000b50: 5675 5a58 4a70 5979 4936 5731 3073 496e 
0000b60: 4a68 6479 4936 496e 4e30 636d 6c75 5a79 
0000b70: 4973 496e 5235 6347 5569 4f6a 5639 6653 
0000b80: 7769 6158 4e54 6448 4a31 5933 5169 4f6e 
0000b90: 5279 6457 5573 496d 316c 6447 6876 5a48 
0000ba0: 4d69 4f6e 7439 4c43 4a75 5957 316c 6333 
0000bb0: 4268 5932 5569 4f6d 3531 6247 7839 00   
