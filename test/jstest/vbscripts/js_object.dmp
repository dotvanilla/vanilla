0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 00                                        ; num params
0000033: 01                                        ; num results
0000034: 7f                                        ; i32
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 00                                        ; num results
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0d                                        ; num imports
; import header 0
000003b: 04                                        ; string length
000003c: 4d61 7468                                Math  ; import module name
0000040: 03                                        ; string length
0000041: 706f 77                                  pow  ; import field name
0000044: 00                                        ; import kind
0000045: 00                                        ; import signature index
; import header 1
0000046: 04                                        ; string length
0000047: 4d61 7468                                Math  ; import module name
000004b: 04                                        ; string length
000004c: 7371 7274                                sqrt  ; import field name
0000050: 00                                        ; import kind
0000051: 01                                        ; import signature index
; import header 2
0000052: 04                                        ; string length
0000053: 4d61 7468                                Math  ; import module name
0000057: 03                                        ; string length
0000058: 6578 70                                  exp  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 3
000005d: 04                                        ; string length
000005e: 4d61 7468                                Math  ; import module name
0000062: 03                                        ; string length
0000063: 636f 73                                  cos  ; import field name
0000066: 00                                        ; import kind
0000067: 01                                        ; import signature index
; import header 4
0000068: 04                                        ; string length
0000069: 4d61 7468                                Math  ; import module name
000006d: 06                                        ; string length
000006e: 7261 6e64 6f6d                           random  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 04                                        ; string length
0000077: 4d61 7468                                Math  ; import module name
000007b: 04                                        ; string length
000007c: 6365 696c                                ceil  ; import field name
0000080: 00                                        ; import kind
0000081: 01                                        ; import signature index
; import header 6
0000082: 04                                        ; string length
0000083: 4d61 7468                                Math  ; import module name
0000087: 05                                        ; string length
0000088: 666c 6f6f 72                             floor  ; import field name
000008d: 00                                        ; import kind
000008e: 01                                        ; import signature index
; import header 7
000008f: 02                                        ; string length
0000090: 4743                                     GC  ; import module name
0000092: 09                                        ; string length
0000093: 6164 644f 626a 6563 74                   addObject  ; import field name
000009c: 00                                        ; import kind
000009d: 03                                        ; import signature index
; import header 8
000009e: 06                                        ; string length
000009f: 7374 7269 6e67                           string  ; import module name
00000a5: 07                                        ; string length
00000a6: 7265 706c 6163 65                        replace  ; import field name
00000ad: 00                                        ; import kind
00000ae: 04                                        ; import signature index
; import header 9
00000af: 06                                        ; string length
00000b0: 7374 7269 6e67                           string  ; import module name
00000b6: 03                                        ; string length
00000b7: 6164 64                                  add  ; import field name
00000ba: 00                                        ; import kind
00000bb: 05                                        ; import signature index
; import header 10
00000bc: 06                                        ; string length
00000bd: 7374 7269 6e67                           string  ; import module name
00000c3: 06                                        ; string length
00000c4: 6c65 6e67 7468                           length  ; import field name
00000ca: 00                                        ; import kind
00000cb: 06                                        ; import signature index
; import header 11
00000cc: 06                                        ; string length
00000cd: 7374 7269 6e67                           string  ; import module name
00000d3: 07                                        ; string length
00000d4: 696e 6465 784f 66                        indexOf  ; import field name
00000db: 00                                        ; import kind
00000dc: 05                                        ; import signature index
; import header 12
00000dd: 03                                        ; string length
00000de: 656e 76                                  env  ; import module name
00000e1: 0a                                        ; string length
00000e2: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ec: 02                                        ; import kind
00000ed: 00                                        ; limits: flags
00000ee: 01                                        ; limits: initial
; move data: [3a, ef) -> [3b, f0)
0000039: b501                                      ; FIXUP section size
; section "Function" (3)
00000f0: 03                                        ; section code
00000f1: 00                                        ; section size (guess)
00000f2: 0e                                        ; num functions
00000f3: 05                                        ; function 0 signature index
00000f4: 07                                        ; function 1 signature index
00000f5: 07                                        ; function 2 signature index
00000f6: 07                                        ; function 3 signature index
00000f7: 07                                        ; function 4 signature index
00000f8: 07                                        ; function 5 signature index
00000f9: 07                                        ; function 6 signature index
00000fa: 07                                        ; function 7 signature index
00000fb: 07                                        ; function 8 signature index
00000fc: 07                                        ; function 9 signature index
00000fd: 07                                        ; function 10 signature index
00000fe: 08                                        ; function 11 signature index
00000ff: 08                                        ; function 12 signature index
0000100: 08                                        ; function 13 signature index
00000f1: 0f                                        ; FIXUP section size
; section "Global" (6)
0000101: 06                                        ; section code
0000102: 00                                        ; section size (guess)
0000103: 0c                                        ; num globals
0000104: 7f                                        ; i32
0000105: 01                                        ; global mutability
0000106: 41                                        ; i32.const
0000107: 9108                                      ; i32 literal
0000109: 0b                                        ; end
000010a: 7c                                        ; f64
000010b: 01                                        ; global mutability
000010c: 44                                        ; f64.const
000010d: 6957 148b 0abf 0540                       ; f64 literal
0000115: 0b                                        ; end
0000116: 7c                                        ; f64
0000117: 01                                        ; global mutability
0000118: 44                                        ; f64.const
0000119: 182d 4454 fb21 0940                       ; f64 literal
0000121: 0b                                        ; end
0000122: 7f                                        ; i32
0000123: 01                                        ; global mutability
0000124: 41                                        ; i32.const
0000125: ffff ffff 07                              ; i32 literal
000012a: 0b                                        ; end
000012b: 7e                                        ; i64
000012c: 01                                        ; global mutability
000012d: 42                                        ; i64.const
000012e: ffff ffff ffff ffff ff00                  ; i64 literal
0000138: 0b                                        ; end
0000139: 7d                                        ; f32
000013a: 01                                        ; global mutability
000013b: 43                                        ; f32.const
000013c: ffff 7f7f                                 ; f32 literal
0000140: 0b                                        ; end
0000141: 7c                                        ; f64
0000142: 01                                        ; global mutability
0000143: 44                                        ; f64.const
0000144: ffff ffff ffff ef7f                       ; f64 literal
000014c: 0b                                        ; end
000014d: 7f                                        ; i32
000014e: 01                                        ; global mutability
000014f: 41                                        ; i32.const
0000150: 8080 8080 78                              ; i32 literal
0000155: 0b                                        ; end
0000156: 7e                                        ; i64
0000157: 01                                        ; global mutability
0000158: 42                                        ; i64.const
0000159: 8080 8080 8080 8080 807f                  ; i64 literal
0000163: 0b                                        ; end
0000164: 7d                                        ; f32
0000165: 01                                        ; global mutability
0000166: 43                                        ; f32.const
0000167: ffff 7fff                                 ; f32 literal
000016b: 0b                                        ; end
000016c: 7c                                        ; f64
000016d: 01                                        ; global mutability
000016e: 44                                        ; f64.const
000016f: ffff ffff ffff efff                       ; f64 literal
0000177: 0b                                        ; end
0000178: 7f                                        ; i32
0000179: 01                                        ; global mutability
000017a: 41                                        ; i32.const
000017b: 00                                        ; i32 literal
000017c: 0b                                        ; end
0000102: 7a                                        ; FIXUP section size
; section "Export" (7)
000017d: 07                                        ; section code
000017e: 00                                        ; section size (guess)
000017f: 0a                                        ; num exports
0000180: 11                                        ; string length
0000181: 4d6f 6475 6c65 312e 6765 744f 626a 6563  Module1.getObjec
0000191: 74                                       t  ; export name
0000192: 00                                        ; export kind
0000193: 0d                                        ; export func index
0000194: 1a                                        ; string length
0000195: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001a5: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001af: 00                                        ; export kind
00001b0: 0e                                        ; export func index
00001b1: 20                                        ; string length
00001b2: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001c2: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
00001d2: 00                                        ; export kind
00001d3: 0f                                        ; export func index
00001d4: 1c                                        ; string length
00001d5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e5: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
00001f1: 00                                        ; export kind
00001f2: 10                                        ; export func index
00001f3: 1c                                        ; string length
00001f4: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000204: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000210: 00                                        ; export kind
0000211: 11                                        ; export func index
0000212: 1e                                        ; string length
0000213: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000223: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000231: 00                                        ; export kind
0000232: 12                                        ; export func index
0000233: 1e                                        ; string length
0000234: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000244: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000252: 00                                        ; export kind
0000253: 13                                        ; export func index
0000254: 11                                        ; string length
0000255: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
0000265: 64                                       d  ; export name
0000266: 00                                        ; export kind
0000267: 14                                        ; export func index
0000268: 1c                                        ; string length
0000269: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000279: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
0000285: 00                                        ; export kind
0000286: 15                                        ; export func index
0000287: 20                                        ; string length
0000288: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000298: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002a8: 00                                        ; export kind
00002a9: 16                                        ; export func index
; move data: [17f, 2aa) -> [180, 2ab)
000017e: ab02                                      ; FIXUP section size
; section "Start" (8)
00002ab: 08                                        ; section code
00002ac: 00                                        ; section size (guess)
00002ad: 17                                        ; start func index
00002ac: 01                                        ; FIXUP section size
; section "Code" (10)
00002ae: 0a                                        ; section code
00002af: 00                                        ; section size (guess)
00002b0: 0e                                        ; num functions
; function body 0
00002b1: 00                                        ; func body size (guess)
00002b2: 01                                        ; local decl count
00002b3: 01                                        ; local type count
00002b4: 7f                                        ; i32
00002b5: 23                                        ; global.get
00002b6: 00                                        ; global index
00002b7: 21                                        ; local.set
00002b8: 02                                        ; local index
00002b9: 20                                        ; local.get
00002ba: 02                                        ; local index
00002bb: 20                                        ; local.get
00002bc: 00                                        ; local index
00002bd: 6a                                        ; i32.add
00002be: 24                                        ; global.set
00002bf: 00                                        ; global index
00002c0: 20                                        ; local.get
00002c1: 02                                        ; local index
00002c2: 20                                        ; local.get
00002c3: 01                                        ; local index
00002c4: 10                                        ; call
00002c5: 07                                        ; function index
00002c6: 20                                        ; local.get
00002c7: 02                                        ; local index
00002c8: 0f                                        ; return
00002c9: 0b                                        ; end
00002b1: 18                                        ; FIXUP func body size
; function body 1
00002ca: 00                                        ; func body size (guess)
00002cb: 01                                        ; local decl count
00002cc: 01                                        ; local type count
00002cd: 7f                                        ; i32
00002ce: 23                                        ; global.get
00002cf: 0b                                        ; global index
00002d0: 0f                                        ; return
00002d1: 0b                                        ; end
00002ca: 07                                        ; FIXUP func body size
; function body 2
00002d2: 00                                        ; func body size (guess)
00002d3: 00                                        ; local decl count
00002d4: 41                                        ; i32.const
00002d5: b307                                      ; i32 literal
00002d7: 0f                                        ; return
00002d8: 0b                                        ; end
00002d2: 06                                        ; FIXUP func body size
; function body 3
00002d9: 00                                        ; func body size (guess)
00002da: 00                                        ; local decl count
00002db: 41                                        ; i32.const
00002dc: bd07                                      ; i32 literal
00002de: 0f                                        ; return
00002df: 0b                                        ; end
00002d9: 06                                        ; FIXUP func body size
; function body 4
00002e0: 00                                        ; func body size (guess)
00002e1: 00                                        ; local decl count
00002e2: 41                                        ; i32.const
00002e3: be07                                      ; i32 literal
00002e5: 0f                                        ; return
00002e6: 0b                                        ; end
00002e0: 06                                        ; FIXUP func body size
; function body 5
00002e7: 00                                        ; func body size (guess)
00002e8: 00                                        ; local decl count
00002e9: 41                                        ; i32.const
00002ea: bf07                                      ; i32 literal
00002ec: 0f                                        ; return
00002ed: 0b                                        ; end
00002e7: 06                                        ; FIXUP func body size
; function body 6
00002ee: 00                                        ; func body size (guess)
00002ef: 00                                        ; local decl count
00002f0: 41                                        ; i32.const
00002f1: c907                                      ; i32 literal
00002f3: 0f                                        ; return
00002f4: 0b                                        ; end
00002ee: 06                                        ; FIXUP func body size
; function body 7
00002f5: 00                                        ; func body size (guess)
00002f6: 00                                        ; local decl count
00002f7: 41                                        ; i32.const
00002f8: db07                                      ; i32 literal
00002fa: 0f                                        ; return
00002fb: 0b                                        ; end
00002f5: 06                                        ; FIXUP func body size
; function body 8
00002fc: 00                                        ; func body size (guess)
00002fd: 00                                        ; local decl count
00002fe: 41                                        ; i32.const
00002ff: dc07                                      ; i32 literal
0000301: 0f                                        ; return
0000302: 0b                                        ; end
00002fc: 06                                        ; FIXUP func body size
; function body 9
0000303: 00                                        ; func body size (guess)
0000304: 00                                        ; local decl count
0000305: 41                                        ; i32.const
0000306: 8108                                      ; i32 literal
0000308: 0f                                        ; return
0000309: 0b                                        ; end
0000303: 06                                        ; FIXUP func body size
; function body 10
000030a: 00                                        ; func body size (guess)
000030b: 00                                        ; local decl count
000030c: 41                                        ; i32.const
000030d: 8908                                      ; i32 literal
000030f: 0f                                        ; return
0000310: 0b                                        ; end
000030a: 06                                        ; FIXUP func body size
; function body 11
0000311: 00                                        ; func body size (guess)
0000312: 00                                        ; local decl count
0000313: 10                                        ; call
0000314: 18                                        ; function index
0000315: 10                                        ; call
0000316: 19                                        ; function index
0000317: 0b                                        ; end
0000311: 06                                        ; FIXUP func body size
; function body 12
0000318: 00                                        ; func body size (guess)
0000319: 01                                        ; local decl count
000031a: 01                                        ; local type count
000031b: 7f                                        ; i32
000031c: 23                                        ; global.get
000031d: 00                                        ; global index
000031e: 21                                        ; local.set
000031f: 00                                        ; local index
0000320: 20                                        ; local.get
0000321: 00                                        ; local index
0000322: 41                                        ; i32.const
0000323: 24                                        ; i32 literal
0000324: 6a                                        ; i32.add
0000325: 24                                        ; global.set
0000326: 00                                        ; global index
0000327: 20                                        ; local.get
0000328: 00                                        ; local index
0000329: 41                                        ; i32.const
000032a: 0c                                        ; i32 literal
000032b: 6a                                        ; i32.add
000032c: 41                                        ; i32.const
000032d: ffff ffff 07                              ; i32 literal
0000332: b7                                        ; f64.convert_i32_s
0000333: 39                                        ; f64.store
0000334: 03                                        ; alignment
0000335: 00                                        ; store offset
0000336: 20                                        ; local.get
0000337: 00                                        ; local index
0000338: 41                                        ; i32.const
0000339: 04                                        ; i32 literal
000033a: 6a                                        ; i32.add
000033b: 41                                        ; i32.const
000033c: 0a                                        ; i32 literal
000033d: b7                                        ; f64.convert_i32_s
000033e: 39                                        ; f64.store
000033f: 03                                        ; alignment
0000340: 00                                        ; store offset
0000341: 20                                        ; local.get
0000342: 00                                        ; local index
0000343: 41                                        ; i32.const
0000344: 00                                        ; i32 literal
0000345: 6a                                        ; i32.add
0000346: 41                                        ; i32.const
0000347: e807                                      ; i32 literal
0000349: 36                                        ; i32.store
000034a: 02                                        ; alignment
000034b: 00                                        ; store offset
000034c: 20                                        ; local.get
000034d: 00                                        ; local index
000034e: 41                                        ; i32.const
000034f: 14                                        ; i32 literal
0000350: 6a                                        ; i32.add
0000351: 41                                        ; i32.const
0000352: e807                                      ; i32 literal
0000354: 36                                        ; i32.store
0000355: 02                                        ; alignment
0000356: 00                                        ; store offset
0000357: 20                                        ; local.get
0000358: 00                                        ; local index
0000359: 41                                        ; i32.const
000035a: 18                                        ; i32 literal
000035b: 6a                                        ; i32.add
000035c: 41                                        ; i32.const
000035d: 00                                        ; i32 literal
000035e: 36                                        ; i32.store
000035f: 02                                        ; alignment
0000360: 00                                        ; store offset
0000361: 20                                        ; local.get
0000362: 00                                        ; local index
0000363: 41                                        ; i32.const
0000364: 1c                                        ; i32 literal
0000365: 6a                                        ; i32.add
0000366: 43                                        ; f32.const
0000367: 0000 c6c2                                 ; f32 literal
000036b: 38                                        ; f32.store
000036c: 02                                        ; alignment
000036d: 00                                        ; store offset
000036e: 20                                        ; local.get
000036f: 00                                        ; local index
0000370: 41                                        ; i32.const
0000371: 20                                        ; i32 literal
0000372: 6a                                        ; i32.add
0000373: 41                                        ; i32.const
0000374: 00                                        ; i32 literal
0000375: 36                                        ; i32.store
0000376: 02                                        ; alignment
0000377: 00                                        ; store offset
0000378: 20                                        ; local.get
0000379: 00                                        ; local index
000037a: 24                                        ; global.set
000037b: 0b                                        ; global index
000037c: 0b                                        ; end
0000318: 64                                        ; FIXUP func body size
; function body 13
000037d: 00                                        ; func body size (guess)
000037e: 01                                        ; local decl count
000037f: 01                                        ; local type count
0000380: 7f                                        ; i32
0000381: 23                                        ; global.get
0000382: 0b                                        ; global index
0000383: 41                                        ; i32.const
0000384: 18                                        ; i32 literal
0000385: 6a                                        ; i32.add
0000386: 41                                        ; i32.const
0000387: a707                                      ; i32 literal
0000389: 36                                        ; i32.store
000038a: 02                                        ; alignment
000038b: 00                                        ; store offset
000038c: 23                                        ; global.get
000038d: 0b                                        ; global index
000038e: 41                                        ; i32.const
000038f: 20                                        ; i32 literal
0000390: 6a                                        ; i32.add
0000391: 20                                        ; local.get
0000392: 00                                        ; local index
0000393: 36                                        ; i32.store
0000394: 02                                        ; alignment
0000395: 00                                        ; store offset
0000396: 0b                                        ; end
000037d: 19                                        ; FIXUP func body size
; move data: [2b0, 397) -> [2b1, 398)
00002af: e701                                      ; FIXUP section size
; section "Data" (11)
0000398: 0b                                        ; section code
0000399: 00                                        ; section size (guess)
000039a: 0c                                        ; num data segments
; data segment header 0
000039b: 00                                      
000039c: 41                                        ; i32.const
000039d: a707                                      ; i32 literal
000039f: 0b                                        ; end
00003a0: 0c                                        ; data segment size
; data segment data 0
00003a1: 7465 7374 206f 626a 6563 7400             ; data segment data
; data segment header 1
00003ad: 00                                      
00003ae: 41                                        ; i32.const
00003af: b307                                      ; i32 literal
00003b1: 0b                                        ; end
00003b2: 0a                                        ; data segment size
; data segment data 1
00003b3: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 2
00003bd: 00                                      
00003be: 41                                        ; i32.const
00003bf: bd07                                      ; i32 literal
00003c1: 0b                                        ; end
00003c2: 01                                        ; data segment size
; data segment data 2
00003c3: 00                                        ; data segment data
; data segment header 3
00003c4: 00                                      
00003c5: 41                                        ; i32.const
00003c6: be07                                      ; i32 literal
00003c8: 0b                                        ; end
00003c9: 01                                        ; data segment size
; data segment data 3
00003ca: 00                                        ; data segment data
; data segment header 4
00003cb: 00                                      
00003cc: 41                                        ; i32.const
00003cd: bf07                                      ; i32 literal
00003cf: 0b                                        ; end
00003d0: 0a                                        ; data segment size
; data segment data 4
00003d1: 6a73 5f6f 626a 6563 7400                  ; data segment data
; data segment header 5
00003db: 00                                      
00003dc: 41                                        ; i32.const
00003dd: c907                                      ; i32 literal
00003df: 0b                                        ; end
00003e0: 13                                        ; data segment size
; data segment data 5
00003e1: 436f 7079 7269 6768 7420 c2a9 2020 3230 
00003f1: 3139 00                                   ; data segment data
; data segment header 6
00003f4: 00                                      
00003f5: 41                                        ; i32.const
00003f6: db07                                      ; i32 literal
00003f8: 0b                                        ; end
00003f9: 01                                        ; data segment size
; data segment data 6
00003fa: 00                                        ; data segment data
; data segment header 7
00003fb: 00                                      
00003fc: 41                                        ; i32.const
00003fd: dc07                                      ; i32 literal
00003ff: 0b                                        ; end
0000400: 25                                        ; data segment size
; data segment data 7
0000401: 3632 6233 3338 3964 2d35 3130 392d 3437 
0000411: 3430 2d39 6336 612d 3335 6262 3032 3233 
0000421: 3535 6239 00                              ; data segment data
; data segment header 8
0000426: 00                                      
0000427: 41                                        ; i32.const
0000428: 8108                                      ; i32 literal
000042a: 0b                                        ; end
000042b: 08                                        ; data segment size
; data segment data 8
000042c: 312e 302e 302e 3000                       ; data segment data
; data segment header 9
0000434: 00                                      
0000435: 41                                        ; i32.const
0000436: 8908                                      ; i32 literal
0000438: 0b                                        ; end
0000439: 08                                        ; data segment size
; data segment data 9
000043a: 312e 302e 302e 3000                       ; data segment data
; data segment header 10
0000442: 00                                      
0000443: 41                                        ; i32.const
0000444: 0d                                        ; i32 literal
0000445: 0b                                        ; end
0000446: d102                                      ; data segment size
; data segment data 10
0000448: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000458: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
0000468: 6448 4969 4f6e 7369 566d 4673 6457 5569 
0000478: 4f6a 457a 6653 7769 5932 7868 6333 4d69 
0000488: 4f69 4a6a 6158 4a6a 6247 5569 4c43 4a6a 
0000498: 6247 467a 6331 3970 5a43 4936 4d54 4d73 
00004a8: 496d 5a70 5a57 786b 6379 4936 6579 4a34 
00004b8: 496a 7037 496d 646c 626d 5679 6157 4d69 
00004c8: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
00004d8: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
00004e8: 6653 7769 6553 4936 6579 4a6e 5a57 356c 
00004f8: 636d 6c6a 496a 7062 5853 7769 636d 4633 
0000508: 496a 6f69 5a6a 4d79 4969 7769 6448 6c77 
0000518: 5a53 4936 4d33 3073 496e 4969 4f6e 7369 
0000528: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000538: 496e 4a68 6479 4936 496d 6b7a 4d69 4973 
0000548: 496e 5235 6347 5569 4f6a 4639 6653 7769 
0000558: 6158 4e54 6448 4a31 5933 5169 4f6d 5a68 
0000568: 6248 4e6c 4c43 4a74 5a58 526f 6232 527a 
0000578: 496a 7037 6653 7769 626d 4674 5a58 4e77 
0000588: 5957 4e6c 496a 7075 6457 7873 6651 3d3d 
0000598: 00                                        ; data segment data
; data segment header 11
0000599: 00                                      
000059a: 41                                        ; i32.const
000059b: de02                                      ; i32 literal
000059d: 0b                                        ; end
000059e: c904                                      ; data segment size
; data segment data 11
00005a0: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
00005b0: 6457 7873 4c43 4a74 5a57 3176 636e 6c51 
00005c0: 6448 4969 4f6e 7369 566d 4673 6457 5569 
00005d0: 4f6a 4d31 4d48 3073 496d 4e73 5958 4e7a 
00005e0: 496a 6f69 636d 566a 6447 4675 5a32 786c 
00005f0: 4969 7769 5932 7868 6333 4e66 6157 5169 
0000600: 4f6a 4d31 4d43 7769 5a6d 6c6c 6247 527a 
0000610: 496a 7037 496e 6369 4f6e 7369 5a32 5675 
0000620: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
0000630: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
0000640: 6347 5569 4f6a 4639 4c43 4a35 496a 7037 
0000650: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000660: 4c43 4a79 5958 6369 4f69 4a6d 4e6a 5169 
0000670: 4c43 4a30 6558 426c 496a 6f30 6653 7769 
0000680: 6543 4936 6579 4a6e 5a57 356c 636d 6c6a 
0000690: 496a 7062 5853 7769 636d 4633 496a 6f69 
00006a0: 5a6a 5930 4969 7769 6448 6c77 5a53 4936 
00006b0: 4e48 3073 496d 6769 4f6e 7369 5a32 5675 
00006c0: 5a58 4a70 5979 4936 5731 3073 496e 4a68 
00006d0: 6479 4936 496d 6b7a 4d69 4973 496e 5235 
00006e0: 6347 5569 4f6a 4639 4c43 4a75 5957 316c 
00006f0: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000700: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a7a 
0000710: 6448 4a70 626d 6369 4c43 4a30 6558 426c 
0000720: 496a 6f31 6653 7769 636d 466b 6158 567a 
0000730: 496a 7037 496d 646c 626d 5679 6157 4d69 
0000740: 4f6c 7464 4c43 4a79 5958 6369 4f69 4a6d 
0000750: 4d7a 4969 4c43 4a30 6558 426c 496a 6f7a 
0000760: 6653 7769 6157 3575 5a58 4969 4f6e 7369 
0000770: 5a32 5675 5a58 4a70 5979 4936 5731 3073 
0000780: 496e 4a68 6479 4936 496c 7378 4d31 316a 
0000790: 6158 4a6a 6247 5569 4c43 4a30 6558 426c 
00007a0: 496a 6f78 4d48 3139 4c43 4a70 6331 4e30 
00007b0: 636e 566a 6443 4936 5a6d 4673 6332 5573 
00007c0: 496d 316c 6447 6876 5a48 4d69 4f6e 7439 
00007d0: 4c43 4a75 5957 316c 6333 4268 5932 5569 
00007e0: 4f6d 3531 6247 7839 00                    ; data segment data
; move data: [39a, 7e9) -> [39b, 7ea)
0000399: cf08                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0960 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 0001 7f60 0000 02b5 010d 044d 6174 
0000040: 6803 706f 7700 0004 4d61 7468 0473 7172 
0000050: 7400 0104 4d61 7468 0365 7870 0001 044d 
0000060: 6174 6803 636f 7300 0104 4d61 7468 0672 
0000070: 616e 646f 6d00 0204 4d61 7468 0463 6569 
0000080: 6c00 0104 4d61 7468 0566 6c6f 6f72 0001 
0000090: 0247 4309 6164 644f 626a 6563 7400 0306 
00000a0: 7374 7269 6e67 0772 6570 6c61 6365 0004 
00000b0: 0673 7472 696e 6703 6164 6400 0506 7374 
00000c0: 7269 6e67 066c 656e 6774 6800 0606 7374 
00000d0: 7269 6e67 0769 6e64 6578 4f66 0005 0365 
00000e0: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
00000f0: 030f 0e05 0707 0707 0707 0707 0707 0808 
0000100: 0806 7a0c 7f01 4191 080b 7c01 4469 5714 
0000110: 8b0a bf05 400b 7c01 4418 2d44 54fb 2109 
0000120: 400b 7f01 41ff ffff ff07 0b7e 0142 ffff 
0000130: ffff ffff ffff ff00 0b7d 0143 ffff 7f7f 
0000140: 0b7c 0144 ffff ffff ffff ef7f 0b7f 0141 
0000150: 8080 8080 780b 7e01 4280 8080 8080 8080 
0000160: 8080 7f0b 7d01 43ff ff7f ff0b 7c01 44ff 
0000170: ffff ffff ffef ff0b 7f01 4100 0b07 ab02 
0000180: 0a11 4d6f 6475 6c65 312e 6765 744f 626a 
0000190: 6563 7400 0d1a 4173 7365 6d62 6c79 496e 
00001a0: 666f 2e41 7373 656d 626c 7954 6974 6c65 
00001b0: 000e 2041 7373 656d 626c 7949 6e66 6f2e 
00001c0: 4173 7365 6d62 6c79 4465 7363 7269 7074 
00001d0: 696f 6e00 0f1c 4173 7365 6d62 6c79 496e 
00001e0: 666f 2e41 7373 656d 626c 7943 6f6d 7061 
00001f0: 6e79 0010 1c41 7373 656d 626c 7949 6e66 
0000200: 6f2e 4173 7365 6d62 6c79 5072 6f64 7563 
0000210: 7400 111e 4173 7365 6d62 6c79 496e 666f 
0000220: 2e41 7373 656d 626c 7943 6f70 7972 6967 
0000230: 6874 0012 1e41 7373 656d 626c 7949 6e66 
0000240: 6f2e 4173 7365 6d62 6c79 5472 6164 656d 
0000250: 6172 6b00 1311 4173 7365 6d62 6c79 496e 
0000260: 666f 2e47 7569 6400 141c 4173 7365 6d62 
0000270: 6c79 496e 666f 2e41 7373 656d 626c 7956 
0000280: 6572 7369 6f6e 0015 2041 7373 656d 626c 
0000290: 7949 6e66 6f2e 4173 7365 6d62 6c79 4669 
00002a0: 6c65 5665 7273 696f 6e00 1608 0117 0ae7 
00002b0: 010e 1801 017f 2300 2102 2002 2000 6a24 
00002c0: 0020 0220 0110 0720 020f 0b07 0101 7f23 
00002d0: 0b0f 0b06 0041 b307 0f0b 0600 41bd 070f 
00002e0: 0b06 0041 be07 0f0b 0600 41bf 070f 0b06 
00002f0: 0041 c907 0f0b 0600 41db 070f 0b06 0041 
0000300: dc07 0f0b 0600 4181 080f 0b06 0041 8908 
0000310: 0f0b 0600 1018 1019 0b64 0101 7f23 0021 
0000320: 0020 0041 246a 2400 2000 410c 6a41 ffff 
0000330: ffff 07b7 3903 0020 0041 046a 410a b739 
0000340: 0300 2000 4100 6a41 e807 3602 0020 0041 
0000350: 146a 41e8 0736 0200 2000 4118 6a41 0036 
0000360: 0200 2000 411c 6a43 0000 c6c2 3802 0020 
0000370: 0041 206a 4100 3602 0020 0024 0b0b 1901 
0000380: 017f 230b 4118 6a41 a707 3602 0023 0b41 
0000390: 206a 2000 3602 000b 0bcf 080c 0041 a707 
00003a0: 0b0c 7465 7374 206f 626a 6563 7400 0041 
00003b0: b307 0b0a 6a73 5f6f 626a 6563 7400 0041 
00003c0: bd07 0b01 0000 41be 070b 0100 0041 bf07 
00003d0: 0b0a 6a73 5f6f 626a 6563 7400 0041 c907 
00003e0: 0b13 436f 7079 7269 6768 7420 c2a9 2020 
00003f0: 3230 3139 0000 41db 070b 0100 0041 dc07 
0000400: 0b25 3632 6233 3338 3964 2d35 3130 392d 
0000410: 3437 3430 2d39 6336 612d 3335 6262 3032 
0000420: 3233 3535 6239 0000 4181 080b 0831 2e30 
0000430: 2e30 2e30 0000 4189 080b 0831 2e30 2e30 
0000440: 2e30 0000 410d 0bd1 0265 794a 6a62 3231 
0000450: 745a 5735 3049 6a70 7564 5778 734c 434a 
0000460: 745a 5731 7663 6e6c 5164 4849 694f 6e73 
0000470: 6956 6d46 7364 5755 694f 6a45 7a66 5377 
0000480: 6959 3278 6863 334d 694f 694a 6a61 584a 
0000490: 6a62 4755 694c 434a 6a62 4746 7a63 3139 
00004a0: 705a 4349 364d 544d 7349 6d5a 705a 5778 
00004b0: 6b63 7949 3665 794a 3449 6a70 3749 6d64 
00004c0: 6c62 6d56 7961 574d 694f 6c74 644c 434a 
00004d0: 7959 5863 694f 694a 6d4d 7a49 694c 434a 
00004e0: 3065 5842 6c49 6a6f 7a66 5377 6965 5349 
00004f0: 3665 794a 6e5a 5735 6c63 6d6c 6a49 6a70 
0000500: 6258 5377 6963 6d46 3349 6a6f 695a 6a4d 
0000510: 7949 6977 6964 486c 775a 5349 364d 3330 
0000520: 7349 6e49 694f 6e73 695a 3256 755a 584a 
0000530: 7059 7949 3657 3130 7349 6e4a 6864 7949 
0000540: 3649 6d6b 7a4d 6949 7349 6e52 3563 4755 
0000550: 694f 6a46 3966 5377 6961 584e 5464 484a 
0000560: 3159 3351 694f 6d5a 6862 484e 6c4c 434a 
0000570: 745a 5852 6f62 3252 7a49 6a70 3766 5377 
0000580: 6962 6d46 745a 584e 7759 574e 6c49 6a70 
0000590: 7564 5778 7366 513d 3d00 0041 de02 0bc9 
00005a0: 0465 794a 6a62 3231 745a 5735 3049 6a70 
00005b0: 7564 5778 734c 434a 745a 5731 7663 6e6c 
00005c0: 5164 4849 694f 6e73 6956 6d46 7364 5755 
00005d0: 694f 6a4d 314d 4830 7349 6d4e 7359 584e 
00005e0: 7a49 6a6f 6963 6d56 6a64 4746 755a 3278 
00005f0: 6c49 6977 6959 3278 6863 334e 6661 5751 
0000600: 694f 6a4d 314d 4377 695a 6d6c 6c62 4752 
0000610: 7a49 6a70 3749 6e63 694f 6e73 695a 3256 
0000620: 755a 584a 7059 7949 3657 3130 7349 6e4a 
0000630: 6864 7949 3649 6d6b 7a4d 6949 7349 6e52 
0000640: 3563 4755 694f 6a46 394c 434a 3549 6a70 
0000650: 3749 6d64 6c62 6d56 7961 574d 694f 6c74 
0000660: 644c 434a 7959 5863 694f 694a 6d4e 6a51 
0000670: 694c 434a 3065 5842 6c49 6a6f 3066 5377 
0000680: 6965 4349 3665 794a 6e5a 5735 6c63 6d6c 
0000690: 6a49 6a70 6258 5377 6963 6d46 3349 6a6f 
00006a0: 695a 6a59 3049 6977 6964 486c 775a 5349 
00006b0: 364e 4830 7349 6d67 694f 6e73 695a 3256 
00006c0: 755a 584a 7059 7949 3657 3130 7349 6e4a 
00006d0: 6864 7949 3649 6d6b 7a4d 6949 7349 6e52 
00006e0: 3563 4755 694f 6a46 394c 434a 7559 5731 
00006f0: 6c49 6a70 3749 6d64 6c62 6d56 7961 574d 
0000700: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000710: 7a64 484a 7062 6d63 694c 434a 3065 5842 
0000720: 6c49 6a6f 3166 5377 6963 6d46 6b61 5856 
0000730: 7a49 6a70 3749 6d64 6c62 6d56 7961 574d 
0000740: 694f 6c74 644c 434a 7959 5863 694f 694a 
0000750: 6d4d 7a49 694c 434a 3065 5842 6c49 6a6f 
0000760: 7a66 5377 6961 5735 755a 5849 694f 6e73 
0000770: 695a 3256 755a 584a 7059 7949 3657 3130 
0000780: 7349 6e4a 6864 7949 3649 6c73 784d 3131 
0000790: 6a61 584a 6a62 4755 694c 434a 3065 5842 
00007a0: 6c49 6a6f 784d 4831 394c 434a 7063 314e 
00007b0: 3063 6e56 6a64 4349 365a 6d46 7363 3255 
00007c0: 7349 6d31 6c64 4768 765a 484d 694f 6e74 
00007d0: 394c 434a 7559 5731 6c63 3342 6859 3255 
00007e0: 694f 6d35 3162 4778 3900                
