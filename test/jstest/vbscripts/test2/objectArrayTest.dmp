0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0a                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 01                                        ; num params
0000033: 7f                                        ; i32
0000034: 00                                        ; num results
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 00                                        ; num params
000003b: 00                                        ; num results
0000009: 32                                        ; FIXUP section size
; section "Import" (2)
000003c: 02                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 10                                        ; num imports
; import header 0
000003f: 04                                        ; string length
0000040: 4d61 7468                                Math  ; import module name
0000044: 03                                        ; string length
0000045: 706f 77                                  pow  ; import field name
0000048: 00                                        ; import kind
0000049: 00                                        ; import signature index
; import header 1
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 04                                        ; string length
0000050: 7371 7274                                sqrt  ; import field name
0000054: 00                                        ; import kind
0000055: 01                                        ; import signature index
; import header 2
0000056: 04                                        ; string length
0000057: 4d61 7468                                Math  ; import module name
000005b: 03                                        ; string length
000005c: 6578 70                                  exp  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 3
0000061: 04                                        ; string length
0000062: 4d61 7468                                Math  ; import module name
0000066: 03                                        ; string length
0000067: 636f 73                                  cos  ; import field name
000006a: 00                                        ; import kind
000006b: 01                                        ; import signature index
; import header 4
000006c: 04                                        ; string length
000006d: 4d61 7468                                Math  ; import module name
0000071: 06                                        ; string length
0000072: 7261 6e64 6f6d                           random  ; import field name
0000078: 00                                        ; import kind
0000079: 02                                        ; import signature index
; import header 5
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 04                                        ; string length
0000080: 6365 696c                                ceil  ; import field name
0000084: 00                                        ; import kind
0000085: 01                                        ; import signature index
; import header 6
0000086: 04                                        ; string length
0000087: 4d61 7468                                Math  ; import module name
000008b: 05                                        ; string length
000008c: 666c 6f6f 72                             floor  ; import field name
0000091: 00                                        ; import kind
0000092: 01                                        ; import signature index
; import header 7
0000093: 02                                        ; string length
0000094: 4743                                     GC  ; import module name
0000096: 09                                        ; string length
0000097: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a0: 00                                        ; import kind
00000a1: 03                                        ; import signature index
; import header 8
00000a2: 06                                        ; string length
00000a3: 7374 7269 6e67                           string  ; import module name
00000a9: 07                                        ; string length
00000aa: 7265 706c 6163 65                        replace  ; import field name
00000b1: 00                                        ; import kind
00000b2: 04                                        ; import signature index
; import header 9
00000b3: 06                                        ; string length
00000b4: 7374 7269 6e67                           string  ; import module name
00000ba: 03                                        ; string length
00000bb: 6164 64                                  add  ; import field name
00000be: 00                                        ; import kind
00000bf: 05                                        ; import signature index
; import header 10
00000c0: 06                                        ; string length
00000c1: 7374 7269 6e67                           string  ; import module name
00000c7: 06                                        ; string length
00000c8: 6c65 6e67 7468                           length  ; import field name
00000ce: 00                                        ; import kind
00000cf: 06                                        ; import signature index
; import header 11
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 07                                        ; string length
00000d8: 696e 6465 784f 66                        indexOf  ; import field name
00000df: 00                                        ; import kind
00000e0: 05                                        ; import signature index
; import header 12
00000e1: 07                                        ; string length
00000e2: 636f 6e73 6f6c 65                        console  ; import module name
00000e9: 03                                        ; string length
00000ea: 6c6f 67                                  log  ; import field name
00000ed: 00                                        ; import kind
00000ee: 07                                        ; import signature index
; import header 13
00000ef: 07                                        ; string length
00000f0: 636f 6e73 6f6c 65                        console  ; import module name
00000f7: 03                                        ; string length
00000f8: 6c6f 67                                  log  ; import field name
00000fb: 00                                        ; import kind
00000fc: 07                                        ; import signature index
; import header 14
00000fd: 06                                        ; string length
00000fe: 7374 7269 6e67                           string  ; import module name
0000104: 08                                        ; string length
0000105: 746f 5374 7269 6e67                      toString  ; import field name
000010d: 00                                        ; import kind
000010e: 06                                        ; import signature index
; import header 15
000010f: 03                                        ; string length
0000110: 656e 76                                  env  ; import module name
0000113: 0a                                        ; string length
0000114: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011e: 02                                        ; import kind
000011f: 00                                        ; limits: flags
0000120: 01                                        ; limits: initial
; move data: [3e, 121) -> [3f, 122)
000003d: e301                                      ; FIXUP section size
; section "Function" (3)
0000122: 03                                        ; section code
0000123: 00                                        ; section size (guess)
0000124: 07                                        ; num functions
0000125: 05                                        ; function 0 signature index
0000126: 08                                        ; function 1 signature index
0000127: 09                                        ; function 2 signature index
0000128: 08                                        ; function 3 signature index
0000129: 09                                        ; function 4 signature index
000012a: 09                                        ; function 5 signature index
000012b: 09                                        ; function 6 signature index
0000123: 08                                        ; FIXUP section size
; section "Global" (6)
000012c: 06                                        ; section code
000012d: 00                                        ; section size (guess)
000012e: 0c                                        ; num globals
000012f: 7f                                        ; i32
0000130: 01                                        ; global mutability
0000131: 41                                        ; i32.const
0000132: c003                                      ; i32 literal
0000134: 0b                                        ; end
0000135: 7c                                        ; f64
0000136: 01                                        ; global mutability
0000137: 44                                        ; f64.const
0000138: 6957 148b 0abf 0540                       ; f64 literal
0000140: 0b                                        ; end
0000141: 7c                                        ; f64
0000142: 01                                        ; global mutability
0000143: 44                                        ; f64.const
0000144: 182d 4454 fb21 0940                       ; f64 literal
000014c: 0b                                        ; end
000014d: 7f                                        ; i32
000014e: 01                                        ; global mutability
000014f: 41                                        ; i32.const
0000150: ffff ffff 07                              ; i32 literal
0000155: 0b                                        ; end
0000156: 7e                                        ; i64
0000157: 01                                        ; global mutability
0000158: 42                                        ; i64.const
0000159: ffff ffff ffff ffff ff00                  ; i64 literal
0000163: 0b                                        ; end
0000164: 7d                                        ; f32
0000165: 01                                        ; global mutability
0000166: 43                                        ; f32.const
0000167: ffff 7f7f                                 ; f32 literal
000016b: 0b                                        ; end
000016c: 7c                                        ; f64
000016d: 01                                        ; global mutability
000016e: 44                                        ; f64.const
000016f: ffff ffff ffff ef7f                       ; f64 literal
0000177: 0b                                        ; end
0000178: 7f                                        ; i32
0000179: 01                                        ; global mutability
000017a: 41                                        ; i32.const
000017b: 8080 8080 78                              ; i32 literal
0000180: 0b                                        ; end
0000181: 7e                                        ; i64
0000182: 01                                        ; global mutability
0000183: 42                                        ; i64.const
0000184: 8080 8080 8080 8080 807f                  ; i64 literal
000018e: 0b                                        ; end
000018f: 7d                                        ; f32
0000190: 01                                        ; global mutability
0000191: 43                                        ; f32.const
0000192: ffff 7fff                                 ; f32 literal
0000196: 0b                                        ; end
0000197: 7c                                        ; f64
0000198: 01                                        ; global mutability
0000199: 44                                        ; f64.const
000019a: ffff ffff ffff efff                       ; f64 literal
00001a2: 0b                                        ; end
00001a3: 7f                                        ; i32
00001a4: 01                                        ; global mutability
00001a5: 41                                        ; i32.const
00001a6: 00                                        ; i32 literal
00001a7: 0b                                        ; end
000012d: 7a                                        ; FIXUP section size
; section "Export" (7)
00001a8: 07                                        ; section code
00001a9: 00                                        ; section size (guess)
00001aa: 03                                        ; num exports
00001ab: 14                                        ; string length
00001ac: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001bc: 5369 7a65                                Size  ; export name
00001c0: 00                                        ; export kind
00001c1: 10                                        ; export func index
00001c2: 1a                                        ; string length
00001c3: 6f62 6a65 6374 4172 7261 7954 6573 742e  objectArrayTest.
00001d3: 7072 696e 7441 7272 6179                 printArray  ; export name
00001dd: 00                                        ; export kind
00001de: 11                                        ; export func index
00001df: 19                                        ; string length
00001e0: 6f62 6a65 6374 4172 7261 7954 6573 742e  objectArrayTest.
00001f0: 4765 7450 6f69 6e74 73                   GetPoints  ; export name
00001f9: 00                                        ; export kind
00001fa: 12                                        ; export func index
00001a9: 51                                        ; FIXUP section size
; section "Start" (8)
00001fb: 08                                        ; section code
00001fc: 00                                        ; section size (guess)
00001fd: 13                                        ; start func index
00001fc: 01                                        ; FIXUP section size
; section "Code" (10)
00001fe: 0a                                        ; section code
00001ff: 00                                        ; section size (guess)
0000200: 07                                        ; num functions
; function body 0
0000201: 00                                        ; func body size (guess)
0000202: 01                                        ; local decl count
0000203: 02                                        ; local type count
0000204: 7f                                        ; i32
0000205: 23                                        ; global.get
0000206: 00                                        ; global index
0000207: 21                                        ; local.set
0000208: 02                                        ; local index
0000209: 20                                        ; local.get
000020a: 02                                        ; local index
000020b: 20                                        ; local.get
000020c: 00                                        ; local index
000020d: 6a                                        ; i32.add
000020e: 24                                        ; global.set
000020f: 00                                        ; global index
0000210: 23                                        ; global.get
0000211: 00                                        ; global index
0000212: 41                                        ; i32.const
0000213: 08                                        ; i32 literal
0000214: 6f                                        ; i32.rem_s
0000215: 21                                        ; local.set
0000216: 03                                        ; local index
0000217: 20                                        ; local.get
0000218: 03                                        ; local index
0000219: 04                                        ; if
000021a: 40                                        ; void
000021b: 41                                        ; i32.const
000021c: 08                                        ; i32 literal
000021d: 20                                        ; local.get
000021e: 03                                        ; local index
000021f: 6b                                        ; i32.sub
0000220: 21                                        ; local.set
0000221: 03                                        ; local index
0000222: 23                                        ; global.get
0000223: 00                                        ; global index
0000224: 20                                        ; local.get
0000225: 03                                        ; local index
0000226: 6a                                        ; i32.add
0000227: 24                                        ; global.set
0000228: 00                                        ; global index
0000229: 05                                        ; else
000022a: 23                                        ; global.get
000022b: 00                                        ; global index
000022c: 41                                        ; i32.const
000022d: 08                                        ; i32 literal
000022e: 6a                                        ; i32.add
000022f: 24                                        ; global.set
0000230: 00                                        ; global index
0000231: 0b                                        ; end
0000232: 20                                        ; local.get
0000233: 02                                        ; local index
0000234: 20                                        ; local.get
0000235: 01                                        ; local index
0000236: 10                                        ; call
0000237: 07                                        ; function index
0000238: 20                                        ; local.get
0000239: 02                                        ; local index
000023a: 0f                                        ; return
000023b: 0b                                        ; end
0000201: 3a                                        ; FIXUP func body size
; function body 1
000023c: 00                                        ; func body size (guess)
000023d: 00                                        ; local decl count
000023e: 23                                        ; global.get
000023f: 00                                        ; global index
0000240: 0f                                        ; return
0000241: 0b                                        ; end
000023c: 05                                        ; FIXUP func body size
; function body 2
0000242: 00                                        ; func body size (guess)
0000243: 01                                        ; local decl count
0000244: 05                                        ; local type count
0000245: 7f                                        ; i32
0000246: 41                                        ; i32.const
0000247: 00                                        ; i32 literal
0000248: 21                                        ; local.set
0000249: 04                                        ; local index
000024a: 02                                        ; block
000024b: 40                                        ; void
000024c: 03                                        ; loop
000024d: 40                                        ; void
000024e: 20                                        ; local.get
000024f: 04                                        ; local index
0000250: 23                                        ; global.get
0000251: 0b                                        ; global index
0000252: 41                                        ; i32.const
0000253: 04                                        ; i32 literal
0000254: 6a                                        ; i32.add
0000255: 28                                        ; i32.load
0000256: 02                                        ; alignment
0000257: 00                                        ; load offset
0000258: 41                                        ; i32.const
0000259: 01                                        ; i32 literal
000025a: 6b                                        ; i32.sub
000025b: 4a                                        ; i32.gt_s
000025c: 0d                                        ; br_if
000025d: 01                                        ; break depth
000025e: 41                                        ; i32.const
000025f: f002                                      ; i32 literal
0000261: 20                                        ; local.get
0000262: 04                                        ; local index
0000263: 10                                        ; call
0000264: 0e                                        ; function index
0000265: 10                                        ; call
0000266: 09                                        ; function index
0000267: 41                                        ; i32.const
0000268: f802                                      ; i32 literal
000026a: 10                                        ; call
000026b: 09                                        ; function index
000026c: 23                                        ; global.get
000026d: 0b                                        ; global index
000026e: 41                                        ; i32.const
000026f: 08                                        ; i32 literal
0000270: 6a                                        ; i32.add
0000271: 20                                        ; local.get
0000272: 04                                        ; local index
0000273: 41                                        ; i32.const
0000274: 04                                        ; i32 literal
0000275: 6c                                        ; i32.mul
0000276: 6a                                        ; i32.add
0000277: 28                                        ; i32.load
0000278: 02                                        ; alignment
0000279: 00                                        ; load offset
000027a: 10                                        ; call
000027b: 0e                                        ; function index
000027c: 10                                        ; call
000027d: 09                                        ; function index
000027e: 41                                        ; i32.const
000027f: 8803                                      ; i32 literal
0000281: 10                                        ; call
0000282: 09                                        ; function index
0000283: 23                                        ; global.get
0000284: 0b                                        ; global index
0000285: 41                                        ; i32.const
0000286: 08                                        ; i32 literal
0000287: 6a                                        ; i32.add
0000288: 20                                        ; local.get
0000289: 04                                        ; local index
000028a: 41                                        ; i32.const
000028b: 04                                        ; i32 literal
000028c: 6c                                        ; i32.mul
000028d: 6a                                        ; i32.add
000028e: 28                                        ; i32.load
000028f: 02                                        ; alignment
0000290: 00                                        ; load offset
0000291: 41                                        ; i32.const
0000292: 10                                        ; i32 literal
0000293: 6a                                        ; i32.add
0000294: 28                                        ; i32.load
0000295: 02                                        ; alignment
0000296: 00                                        ; load offset
0000297: 10                                        ; call
0000298: 0e                                        ; function index
0000299: 10                                        ; call
000029a: 09                                        ; function index
000029b: 10                                        ; call
000029c: 0d                                        ; function index
000029d: 23                                        ; global.get
000029e: 0b                                        ; global index
000029f: 41                                        ; i32.const
00002a0: 08                                        ; i32 literal
00002a1: 6a                                        ; i32.add
00002a2: 20                                        ; local.get
00002a3: 04                                        ; local index
00002a4: 41                                        ; i32.const
00002a5: 04                                        ; i32 literal
00002a6: 6c                                        ; i32.mul
00002a7: 6a                                        ; i32.add
00002a8: 28                                        ; i32.load
00002a9: 02                                        ; alignment
00002aa: 00                                        ; load offset
00002ab: 10                                        ; call
00002ac: 0c                                        ; function index
00002ad: 20                                        ; local.get
00002ae: 04                                        ; local index
00002af: 41                                        ; i32.const
00002b0: 01                                        ; i32 literal
00002b1: 6a                                        ; i32.add
00002b2: 21                                        ; local.set
00002b3: 04                                        ; local index
00002b4: 0c                                        ; br
00002b5: 00                                        ; break depth
00002b6: 0b                                        ; end
00002b7: 0b                                        ; end
00002b8: 0b                                        ; end
0000242: 76                                        ; FIXUP func body size
; function body 3
00002b9: 00                                        ; func body size (guess)
00002ba: 00                                        ; local decl count
00002bb: 23                                        ; global.get
00002bc: 0b                                        ; global index
00002bd: 0f                                        ; return
00002be: 0b                                        ; end
00002b9: 05                                        ; FIXUP func body size
; function body 4
00002bf: 00                                        ; func body size (guess)
00002c0: 00                                        ; local decl count
00002c1: 10                                        ; call
00002c2: 14                                        ; function index
00002c3: 10                                        ; call
00002c4: 15                                        ; function index
00002c5: 0b                                        ; end
00002bf: 06                                        ; FIXUP func body size
; function body 5
00002c6: 00                                        ; func body size (guess)
00002c7: 01                                        ; local decl count
00002c8: 04                                        ; local type count
00002c9: 7f                                        ; i32
00002ca: 41                                        ; i32.const
00002cb: 08                                        ; i32 literal
00002cc: 41                                        ; i32.const
00002cd: 02                                        ; i32 literal
00002ce: 41                                        ; i32.const
00002cf: 04                                        ; i32 literal
00002d0: 6c                                        ; i32.mul
00002d1: 6a                                        ; i32.add
00002d2: 41                                        ; i32.const
00002d3: 07                                        ; i32 literal
00002d4: 10                                        ; call
00002d5: 0f                                        ; function index
00002d6: 21                                        ; local.set
00002d7: 00                                        ; local index
00002d8: 20                                        ; local.get
00002d9: 00                                        ; local index
00002da: 41                                        ; i32.const
00002db: 18                                        ; i32 literal
00002dc: 36                                        ; i32.store
00002dd: 02                                        ; alignment
00002de: 00                                        ; store offset
00002df: 20                                        ; local.get
00002e0: 00                                        ; local index
00002e1: 41                                        ; i32.const
00002e2: 04                                        ; i32 literal
00002e3: 6a                                        ; i32.add
00002e4: 41                                        ; i32.const
00002e5: 02                                        ; i32 literal
00002e6: 36                                        ; i32.store
00002e7: 02                                        ; alignment
00002e8: 00                                        ; store offset
00002e9: 20                                        ; local.get
00002ea: 00                                        ; local index
00002eb: 41                                        ; i32.const
00002ec: 08                                        ; i32 literal
00002ed: 6a                                        ; i32.add
00002ee: 21                                        ; local.set
00002ef: 01                                        ; local index
00002f0: 41                                        ; i32.const
00002f1: 14                                        ; i32 literal
00002f2: 41                                        ; i32.const
00002f3: 18                                        ; i32 literal
00002f4: 10                                        ; call
00002f5: 0f                                        ; function index
00002f6: 21                                        ; local.set
00002f7: 02                                        ; local index
00002f8: 20                                        ; local.get
00002f9: 02                                        ; local index
00002fa: 41                                        ; i32.const
00002fb: 00                                        ; i32 literal
00002fc: 6a                                        ; i32.add
00002fd: 41                                        ; i32.const
00002fe: e400                                      ; i32 literal
0000300: b7                                        ; f64.convert_i32_s
0000301: 39                                        ; f64.store
0000302: 03                                        ; alignment
0000303: 00                                        ; store offset
0000304: 20                                        ; local.get
0000305: 02                                        ; local index
0000306: 41                                        ; i32.const
0000307: 08                                        ; i32 literal
0000308: 6a                                        ; i32.add
0000309: 41                                        ; i32.const
000030a: f403                                      ; i32 literal
000030c: b7                                        ; f64.convert_i32_s
000030d: 39                                        ; f64.store
000030e: 03                                        ; alignment
000030f: 00                                        ; store offset
0000310: 20                                        ; local.get
0000311: 02                                        ; local index
0000312: 41                                        ; i32.const
0000313: 10                                        ; i32 literal
0000314: 6a                                        ; i32.add
0000315: 41                                        ; i32.const
0000316: 0d                                        ; i32 literal
0000317: 36                                        ; i32.store
0000318: 02                                        ; alignment
0000319: 00                                        ; store offset
000031a: 20                                        ; local.get
000031b: 01                                        ; local index
000031c: 41                                        ; i32.const
000031d: 00                                        ; i32 literal
000031e: 6a                                        ; i32.add
000031f: 20                                        ; local.get
0000320: 02                                        ; local index
0000321: 36                                        ; i32.store
0000322: 02                                        ; alignment
0000323: 00                                        ; store offset
0000324: 41                                        ; i32.const
0000325: 14                                        ; i32 literal
0000326: 41                                        ; i32.const
0000327: 18                                        ; i32 literal
0000328: 10                                        ; call
0000329: 0f                                        ; function index
000032a: 21                                        ; local.set
000032b: 03                                        ; local index
000032c: 20                                        ; local.get
000032d: 03                                        ; local index
000032e: 41                                        ; i32.const
000032f: 00                                        ; i32 literal
0000330: 6a                                        ; i32.add
0000331: 41                                        ; i32.const
0000332: 01                                        ; i32 literal
0000333: b7                                        ; f64.convert_i32_s
0000334: 39                                        ; f64.store
0000335: 03                                        ; alignment
0000336: 00                                        ; store offset
0000337: 20                                        ; local.get
0000338: 03                                        ; local index
0000339: 41                                        ; i32.const
000033a: 08                                        ; i32 literal
000033b: 6a                                        ; i32.add
000033c: 20                                        ; local.get
000033d: 03                                        ; local index
000033e: 41                                        ; i32.const
000033f: 00                                        ; i32 literal
0000340: 6a                                        ; i32.add
0000341: 2b                                        ; f64.load
0000342: 03                                        ; alignment
0000343: 00                                        ; load offset
0000344: 41                                        ; i32.const
0000345: e707                                      ; i32 literal
0000347: b7                                        ; f64.convert_i32_s
0000348: a2                                        ; f64.mul
0000349: 39                                        ; f64.store
000034a: 03                                        ; alignment
000034b: 00                                        ; store offset
000034c: 20                                        ; local.get
000034d: 03                                        ; local index
000034e: 41                                        ; i32.const
000034f: 10                                        ; i32 literal
0000350: 6a                                        ; i32.add
0000351: 41                                        ; i32.const
0000352: e002                                      ; i32 literal
0000354: 36                                        ; i32.store
0000355: 02                                        ; alignment
0000356: 00                                        ; store offset
0000357: 20                                        ; local.get
0000358: 01                                        ; local index
0000359: 41                                        ; i32.const
000035a: 04                                        ; i32 literal
000035b: 6a                                        ; i32.add
000035c: 20                                        ; local.get
000035d: 03                                        ; local index
000035e: 36                                        ; i32.store
000035f: 02                                        ; alignment
0000360: 00                                        ; store offset
0000361: 20                                        ; local.get
0000362: 00                                        ; local index
0000363: 24                                        ; global.set
0000364: 0b                                        ; global index
0000365: 0b                                        ; end
; move data: [2c7, 366) -> [2c8, 367)
00002c6: 9f01                                      ; FIXUP func body size
; function body 6
0000367: 00                                        ; func body size (guess)
0000368: 01                                        ; local decl count
0000369: 02                                        ; local type count
000036a: 7f                                        ; i32
000036b: 41                                        ; i32.const
000036c: 00                                        ; i32 literal
000036d: 21                                        ; local.set
000036e: 00                                        ; local index
000036f: 41                                        ; i32.const
0000370: 00                                        ; i32 literal
0000371: 21                                        ; local.set
0000372: 01                                        ; local index
0000373: 02                                        ; block
0000374: 40                                        ; void
0000375: 03                                        ; loop
0000376: 40                                        ; void
0000377: 20                                        ; local.get
0000378: 01                                        ; local index
0000379: 23                                        ; global.get
000037a: 0b                                        ; global index
000037b: 41                                        ; i32.const
000037c: 04                                        ; i32 literal
000037d: 6a                                        ; i32.add
000037e: 28                                        ; i32.load
000037f: 02                                        ; alignment
0000380: 00                                        ; load offset
0000381: 41                                        ; i32.const
0000382: 01                                        ; i32 literal
0000383: 6b                                        ; i32.sub
0000384: 4a                                        ; i32.gt_s
0000385: 0d                                        ; br_if
0000386: 01                                        ; break depth
0000387: 23                                        ; global.get
0000388: 0b                                        ; global index
0000389: 41                                        ; i32.const
000038a: 08                                        ; i32 literal
000038b: 6a                                        ; i32.add
000038c: 20                                        ; local.get
000038d: 01                                        ; local index
000038e: 41                                        ; i32.const
000038f: 04                                        ; i32 literal
0000390: 6c                                        ; i32.mul
0000391: 6a                                        ; i32.add
0000392: 28                                        ; i32.load
0000393: 02                                        ; alignment
0000394: 00                                        ; load offset
0000395: 21                                        ; local.set
0000396: 00                                        ; local index
0000397: 41                                        ; i32.const
0000398: 9803                                      ; i32 literal
000039a: 20                                        ; local.get
000039b: 01                                        ; local index
000039c: 10                                        ; call
000039d: 0e                                        ; function index
000039e: 10                                        ; call
000039f: 09                                        ; function index
00003a0: 41                                        ; i32.const
00003a1: a003                                      ; i32 literal
00003a3: 10                                        ; call
00003a4: 09                                        ; function index
00003a5: 20                                        ; local.get
00003a6: 00                                        ; local index
00003a7: 10                                        ; call
00003a8: 0e                                        ; function index
00003a9: 10                                        ; call
00003aa: 09                                        ; function index
00003ab: 41                                        ; i32.const
00003ac: b003                                      ; i32 literal
00003ae: 10                                        ; call
00003af: 09                                        ; function index
00003b0: 20                                        ; local.get
00003b1: 00                                        ; local index
00003b2: 41                                        ; i32.const
00003b3: 10                                        ; i32 literal
00003b4: 6a                                        ; i32.add
00003b5: 28                                        ; i32.load
00003b6: 02                                        ; alignment
00003b7: 00                                        ; load offset
00003b8: 10                                        ; call
00003b9: 0e                                        ; function index
00003ba: 10                                        ; call
00003bb: 09                                        ; function index
00003bc: 10                                        ; call
00003bd: 0d                                        ; function index
00003be: 20                                        ; local.get
00003bf: 00                                        ; local index
00003c0: 10                                        ; call
00003c1: 0c                                        ; function index
00003c2: 20                                        ; local.get
00003c3: 01                                        ; local index
00003c4: 41                                        ; i32.const
00003c5: 01                                        ; i32 literal
00003c6: 6a                                        ; i32.add
00003c7: 21                                        ; local.set
00003c8: 01                                        ; local index
00003c9: 0c                                        ; br
00003ca: 00                                        ; break depth
00003cb: 0b                                        ; end
00003cc: 0b                                        ; end
00003cd: 0b                                        ; end
0000367: 66                                        ; FIXUP func body size
; move data: [200, 3ce) -> [201, 3cf)
00001ff: ce03                                      ; FIXUP section size
; section "Data" (11)
00003cf: 0b                                        ; section code
00003d0: 00                                        ; section size (guess)
00003d1: 09                                        ; num data segments
; data segment header 0
00003d2: 00                                      
00003d3: 41                                        ; i32.const
00003d4: 0d                                        ; i32 literal
00003d5: 0b                                        ; end
00003d6: 04                                        ; data segment size
; data segment data 0
00003d7: 4142 4300                                 ; data segment data
; data segment header 1
00003db: 00                                      
00003dc: 41                                        ; i32.const
00003dd: e002                                      ; i32 literal
00003df: 0b                                        ; end
00003e0: 0c                                        ; data segment size
; data segment data 1
00003e1: 4865 6c6c 6f20 776f 726c 6400             ; data segment data
; data segment header 2
00003ed: 00                                      
00003ee: 41                                        ; i32.const
00003ef: f002                                      ; i32 literal
00003f1: 0b                                        ; end
00003f2: 02                                        ; data segment size
; data segment data 2
00003f3: 2300                                      ; data segment data
; data segment header 3
00003f5: 00                                      
00003f6: 41                                        ; i32.const
00003f7: f802                                      ; i32 literal
00003f9: 0b                                        ; end
00003fa: 0e                                        ; data segment size
; data segment data 3
00003fb: 2061 6464 7265 7373 4f66 3a3d 2600        ; data segment data
; data segment header 4
0000409: 00                                      
000040a: 41                                        ; i32.const
000040b: 8803                                      ; i32 literal
000040d: 0b                                        ; end
000040e: 09                                        ; data segment size
; data segment data 4
000040f: 2c20 6e61 6d65 3a3d 00                    ; data segment data
; data segment header 5
0000418: 00                                      
0000419: 41                                        ; i32.const
000041a: 9803                                      ; i32 literal
000041c: 0b                                        ; end
000041d: 02                                        ; data segment size
; data segment data 5
000041e: 2300                                      ; data segment data
; data segment header 6
0000420: 00                                      
0000421: 41                                        ; i32.const
0000422: a003                                      ; i32 literal
0000424: 0b                                        ; end
0000425: 0e                                        ; data segment size
; data segment data 6
0000426: 2061 6464 7265 7373 4f66 3a3d 2600        ; data segment data
; data segment header 7
0000434: 00                                      
0000435: 41                                        ; i32.const
0000436: b003                                      ; i32 literal
0000438: 0b                                        ; end
0000439: 09                                        ; data segment size
; data segment data 7
000043a: 2c20 6e61 6d65 3a3d 00                    ; data segment data
; data segment header 8
0000443: 00                                      
0000444: 41                                        ; i32.const
0000445: 18                                        ; i32 literal
0000446: 0b                                        ; end
0000447: c102                                      ; data segment size
; data segment data 8
0000449: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
0000459: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
0000469: 496c 4276 6157 3530 4969 7769 5932 7868 
0000479: 6333 4e66 6157 5169 4f6a 4930 4c43 4a6d 
0000489: 6157 5673 5a48 4d69 4f6e 7369 6543 4936 
0000499: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
00004a9: 5853 7769 636d 4633 496a 6f69 5a6a 5930 
00004b9: 4969 7769 6448 6c77 5a53 4936 4e48 3073 
00004c9: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
00004d9: 5979 4936 5731 3073 496e 4a68 6479 4936 
00004e9: 496d 5932 4e43 4973 496e 5235 6347 5569 
00004f9: 4f6a 5239 4c43 4a75 5957 316c 496a 7037 
0000509: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
0000519: 4c43 4a79 5958 6369 4f69 4a7a 6448 4a70 
0000529: 626d 6369 4c43 4a30 6558 426c 496a 6f31 
0000539: 6658 3073 496d 6c7a 5533 5279 6457 4e30 
0000549: 496a 706d 5957 787a 5a53 7769 6257 5630 
0000559: 6147 396b 6379 4936 6533 3073 496d 3568 
0000569: 6257 567a 6347 466a 5a53 4936 496d 4679 
0000579: 636d 4635 5432 4a71 5a57 4e30 6379 4a39 
0000589: 00                                        ; data segment data
; move data: [3d1, 58a) -> [3d2, 58b)
00003d0: b903                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0132 0a60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 017f 0060 0001 7f60 0000 02e3 0110 
0000040: 044d 6174 6803 706f 7700 0004 4d61 7468 
0000050: 0473 7172 7400 0104 4d61 7468 0365 7870 
0000060: 0001 044d 6174 6803 636f 7300 0104 4d61 
0000070: 7468 0672 616e 646f 6d00 0204 4d61 7468 
0000080: 0463 6569 6c00 0104 4d61 7468 0566 6c6f 
0000090: 6f72 0001 0247 4309 6164 644f 626a 6563 
00000a0: 7400 0306 7374 7269 6e67 0772 6570 6c61 
00000b0: 6365 0004 0673 7472 696e 6703 6164 6400 
00000c0: 0506 7374 7269 6e67 066c 656e 6774 6800 
00000d0: 0606 7374 7269 6e67 0769 6e64 6578 4f66 
00000e0: 0005 0763 6f6e 736f 6c65 036c 6f67 0007 
00000f0: 0763 6f6e 736f 6c65 036c 6f67 0007 0673 
0000100: 7472 696e 6708 746f 5374 7269 6e67 0006 
0000110: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
0000120: 0001 0308 0705 0809 0809 0909 067a 0c7f 
0000130: 0141 c003 0b7c 0144 6957 148b 0abf 0540 
0000140: 0b7c 0144 182d 4454 fb21 0940 0b7f 0141 
0000150: ffff ffff 070b 7e01 42ff ffff ffff ffff 
0000160: ffff 000b 7d01 43ff ff7f 7f0b 7c01 44ff 
0000170: ffff ffff ffef 7f0b 7f01 4180 8080 8078 
0000180: 0b7e 0142 8080 8080 8080 8080 807f 0b7d 
0000190: 0143 ffff 7fff 0b7c 0144 ffff ffff ffff 
00001a0: efff 0b7f 0141 000b 0751 0314 676c 6f62 
00001b0: 616c 2e47 6574 4d65 6d6f 7279 5369 7a65 
00001c0: 0010 1a6f 626a 6563 7441 7272 6179 5465 
00001d0: 7374 2e70 7269 6e74 4172 7261 7900 1119 
00001e0: 6f62 6a65 6374 4172 7261 7954 6573 742e 
00001f0: 4765 7450 6f69 6e74 7300 1208 0113 0ace 
0000200: 0307 3a01 027f 2300 2102 2002 2000 6a24 
0000210: 0023 0041 086f 2103 2003 0440 4108 2003 
0000220: 6b21 0323 0020 036a 2400 0523 0041 086a 
0000230: 2400 0b20 0220 0110 0720 020f 0b05 0023 
0000240: 000f 0b76 0105 7f41 0021 0402 4003 4020 
0000250: 0423 0b41 046a 2802 0041 016b 4a0d 0141 
0000260: f002 2004 100e 1009 41f8 0210 0923 0b41 
0000270: 086a 2004 4104 6c6a 2802 0010 0e10 0941 
0000280: 8803 1009 230b 4108 6a20 0441 046c 6a28 
0000290: 0200 4110 6a28 0200 100e 1009 100d 230b 
00002a0: 4108 6a20 0441 046c 6a28 0200 100c 2004 
00002b0: 4101 6a21 040c 000b 0b0b 0500 230b 0f0b 
00002c0: 0600 1014 1015 0b9f 0101 047f 4108 4102 
00002d0: 4104 6c6a 4107 100f 2100 2000 4118 3602 
00002e0: 0020 0041 046a 4102 3602 0020 0041 086a 
00002f0: 2101 4114 4118 100f 2102 2002 4100 6a41 
0000300: e400 b739 0300 2002 4108 6a41 f403 b739 
0000310: 0300 2002 4110 6a41 0d36 0200 2001 4100 
0000320: 6a20 0236 0200 4114 4118 100f 2103 2003 
0000330: 4100 6a41 01b7 3903 0020 0341 086a 2003 
0000340: 4100 6a2b 0300 41e7 07b7 a239 0300 2003 
0000350: 4110 6a41 e002 3602 0020 0141 046a 2003 
0000360: 3602 0020 0024 0b0b 6601 027f 4100 2100 
0000370: 4100 2101 0240 0340 2001 230b 4104 6a28 
0000380: 0200 4101 6b4a 0d01 230b 4108 6a20 0141 
0000390: 046c 6a28 0200 2100 4198 0320 0110 0e10 
00003a0: 0941 a003 1009 2000 100e 1009 41b0 0310 
00003b0: 0920 0041 106a 2802 0010 0e10 0910 0d20 
00003c0: 0010 0c20 0141 016a 2101 0c00 0b0b 0b0b 
00003d0: b903 0900 410d 0b04 4142 4300 0041 e002 
00003e0: 0b0c 4865 6c6c 6f20 776f 726c 6400 0041 
00003f0: f002 0b02 2300 0041 f802 0b0e 2061 6464 
0000400: 7265 7373 4f66 3a3d 2600 0041 8803 0b09 
0000410: 2c20 6e61 6d65 3a3d 0000 4198 030b 0223 
0000420: 0000 41a0 030b 0e20 6164 6472 6573 734f 
0000430: 663a 3d26 0000 41b0 030b 092c 206e 616d 
0000440: 653a 3d00 0041 180b c102 6579 4a6a 6232 
0000450: 3174 5a57 3530 496a 7075 6457 7873 4c43 
0000460: 4a6a 6247 467a 6379 4936 496c 4276 6157 
0000470: 3530 4969 7769 5932 7868 6333 4e66 6157 
0000480: 5169 4f6a 4930 4c43 4a6d 6157 5673 5a48 
0000490: 4d69 4f6e 7369 6543 4936 6579 4a6e 5a57 
00004a0: 356c 636d 6c6a 496a 7062 5853 7769 636d 
00004b0: 4633 496a 6f69 5a6a 5930 4969 7769 6448 
00004c0: 6c77 5a53 4936 4e48 3073 496e 6b69 4f6e 
00004d0: 7369 5a32 5675 5a58 4a70 5979 4936 5731 
00004e0: 3073 496e 4a68 6479 4936 496d 5932 4e43 
00004f0: 4973 496e 5235 6347 5569 4f6a 5239 4c43 
0000500: 4a75 5957 316c 496a 7037 496d 646c 626d 
0000510: 5679 6157 4d69 4f6c 7464 4c43 4a79 5958 
0000520: 6369 4f69 4a7a 6448 4a70 626d 6369 4c43 
0000530: 4a30 6558 426c 496a 6f31 6658 3073 496d 
0000540: 6c7a 5533 5279 6457 4e30 496a 706d 5957 
0000550: 787a 5a53 7769 6257 5630 6147 396b 6379 
0000560: 4936 6533 3073 496d 3568 6257 567a 6347 
0000570: 466a 5a53 4936 496d 4679 636d 4635 5432 
0000580: 4a71 5a57 4e30 6379 4a39 00             
