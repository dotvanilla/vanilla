0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 0a                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 02                                        ; num params
000000d: 7c                                        ; f64
000000e: 7c                                        ; f64
000000f: 01                                        ; num results
0000010: 7c                                        ; f64
; type 1
0000011: 60                                        ; func
0000012: 01                                        ; num params
0000013: 7c                                        ; f64
0000014: 01                                        ; num results
0000015: 7c                                        ; f64
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 02                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 00                                        ; num results
; type 4
000001f: 60                                        ; func
0000020: 03                                        ; num params
0000021: 7f                                        ; i32
0000022: 7f                                        ; i32
0000023: 7f                                        ; i32
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
; type 5
0000026: 60                                        ; func
0000027: 02                                        ; num params
0000028: 7f                                        ; i32
0000029: 7f                                        ; i32
000002a: 01                                        ; num results
000002b: 7f                                        ; i32
; type 6
000002c: 60                                        ; func
000002d: 01                                        ; num params
000002e: 7f                                        ; i32
000002f: 01                                        ; num results
0000030: 7f                                        ; i32
; type 7
0000031: 60                                        ; func
0000032: 01                                        ; num params
0000033: 7f                                        ; i32
0000034: 00                                        ; num results
; type 8
0000035: 60                                        ; func
0000036: 00                                        ; num params
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 9
0000039: 60                                        ; func
000003a: 00                                        ; num params
000003b: 00                                        ; num results
0000009: 32                                        ; FIXUP section size
; section "Import" (2)
000003c: 02                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 10                                        ; num imports
; import header 0
000003f: 04                                        ; string length
0000040: 4d61 7468                                Math  ; import module name
0000044: 03                                        ; string length
0000045: 706f 77                                  pow  ; import field name
0000048: 00                                        ; import kind
0000049: 00                                        ; import signature index
; import header 1
000004a: 04                                        ; string length
000004b: 4d61 7468                                Math  ; import module name
000004f: 04                                        ; string length
0000050: 7371 7274                                sqrt  ; import field name
0000054: 00                                        ; import kind
0000055: 01                                        ; import signature index
; import header 2
0000056: 04                                        ; string length
0000057: 4d61 7468                                Math  ; import module name
000005b: 03                                        ; string length
000005c: 6578 70                                  exp  ; import field name
000005f: 00                                        ; import kind
0000060: 01                                        ; import signature index
; import header 3
0000061: 04                                        ; string length
0000062: 4d61 7468                                Math  ; import module name
0000066: 03                                        ; string length
0000067: 636f 73                                  cos  ; import field name
000006a: 00                                        ; import kind
000006b: 01                                        ; import signature index
; import header 4
000006c: 04                                        ; string length
000006d: 4d61 7468                                Math  ; import module name
0000071: 06                                        ; string length
0000072: 7261 6e64 6f6d                           random  ; import field name
0000078: 00                                        ; import kind
0000079: 02                                        ; import signature index
; import header 5
000007a: 04                                        ; string length
000007b: 4d61 7468                                Math  ; import module name
000007f: 04                                        ; string length
0000080: 6365 696c                                ceil  ; import field name
0000084: 00                                        ; import kind
0000085: 01                                        ; import signature index
; import header 6
0000086: 04                                        ; string length
0000087: 4d61 7468                                Math  ; import module name
000008b: 05                                        ; string length
000008c: 666c 6f6f 72                             floor  ; import field name
0000091: 00                                        ; import kind
0000092: 01                                        ; import signature index
; import header 7
0000093: 02                                        ; string length
0000094: 4743                                     GC  ; import module name
0000096: 09                                        ; string length
0000097: 6164 644f 626a 6563 74                   addObject  ; import field name
00000a0: 00                                        ; import kind
00000a1: 03                                        ; import signature index
; import header 8
00000a2: 06                                        ; string length
00000a3: 7374 7269 6e67                           string  ; import module name
00000a9: 07                                        ; string length
00000aa: 7265 706c 6163 65                        replace  ; import field name
00000b1: 00                                        ; import kind
00000b2: 04                                        ; import signature index
; import header 9
00000b3: 06                                        ; string length
00000b4: 7374 7269 6e67                           string  ; import module name
00000ba: 03                                        ; string length
00000bb: 6164 64                                  add  ; import field name
00000be: 00                                        ; import kind
00000bf: 05                                        ; import signature index
; import header 10
00000c0: 06                                        ; string length
00000c1: 7374 7269 6e67                           string  ; import module name
00000c7: 06                                        ; string length
00000c8: 6c65 6e67 7468                           length  ; import field name
00000ce: 00                                        ; import kind
00000cf: 06                                        ; import signature index
; import header 11
00000d0: 06                                        ; string length
00000d1: 7374 7269 6e67                           string  ; import module name
00000d7: 07                                        ; string length
00000d8: 696e 6465 784f 66                        indexOf  ; import field name
00000df: 00                                        ; import kind
00000e0: 05                                        ; import signature index
; import header 12
00000e1: 07                                        ; string length
00000e2: 636f 6e73 6f6c 65                        console  ; import module name
00000e9: 03                                        ; string length
00000ea: 6c6f 67                                  log  ; import field name
00000ed: 00                                        ; import kind
00000ee: 07                                        ; import signature index
; import header 13
00000ef: 07                                        ; string length
00000f0: 636f 6e73 6f6c 65                        console  ; import module name
00000f7: 03                                        ; string length
00000f8: 6c6f 67                                  log  ; import field name
00000fb: 00                                        ; import kind
00000fc: 07                                        ; import signature index
; import header 14
00000fd: 06                                        ; string length
00000fe: 7374 7269 6e67                           string  ; import module name
0000104: 08                                        ; string length
0000105: 746f 5374 7269 6e67                      toString  ; import field name
000010d: 00                                        ; import kind
000010e: 06                                        ; import signature index
; import header 15
000010f: 03                                        ; string length
0000110: 656e 76                                  env  ; import module name
0000113: 0a                                        ; string length
0000114: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000011e: 02                                        ; import kind
000011f: 00                                        ; limits: flags
0000120: 01                                        ; limits: initial
; move data: [3e, 121) -> [3f, 122)
000003d: e301                                      ; FIXUP section size
; section "Function" (3)
0000122: 03                                        ; section code
0000123: 00                                        ; section size (guess)
0000124: 06                                        ; num functions
0000125: 05                                        ; function 0 signature index
0000126: 08                                        ; function 1 signature index
0000127: 08                                        ; function 2 signature index
0000128: 09                                        ; function 3 signature index
0000129: 09                                        ; function 4 signature index
000012a: 09                                        ; function 5 signature index
0000123: 07                                        ; FIXUP section size
; section "Global" (6)
000012b: 06                                        ; section code
000012c: 00                                        ; section size (guess)
000012d: 0c                                        ; num globals
000012e: 7f                                        ; i32
000012f: 01                                        ; global mutability
0000130: 41                                        ; i32.const
0000131: 9803                                      ; i32 literal
0000133: 0b                                        ; end
0000134: 7c                                        ; f64
0000135: 01                                        ; global mutability
0000136: 44                                        ; f64.const
0000137: 6957 148b 0abf 0540                       ; f64 literal
000013f: 0b                                        ; end
0000140: 7c                                        ; f64
0000141: 01                                        ; global mutability
0000142: 44                                        ; f64.const
0000143: 182d 4454 fb21 0940                       ; f64 literal
000014b: 0b                                        ; end
000014c: 7f                                        ; i32
000014d: 01                                        ; global mutability
000014e: 41                                        ; i32.const
000014f: ffff ffff 07                              ; i32 literal
0000154: 0b                                        ; end
0000155: 7e                                        ; i64
0000156: 01                                        ; global mutability
0000157: 42                                        ; i64.const
0000158: ffff ffff ffff ffff ff00                  ; i64 literal
0000162: 0b                                        ; end
0000163: 7d                                        ; f32
0000164: 01                                        ; global mutability
0000165: 43                                        ; f32.const
0000166: ffff 7f7f                                 ; f32 literal
000016a: 0b                                        ; end
000016b: 7c                                        ; f64
000016c: 01                                        ; global mutability
000016d: 44                                        ; f64.const
000016e: ffff ffff ffff ef7f                       ; f64 literal
0000176: 0b                                        ; end
0000177: 7f                                        ; i32
0000178: 01                                        ; global mutability
0000179: 41                                        ; i32.const
000017a: 8080 8080 78                              ; i32 literal
000017f: 0b                                        ; end
0000180: 7e                                        ; i64
0000181: 01                                        ; global mutability
0000182: 42                                        ; i64.const
0000183: 8080 8080 8080 8080 807f                  ; i64 literal
000018d: 0b                                        ; end
000018e: 7d                                        ; f32
000018f: 01                                        ; global mutability
0000190: 43                                        ; f32.const
0000191: ffff 7fff                                 ; f32 literal
0000195: 0b                                        ; end
0000196: 7c                                        ; f64
0000197: 01                                        ; global mutability
0000198: 44                                        ; f64.const
0000199: ffff ffff ffff efff                       ; f64 literal
00001a1: 0b                                        ; end
00001a2: 7f                                        ; i32
00001a3: 01                                        ; global mutability
00001a4: 41                                        ; i32.const
00001a5: 00                                        ; i32 literal
00001a6: 0b                                        ; end
000012c: 7a                                        ; FIXUP section size
; section "Export" (7)
00001a7: 07                                        ; section code
00001a8: 00                                        ; section size (guess)
00001a9: 02                                        ; num exports
00001aa: 14                                        ; string length
00001ab: 676c 6f62 616c 2e47 6574 4d65 6d6f 7279  global.GetMemory
00001bb: 5369 7a65                                Size  ; export name
00001bf: 00                                        ; export kind
00001c0: 10                                        ; export func index
00001c1: 19                                        ; string length
00001c2: 6f62 6a65 6374 4172 7261 7954 6573 742e  objectArrayTest.
00001d2: 4765 7450 6f69 6e74 73                   GetPoints  ; export name
00001db: 00                                        ; export kind
00001dc: 11                                        ; export func index
00001a8: 34                                        ; FIXUP section size
; section "Start" (8)
00001dd: 08                                        ; section code
00001de: 00                                        ; section size (guess)
00001df: 12                                        ; start func index
00001de: 01                                        ; FIXUP section size
; section "Code" (10)
00001e0: 0a                                        ; section code
00001e1: 00                                        ; section size (guess)
00001e2: 06                                        ; num functions
; function body 0
00001e3: 00                                        ; func body size (guess)
00001e4: 01                                        ; local decl count
00001e5: 02                                        ; local type count
00001e6: 7f                                        ; i32
00001e7: 23                                        ; global.get
00001e8: 00                                        ; global index
00001e9: 21                                        ; local.set
00001ea: 02                                        ; local index
00001eb: 20                                        ; local.get
00001ec: 02                                        ; local index
00001ed: 20                                        ; local.get
00001ee: 00                                        ; local index
00001ef: 6a                                        ; i32.add
00001f0: 24                                        ; global.set
00001f1: 00                                        ; global index
00001f2: 23                                        ; global.get
00001f3: 00                                        ; global index
00001f4: 41                                        ; i32.const
00001f5: 08                                        ; i32 literal
00001f6: 6f                                        ; i32.rem_s
00001f7: 21                                        ; local.set
00001f8: 03                                        ; local index
00001f9: 20                                        ; local.get
00001fa: 03                                        ; local index
00001fb: 04                                        ; if
00001fc: 40                                        ; void
00001fd: 41                                        ; i32.const
00001fe: 08                                        ; i32 literal
00001ff: 20                                        ; local.get
0000200: 03                                        ; local index
0000201: 6b                                        ; i32.sub
0000202: 21                                        ; local.set
0000203: 03                                        ; local index
0000204: 23                                        ; global.get
0000205: 00                                        ; global index
0000206: 20                                        ; local.get
0000207: 03                                        ; local index
0000208: 6a                                        ; i32.add
0000209: 24                                        ; global.set
000020a: 00                                        ; global index
000020b: 05                                        ; else
000020c: 23                                        ; global.get
000020d: 00                                        ; global index
000020e: 41                                        ; i32.const
000020f: 08                                        ; i32 literal
0000210: 6a                                        ; i32.add
0000211: 24                                        ; global.set
0000212: 00                                        ; global index
0000213: 0b                                        ; end
0000214: 20                                        ; local.get
0000215: 02                                        ; local index
0000216: 20                                        ; local.get
0000217: 01                                        ; local index
0000218: 10                                        ; call
0000219: 07                                        ; function index
000021a: 20                                        ; local.get
000021b: 02                                        ; local index
000021c: 0f                                        ; return
000021d: 0b                                        ; end
00001e3: 3a                                        ; FIXUP func body size
; function body 1
000021e: 00                                        ; func body size (guess)
000021f: 00                                        ; local decl count
0000220: 23                                        ; global.get
0000221: 00                                        ; global index
0000222: 0f                                        ; return
0000223: 0b                                        ; end
000021e: 05                                        ; FIXUP func body size
; function body 2
0000224: 00                                        ; func body size (guess)
0000225: 01                                        ; local decl count
0000226: 04                                        ; local type count
0000227: 7f                                        ; i32
0000228: 23                                        ; global.get
0000229: 0b                                        ; global index
000022a: 0f                                        ; return
000022b: 0b                                        ; end
0000224: 07                                        ; FIXUP func body size
; function body 3
000022c: 00                                        ; func body size (guess)
000022d: 00                                        ; local decl count
000022e: 10                                        ; call
000022f: 13                                        ; function index
0000230: 10                                        ; call
0000231: 14                                        ; function index
0000232: 0b                                        ; end
000022c: 06                                        ; FIXUP func body size
; function body 4
0000233: 00                                        ; func body size (guess)
0000234: 01                                        ; local decl count
0000235: 04                                        ; local type count
0000236: 7f                                        ; i32
0000237: 41                                        ; i32.const
0000238: 08                                        ; i32 literal
0000239: 41                                        ; i32.const
000023a: 02                                        ; i32 literal
000023b: 41                                        ; i32.const
000023c: 04                                        ; i32 literal
000023d: 6c                                        ; i32.mul
000023e: 6a                                        ; i32.add
000023f: 41                                        ; i32.const
0000240: 07                                        ; i32 literal
0000241: 10                                        ; call
0000242: 0f                                        ; function index
0000243: 21                                        ; local.set
0000244: 00                                        ; local index
0000245: 20                                        ; local.get
0000246: 00                                        ; local index
0000247: 41                                        ; i32.const
0000248: 18                                        ; i32 literal
0000249: 36                                        ; i32.store
000024a: 02                                        ; alignment
000024b: 00                                        ; store offset
000024c: 20                                        ; local.get
000024d: 00                                        ; local index
000024e: 41                                        ; i32.const
000024f: 04                                        ; i32 literal
0000250: 6a                                        ; i32.add
0000251: 41                                        ; i32.const
0000252: 02                                        ; i32 literal
0000253: 36                                        ; i32.store
0000254: 02                                        ; alignment
0000255: 00                                        ; store offset
0000256: 20                                        ; local.get
0000257: 00                                        ; local index
0000258: 41                                        ; i32.const
0000259: 08                                        ; i32 literal
000025a: 6a                                        ; i32.add
000025b: 21                                        ; local.set
000025c: 01                                        ; local index
000025d: 41                                        ; i32.const
000025e: 14                                        ; i32 literal
000025f: 41                                        ; i32.const
0000260: 18                                        ; i32 literal
0000261: 10                                        ; call
0000262: 0f                                        ; function index
0000263: 21                                        ; local.set
0000264: 02                                        ; local index
0000265: 20                                        ; local.get
0000266: 02                                        ; local index
0000267: 41                                        ; i32.const
0000268: 00                                        ; i32 literal
0000269: 6a                                        ; i32.add
000026a: 41                                        ; i32.const
000026b: e400                                      ; i32 literal
000026d: b7                                        ; f64.convert_i32_s
000026e: 39                                        ; f64.store
000026f: 03                                        ; alignment
0000270: 00                                        ; store offset
0000271: 20                                        ; local.get
0000272: 02                                        ; local index
0000273: 41                                        ; i32.const
0000274: 08                                        ; i32 literal
0000275: 6a                                        ; i32.add
0000276: 41                                        ; i32.const
0000277: f403                                      ; i32 literal
0000279: b7                                        ; f64.convert_i32_s
000027a: 39                                        ; f64.store
000027b: 03                                        ; alignment
000027c: 00                                        ; store offset
000027d: 20                                        ; local.get
000027e: 02                                        ; local index
000027f: 41                                        ; i32.const
0000280: 10                                        ; i32 literal
0000281: 6a                                        ; i32.add
0000282: 41                                        ; i32.const
0000283: 0d                                        ; i32 literal
0000284: 36                                        ; i32.store
0000285: 02                                        ; alignment
0000286: 00                                        ; store offset
0000287: 20                                        ; local.get
0000288: 01                                        ; local index
0000289: 41                                        ; i32.const
000028a: 00                                        ; i32 literal
000028b: 6a                                        ; i32.add
000028c: 20                                        ; local.get
000028d: 02                                        ; local index
000028e: 36                                        ; i32.store
000028f: 02                                        ; alignment
0000290: 00                                        ; store offset
0000291: 41                                        ; i32.const
0000292: 14                                        ; i32 literal
0000293: 41                                        ; i32.const
0000294: 18                                        ; i32 literal
0000295: 10                                        ; call
0000296: 0f                                        ; function index
0000297: 21                                        ; local.set
0000298: 03                                        ; local index
0000299: 20                                        ; local.get
000029a: 03                                        ; local index
000029b: 41                                        ; i32.const
000029c: 00                                        ; i32 literal
000029d: 6a                                        ; i32.add
000029e: 41                                        ; i32.const
000029f: 01                                        ; i32 literal
00002a0: b7                                        ; f64.convert_i32_s
00002a1: 39                                        ; f64.store
00002a2: 03                                        ; alignment
00002a3: 00                                        ; store offset
00002a4: 20                                        ; local.get
00002a5: 03                                        ; local index
00002a6: 41                                        ; i32.const
00002a7: 08                                        ; i32 literal
00002a8: 6a                                        ; i32.add
00002a9: 20                                        ; local.get
00002aa: 03                                        ; local index
00002ab: 41                                        ; i32.const
00002ac: 00                                        ; i32 literal
00002ad: 6a                                        ; i32.add
00002ae: 2b                                        ; f64.load
00002af: 03                                        ; alignment
00002b0: 00                                        ; load offset
00002b1: 41                                        ; i32.const
00002b2: e707                                      ; i32 literal
00002b4: b7                                        ; f64.convert_i32_s
00002b5: a2                                        ; f64.mul
00002b6: 39                                        ; f64.store
00002b7: 03                                        ; alignment
00002b8: 00                                        ; store offset
00002b9: 20                                        ; local.get
00002ba: 03                                        ; local index
00002bb: 41                                        ; i32.const
00002bc: 10                                        ; i32 literal
00002bd: 6a                                        ; i32.add
00002be: 41                                        ; i32.const
00002bf: e002                                      ; i32 literal
00002c1: 36                                        ; i32.store
00002c2: 02                                        ; alignment
00002c3: 00                                        ; store offset
00002c4: 20                                        ; local.get
00002c5: 01                                        ; local index
00002c6: 41                                        ; i32.const
00002c7: 04                                        ; i32 literal
00002c8: 6a                                        ; i32.add
00002c9: 20                                        ; local.get
00002ca: 03                                        ; local index
00002cb: 36                                        ; i32.store
00002cc: 02                                        ; alignment
00002cd: 00                                        ; store offset
00002ce: 20                                        ; local.get
00002cf: 00                                        ; local index
00002d0: 24                                        ; global.set
00002d1: 0b                                        ; global index
00002d2: 0b                                        ; end
; move data: [234, 2d3) -> [235, 2d4)
0000233: 9f01                                      ; FIXUP func body size
; function body 5
00002d4: 00                                        ; func body size (guess)
00002d5: 01                                        ; local decl count
00002d6: 02                                        ; local type count
00002d7: 7f                                        ; i32
00002d8: 41                                        ; i32.const
00002d9: 00                                        ; i32 literal
00002da: 21                                        ; local.set
00002db: 00                                        ; local index
00002dc: 41                                        ; i32.const
00002dd: 00                                        ; i32 literal
00002de: 21                                        ; local.set
00002df: 01                                        ; local index
00002e0: 02                                        ; block
00002e1: 40                                        ; void
00002e2: 03                                        ; loop
00002e3: 40                                        ; void
00002e4: 20                                        ; local.get
00002e5: 01                                        ; local index
00002e6: 23                                        ; global.get
00002e7: 0b                                        ; global index
00002e8: 41                                        ; i32.const
00002e9: 04                                        ; i32 literal
00002ea: 6a                                        ; i32.add
00002eb: 28                                        ; i32.load
00002ec: 02                                        ; alignment
00002ed: 00                                        ; load offset
00002ee: 41                                        ; i32.const
00002ef: 01                                        ; i32 literal
00002f0: 6b                                        ; i32.sub
00002f1: 4a                                        ; i32.gt_s
00002f2: 0d                                        ; br_if
00002f3: 01                                        ; break depth
00002f4: 23                                        ; global.get
00002f5: 0b                                        ; global index
00002f6: 41                                        ; i32.const
00002f7: 08                                        ; i32 literal
00002f8: 6a                                        ; i32.add
00002f9: 20                                        ; local.get
00002fa: 01                                        ; local index
00002fb: 41                                        ; i32.const
00002fc: 04                                        ; i32 literal
00002fd: 6c                                        ; i32.mul
00002fe: 6a                                        ; i32.add
00002ff: 28                                        ; i32.load
0000300: 02                                        ; alignment
0000301: 00                                        ; load offset
0000302: 21                                        ; local.set
0000303: 00                                        ; local index
0000304: 41                                        ; i32.const
0000305: f002                                      ; i32 literal
0000307: 20                                        ; local.get
0000308: 01                                        ; local index
0000309: 10                                        ; call
000030a: 0e                                        ; function index
000030b: 10                                        ; call
000030c: 09                                        ; function index
000030d: 41                                        ; i32.const
000030e: f802                                      ; i32 literal
0000310: 10                                        ; call
0000311: 09                                        ; function index
0000312: 20                                        ; local.get
0000313: 00                                        ; local index
0000314: 10                                        ; call
0000315: 0e                                        ; function index
0000316: 10                                        ; call
0000317: 09                                        ; function index
0000318: 41                                        ; i32.const
0000319: 8803                                      ; i32 literal
000031b: 10                                        ; call
000031c: 09                                        ; function index
000031d: 20                                        ; local.get
000031e: 00                                        ; local index
000031f: 41                                        ; i32.const
0000320: 10                                        ; i32 literal
0000321: 6a                                        ; i32.add
0000322: 28                                        ; i32.load
0000323: 02                                        ; alignment
0000324: 00                                        ; load offset
0000325: 10                                        ; call
0000326: 0e                                        ; function index
0000327: 10                                        ; call
0000328: 09                                        ; function index
0000329: 10                                        ; call
000032a: 0d                                        ; function index
000032b: 20                                        ; local.get
000032c: 00                                        ; local index
000032d: 10                                        ; call
000032e: 0c                                        ; function index
000032f: 20                                        ; local.get
0000330: 01                                        ; local index
0000331: 41                                        ; i32.const
0000332: 01                                        ; i32 literal
0000333: 6a                                        ; i32.add
0000334: 21                                        ; local.set
0000335: 01                                        ; local index
0000336: 0c                                        ; br
0000337: 00                                        ; break depth
0000338: 0b                                        ; end
0000339: 0b                                        ; end
000033a: 0b                                        ; end
00002d4: 66                                        ; FIXUP func body size
; move data: [1e2, 33b) -> [1e3, 33c)
00001e1: d902                                      ; FIXUP section size
; section "Data" (11)
000033c: 0b                                        ; section code
000033d: 00                                        ; section size (guess)
000033e: 06                                        ; num data segments
; data segment header 0
000033f: 00                                      
0000340: 41                                        ; i32.const
0000341: 0d                                        ; i32 literal
0000342: 0b                                        ; end
0000343: 04                                        ; data segment size
; data segment data 0
0000344: 4142 4300                                 ; data segment data
; data segment header 1
0000348: 00                                      
0000349: 41                                        ; i32.const
000034a: e002                                      ; i32 literal
000034c: 0b                                        ; end
000034d: 0c                                        ; data segment size
; data segment data 1
000034e: 4865 6c6c 6f20 776f 726c 6400             ; data segment data
; data segment header 2
000035a: 00                                      
000035b: 41                                        ; i32.const
000035c: f002                                      ; i32 literal
000035e: 0b                                        ; end
000035f: 02                                        ; data segment size
; data segment data 2
0000360: 2300                                      ; data segment data
; data segment header 3
0000362: 00                                      
0000363: 41                                        ; i32.const
0000364: f802                                      ; i32 literal
0000366: 0b                                        ; end
0000367: 0e                                        ; data segment size
; data segment data 3
0000368: 2061 6464 7265 7373 4f66 3a3d 2600        ; data segment data
; data segment header 4
0000376: 00                                      
0000377: 41                                        ; i32.const
0000378: 8803                                      ; i32 literal
000037a: 0b                                        ; end
000037b: 09                                        ; data segment size
; data segment data 4
000037c: 2c20 6e61 6d65 3a3d 00                    ; data segment data
; data segment header 5
0000385: 00                                      
0000386: 41                                        ; i32.const
0000387: 18                                        ; i32 literal
0000388: 0b                                        ; end
0000389: c102                                      ; data segment size
; data segment data 5
000038b: 6579 4a6a 6232 3174 5a57 3530 496a 7075 
000039b: 6457 7873 4c43 4a6a 6247 467a 6379 4936 
00003ab: 496c 4276 6157 3530 4969 7769 5932 7868 
00003bb: 6333 4e66 6157 5169 4f6a 4930 4c43 4a6d 
00003cb: 6157 5673 5a48 4d69 4f6e 7369 6543 4936 
00003db: 6579 4a6e 5a57 356c 636d 6c6a 496a 7062 
00003eb: 5853 7769 636d 4633 496a 6f69 5a6a 5930 
00003fb: 4969 7769 6448 6c77 5a53 4936 4e48 3073 
000040b: 496e 6b69 4f6e 7369 5a32 5675 5a58 4a70 
000041b: 5979 4936 5731 3073 496e 4a68 6479 4936 
000042b: 496d 5932 4e43 4973 496e 5235 6347 5569 
000043b: 4f6a 5239 4c43 4a75 5957 316c 496a 7037 
000044b: 496d 646c 626d 5679 6157 4d69 4f6c 7464 
000045b: 4c43 4a79 5958 6369 4f69 4a7a 6448 4a70 
000046b: 626d 6369 4c43 4a30 6558 426c 496a 6f31 
000047b: 6658 3073 496d 6c7a 5533 5279 6457 4e30 
000048b: 496a 706d 5957 787a 5a53 7769 6257 5630 
000049b: 6147 396b 6379 4936 6533 3073 496d 3568 
00004ab: 6257 567a 6347 466a 5a53 4936 496d 4679 
00004bb: 636d 4635 5432 4a71 5a57 4e30 6379 4a39 
00004cb: 00                                        ; data segment data
; move data: [33e, 4cc) -> [33f, 4cd)
000033d: 8e03                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0132 0a60 027c 7c01 
0000010: 7c60 017c 017c 6000 017c 6002 7f7f 0060 
0000020: 037f 7f7f 017f 6002 7f7f 017f 6001 7f01 
0000030: 7f60 017f 0060 0001 7f60 0000 02e3 0110 
0000040: 044d 6174 6803 706f 7700 0004 4d61 7468 
0000050: 0473 7172 7400 0104 4d61 7468 0365 7870 
0000060: 0001 044d 6174 6803 636f 7300 0104 4d61 
0000070: 7468 0672 616e 646f 6d00 0204 4d61 7468 
0000080: 0463 6569 6c00 0104 4d61 7468 0566 6c6f 
0000090: 6f72 0001 0247 4309 6164 644f 626a 6563 
00000a0: 7400 0306 7374 7269 6e67 0772 6570 6c61 
00000b0: 6365 0004 0673 7472 696e 6703 6164 6400 
00000c0: 0506 7374 7269 6e67 066c 656e 6774 6800 
00000d0: 0606 7374 7269 6e67 0769 6e64 6578 4f66 
00000e0: 0005 0763 6f6e 736f 6c65 036c 6f67 0007 
00000f0: 0763 6f6e 736f 6c65 036c 6f67 0007 0673 
0000100: 7472 696e 6708 746f 5374 7269 6e67 0006 
0000110: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
0000120: 0001 0307 0605 0808 0909 0906 7a0c 7f01 
0000130: 4198 030b 7c01 4469 5714 8b0a bf05 400b 
0000140: 7c01 4418 2d44 54fb 2109 400b 7f01 41ff 
0000150: ffff ff07 0b7e 0142 ffff ffff ffff ffff 
0000160: ff00 0b7d 0143 ffff 7f7f 0b7c 0144 ffff 
0000170: ffff ffff ef7f 0b7f 0141 8080 8080 780b 
0000180: 7e01 4280 8080 8080 8080 8080 7f0b 7d01 
0000190: 43ff ff7f ff0b 7c01 44ff ffff ffff ffef 
00001a0: ff0b 7f01 4100 0b07 3402 1467 6c6f 6261 
00001b0: 6c2e 4765 744d 656d 6f72 7953 697a 6500 
00001c0: 1019 6f62 6a65 6374 4172 7261 7954 6573 
00001d0: 742e 4765 7450 6f69 6e74 7300 1108 0112 
00001e0: 0ad9 0206 3a01 027f 2300 2102 2002 2000 
00001f0: 6a24 0023 0041 086f 2103 2003 0440 4108 
0000200: 2003 6b21 0323 0020 036a 2400 0523 0041 
0000210: 086a 2400 0b20 0220 0110 0720 020f 0b05 
0000220: 0023 000f 0b07 0104 7f23 0b0f 0b06 0010 
0000230: 1310 140b 9f01 0104 7f41 0841 0241 046c 
0000240: 6a41 0710 0f21 0020 0041 1836 0200 2000 
0000250: 4104 6a41 0236 0200 2000 4108 6a21 0141 
0000260: 1441 1810 0f21 0220 0241 006a 41e4 00b7 
0000270: 3903 0020 0241 086a 41f4 03b7 3903 0020 
0000280: 0241 106a 410d 3602 0020 0141 006a 2002 
0000290: 3602 0041 1441 1810 0f21 0320 0341 006a 
00002a0: 4101 b739 0300 2003 4108 6a20 0341 006a 
00002b0: 2b03 0041 e707 b7a2 3903 0020 0341 106a 
00002c0: 41e0 0236 0200 2001 4104 6a20 0336 0200 
00002d0: 2000 240b 0b66 0102 7f41 0021 0041 0021 
00002e0: 0102 4003 4020 0123 0b41 046a 2802 0041 
00002f0: 016b 4a0d 0123 0b41 086a 2001 4104 6c6a 
0000300: 2802 0021 0041 f002 2001 100e 1009 41f8 
0000310: 0210 0920 0010 0e10 0941 8803 1009 2000 
0000320: 4110 6a28 0200 100e 1009 100d 2000 100c 
0000330: 2001 4101 6a21 010c 000b 0b0b 0b8e 0306 
0000340: 0041 0d0b 0441 4243 0000 41e0 020b 0c48 
0000350: 656c 6c6f 2077 6f72 6c64 0000 41f0 020b 
0000360: 0223 0000 41f8 020b 0e20 6164 6472 6573 
0000370: 734f 663a 3d26 0000 4188 030b 092c 206e 
0000380: 616d 653a 3d00 0041 180b c102 6579 4a6a 
0000390: 6232 3174 5a57 3530 496a 7075 6457 7873 
00003a0: 4c43 4a6a 6247 467a 6379 4936 496c 4276 
00003b0: 6157 3530 4969 7769 5932 7868 6333 4e66 
00003c0: 6157 5169 4f6a 4930 4c43 4a6d 6157 5673 
00003d0: 5a48 4d69 4f6e 7369 6543 4936 6579 4a6e 
00003e0: 5a57 356c 636d 6c6a 496a 7062 5853 7769 
00003f0: 636d 4633 496a 6f69 5a6a 5930 4969 7769 
0000400: 6448 6c77 5a53 4936 4e48 3073 496e 6b69 
0000410: 4f6e 7369 5a32 5675 5a58 4a70 5979 4936 
0000420: 5731 3073 496e 4a68 6479 4936 496d 5932 
0000430: 4e43 4973 496e 5235 6347 5569 4f6a 5239 
0000440: 4c43 4a75 5957 316c 496a 7037 496d 646c 
0000450: 626d 5679 6157 4d69 4f6c 7464 4c43 4a79 
0000460: 5958 6369 4f69 4a7a 6448 4a70 626d 6369 
0000470: 4c43 4a30 6558 426c 496a 6f31 6658 3073 
0000480: 496d 6c7a 5533 5279 6457 4e30 496a 706d 
0000490: 5957 787a 5a53 7769 6257 5630 6147 396b 
00004a0: 6379 4936 6533 3073 496d 3568 6257 567a 
00004b0: 6347 466a 5a53 4936 496d 4679 636d 4635 
00004c0: 5432 4a71 5a57 4e30 6379 4a39 00        
