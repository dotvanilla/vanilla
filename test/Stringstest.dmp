0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 03                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 7f                                        ; i32
0000015: 01                                        ; num results
0000016: 7f                                        ; i32
; type 2
0000017: 60                                        ; func
0000018: 02                                        ; num params
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7c                                        ; f64
0000020: 01                                        ; num results
0000021: 7f                                        ; i32
; type 4
0000022: 60                                        ; func
0000023: 00                                        ; num params
0000024: 01                                        ; num results
0000025: 7f                                        ; i32
0000009: 1c                                        ; FIXUP section size
; section "Import" (2)
0000026: 02                                        ; section code
0000027: 00                                        ; section size (guess)
0000028: 08                                        ; num imports
; import header 0
0000029: 07                                        ; string length
000002a: 636f 6e73 6f6c 65                        console  ; import module name
0000031: 03                                        ; string length
0000032: 6c6f 67                                  log  ; import field name
0000035: 00                                        ; import kind
0000036: 00                                        ; import signature index
; import header 1
0000037: 06                                        ; string length
0000038: 7374 7269 6e67                           string  ; import module name
000003e: 07                                        ; string length
000003f: 7265 706c 6163 65                        replace  ; import field name
0000046: 00                                        ; import kind
0000047: 01                                        ; import signature index
; import header 2
0000048: 06                                        ; string length
0000049: 7374 7269 6e67                           string  ; import module name
000004f: 03                                        ; string length
0000050: 6164 64                                  add  ; import field name
0000053: 00                                        ; import kind
0000054: 02                                        ; import signature index
; import header 3
0000055: 06                                        ; string length
0000056: 7374 7269 6e67                           string  ; import module name
000005c: 06                                        ; string length
000005d: 6c65 6e67 7468                           length  ; import field name
0000063: 00                                        ; import kind
0000064: 00                                        ; import signature index
; import header 4
0000065: 06                                        ; string length
0000066: 7374 7269 6e67                           string  ; import module name
000006c: 07                                        ; string length
000006d: 696e 6465 784f 66                        indexOf  ; import field name
0000074: 00                                        ; import kind
0000075: 02                                        ; import signature index
; import header 5
0000076: 06                                        ; string length
0000077: 7374 7269 6e67                           string  ; import module name
000007d: 08                                        ; string length
000007e: 746f 5374 7269 6e67                      toString  ; import field name
0000086: 00                                        ; import kind
0000087: 00                                        ; import signature index
; import header 6
0000088: 06                                        ; string length
0000089: 7374 7269 6e67                           string  ; import module name
000008f: 08                                        ; string length
0000090: 746f 5374 7269 6e67                      toString  ; import field name
0000098: 00                                        ; import kind
0000099: 03                                        ; import signature index
; import header 7
000009a: 03                                        ; string length
000009b: 656e 76                                  env  ; import module name
000009e: 0a                                        ; string length
000009f: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000a9: 02                                        ; import kind
00000aa: 00                                        ; limits: flags
00000ab: 01                                        ; limits: initial
; move data: [28, ac) -> [29, ad)
0000027: 8401                                      ; FIXUP section size
; section "Function" (3)
00000ad: 03                                        ; section code
00000ae: 00                                        ; section size (guess)
00000af: 03                                        ; num functions
00000b0: 04                                        ; function 0 signature index
00000b1: 04                                        ; function 1 signature index
00000b2: 04                                        ; function 2 signature index
00000ae: 04                                        ; FIXUP section size
; section "Global" (6)
00000b3: 06                                        ; section code
00000b4: 00                                        ; section size (guess)
00000b5: 03                                        ; num globals
00000b6: 7c                                        ; f64
00000b7: 01                                        ; global mutability
00000b8: 44                                        ; f64.const
00000b9: 0070 1c21 362b a042                       ; f64 literal
00000c1: 0b                                        ; end
00000c2: 7f                                        ; i32
00000c3: 01                                        ; global mutability
00000c4: 41                                        ; i32.const
00000c5: e300                                      ; i32 literal
00000c7: 0b                                        ; end
00000c8: 7f                                        ; i32
00000c9: 01                                        ; global mutability
00000ca: 41                                        ; i32.const
00000cb: e400                                      ; i32 literal
00000cd: 0b                                        ; end
00000b4: 19                                        ; FIXUP section size
; section "Export" (7)
00000ce: 07                                        ; section code
00000cf: 00                                        ; section size (guess)
00000d0: 03                                        ; num exports
00000d1: 04                                        ; string length
00000d2: 4d61 696e                                Main  ; export name
00000d6: 00                                        ; export kind
00000d7: 07                                        ; export func index
00000d8: 05                                        ; string length
00000d9: 4865 6c6c 6f                             Hello  ; export name
00000de: 00                                        ; export kind
00000df: 08                                        ; export func index
00000e0: 05                                        ; string length
00000e1: 576f 726c 64                             World  ; export name
00000e6: 00                                        ; export kind
00000e7: 09                                        ; export func index
00000cf: 18                                        ; FIXUP section size
; section "Code" (10)
00000e8: 0a                                        ; section code
00000e9: 00                                        ; section size (guess)
00000ea: 03                                        ; num functions
; function body 0
00000eb: 00                                        ; func body size (guess)
00000ec: 01                                        ; local decl count
00000ed: 02                                        ; local type count
00000ee: 7f                                        ; i32
00000ef: 10                                        ; call
00000f0: 08                                        ; function index
00000f1: 41                                        ; i32.const
00000f2: 01                                        ; i32 literal
00000f3: 10                                        ; call
00000f4: 02                                        ; function index
00000f5: 10                                        ; call
00000f6: 09                                        ; function index
00000f7: 10                                        ; call
00000f8: 02                                        ; function index
00000f9: 10                                        ; call
00000fa: 05                                        ; function index
00000fb: 21                                        ; local.set
00000fc: 00                                        ; local index
00000fd: 41                                        ; i32.const
00000fe: 03                                        ; i32 literal
00000ff: 23                                        ; global.get
0000100: 01                                        ; global index
0000101: 10                                        ; call
0000102: 05                                        ; function index
0000103: 10                                        ; call
0000104: 02                                        ; function index
0000105: 41                                        ; i32.const
0000106: 08                                        ; i32 literal
0000107: 10                                        ; call
0000108: 02                                        ; function index
0000109: 23                                        ; global.get
000010a: 02                                        ; global index
000010b: 10                                        ; call
000010c: 05                                        ; function index
000010d: 10                                        ; call
000010e: 02                                        ; function index
000010f: 41                                        ; i32.const
0000110: 0c                                        ; i32 literal
0000111: 10                                        ; call
0000112: 02                                        ; function index
0000113: 23                                        ; global.get
0000114: 00                                        ; global index
0000115: 10                                        ; call
0000116: 06                                        ; function index
0000117: 10                                        ; call
0000118: 02                                        ; function index
0000119: 41                                        ; i32.const
000011a: 10                                        ; i32 literal
000011b: 10                                        ; call
000011c: 02                                        ; function index
000011d: 23                                        ; global.get
000011e: 01                                        ; global index
000011f: b7                                        ; f64.convert_i32_s
0000120: 23                                        ; global.get
0000121: 02                                        ; global index
0000122: b7                                        ; f64.convert_i32_s
0000123: 23                                        ; global.get
0000124: 00                                        ; global index
0000125: a3                                        ; f64.div
0000126: a0                                        ; f64.add
0000127: 10                                        ; call
0000128: 06                                        ; function index
0000129: 10                                        ; call
000012a: 02                                        ; function index
000012b: 10                                        ; call
000012c: 05                                        ; function index
000012d: 21                                        ; local.set
000012e: 01                                        ; local index
000012f: 20                                        ; local.get
0000130: 00                                        ; local index
0000131: 10                                        ; call
0000132: 05                                        ; function index
0000133: 10                                        ; call
0000134: 00                                        ; function index
0000135: 1a                                        ; drop
0000136: 20                                        ; local.get
0000137: 01                                        ; local index
0000138: 10                                        ; call
0000139: 05                                        ; function index
000013a: 10                                        ; call
000013b: 00                                        ; function index
000013c: 1a                                        ; drop
000013d: 20                                        ; local.get
000013e: 00                                        ; local index
000013f: 10                                        ; call
0000140: 05                                        ; function index
0000141: 0f                                        ; return
0000142: 0b                                        ; end
00000eb: 57                                        ; FIXUP func body size
; function body 1
0000143: 00                                        ; func body size (guess)
0000144: 00                                        ; local decl count
0000145: 41                                        ; i32.const
0000146: 14                                        ; i32 literal
0000147: 10                                        ; call
0000148: 05                                        ; function index
0000149: 0f                                        ; return
000014a: 0b                                        ; end
0000143: 07                                        ; FIXUP func body size
; function body 2
000014b: 00                                        ; func body size (guess)
000014c: 00                                        ; local decl count
000014d: 41                                        ; i32.const
000014e: 1a                                        ; i32 literal
000014f: 10                                        ; call
0000150: 05                                        ; function index
0000151: 0f                                        ; return
0000152: 0b                                        ; end
000014b: 07                                        ; FIXUP func body size
00000e9: 69                                        ; FIXUP section size
; section "Data" (11)
0000153: 0b                                        ; section code
0000154: 00                                        ; section size (guess)
0000155: 07                                        ; num data segments
; data segment header 0
0000156: 00                                      
0000157: 41                                        ; i32.const
0000158: 01                                        ; i32 literal
0000159: 0b                                        ; end
000015a: 02                                        ; data segment size
; data segment data 0
000015b: 2000                                      ; data segment data
; data segment header 1
000015d: 00                                      
000015e: 41                                        ; i32.const
000015f: 03                                        ; i32 literal
0000160: 0b                                        ; end
0000161: 05                                        ; data segment size
; data segment data 1
0000162: 6c65 7420 00                              ; data segment data
; data segment header 2
0000167: 00                                      
0000168: 41                                        ; i32.const
0000169: 08                                        ; i32 literal
000016a: 0b                                        ; end
000016b: 04                                        ; data segment size
; data segment data 2
000016c: 202b 2000                                 ; data segment data
; data segment header 3
0000170: 00                                      
0000171: 41                                        ; i32.const
0000172: 0c                                        ; i32 literal
0000173: 0b                                        ; end
0000174: 04                                        ; data segment size
; data segment data 3
0000175: 202f 2000                                 ; data segment data
; data segment header 4
0000179: 00                                      
000017a: 41                                        ; i32.const
000017b: 10                                        ; i32 literal
000017c: 0b                                        ; end
000017d: 04                                        ; data segment size
; data segment data 4
000017e: 203d 2000                                 ; data segment data
; data segment header 5
0000182: 00                                      
0000183: 41                                        ; i32.const
0000184: 14                                        ; i32 literal
0000185: 0b                                        ; end
0000186: 06                                        ; data segment size
; data segment data 5
0000187: 4865 6c6c 6f00                            ; data segment data
; data segment header 6
000018d: 00                                      
000018e: 41                                        ; i32.const
000018f: 1a                                        ; i32 literal
0000190: 0b                                        ; end
0000191: 06                                        ; data segment size
; data segment data 6
0000192: 576f 726c 6400                            ; data segment data
0000154: 43                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 011c 0560 017f 017f 
0000010: 6003 7f7f 7f01 7f60 027f 7f01 7f60 017c 
0000020: 017f 6000 017f 0284 0108 0763 6f6e 736f 
0000030: 6c65 036c 6f67 0000 0673 7472 696e 6707 
0000040: 7265 706c 6163 6500 0106 7374 7269 6e67 
0000050: 0361 6464 0002 0673 7472 696e 6706 6c65 
0000060: 6e67 7468 0000 0673 7472 696e 6707 696e 
0000070: 6465 784f 6600 0206 7374 7269 6e67 0874 
0000080: 6f53 7472 696e 6700 0006 7374 7269 6e67 
0000090: 0874 6f53 7472 696e 6700 0303 656e 760a 
00000a0: 6279 7465 6368 756e 6b73 0200 0103 0403 
00000b0: 0404 0406 1903 7c01 4400 701c 2136 2ba0 
00000c0: 420b 7f01 41e3 000b 7f01 41e4 000b 0718 
00000d0: 0304 4d61 696e 0007 0548 656c 6c6f 0008 
00000e0: 0557 6f72 6c64 0009 0a69 0357 0102 7f10 
00000f0: 0841 0110 0210 0910 0210 0521 0041 0323 
0000100: 0110 0510 0241 0810 0223 0210 0510 0241 
0000110: 0c10 0223 0010 0610 0241 1010 0223 01b7 
0000120: 2302 b723 00a3 a010 0610 0210 0521 0120 
0000130: 0010 0510 001a 2001 1005 1000 1a20 0010 
0000140: 050f 0b07 0041 1410 050f 0b07 0041 1a10 
0000150: 050f 0b0b 4307 0041 010b 0220 0000 4103 
0000160: 0b05 6c65 7420 0000 4108 0b04 202b 2000 
0000170: 0041 0c0b 0420 2f20 0000 4110 0b04 203d 
0000180: 2000 0041 140b 0648 656c 6c6f 0000 411a 
0000190: 0b06 576f 726c 6400                     
