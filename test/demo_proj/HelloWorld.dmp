0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 09                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 03                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 01                                        ; num results
0000011: 7f                                        ; i32
; type 1
0000012: 60                                        ; func
0000013: 02                                        ; num params
0000014: 7f                                        ; i32
0000015: 7f                                        ; i32
0000016: 01                                        ; num results
0000017: 7f                                        ; i32
; type 2
0000018: 60                                        ; func
0000019: 01                                        ; num params
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7c                                        ; f64
0000020: 01                                        ; num results
0000021: 7c                                        ; f64
; type 4
0000022: 60                                        ; func
0000023: 01                                        ; num params
0000024: 7c                                        ; f64
0000025: 01                                        ; num results
0000026: 7f                                        ; i32
; type 5
0000027: 60                                        ; func
0000028: 00                                        ; num params
0000029: 01                                        ; num results
000002a: 7f                                        ; i32
; type 6
000002b: 60                                        ; func
000002c: 02                                        ; num params
000002d: 7f                                        ; i32
000002e: 7c                                        ; f64
000002f: 01                                        ; num results
0000030: 7c                                        ; f64
; type 7
0000031: 60                                        ; func
0000032: 04                                        ; num params
0000033: 7f                                        ; i32
0000034: 7c                                        ; f64
0000035: 7f                                        ; i32
0000036: 7f                                        ; i32
0000037: 01                                        ; num results
0000038: 7f                                        ; i32
; type 8
0000039: 60                                        ; func
000003a: 00                                        ; num params
000003b: 00                                        ; num results
0000009: 32                                        ; FIXUP section size
; section "Import" (2)
000003c: 02                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 11                                        ; num imports
; import header 0
000003f: 06                                        ; string length
0000040: 7374 7269 6e67                           string  ; import module name
0000046: 07                                        ; string length
0000047: 7265 706c 6163 65                        replace  ; import field name
000004e: 00                                        ; import kind
000004f: 00                                        ; import signature index
; import header 1
0000050: 06                                        ; string length
0000051: 7374 7269 6e67                           string  ; import module name
0000057: 03                                        ; string length
0000058: 6164 64                                  add  ; import field name
000005b: 00                                        ; import kind
000005c: 01                                        ; import signature index
; import header 2
000005d: 06                                        ; string length
000005e: 7374 7269 6e67                           string  ; import module name
0000064: 06                                        ; string length
0000065: 6c65 6e67 7468                           length  ; import field name
000006b: 00                                        ; import kind
000006c: 02                                        ; import signature index
; import header 3
000006d: 06                                        ; string length
000006e: 7374 7269 6e67                           string  ; import module name
0000074: 07                                        ; string length
0000075: 696e 6465 784f 66                        indexOf  ; import field name
000007c: 00                                        ; import kind
000007d: 01                                        ; import signature index
; import header 4
000007e: 07                                        ; string length
000007f: 636f 6e73 6f6c 65                        console  ; import module name
0000086: 03                                        ; string length
0000087: 6c6f 67                                  log  ; import field name
000008a: 00                                        ; import kind
000008b: 02                                        ; import signature index
; import header 5
000008c: 07                                        ; string length
000008d: 636f 6e73 6f6c 65                        console  ; import module name
0000094: 04                                        ; string length
0000095: 7761 726e                                warn  ; import field name
0000099: 00                                        ; import kind
000009a: 02                                        ; import signature index
; import header 6
000009b: 07                                        ; string length
000009c: 636f 6e73 6f6c 65                        console  ; import module name
00000a3: 04                                        ; string length
00000a4: 696e 666f                                info  ; import field name
00000a8: 00                                        ; import kind
00000a9: 02                                        ; import signature index
; import header 7
00000aa: 07                                        ; string length
00000ab: 636f 6e73 6f6c 65                        console  ; import module name
00000b2: 05                                        ; string length
00000b3: 6572 726f 72                             error  ; import field name
00000b8: 00                                        ; import kind
00000b9: 02                                        ; import signature index
; import header 8
00000ba: 08                                        ; string length
00000bb: 646f 6375 6d65 6e74                      document  ; import module name
00000c3: 0e                                        ; string length
00000c4: 6765 7445 6c65 6d65 6e74 4279 4964       getElementById  ; import field name
00000d2: 00                                        ; import kind
00000d3: 02                                        ; import signature index
; import header 9
00000d4: 08                                        ; string length
00000d5: 646f 6375 6d65 6e74                      document  ; import module name
00000dd: 10                                        ; string length
00000de: 7772 6974 6545 6c65 6d65 6e74 5465 7874  writeElementText  ; import field name
00000ee: 00                                        ; import kind
00000ef: 01                                        ; import signature index
; import header 10
00000f0: 08                                        ; string length
00000f1: 646f 6375 6d65 6e74                      document  ; import module name
00000f9: 0d                                        ; string length
00000fa: 6372 6561 7465 456c 656d 656e 74         createElement  ; import field name
0000107: 00                                        ; import kind
0000108: 02                                        ; import signature index
; import header 11
0000109: 08                                        ; string length
000010a: 646f 6375 6d65 6e74                      document  ; import module name
0000112: 0c                                        ; string length
0000113: 7365 7441 7474 7269 6275 7465            setAttribute  ; import field name
000011f: 00                                        ; import kind
0000120: 00                                        ; import signature index
; import header 12
0000121: 08                                        ; string length
0000122: 646f 6375 6d65 6e74                      document  ; import module name
000012a: 0b                                        ; string length
000012b: 6170 7065 6e64 4368 696c 64              appendChild  ; import field name
0000136: 00                                        ; import kind
0000137: 01                                        ; import signature index
; import header 13
0000138: 04                                        ; string length
0000139: 4d61 7468                                Math  ; import module name
000013d: 03                                        ; string length
000013e: 6578 70                                  exp  ; import field name
0000141: 00                                        ; import kind
0000142: 03                                        ; import signature index
; import header 14
0000143: 06                                        ; string length
0000144: 7374 7269 6e67                           string  ; import module name
000014a: 08                                        ; string length
000014b: 746f 5374 7269 6e67                      toString  ; import field name
0000153: 00                                        ; import kind
0000154: 02                                        ; import signature index
; import header 15
0000155: 06                                        ; string length
0000156: 7374 7269 6e67                           string  ; import module name
000015c: 08                                        ; string length
000015d: 746f 5374 7269 6e67                      toString  ; import field name
0000165: 00                                        ; import kind
0000166: 04                                        ; import signature index
; import header 16
0000167: 03                                        ; string length
0000168: 656e 76                                  env  ; import module name
000016b: 0a                                        ; string length
000016c: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000176: 02                                        ; import kind
0000177: 00                                        ; limits: flags
0000178: 01                                        ; limits: initial
; move data: [3e, 179) -> [3f, 17a)
000003d: bb02                                      ; FIXUP section size
; section "Function" (3)
000017a: 03                                        ; section code
000017b: 00                                        ; section size (guess)
000017c: 0d                                        ; num functions
000017d: 05                                        ; function 0 signature index
000017e: 06                                        ; function 1 signature index
000017f: 07                                        ; function 2 signature index
0000180: 05                                        ; function 3 signature index
0000181: 05                                        ; function 4 signature index
0000182: 05                                        ; function 5 signature index
0000183: 05                                        ; function 6 signature index
0000184: 05                                        ; function 7 signature index
0000185: 05                                        ; function 8 signature index
0000186: 05                                        ; function 9 signature index
0000187: 05                                        ; function 10 signature index
0000188: 05                                        ; function 11 signature index
0000189: 08                                        ; function 12 signature index
000017b: 0e                                        ; FIXUP section size
; section "Global" (6)
000018a: 06                                        ; section code
000018b: 00                                        ; section size (guess)
000018c: 03                                        ; num globals
000018d: 7f                                        ; i32
000018e: 01                                        ; global mutability
000018f: 41                                        ; i32.const
0000190: 01                                        ; i32 literal
0000191: 0b                                        ; end
0000192: 7f                                        ; i32
0000193: 01                                        ; global mutability
0000194: 41                                        ; i32.const
0000195: 0e                                        ; i32 literal
0000196: 0b                                        ; end
0000197: 7f                                        ; i32
0000198: 01                                        ; global mutability
0000199: 41                                        ; i32.const
000019a: c500                                      ; i32 literal
000019c: 0b                                        ; end
000018b: 11                                        ; FIXUP section size
; section "Export" (7)
000019d: 07                                        ; section code
000019e: 00                                        ; section size (guess)
000019f: 0c                                        ; num exports
00001a0: 0a                                        ; string length
00001a1: 4170 702e 5275 6e41 7070                 App.RunApp  ; export name
00001ab: 00                                        ; export kind
00001ac: 10                                        ; export func index
00001ad: 0f                                        ; string length
00001ae: 4d61 7468 2e50 6f69 7373 6f6e 5044 46    Math.PoissonPDF  ; export name
00001bd: 00                                        ; export kind
00001be: 11                                        ; export func index
00001bf: 12                                        ; string length
00001c0: 4d61 7468 2e44 6973 706c 6179 5265 7375  Math.DisplayResu
00001d0: 6c74                                     lt  ; export name
00001d2: 00                                        ; export kind
00001d3: 12                                        ; export func index
00001d4: 1a                                        ; string length
00001d5: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00001e5: 656d 626c 7954 6974 6c65                 emblyTitle  ; export name
00001ef: 00                                        ; export kind
00001f0: 13                                        ; export func index
00001f1: 20                                        ; string length
00001f2: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000202: 656d 626c 7944 6573 6372 6970 7469 6f6e  emblyDescription  ; export name
0000212: 00                                        ; export kind
0000213: 14                                        ; export func index
0000214: 1c                                        ; string length
0000215: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000225: 656d 626c 7943 6f6d 7061 6e79            emblyCompany  ; export name
0000231: 00                                        ; export kind
0000232: 15                                        ; export func index
0000233: 1c                                        ; string length
0000234: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000244: 656d 626c 7950 726f 6475 6374            emblyProduct  ; export name
0000250: 00                                        ; export kind
0000251: 16                                        ; export func index
0000252: 1e                                        ; string length
0000253: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000263: 656d 626c 7943 6f70 7972 6967 6874       emblyCopyright  ; export name
0000271: 00                                        ; export kind
0000272: 17                                        ; export func index
0000273: 1e                                        ; string length
0000274: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
0000284: 656d 626c 7954 7261 6465 6d61 726b       emblyTrademark  ; export name
0000292: 00                                        ; export kind
0000293: 18                                        ; export func index
0000294: 11                                        ; string length
0000295: 4173 7365 6d62 6c79 496e 666f 2e47 7569  AssemblyInfo.Gui
00002a5: 64                                       d  ; export name
00002a6: 00                                        ; export kind
00002a7: 19                                        ; export func index
00002a8: 1c                                        ; string length
00002a9: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002b9: 656d 626c 7956 6572 7369 6f6e            emblyVersion  ; export name
00002c5: 00                                        ; export kind
00002c6: 1a                                        ; export func index
00002c7: 20                                        ; string length
00002c8: 4173 7365 6d62 6c79 496e 666f 2e41 7373  AssemblyInfo.Ass
00002d8: 656d 626c 7946 696c 6556 6572 7369 6f6e  emblyFileVersion  ; export name
00002e8: 00                                        ; export kind
00002e9: 1b                                        ; export func index
; move data: [19f, 2ea) -> [1a0, 2eb)
000019e: cb02                                      ; FIXUP section size
; section "Start" (8)
00002eb: 08                                        ; section code
00002ec: 00                                        ; section size (guess)
00002ed: 1c                                        ; start func index
00002ec: 01                                        ; FIXUP section size
; section "Code" (10)
00002ee: 0a                                        ; section code
00002ef: 00                                        ; section size (guess)
00002f0: 0d                                        ; num functions
; function body 0
00002f1: 00                                        ; func body size (guess)
00002f2: 01                                        ; local decl count
00002f3: 04                                        ; local type count
00002f4: 7f                                        ; i32
00002f5: 41                                        ; i32.const
00002f6: db00                                      ; i32 literal
00002f8: 10                                        ; call
00002f9: 08                                        ; function index
00002fa: 21                                        ; local.set
00002fb: 00                                        ; local index
00002fc: 41                                        ; i32.const
00002fd: e000                                      ; i32 literal
00002ff: 10                                        ; call
0000300: 08                                        ; function index
0000301: 21                                        ; local.set
0000302: 01                                        ; local index
0000303: 41                                        ; i32.const
0000304: e600                                      ; i32 literal
0000306: 10                                        ; call
0000307: 0a                                        ; function index
0000308: 21                                        ; local.set
0000309: 02                                        ; local index
000030a: 41                                        ; i32.const
000030b: e800                                      ; i32 literal
000030d: 10                                        ; call
000030e: 0a                                        ; function index
000030f: 21                                        ; local.set
0000310: 03                                        ; local index
0000311: 20                                        ; local.get
0000312: 00                                        ; local index
0000313: 23                                        ; global.get
0000314: 00                                        ; global index
0000315: 10                                        ; call
0000316: 09                                        ; function index
0000317: 1a                                        ; drop
0000318: 20                                        ; local.get
0000319: 02                                        ; local index
000031a: 23                                        ; global.get
000031b: 01                                        ; global index
000031c: 10                                        ; call
000031d: 09                                        ; function index
000031e: 1a                                        ; drop
000031f: 20                                        ; local.get
0000320: 03                                        ; local index
0000321: 23                                        ; global.get
0000322: 02                                        ; global index
0000323: 10                                        ; call
0000324: 09                                        ; function index
0000325: 1a                                        ; drop
0000326: 20                                        ; local.get
0000327: 01                                        ; local index
0000328: 20                                        ; local.get
0000329: 02                                        ; local index
000032a: 10                                        ; call
000032b: 0c                                        ; function index
000032c: 1a                                        ; drop
000032d: 20                                        ; local.get
000032e: 01                                        ; local index
000032f: 20                                        ; local.get
0000330: 03                                        ; local index
0000331: 10                                        ; call
0000332: 0c                                        ; function index
0000333: 1a                                        ; drop
0000334: 20                                        ; local.get
0000335: 01                                        ; local index
0000336: 41                                        ; i32.const
0000337: ea00                                      ; i32 literal
0000339: 41                                        ; i32.const
000033a: f000                                      ; i32 literal
000033c: 10                                        ; call
000033d: 0b                                        ; function index
000033e: 1a                                        ; drop
000033f: 20                                        ; local.get
0000340: 02                                        ; local index
0000341: 41                                        ; i32.const
0000342: 8d01                                      ; i32 literal
0000344: 41                                        ; i32.const
0000345: 9301                                      ; i32 literal
0000347: 10                                        ; call
0000348: 0b                                        ; function index
0000349: 1a                                        ; drop
000034a: 20                                        ; local.get
000034b: 03                                        ; local index
000034c: 41                                        ; i32.const
000034d: af01                                      ; i32 literal
000034f: 41                                        ; i32.const
0000350: b501                                      ; i32 literal
0000352: 10                                        ; call
0000353: 0b                                        ; function index
0000354: 1a                                        ; drop
0000355: 41                                        ; i32.const
0000356: d301                                      ; i32 literal
0000358: 10                                        ; call
0000359: 04                                        ; function index
000035a: 1a                                        ; drop
000035b: 23                                        ; global.get
000035c: 01                                        ; global index
000035d: 10                                        ; call
000035e: 05                                        ; function index
000035f: 1a                                        ; drop
0000360: 23                                        ; global.get
0000361: 02                                        ; global index
0000362: 10                                        ; call
0000363: 06                                        ; function index
0000364: 1a                                        ; drop
0000365: 41                                        ; i32.const
0000366: f501                                      ; i32 literal
0000368: 10                                        ; call
0000369: 07                                        ; function index
000036a: 1a                                        ; drop
000036b: 41                                        ; i32.const
000036c: 00                                        ; i32 literal
000036d: 0f                                        ; return
000036e: 0b                                        ; end
00002f1: 7d                                        ; FIXUP func body size
; function body 1
000036f: 00                                        ; func body size (guess)
0000370: 01                                        ; local decl count
0000371: 01                                        ; local type count
0000372: 7c                                        ; f64
0000373: 44                                        ; f64.const
0000374: 0000 0000 0000 0000                       ; f64 literal
000037c: 20                                        ; local.get
000037d: 01                                        ; local index
000037e: a1                                        ; f64.sub
000037f: 10                                        ; call
0000380: 0d                                        ; function index
0000381: 21                                        ; local.set
0000382: 02                                        ; local index
0000383: 02                                        ; block
0000384: 40                                        ; void
0000385: 03                                        ; loop
0000386: 40                                        ; void
0000387: 20                                        ; local.get
0000388: 00                                        ; local index
0000389: 41                                        ; i32.const
000038a: 01                                        ; i32 literal
000038b: 4e                                        ; i32.ge_s
000038c: 45                                        ; i32.eqz
000038d: 0d                                        ; br_if
000038e: 01                                        ; break depth
000038f: 20                                        ; local.get
0000390: 02                                        ; local index
0000391: 20                                        ; local.get
0000392: 01                                        ; local index
0000393: 20                                        ; local.get
0000394: 00                                        ; local index
0000395: b7                                        ; f64.convert_i32_s
0000396: a3                                        ; f64.div
0000397: a2                                        ; f64.mul
0000398: 21                                        ; local.set
0000399: 02                                        ; local index
000039a: 20                                        ; local.get
000039b: 00                                        ; local index
000039c: 41                                        ; i32.const
000039d: 01                                        ; i32 literal
000039e: 6b                                        ; i32.sub
000039f: 21                                        ; local.set
00003a0: 00                                        ; local index
00003a1: 0c                                        ; br
00003a2: 00                                        ; break depth
00003a3: 0b                                        ; end
00003a4: 0b                                        ; end
00003a5: 20                                        ; local.get
00003a6: 02                                        ; local index
00003a7: 0f                                        ; return
00003a8: 0b                                        ; end
000036f: 39                                        ; FIXUP func body size
; function body 2
00003a9: 00                                        ; func body size (guess)
00003aa: 01                                        ; local decl count
00003ab: 01                                        ; local type count
00003ac: 7c                                        ; f64
00003ad: 20                                        ; local.get
00003ae: 00                                        ; local index
00003af: 20                                        ; local.get
00003b0: 01                                        ; local index
00003b1: 10                                        ; call
00003b2: 11                                        ; function index
00003b3: 21                                        ; local.set
00003b4: 04                                        ; local index
00003b5: 20                                        ; local.get
00003b6: 02                                        ; local index
00003b7: 10                                        ; call
00003b8: 05                                        ; function index
00003b9: 1a                                        ; drop
00003ba: 41                                        ; i32.const
00003bb: ae02                                      ; i32 literal
00003bd: 10                                        ; call
00003be: 08                                        ; function index
00003bf: 10                                        ; call
00003c0: 0e                                        ; function index
00003c1: 10                                        ; call
00003c2: 04                                        ; function index
00003c3: 1a                                        ; drop
00003c4: 41                                        ; i32.const
00003c5: b502                                      ; i32 literal
00003c7: 10                                        ; call
00003c8: 08                                        ; function index
00003c9: 41                                        ; i32.const
00003ca: bc02                                      ; i32 literal
00003cc: 20                                        ; local.get
00003cd: 00                                        ; local index
00003ce: 10                                        ; call
00003cf: 0e                                        ; function index
00003d0: 10                                        ; call
00003d1: 01                                        ; function index
00003d2: 41                                        ; i32.const
00003d3: e202                                      ; i32 literal
00003d5: 10                                        ; call
00003d6: 01                                        ; function index
00003d7: 20                                        ; local.get
00003d8: 01                                        ; local index
00003d9: 10                                        ; call
00003da: 0f                                        ; function index
00003db: 10                                        ; call
00003dc: 01                                        ; function index
00003dd: 41                                        ; i32.const
00003de: e502                                      ; i32 literal
00003e0: 10                                        ; call
00003e1: 01                                        ; function index
00003e2: 20                                        ; local.get
00003e3: 04                                        ; local index
00003e4: 10                                        ; call
00003e5: 0f                                        ; function index
00003e6: 10                                        ; call
00003e7: 01                                        ; function index
00003e8: 41                                        ; i32.const
00003e9: eb02                                      ; i32 literal
00003eb: 10                                        ; call
00003ec: 01                                        ; function index
00003ed: 10                                        ; call
00003ee: 09                                        ; function index
00003ef: 1a                                        ; drop
00003f0: 41                                        ; i32.const
00003f1: ed02                                      ; i32 literal
00003f3: 10                                        ; call
00003f4: 08                                        ; function index
00003f5: 41                                        ; i32.const
00003f6: f402                                      ; i32 literal
00003f8: 41                                        ; i32.const
00003f9: fa02                                      ; i32 literal
00003fb: 20                                        ; local.get
00003fc: 02                                        ; local index
00003fd: 10                                        ; call
00003fe: 0e                                        ; function index
00003ff: 10                                        ; call
0000400: 01                                        ; function index
0000401: 41                                        ; i32.const
0000402: 9303                                      ; i32 literal
0000404: 10                                        ; call
0000405: 01                                        ; function index
0000406: 20                                        ; local.get
0000407: 03                                        ; local index
0000408: 10                                        ; call
0000409: 0e                                        ; function index
000040a: 10                                        ; call
000040b: 01                                        ; function index
000040c: 41                                        ; i32.const
000040d: a803                                      ; i32 literal
000040f: 10                                        ; call
0000410: 01                                        ; function index
0000411: 10                                        ; call
0000412: 0b                                        ; function index
0000413: 1a                                        ; drop
0000414: 41                                        ; i32.const
0000415: 00                                        ; i32 literal
0000416: 0f                                        ; return
0000417: 0b                                        ; end
00003a9: 6e                                        ; FIXUP func body size
; function body 3
0000418: 00                                        ; func body size (guess)
0000419: 00                                        ; local decl count
000041a: 41                                        ; i32.const
000041b: aa03                                      ; i32 literal
000041d: 0f                                        ; return
000041e: 0b                                        ; end
0000418: 06                                        ; FIXUP func body size
; function body 4
000041f: 00                                        ; func body size (guess)
0000420: 00                                        ; local decl count
0000421: 41                                        ; i32.const
0000422: b603                                      ; i32 literal
0000424: 0f                                        ; return
0000425: 0b                                        ; end
000041f: 06                                        ; FIXUP func body size
; function body 5
0000426: 00                                        ; func body size (guess)
0000427: 00                                        ; local decl count
0000428: 41                                        ; i32.const
0000429: 8704                                      ; i32 literal
000042b: 0f                                        ; return
000042c: 0b                                        ; end
0000426: 06                                        ; FIXUP func body size
; function body 6
000042d: 00                                        ; func body size (guess)
000042e: 00                                        ; local decl count
000042f: 41                                        ; i32.const
0000430: 9204                                      ; i32 literal
0000432: 0f                                        ; return
0000433: 0b                                        ; end
000042d: 06                                        ; FIXUP func body size
; function body 7
0000434: 00                                        ; func body size (guess)
0000435: 00                                        ; local decl count
0000436: 41                                        ; i32.const
0000437: 9d04                                      ; i32 literal
0000439: 0f                                        ; return
000043a: 0b                                        ; end
0000434: 06                                        ; FIXUP func body size
; function body 8
000043b: 00                                        ; func body size (guess)
000043c: 00                                        ; local decl count
000043d: 41                                        ; i32.const
000043e: b204                                      ; i32 literal
0000440: 0f                                        ; return
0000441: 0b                                        ; end
000043b: 06                                        ; FIXUP func body size
; function body 9
0000442: 00                                        ; func body size (guess)
0000443: 00                                        ; local decl count
0000444: 41                                        ; i32.const
0000445: be04                                      ; i32 literal
0000447: 0f                                        ; return
0000448: 0b                                        ; end
0000442: 06                                        ; FIXUP func body size
; function body 10
0000449: 00                                        ; func body size (guess)
000044a: 00                                        ; local decl count
000044b: 41                                        ; i32.const
000044c: e304                                      ; i32 literal
000044e: 0f                                        ; return
000044f: 0b                                        ; end
0000449: 06                                        ; FIXUP func body size
; function body 11
0000450: 00                                        ; func body size (guess)
0000451: 00                                        ; local decl count
0000452: 41                                        ; i32.const
0000453: f104                                      ; i32 literal
0000455: 0f                                        ; return
0000456: 0b                                        ; end
0000450: 06                                        ; FIXUP func body size
; function body 12
0000457: 00                                        ; func body size (guess)
0000458: 00                                        ; local decl count
0000459: 0b                                        ; end
0000457: 02                                        ; FIXUP func body size
; move data: [2f0, 45a) -> [2f1, 45b)
00002ef: ea02                                      ; FIXUP section size
; section "Data" (11)
000045b: 0b                                        ; section code
000045c: 00                                        ; section size (guess)
000045d: 23                                        ; num data segments
; data segment header 0
000045e: 00                                      
000045f: 41                                        ; i32.const
0000460: 01                                        ; i32 literal
0000461: 0b                                        ; end
0000462: 0d                                        ; data segment size
; data segment data 0
0000463: 4865 6c6c 6f20 576f 726c 6421 00          ; data segment data
; data segment header 1
0000470: 00                                      
0000471: 41                                        ; i32.const
0000472: 0e                                        ; i32 literal
0000473: 0b                                        ; end
0000474: 37                                        ; data segment size
; data segment data 1
0000475: 5468 6973 206d 6573 7361 6765 2063 6f6d 
0000485: 6573 2066 726f 6d20 6120 5669 7375 616c 
0000495: 4261 7369 632e 4e45 5420 6170 706c 6963 
00004a5: 6174 696f 6e21 00                         ; data segment data
; data segment header 2
00004ac: 00                                      
00004ad: 41                                        ; i32.const
00004ae: c500                                      ; i32 literal
00004b0: 0b                                        ; end
00004b1: 16                                        ; data segment size
; data segment data 2
00004b2: 5765 6241 7373 656d 626c 7920 6974 2077 
00004c2: 6f72 6b73 2100                            ; data segment data
; data segment header 3
00004c8: 00                                      
00004c9: 41                                        ; i32.const
00004ca: db00                                      ; i32 literal
00004cc: 0b                                        ; end
00004cd: 05                                        ; data segment size
; data segment data 3
00004ce: 7465 7874 00                              ; data segment data
; data segment header 4
00004d3: 00                                      
00004d4: 41                                        ; i32.const
00004d5: e000                                      ; i32 literal
00004d7: 0b                                        ; end
00004d8: 06                                        ; data segment size
; data segment data 4
00004d9: 6e6f 7465 7300                            ; data segment data
; data segment header 5
00004df: 00                                      
00004e0: 41                                        ; i32.const
00004e1: e600                                      ; i32 literal
00004e3: 0b                                        ; end
00004e4: 02                                        ; data segment size
; data segment data 5
00004e5: 7000                                      ; data segment data
; data segment header 6
00004e7: 00                                      
00004e8: 41                                        ; i32.const
00004e9: e800                                      ; i32 literal
00004eb: 0b                                        ; end
00004ec: 02                                        ; data segment size
; data segment data 6
00004ed: 7000                                      ; data segment data
; data segment header 7
00004ef: 00                                      
00004f0: 41                                        ; i32.const
00004f1: ea00                                      ; i32 literal
00004f3: 0b                                        ; end
00004f4: 06                                        ; data segment size
; data segment data 7
00004f5: 7374 796c 6500                            ; data segment data
; data segment header 8
00004fb: 00                                      
00004fc: 41                                        ; i32.const
00004fd: f000                                      ; i32 literal
00004ff: 0b                                        ; end
0000500: 1d                                        ; data segment size
; data segment data 8
0000501: 6261 636b 6772 6f75 6e64 2d63 6f6c 6f72 
0000511: 3a20 6c69 6768 7467 7265 793b 00          ; data segment data
; data segment header 9
000051e: 00                                      
000051f: 41                                        ; i32.const
0000520: 8d01                                      ; i32 literal
0000522: 0b                                        ; end
0000523: 06                                        ; data segment size
; data segment data 9
0000524: 7374 796c 6500                            ; data segment data
; data segment header 10
000052a: 00                                      
000052b: 41                                        ; i32.const
000052c: 9301                                      ; i32 literal
000052e: 0b                                        ; end
000052f: 1c                                        ; data segment size
; data segment data 10
0000530: 666f 6e74 2d73 697a 653a 2032 656d 3b20 
0000540: 636f 6c6f 723a 2072 6564 3b00             ; data segment data
; data segment header 11
000054c: 00                                      
000054d: 41                                        ; i32.const
000054e: af01                                      ; i32 literal
0000550: 0b                                        ; end
0000551: 06                                        ; data segment size
; data segment data 11
0000552: 7374 796c 6500                            ; data segment data
; data segment header 12
0000558: 00                                      
0000559: 41                                        ; i32.const
000055a: b501                                      ; i32 literal
000055c: 0b                                        ; end
000055d: 1e                                        ; data segment size
; data segment data 12
000055e: 666f 6e74 2d73 697a 653a 2035 656d 3b20 
000056e: 636f 6c6f 723a 2067 7265 656e 3b00        ; data segment data
; data segment header 13
000057c: 00                                      
000057d: 41                                        ; i32.const
000057e: d301                                      ; i32 literal
0000580: 0b                                        ; end
0000581: 22                                        ; data segment size
; data segment data 13
0000582: 4465 6275 6720 7465 7874 206d 6573 7361 
0000592: 6765 2064 6973 706c 6179 2062 656c 6f77 
00005a2: 3a00                                      ; data segment data
; data segment header 14
00005a4: 00                                      
00005a5: 41                                        ; i32.const
00005a6: f501                                      ; i32 literal
00005a8: 0b                                        ; end
00005a9: 39                                        ; data segment size
; data segment data 14
00005aa: 5472 7920 746f 2064 6973 706c 6179 2061 
00005ba: 6e20 6572 726f 7220 6d65 7373 6167 6520 
00005ca: 6f6e 206a 6176 6173 6372 6970 7420 636f 
00005da: 6e73 6f6c 652e 2e2e 00                    ; data segment data
; data segment header 15
00005e3: 00                                      
00005e4: 41                                        ; i32.const
00005e5: ae02                                      ; i32 literal
00005e7: 0b                                        ; end
00005e8: 07                                        ; data segment size
; data segment data 15
00005e9: 7265 7375 6c74 00                         ; data segment data
; data segment header 16
00005f0: 00                                      
00005f1: 41                                        ; i32.const
00005f2: b502                                      ; i32 literal
00005f4: 0b                                        ; end
00005f5: 07                                        ; data segment size
; data segment data 16
00005f6: 7265 7375 6c74 00                         ; data segment data
; data segment header 17
00005fd: 00                                      
00005fe: 41                                        ; i32.const
00005ff: bc02                                      ; i32 literal
0000601: 0b                                        ; end
0000602: 26                                        ; data segment size
; data segment data 17
0000603: 5468 6520 6361 6c63 756c 6174 696f 6e20 
0000613: 7265 7375 6c74 206f 6620 506f 6973 736f 
0000623: 6e50 4446 2800                            ; data segment data
; data segment header 18
0000629: 00                                      
000062a: 41                                        ; i32.const
000062b: e202                                      ; i32 literal
000062d: 0b                                        ; end
000062e: 03                                        ; data segment size
; data segment data 18
000062f: 2c20 00                                   ; data segment data
; data segment header 19
0000632: 00                                      
0000633: 41                                        ; i32.const
0000634: e502                                      ; i32 literal
0000636: 0b                                        ; end
0000637: 06                                        ; data segment size
; data segment data 19
0000638: 2920 6973 2000                            ; data segment data
; data segment header 20
000063e: 00                                      
000063f: 41                                        ; i32.const
0000640: eb02                                      ; i32 literal
0000642: 0b                                        ; end
0000643: 02                                        ; data segment size
; data segment data 20
0000644: 2100                                      ; data segment data
; data segment header 21
0000646: 00                                      
0000647: 41                                        ; i32.const
0000648: ed02                                      ; i32 literal
000064a: 0b                                        ; end
000064b: 07                                        ; data segment size
; data segment data 21
000064c: 7265 7375 6c74 00                         ; data segment data
; data segment header 22
0000653: 00                                      
0000654: 41                                        ; i32.const
0000655: f402                                      ; i32 literal
0000657: 0b                                        ; end
0000658: 06                                        ; data segment size
; data segment data 22
0000659: 7374 796c 6500                            ; data segment data
; data segment header 23
000065f: 00                                      
0000660: 41                                        ; i32.const
0000661: fa02                                      ; i32 literal
0000663: 0b                                        ; end
0000664: 19                                        ; data segment size
; data segment data 23
0000665: 636f 6c6f 723a 2062 6c75 653b 2066 6f6e 
0000675: 742d 7369 7a65 3a20 00                    ; data segment data
; data segment header 24
000067e: 00                                      
000067f: 41                                        ; i32.const
0000680: 9303                                      ; i32 literal
0000682: 0b                                        ; end
0000683: 15                                        ; data segment size
; data segment data 24
0000684: 3b20 6261 636b 6772 6f75 6e64 2d63 6f6c 
0000694: 6f72 3a20 00                              ; data segment data
; data segment header 25
0000699: 00                                      
000069a: 41                                        ; i32.const
000069b: a803                                      ; i32 literal
000069d: 0b                                        ; end
000069e: 02                                        ; data segment size
; data segment data 25
000069f: 3b00                                      ; data segment data
; data segment header 26
00006a1: 00                                      
00006a2: 41                                        ; i32.const
00006a3: aa03                                      ; i32 literal
00006a5: 0b                                        ; end
00006a6: 0c                                        ; data segment size
; data segment data 26
00006a7: 4865 6c6c 6f57 6f72 6c64 2100             ; data segment data
; data segment header 27
00006b3: 00                                      
00006b4: 41                                        ; i32.const
00006b5: b603                                      ; i32 literal
00006b7: 0b                                        ; end
00006b8: 51                                        ; data segment size
; data segment data 27
00006b9: 4120 6865 6c6c 6f20 776f 726c 6420 6465 
00006c9: 6d6f 2070 726f 6a65 6374 2066 6f72 2056 
00006d9: 6973 7561 6c42 6173 6963 2e4e 4554 2057 
00006e9: 6562 4173 7365 6d62 6c79 2063 6f6d 7069 
00006f9: 6c65 7220 616e 6420 7275 6e74 696d 652e 
0000709: 00                                        ; data segment data
; data segment header 28
000070a: 00                                      
000070b: 41                                        ; i32.const
000070c: 8704                                      ; i32 literal
000070e: 0b                                        ; end
000070f: 0b                                        ; data segment size
; data segment data 28
0000710: 7869 6567 7569 6761 6e67 00               ; data segment data
; data segment header 29
000071b: 00                                      
000071c: 41                                        ; i32.const
000071d: 9204                                      ; i32 literal
000071f: 0b                                        ; end
0000720: 0b                                        ; data segment size
; data segment data 29
0000721: 4865 6c6c 6f57 6f72 6c64 00               ; data segment data
; data segment header 30
000072c: 00                                      
000072d: 41                                        ; i32.const
000072e: 9d04                                      ; i32 literal
0000730: 0b                                        ; end
0000731: 16                                        ; data segment size
; data segment data 30
0000732: 436f 7079 7269 6768 7420 c2a9 204d 4954 
0000742: 2032 3031 3900                            ; data segment data
; data segment header 31
0000748: 00                                      
0000749: 41                                        ; i32.const
000074a: b204                                      ; i32 literal
000074c: 0b                                        ; end
000074d: 0c                                        ; data segment size
; data segment data 31
000074e: 4865 6c6c 6f57 6f72 6c64 2100             ; data segment data
; data segment header 32
000075a: 00                                      
000075b: 41                                        ; i32.const
000075c: be04                                      ; i32 literal
000075e: 0b                                        ; end
000075f: 25                                        ; data segment size
; data segment data 32
0000760: 3837 3530 3337 3766 2d62 3665 372d 3466 
0000770: 6235 2d38 3836 622d 3463 3366 6134 3531 
0000780: 6563 3463 00                              ; data segment data
; data segment header 33
0000785: 00                                      
0000786: 41                                        ; i32.const
0000787: e304                                      ; i32 literal
0000789: 0b                                        ; end
000078a: 0e                                        ; data segment size
; data segment data 33
000078b: 3132 332e 3334 2e30 2e35 3436 3600        ; data segment data
; data segment header 34
0000799: 00                                      
000079a: 41                                        ; i32.const
000079b: f104                                      ; i32 literal
000079d: 0b                                        ; end
000079e: 0a                                        ; data segment size
; data segment data 34
000079f: 312e 302e 3939 2e37 3800                  ; data segment data
; move data: [45d, 7a9) -> [45e, 7aa)
000045c: cc06                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0132 0960 037f 7f7f 
0000010: 017f 6002 7f7f 017f 6001 7f01 7f60 017c 
0000020: 017c 6001 7c01 7f60 0001 7f60 027f 7c01 
0000030: 7c60 047f 7c7f 7f01 7f60 0000 02bb 0211 
0000040: 0673 7472 696e 6707 7265 706c 6163 6500 
0000050: 0006 7374 7269 6e67 0361 6464 0001 0673 
0000060: 7472 696e 6706 6c65 6e67 7468 0002 0673 
0000070: 7472 696e 6707 696e 6465 784f 6600 0107 
0000080: 636f 6e73 6f6c 6503 6c6f 6700 0207 636f 
0000090: 6e73 6f6c 6504 7761 726e 0002 0763 6f6e 
00000a0: 736f 6c65 0469 6e66 6f00 0207 636f 6e73 
00000b0: 6f6c 6505 6572 726f 7200 0208 646f 6375 
00000c0: 6d65 6e74 0e67 6574 456c 656d 656e 7442 
00000d0: 7949 6400 0208 646f 6375 6d65 6e74 1077 
00000e0: 7269 7465 456c 656d 656e 7454 6578 7400 
00000f0: 0108 646f 6375 6d65 6e74 0d63 7265 6174 
0000100: 6545 6c65 6d65 6e74 0002 0864 6f63 756d 
0000110: 656e 740c 7365 7441 7474 7269 6275 7465 
0000120: 0000 0864 6f63 756d 656e 740b 6170 7065 
0000130: 6e64 4368 696c 6400 0104 4d61 7468 0365 
0000140: 7870 0003 0673 7472 696e 6708 746f 5374 
0000150: 7269 6e67 0002 0673 7472 696e 6708 746f 
0000160: 5374 7269 6e67 0004 0365 6e76 0a62 7974 
0000170: 6563 6875 6e6b 7302 0001 030e 0d05 0607 
0000180: 0505 0505 0505 0505 0508 0611 037f 0141 
0000190: 010b 7f01 410e 0b7f 0141 c500 0b07 cb02 
00001a0: 0c0a 4170 702e 5275 6e41 7070 0010 0f4d 
00001b0: 6174 682e 506f 6973 736f 6e50 4446 0011 
00001c0: 124d 6174 682e 4469 7370 6c61 7952 6573 
00001d0: 756c 7400 121a 4173 7365 6d62 6c79 496e 
00001e0: 666f 2e41 7373 656d 626c 7954 6974 6c65 
00001f0: 0013 2041 7373 656d 626c 7949 6e66 6f2e 
0000200: 4173 7365 6d62 6c79 4465 7363 7269 7074 
0000210: 696f 6e00 141c 4173 7365 6d62 6c79 496e 
0000220: 666f 2e41 7373 656d 626c 7943 6f6d 7061 
0000230: 6e79 0015 1c41 7373 656d 626c 7949 6e66 
0000240: 6f2e 4173 7365 6d62 6c79 5072 6f64 7563 
0000250: 7400 161e 4173 7365 6d62 6c79 496e 666f 
0000260: 2e41 7373 656d 626c 7943 6f70 7972 6967 
0000270: 6874 0017 1e41 7373 656d 626c 7949 6e66 
0000280: 6f2e 4173 7365 6d62 6c79 5472 6164 656d 
0000290: 6172 6b00 1811 4173 7365 6d62 6c79 496e 
00002a0: 666f 2e47 7569 6400 191c 4173 7365 6d62 
00002b0: 6c79 496e 666f 2e41 7373 656d 626c 7956 
00002c0: 6572 7369 6f6e 001a 2041 7373 656d 626c 
00002d0: 7949 6e66 6f2e 4173 7365 6d62 6c79 4669 
00002e0: 6c65 5665 7273 696f 6e00 1b08 011c 0aea 
00002f0: 020d 7d01 047f 41db 0010 0821 0041 e000 
0000300: 1008 2101 41e6 0010 0a21 0241 e800 100a 
0000310: 2103 2000 2300 1009 1a20 0223 0110 091a 
0000320: 2003 2302 1009 1a20 0120 0210 0c1a 2001 
0000330: 2003 100c 1a20 0141 ea00 41f0 0010 0b1a 
0000340: 2002 418d 0141 9301 100b 1a20 0341 af01 
0000350: 41b5 0110 0b1a 41d3 0110 041a 2301 1005 
0000360: 1a23 0210 061a 41f5 0110 071a 4100 0f0b 
0000370: 3901 017c 4400 0000 0000 0000 0020 01a1 
0000380: 100d 2102 0240 0340 2000 4101 4e45 0d01 
0000390: 2002 2001 2000 b7a3 a221 0220 0041 016b 
00003a0: 2100 0c00 0b0b 2002 0f0b 6e01 017c 2000 
00003b0: 2001 1011 2104 2002 1005 1a41 ae02 1008 
00003c0: 100e 1004 1a41 b502 1008 41bc 0220 0010 
00003d0: 0e10 0141 e202 1001 2001 100f 1001 41e5 
00003e0: 0210 0120 0410 0f10 0141 eb02 1001 1009 
00003f0: 1a41 ed02 1008 41f4 0241 fa02 2002 100e 
0000400: 1001 4193 0310 0120 0310 0e10 0141 a803 
0000410: 1001 100b 1a41 000f 0b06 0041 aa03 0f0b 
0000420: 0600 41b6 030f 0b06 0041 8704 0f0b 0600 
0000430: 4192 040f 0b06 0041 9d04 0f0b 0600 41b2 
0000440: 040f 0b06 0041 be04 0f0b 0600 41e3 040f 
0000450: 0b06 0041 f104 0f0b 0200 0b0b cc06 2300 
0000460: 4101 0b0d 4865 6c6c 6f20 576f 726c 6421 
0000470: 0000 410e 0b37 5468 6973 206d 6573 7361 
0000480: 6765 2063 6f6d 6573 2066 726f 6d20 6120 
0000490: 5669 7375 616c 4261 7369 632e 4e45 5420 
00004a0: 6170 706c 6963 6174 696f 6e21 0000 41c5 
00004b0: 000b 1657 6562 4173 7365 6d62 6c79 2069 
00004c0: 7420 776f 726b 7321 0000 41db 000b 0574 
00004d0: 6578 7400 0041 e000 0b06 6e6f 7465 7300 
00004e0: 0041 e600 0b02 7000 0041 e800 0b02 7000 
00004f0: 0041 ea00 0b06 7374 796c 6500 0041 f000 
0000500: 0b1d 6261 636b 6772 6f75 6e64 2d63 6f6c 
0000510: 6f72 3a20 6c69 6768 7467 7265 793b 0000 
0000520: 418d 010b 0673 7479 6c65 0000 4193 010b 
0000530: 1c66 6f6e 742d 7369 7a65 3a20 3265 6d3b 
0000540: 2063 6f6c 6f72 3a20 7265 643b 0000 41af 
0000550: 010b 0673 7479 6c65 0000 41b5 010b 1e66 
0000560: 6f6e 742d 7369 7a65 3a20 3565 6d3b 2063 
0000570: 6f6c 6f72 3a20 6772 6565 6e3b 0000 41d3 
0000580: 010b 2244 6562 7567 2074 6578 7420 6d65 
0000590: 7373 6167 6520 6469 7370 6c61 7920 6265 
00005a0: 6c6f 773a 0000 41f5 010b 3954 7279 2074 
00005b0: 6f20 6469 7370 6c61 7920 616e 2065 7272 
00005c0: 6f72 206d 6573 7361 6765 206f 6e20 6a61 
00005d0: 7661 7363 7269 7074 2063 6f6e 736f 6c65 
00005e0: 2e2e 2e00 0041 ae02 0b07 7265 7375 6c74 
00005f0: 0000 41b5 020b 0772 6573 756c 7400 0041 
0000600: bc02 0b26 5468 6520 6361 6c63 756c 6174 
0000610: 696f 6e20 7265 7375 6c74 206f 6620 506f 
0000620: 6973 736f 6e50 4446 2800 0041 e202 0b03 
0000630: 2c20 0000 41e5 020b 0629 2069 7320 0000 
0000640: 41eb 020b 0221 0000 41ed 020b 0772 6573 
0000650: 756c 7400 0041 f402 0b06 7374 796c 6500 
0000660: 0041 fa02 0b19 636f 6c6f 723a 2062 6c75 
0000670: 653b 2066 6f6e 742d 7369 7a65 3a20 0000 
0000680: 4193 030b 153b 2062 6163 6b67 726f 756e 
0000690: 642d 636f 6c6f 723a 2000 0041 a803 0b02 
00006a0: 3b00 0041 aa03 0b0c 4865 6c6c 6f57 6f72 
00006b0: 6c64 2100 0041 b603 0b51 4120 6865 6c6c 
00006c0: 6f20 776f 726c 6420 6465 6d6f 2070 726f 
00006d0: 6a65 6374 2066 6f72 2056 6973 7561 6c42 
00006e0: 6173 6963 2e4e 4554 2057 6562 4173 7365 
00006f0: 6d62 6c79 2063 6f6d 7069 6c65 7220 616e 
0000700: 6420 7275 6e74 696d 652e 0000 4187 040b 
0000710: 0b78 6965 6775 6967 616e 6700 0041 9204 
0000720: 0b0b 4865 6c6c 6f57 6f72 6c64 0000 419d 
0000730: 040b 1643 6f70 7972 6967 6874 20c2 a920 
0000740: 4d49 5420 3230 3139 0000 41b2 040b 0c48 
0000750: 656c 6c6f 576f 726c 6421 0000 41be 040b 
0000760: 2538 3735 3033 3737 662d 6236 6537 2d34 
0000770: 6662 352d 3838 3662 2d34 6333 6661 3435 
0000780: 3165 6334 6300 0041 e304 0b0e 3132 332e 
0000790: 3334 2e30 2e35 3436 3600 0041 f104 0b0a 
00007a0: 312e 302e 3939 2e37 3800                
